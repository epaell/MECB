Sections:
00: "seg0" (0-804)
01: "seg200000" (200000-2043E0)


Source: "src/tutor13.asm"
                            	     1: * THIS VERSION MODIFIED FOR TEESSIDE X68K PC-2.2 CROSS ASSEMBLER
                            	     2: *     ftp://nyquist.ee.ualberta.ca/pub/motorola/m68k/x68k.zip
                            	     3: *
                            	     4: *     CHANGES FROM ORIGINAL MOTOROLA SOURCE:
                            	     5: *         MANY "MOVE.L" CHANGED TO "MOVEQ"
                            	     6: *             SIMILAR CHANGES ON A FEW OTHER COMMANDS WHERE
                            	     7: *             X68K DOES NOT AUTOMATICALLY MOTOROLA-IZE.
                            	     8: *         X68K HANDLES CHARACTER CONSTANTS DIFFERENTLY
                            	     9: *             DC.W  '1'    -->  $3100  (GOOD)
                            	    10: *             DC.W  '1'+0  -->  $0031  (WHAT!)
                            	    11: *     ONE DIFFERENCE REMAINS IN A "DON'T CARE" BYTE
                            	    12: *         $008FE0 1A3C00FF  MOVE.B  #-1,D5
                            	    13: *                     ^^ $00 INSTEAD OF $FF
                            	    14: * SUBSEQUENTLY MODIFIED FOR USE ON DIGICOOL THING MECB 68008 (EMULATED)
                            	    15: 
                            	    16: *=======================================================================*
                            	    17: * MOTOROLA EDUCATION COMPUTER BOARD ROM PROGRAM "TUTOR"  REVISION # 1.3 *
                            	    18: *=======================================================================*
                            	    19: 
                            	    20: * MACROS
                            	    21: 
                            	    22: 
                            	    23: ADDR2MEM MACRO
                            	    24:          PEA     \1(PC)         MOVE ADDRESS TO MEMORY; POSITION
                            	    25:          MOVE.L  (A7)+,\2       INDEPENDANT = TO "MOVE.L #\1,\2"
                            	    26:          ENDM
                            	    27: 
                            	    28: 
                            	    29: SAVEREGS MACRO
                            	    30:          MOVE.L  A7,REGA7       SAVE STACK POINTER
                            	    31:          LEA     SV\@(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
                            	    32:          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
                            	    33:          BRA     SAVE           BSR WITHOUT USING STACK
                            	    34: SV\@     DS      0
                            	    35:          ENDM
                            	    36: 
                            	    37: 
                            	    38: 
                            	    39: 
                            	    40: *-------------------------------------------------------------------------
                            	    41: 
                            	    42: RAM_START EQU   $000000
                            	    43: 
                            	    44: * EQUATES (in alphabetical order)
                            	    45: 
                            	    46: BELL     EQU     $07
                            	    47: BLANK    EQU     $20
                            	    48: BKPOINT  EQU     $4AFB
                            	    49: BUFFSIZE EQU     $80
                            	    50: BUFSIZE  EQU     80
                            	    51: CR       EQU     $0D
                            	    52: CTLD     EQU     $04
                            	    53: CTLH     EQU     $08
                            	    54: CTLW     EQU     $17
                            	    55: CTLX     EQU     $18
                            	    56: DEL      EQU     $7F
                            	    57: DELAYC1  EQU     $1000
                            	    58: EOT      EQU     $04
                            	    59: LF       EQU     $0A
                            	    60: LOCVARSZ EQU     16
                            	    61: RESET    EQU     $03            MASTER RESET FOR ACIA
                            	    62: 
                            	    63: 
                            	    64: 
                            	    65: *-------------------------------------------------------------------------
                            	    66: * File ARAM      DATA VARIABLES                                   05/10/82
                            	    67: 
                            	    68: ****************************************************************
                            	    69: *  N O T E:  Ram locations:   starting at zero                 *
                            	    70: ****************************************************************
                            	    71: 
                            	    72:          ORG     RAM_START
                            	    73: 
                            	    74: *                               DEC HEX  DESCRIPTION
00:00000000 00000000        	    75:          DS.L    1              0   $00  AREA OVERLAID BY ROM SR
00:00000004 00000000        	    76:          DS.L    1              1   $01  AND PC
                            	    77: 
                            	    78: 
00:00000008 00000000        	    79: AV2      DS.L    1              2   $02  BUS ERROR            "BUS "
00:0000000C 00000000        	    80: AV3      DS.L    1              3   $03  ADDRESS ERROR        "ADDR"
00:00000010 00000000        	    81: AV4      DS.L    1              4   $04  ILL INSTRUCTION      "OPCO"
00:00000014 00000000        	    82:          DS.L    1              5   $05  DIVIDE BY ZERO       "DIV0"
00:00000018 00000000        	    83:          DS.L    1              6   $06  CHECK TRAP           "CHCK"
00:0000001C 00000000        	    84:          DS.L    1              7   $07  TRAP V               "TP V"
00:00000020 00000000        	    85: AV8      DS.L    1              8   $08  PRIVILEDGE VIOLATION "PRIV"
00:00000024 00000000        	    86: AV9      DS.L    1              9   $09  TRACE
00:00000028 00000000        	    87:          DS.L    1              10  $0A  1010 LINE EMULATION  "1010"
00:0000002C 00000000        	    88: AV11     DS.L    1              11  $0B  1111 LINE EMULATION  "1111"
00:00000030 00000000        	    89: AV12     DS.L    1              12  $0C  USED AS TEMPORARY STORAGE FOR VECTOR MSGS.
00:00000034 00000000        	    90:          DS.L    1              13  $0D  NOT USED
00:00000038 00000000        	    91:          DS.L    1              14  $0E
00:0000003C 00000000        	    92:          DS.L    1              15  $0F
00:00000040 00000000        	    93:          DS.L    1              16  $10
00:00000044 00000000        	    94:          DS.L    1              17  $11
00:00000048 00000000        	    95:          DS.L    1              18  $12
00:0000004C 00000000        	    96:          DS.L    1              19  $13
00:00000050 00000000        	    97:          DS.L    1              20  $14
00:00000054 00000000        	    98:          DS.L    1              21  $15
00:00000058 00000000        	    99:          DS.L    1              22  $16
00:0000005C 00000000        	   100:          DS.L    1              23  $17
00:00000060 00000000        	   101: AV24     DS.L    1              24  $18   0  AUTO VECTORS     "SPUR"
00:00000064 00000000        	   102:          DS.L    1              25  $19   1                   "AV#1"
00:00000068 00000000        	   103:          DS.L    1              26  $1A   2                   "AV#2"   TEST BUTTON
00:0000006C 00000000        	   104:          DS.L    1              27  $1B   3                   "AV#3"
00:00000070 00000000        	   105:          DS.L    1              28  $1C   4                   "AV#4"
00:00000074 00000000        	   106:          DS.L    1              29  $1D   5                   "AV#5"
00:00000078 00000000        	   107:          DS.L    1              30  $1E   6                   "AV#6"
00:0000007C 00000000        	   108: AV31     DS.L    1              31  $1F   7                   "AV#7   [ABORT BUTTON]
00:00000080 00000000        	   109:          DS.L    1              32  $20   TRAP  0             "UT 0"
00:00000084 00000000        	   110:          DS.L    1              33  $21   TRAP  1             "UT 1"
00:00000088 00000000        	   111:          DS.L    1              34  $22   TRAP  2             "UT 2"
00:0000008C 00000000        	   112:          DS.L    1              35  $23   TRAP  3             "UT 3"
00:00000090 00000000        	   113:          DS.L    1              36  $24   TRAP  4             "UT 4"
00:00000094 00000000        	   114:          DS.L    1              37  $25   TRAP  5             "UT 5"
00:00000098 00000000        	   115:          DS.L    1              38  $26   TRAP  6             "UT 6"
00:0000009C 00000000        	   116:          DS.L    1              39  $27   TRAP  7             "UT 7"
00:000000A0 00000000        	   117:          DS.L    1              40  $28   TRAP  8             "UT 8"
00:000000A4 00000000        	   118:          DS.L    1              41  $29   TRAP  9             "UT 9"
00:000000A8 00000000        	   119:          DS.L    1              42  $2A   TRAP 10             "UT A"
00:000000AC 00000000        	   120:          DS.L    1              43  $2B   TRAP 11             "UT B"
00:000000B0 00000000        	   121:          DS.L    1              44  $2C   TRAP 12             "UT C"
00:000000B4 00000000        	   122:          DS.L    1              45  $2D   TRAP 13             "UT D"
00:000000B8 00000000        	   123: AV46     DS.L    1              46  $2E   TRAP 14             "UT E"
00:000000BC 00000000        	   124: AV47     DS.L    1              47  $2F   TRAP 15             "UT F"
00:000000C0 00000000        	   125: AV48     DS.L    1              48  $30
00:000000C4 00000000        	   126:          DS.L    1              49  $31
00:000000C8 00000000        	   127:          DS.L    1              50  $32
00:000000CC 00000000        	   128:          DS.L    1              51  $33
00:000000D0 00000000        	   129:          DS.L    1              52  $34
00:000000D4 00000000        	   130:          DS.L    1              53  $35
00:000000D8 00000000        	   131:          DS.L    1              54  $36
00:000000DC 00000000        	   132:          DS.L    1              55  $37
00:000000E0 00000000        	   133:          DS.L    1              56  $38
00:000000E4 00000000        	   134:          DS.L    1              57  $39
00:000000E8 00000000        	   135:          DS.L    1              58  $3A
00:000000EC 00000000        	   136:          DS.L    1              59  $3B
00:000000F0 00000000        	   137:          DS.L    1              60  $3C
00:000000F4 00000000        	   138:          DS.L    1              61  $3D
00:000000F8 00000000        	   139:          DS.L    1              62  $3E
00:000000FC 00000000        	   140:          DS.L    1              63  $3F
00:00000100 00000000        	   141:          DS.L    1              64  $40
00:00000104 00000000        	   142:          DS.L    1              65  $41
00:00000108 00000000        	   143:          DS.L    1              66  $42
00:0000010C 00000000        	   144:          DS.L    1              67  $43
00:00000110 00000000        	   145:          DS.L    1              68  $44
00:00000114 00000000        	   146:          DS.L    1              69  $45
00:00000118 00000000        	   147:          DS.L    1              70  $46
00:0000011C 00000000        	   148:          DS.L    1              71  $47
00:00000120 00000000        	   149:          DS.L    1              72  $48
00:00000124 00000000        	   150:          DS.L    1              73  $49
00:00000128 00000000        	   151:          DS.L    1              74  $4A
00:0000012C 00000000        	   152:          DS.L    1              75  $4B
00:00000130 00000000        	   153:          DS.L    1              76  $4C
00:00000134 00000000        	   154:          DS.L    1              77  $4D
00:00000138 00000000        	   155:          DS.L    1              78  $4E
00:0000013C 00000000        	   156:          DS.L    1              79  $4F
00:00000140 00000000        	   157:          DS.L    1              80  $50
00:00000144 00000000        	   158:          DS.L    1              81  $51
00:00000148 00000000        	   159:          DS.L    1              82  $52
00:0000014C 00000000        	   160:          DS.L    1              83  $53
00:00000150 00000000        	   161:          DS.L    1              84  $54
00:00000154 00000000        	   162:          DS.L    1              85  $55
00:00000158 00000000        	   163:          DS.L    1              86  $56
00:0000015C 00000000        	   164:          DS.L    1              87  $57
00:00000160 00000000        	   165:          DS.L    1              88  $58
00:00000164 00000000        	   166:          DS.L    1              89  $59
00:00000168 00000000        	   167:          DS.L    1              90  $5A
00:0000016C 00000000        	   168:          DS.L    1              91  $5B
00:00000170 00000000        	   169:          DS.L    1              92  $5C
00:00000174 00000000        	   170:          DS.L    1              93  $5D
00:00000178 00000000        	   171:          DS.L    1              94  $5E
00:0000017C 00000000        	   172:          DS.L    1              95  $5F
00:00000180 00000000        	   173:          DS.L    1              96  $60
00:00000184 00000000        	   174:          DS.L    1              97  $61
00:00000188 00000000        	   175:          DS.L    1              98  $62
00:0000018C 00000000        	   176:          DS.L    1              99  $63
00:00000190 00000000        	   177:          DS.L    1              100  $64
00:00000194 00000000        	   178:          DS.L    1              101  $65
00:00000198 00000000        	   179:          DS.L    1              102  $66
00:0000019C 00000000        	   180:          DS.L    1              103  $67
00:000001A0 00000000        	   181:          DS.L    1              104  $68
00:000001A4 00000000        	   182:          DS.L    1              105  $69
00:000001A8 00000000        	   183:          DS.L    1              106  $6A
00:000001AC 00000000        	   184:          DS.L    1              107  $6B
00:000001B0 00000000        	   185:          DS.L    1              108  $6C
00:000001B4 00000000        	   186:          DS.L    1              109  $6D
00:000001B8 00000000        	   187:          DS.L    1              110  $6E
00:000001BC 00000000        	   188:          DS.L    1              111  $6F
00:000001C0 00000000        	   189:          DS.L    1              112  $70
00:000001C4 00000000        	   190:          DS.L    1              113  $71
00:000001C8 00000000        	   191:          DS.L    1              114  $72
00:000001CC 00000000        	   192:          DS.L    1              115  $73
00:000001D0 00000000        	   193:          DS.L    1              116  $74
00:000001D4 00000000        	   194:          DS.L    1              117  $75
00:000001D8 00000000        	   195:          DS.L    1              118  $76
00:000001DC 00000000        	   196:          DS.L    1              119  $77
00:000001E0 00000000        	   197:          DS.L    1              120  $78
00:000001E4 00000000        	   198:          DS.L    1              121  $79
00:000001E8 00000000        	   199:          DS.L    1              122  $7A
00:000001EC 00000000        	   200:          DS.L    1              123  $7B
00:000001F0 00000000        	   201:          DS.L    1              124  $7C
00:000001F4 00000000        	   202:          DS.L    1              125  $7D
00:000001F8 00000000        	   203:          DS.L    1              126  $7E
00:000001FC 00000000        	   204:          DS.L    1              127  $7F
00:00000200 00000000        	   205:          DS.L    1              128  $80
00:00000204 00000000        	   206:          DS.L    1              129  $81
00:00000208 00000000        	   207:          DS.L    1              130  $82
00:0000020C 00000000        	   208:          DS.L    1              131  $83
00:00000210 00000000        	   209:          DS.L    1              132  $84
00:00000214 00000000        	   210:          DS.L    1              133  $85
00:00000218 00000000        	   211:          DS.L    1              134  $86
00:0000021C 00000000        	   212:          DS.L    1              135  $87
00:00000220 00000000        	   213:          DS.L    1              136  $88
00:00000224 00000000        	   214:          DS.L    1              137  $89
00:00000228 00000000        	   215:          DS.L    1              138  $8A
00:0000022C 00000000        	   216:          DS.L    1              139  $8B
00:00000230 00000000        	   217:          DS.L    1              140  $8C
00:00000234 00000000        	   218:          DS.L    1              141  $8D
00:00000238 00000000        	   219:          DS.L    1              142  $8E
00:0000023C 00000000        	   220:          DS.L    1              143  $8F
00:00000240 00000000        	   221:          DS.L    1              144  $90
00:00000244 00000000        	   222:          DS.L    1              145  $91
00:00000248 00000000        	   223:          DS.L    1              146  $92
00:0000024C 00000000        	   224:          DS.L    1              147  $93
00:00000250 00000000        	   225:          DS.L    1              148  $94
00:00000254 00000000        	   226:          DS.L    1              149  $95
00:00000258 00000000        	   227:          DS.L    1              150  $96
00:0000025C 00000000        	   228:          DS.L    1              151  $97
00:00000260 00000000        	   229:          DS.L    1              152  $98
00:00000264 00000000        	   230:          DS.L    1              153  $99
00:00000268 00000000        	   231:          DS.L    1              154  $9A
00:0000026C 00000000        	   232:          DS.L    1              155  $9B
00:00000270 00000000        	   233:          DS.L    1              156  $9C
00:00000274 00000000        	   234:          DS.L    1              157  $9D
00:00000278 00000000        	   235:          DS.L    1              158  $9E
00:0000027C 00000000        	   236:          DS.L    1              159  $9F
00:00000280 00000000        	   237:          DS.L    1              160  $A0
00:00000284 00000000        	   238:          DS.L    1              161  $A1
00:00000288 00000000        	   239:          DS.L    1              162  $A2
00:0000028C 00000000        	   240:          DS.L    1              163  $A3
00:00000290 00000000        	   241:          DS.L    1              164  $A4
00:00000294 00000000        	   242:          DS.L    1              165  $A5
00:00000298 00000000        	   243:          DS.L    1              166  $A6
00:0000029C 00000000        	   244:          DS.L    1              167  $A7
00:000002A0 00000000        	   245:          DS.L    1              168  $A8
00:000002A4 00000000        	   246:          DS.L    1              169  $A9
00:000002A8 00000000        	   247:          DS.L    1              170  $AA
00:000002AC 00000000        	   248:          DS.L    1              171  $AB
00:000002B0 00000000        	   249:          DS.L    1              172  $AC
00:000002B4 00000000        	   250:          DS.L    1              173  $AD
00:000002B8 00000000        	   251:          DS.L    1              174  $AE
00:000002BC 00000000        	   252:          DS.L    1              175  $AF
00:000002C0 00000000        	   253:          DS.L    1              176  $B0
00:000002C4 00000000        	   254:          DS.L    1              177  $B1
00:000002C8 00000000        	   255:          DS.L    1              178  $B2
00:000002CC 00000000        	   256:          DS.L    1              179  $B3
00:000002D0 00000000        	   257:          DS.L    1              180  $B4
00:000002D4 00000000        	   258:          DS.L    1              181  $B5
00:000002D8 00000000        	   259:          DS.L    1              182  $B6
00:000002DC 00000000        	   260:          DS.L    1              183  $B7
00:000002E0 00000000        	   261:          DS.L    1              184  $B8
00:000002E4 00000000        	   262:          DS.L    1              185  $B9
00:000002E8 00000000        	   263:          DS.L    1              186  $BA
00:000002EC 00000000        	   264:          DS.L    1              187  $BB
00:000002F0 00000000        	   265:          DS.L    1              188  $BC
00:000002F4 00000000        	   266:          DS.L    1              189  $BD
00:000002F8 00000000        	   267:          DS.L    1              190  $BE
00:000002FC 00000000        	   268:          DS.L    1              191  $BF
00:00000300 00000000        	   269:          DS.L    1              192  $C0
00:00000304 00000000        	   270:          DS.L    1              193  $C1
00:00000308 00000000        	   271:          DS.L    1              194  $C2
00:0000030C 00000000        	   272:          DS.L    1              195  $C3
00:00000310 00000000        	   273:          DS.L    1              196  $C4
00:00000314 00000000        	   274:          DS.L    1              197  $C5
00:00000318 00000000        	   275:          DS.L    1              198  $C6
00:0000031C 00000000        	   276:          DS.L    1              199  $C7
00:00000320 00000000        	   277:          DS.L    1              200  $C8
00:00000324 00000000        	   278:          DS.L    1              201  $C9
00:00000328 00000000        	   279:          DS.L    1              202  $CA
00:0000032C 00000000        	   280:          DS.L    1              203  $CB
00:00000330 00000000        	   281:          DS.L    1              204  $CC
00:00000334 00000000        	   282:          DS.L    1              205  $CD
00:00000338 00000000        	   283:          DS.L    1              206  $CE
00:0000033C 00000000        	   284:          DS.L    1              207  $CF
00:00000340 00000000        	   285:          DS.L    1              208  $D0
00:00000344 00000000        	   286:          DS.L    1              209  $D1
00:00000348 00000000        	   287:          DS.L    1              210  $D2
00:0000034C 00000000        	   288:          DS.L    1              211  $D3
00:00000350 00000000        	   289:          DS.L    1              212  $D4
00:00000354 00000000        	   290:          DS.L    1              213  $D5
00:00000358 00000000        	   291:          DS.L    1              214  $D6
00:0000035C 00000000        	   292:          DS.L    1              215  $D7
00:00000360 00000000        	   293:          DS.L    1              216  $D8
00:00000364 00000000        	   294:          DS.L    1              217  $D9
00:00000368 00000000        	   295:          DS.L    1              218  $DA
00:0000036C 00000000        	   296:          DS.L    1              219  $DB
00:00000370 00000000        	   297:          DS.L    1              220  $DC
00:00000374 00000000        	   298:          DS.L    1              221  $DD
00:00000378 00000000        	   299:          DS.L    1              222  $DE
00:0000037C 00000000        	   300:          DS.L    1              223  $DF
00:00000380 00000000        	   301:          DS.L    1              224  $E0
00:00000384 00000000        	   302:          DS.L    1              225  $E1
00:00000388 00000000        	   303:          DS.L    1              226  $E2
00:0000038C 00000000        	   304:          DS.L    1              227  $E3
00:00000390 00000000        	   305:          DS.L    1              228  $E4
00:00000394 00000000        	   306:          DS.L    1              229  $E5
00:00000398 00000000        	   307:          DS.L    1              230  $E6
00:0000039C 00000000        	   308:          DS.L    1              231  $E7
00:000003A0 00000000        	   309:          DS.L    1              232  $E8
00:000003A4 00000000        	   310:          DS.L    1              233  $E9
00:000003A8 00000000        	   311:          DS.L    1              234  $EA
00:000003AC 00000000        	   312:          DS.L    1              235  $EB
00:000003B0 00000000        	   313:          DS.L    1              236  $EC
00:000003B4 00000000        	   314:          DS.L    1              237  $ED
00:000003B8 00000000        	   315:          DS.L    1              238  $EE
00:000003BC 00000000        	   316:          DS.L    1              239  $EF
00:000003C0 00000000        	   317:          DS.L    1              240  $F0
00:000003C4 00000000        	   318:          DS.L    1              241  $F1
00:000003C8 00000000        	   319:          DS.L    1              242  $F2
00:000003CC 00000000        	   320:          DS.L    1              243  $F3
00:000003D0 00000000        	   321:          DS.L    1              244  $F4
00:000003D4 00000000        	   322:          DS.L    1              245  $F5
00:000003D8 00000000        	   323:          DS.L    1              246  $F6
00:000003DC 00000000        	   324:          DS.L    1              247  $F7
00:000003E0 00000000        	   325:          DS.L    1              248  $F8
00:000003E4 00000000        	   326:          DS.L    1              249  $F9
00:000003E8 00000000        	   327:          DS.L    1              250  $FA
00:000003EC 00000000        	   328:          DS.L    1              251  $FB
00:000003F0 00000000        	   329:          DS.L    1              252  $FC
00:000003F4 00000000        	   330:          DS.L    1              253  $FD            3RD
00:000003F8 00000000        	   331:          DS.L    1              254  $FE            2ND
00:000003FC 00000000        	   332:          DS.L    1              255  $FF VECTOR FOR 1ST IPC DISK CONTROLLER
                            	   333: 
                            	   334: 
                            	   335: *  PSEUDO REGISTERS
                            	   336: 
00:00000400 00000000        	   337: REGPC    DS.L    1              USERS PROGRAM COUNTER
00:00000404 00000000        	   338: REGSR    DS.L    1              USERS CONDITION CODES
00:00000408 00000000        	   339: REGS     DS.L    8              D REGISTERS
00:0000040C *
00:00000428 00000000        	   340:          DS.L    7              A0 THROUGH A6 REGISTERS
00:0000042C *
00:00000444 00000000        	   341: REGA7    DS.L    1              A7 REGISTER
00:00000448 00000000        	   342: REGUS    DS.L    1              USER STACK
                            	   343: 
                            	   344: 
                            	   345: 
                            	   346: ****************************************************************
                            	   347: *              WORKING STORAGE                                 *
                            	   348: *  NOTE: SUBROUTINE "INITHRAM" ZEROES RAM...                   *
                            	   349: *        FROM "BEGHRAM" THROUGH "ENDHRAM" WHEN IT IS EXECUTED  *
                            	   350: ****************************************************************
                            	   351: 
                            	   352: BEGHRAM  DS      0              INITIALIZE STARTS HERE
                            	   353: 
00:0000044C 00000000        	   354: OFFSET   DS.L    8              ASSUMED OFFSETS (VIA "R@" FORMAT)
00:00000450 *
00:0000046C 00000000        	   355: MEMSIZE  DS.L    1              MEMORY SIZE IN BYTES
00:00000470 00000000        	   356: BPADD    DS.L    8              BREAKPOINT ADDRESSES
00:00000474 *
00:00000490 00000000        	   357: BPTILL   DS.L    1              TEMPORARY BREAKPOINT
00:00000494 00000000        	   358: BPCNT    DS.L    9              BREAKPOINT COUNTS
00:00000498 *
00:000004B8 0000            	   359: BPDATA   DS.W    9              HOLD USER WORDS REPLACED BY TRAP IN SET BP
00:000004BA *
00:000004CA 00000000        	   360: BERRD    DS.L    2              SPECIAL DATA FOR BUS AND ADDR ERROR EXCEPTIONS
00:000004CE *
00:000004D2 00000000        	   361: SAVEAV4  DS.L    1              HOLDS USER'S AV4 VECTOR (WE USE FOR BP)
00:000004D6 00000000        	   362: TEMP     DS.L    1              TEMP
00:000004DA 00000000        	   363: TRACECNT DS.L    1              TRACE COUNTER (-1=TRACE 1 & RUN)
00:000004DE 0000            	   364: TRACEON  DS.W    1              FLAG FOR TRACE ON
00:000004E0 0000            	   365: BPSTATUS DS.W    1              1=PB ARE IN  0=ARE OUT OF MEMORY
00:000004E2 00000000        	   366: ECHOPT1  DS.L    1              ECHO FLAG TO PORT ONE
                            	   367: 
                            	   368: 
                            	   369: 
                            	   370: * THE FOLLOWING MUST REMAIN AS IS
                            	   371: *  User documentation DEPENDS upon it!
                            	   372: *
                            	   373: OPTIONS  DS.W    0              FORCE WORD BOUNDRY
00:000004E6 00              	   374:          DS.B    1              X-ON CHARACTER
00:000004E7 00              	   375:          DS.B    1              X-OFF CHARACTER
00:000004E8 00              	   376:          DS.B    1              NO NO-AUTO LINEFEED
00:000004E9 00              	   377:          DS.B    1              SHORT FORM REGISTER DISPLAY
00:000004EA 00              	   378:          DS.B    1              TM  trailing character
00:000004EB 00              	   379:          DS.B    1              TM  exit character
                            	   380: 
                            	   381: XONOFF   EQU     OPTIONS
                            	   382: TMCHARS  EQU     OPTIONS+4
                            	   383: 
                            	   384: * END of as is section
                            	   385: 
                            	   386: 
                            	   387: 
                            	   388: ***************************
                            	   389: * TARGET SUPERVISOR STACK *
                            	   390: ***************************
                            	   391: 
00:000004EC 00000000        	   392:          DS.L    20
00:000004F0 *
00:0000053C 00000000        	   393: SSA7     DS.L    1
                            	   394: 
                            	   395: 
                            	   396: 
                            	   397: **************
                            	   398: * I/O BUFFER *
                            	   399: **************
                            	   400: 
00:00000540 00              	   401: BUFFER   DS.B    BUFFSIZE
00:00000541 *
                            	   402: 
00:000005C0 00              	   403: DUMPTEMP DS.B    80             HEADER TEMP BUFFER
00:000005C1 *
                            	   404: 
00:00000610 00000000        	   405: SCREEN1  DS.L    1              PRINT THIS BEFORE TRACE DISPLAY
00:00000614 00000000        	   406: SCREEN2  DS.L    1              PRINT THIS AFTER TRACE DISPLAY
                            	   407: 
00:00000618 00              	   408: NULLPADS DS.B    2              CHARACTER NULL PADS
00:00000619 *
00:0000061A 00              	   409: CRPADS   DS.B    2              CARRIAGE RETURN NULL PADS
00:0000061B *
                            	   410: 
00:0000061C 00000000        	   411: OUTTO    DS.L    1              HOLDS ADDRESS OF OUTPUT ROUTINE
00:00000620 00000000        	   412: INFROM   DS.L    1              HOLDS ADDRESS OF INPUT ROUTINE
00:00000624 00000000        	   413: ALTSER1  DS.L    1              ALTERNATE SERIAL PORT#1
00:00000628 00000000        	   414: ALTSER2  DS.L    1              ALTERNATE SERIAL PORT#2
00:0000062C 00000000        	   415: INPORT1  DS.L    1              INPUT ROUTINE ADDRESS
00:00000630 00000000        	   416: OUTPORT1 DS.L    1              ADDRESS FOR OUPUT ROUTINE
00:00000634 00000000        	   417: INPORT2  DS.L    1              ADDRESS FOR INPUT ROUTINE
00:00000638 00000000        	   418: OUTPORT2 DS.L    1              FOR OUTPURT ROUTINE
00:0000063C 00000000        	   419: INPORT3  DS.L    1              THIS MIGHT BE FOR TAPE
00:00000640 00000000        	   420: OUTPORT3 DS.L    1              THIS MIGHT BE FOR PRINTER
00:00000644 00000000        	   421: INPORT4  DS.L    1              CASSETTE
00:00000648 00000000        	   422: OUTPORT4 DS.L    1              CASSETTE
00:0000064C 0000            	   423: MD1CON   DS.W    1              ACIA PROFILE (PORT1/PORT2)
00:0000064E 00000000        	   424: PDIPORT  DS.L    1              PDIPORT ADDRESS
00:00000652 0000            	   425: CRTPNT   DS.W    1              OUTPUT TO PRINTER AND CRT
00:00000654 00              	   426: TAPENULS DS.B    1              NULLS FOR CASSETTE
                            	   427: 
00:00000655 00              	   428:          DS.B    1              PAD BYTE
                            	   429: 
00:00000656 00000000        	   430: CTLINK   DS.L    1              POINTER TO FIRST TABLE
                            	   431: 
                            	   432: 
                            	   433: 
                            	   434: ENDHRAM  DS.W    0              MUST START ON WORD BOUNDRY
                            	   435: 
                            	   436: 
                            	   437: 
                            	   438: *********************
                            	   439: * SYSTEM STACK AREA *
                            	   440: *********************
                            	   441: 
                            	   442:          DS.W    0              FORCE ON WORD BOUNDRY
00:0000065A 00              	   443:          DS.B    300            ROOM FOR STACK
00:0000065B *
00:00000786 0000            	   444: SYSTACK  DS.W    1              START OF STACK (ADDRESS DECREASES)
00:00000788 00              	   445:          DS.B    4              STRETCHED STACK (USED BY 'SAVE')
00:00000789 *
                            	   446: 
00:0000078C 00              	   447:          DS.B    120            EXTENDED AREA USED IF DISASSEMBLER
00:0000078D *
                            	   448: 
                            	   449:          DS.B    0              LAST LOW MEMORY LOCATION USED + 1
                            	   450: 
                            	   451: 
                            	   452: *-------------------------------------------------------------------------
                            	   453: 
                            	   454: *CODE68K
                            	   455: *                               OFFSET  0
                            	   456: ESKB     EQU     $00000000      DS      0
                            	   457: TDATA    EQU     $00000000      DS.B    10
                            	   458: TNB      EQU     $0000000A      DS.B    1
                            	   459: TLSPEC   EQU     $0000000B      DS.B    1
                            	   460: TLENGTH  EQU     $0000000C      DS.W    1
                            	   461: PCOUNTER EQU     $0000000E      DS.L    1
                            	   462: PTROP    EQU     $00000012      DS.L    1              POINTER TO OPERAND
                            	   463: PENDOP   EQU     $00000016      DS.L    1              POINTER END OF OPERAND
                            	   464: PTRBUFE  EQU     $0000001A      DS.L    1              POINTER TO END OF FORMATED SOURCE
                            	   465: LINK     EQU     $0000001E      DS.L    1              SAVE FOR UNLINK
                            	   466: ESKE     EQU     $00000022      DS.B    0
                            	   467: 
                            	   468: 
                            	   469: *DCODE68K
                            	   470: *                               OFFSET  -LOCVARSZ
                            	   471: DDATA    EQU     $FFFFFFF0      DS.L    3
                            	   472: HISPC    EQU     $FFFFFFFC      DS.L    1
                            	   473: 
                            	   474: 
                            	   475: *LOAD
                            	   476: *                               OFFSET  -((BUFFSIZE/2)+4)
                            	   477: CC       EQU     $FFFFFFBC      DS.L    1              CC (BYTE COUNT)
                            	   478: ADDRESS  EQU     $FFFFFFC0      DS.L    1              ADDRESS + OFFSET
                            	   479: LDATA    EQU     $FFFFFFC4      DS.B    1
                            	   480: 
                            	   481: 
                            	   482: 
                            	   483: 
                            	   484: *-------------------------------------------------------------------------
                            	   485: * File B         Init Vectors+Ram                                 05/29/82
                            	   486: 
                            	   487:          ORG     $200000
                            	   488: 
01:00200000 00000444        	   489: FIRST    DC.L    REGA7              ; 0   $00  SR
01:00200004 0020053A        	   490:          DC.L    START              ; 1   $01  RESET
01:00200008 00200428        	   491:          DC.L    BERRMSG            ; 2   $02  BUS ERROR            "BUS "
01:0020000C 00200432        	   492:          DC.L    ADDRMSG            ; 3   $03  ADDRESS ERROR        "ADDR"
01:00200010 002011DC        	   493:          DC.L    CHKBP              ; 4   $04  ILL INSTRUCTION      "OPCO"
01:00200014 002007A4        	   494:          DC.L    VECT5              ; 5   $05  DIVIDE BY ZERO       "DIV0"
01:00200018 002007AE        	   495:          DC.L    VECT6              ; 6   $06  CHECK TRAP           "CHCK"
01:0020001C 002007B8        	   496:          DC.L    VECT7              ; 7   $07  TRAP V               "TP V"
01:00200020 002007C2        	   497:          DC.L    VECT8              ; 8   $08  PRIVILEDGE VIOLATION "PRIV"
01:00200024 002010B2        	   498:          DC.L    TRACE              ; 9   $09  TRACE
01:00200028 002007D6        	   499:          DC.L    VECT10             ; 10  $0A  1010 LINE EMULATION  "1010"
01:0020002C 002007E0        	   500:          DC.L    VECT11             ; 11  $0B  1111 LINE EMULATION  "1111"
01:00200030 00000000        	   501:          DS.L    1              12  $0C  UNASSIGNED
01:00200034 00000000        	   502:          DS.L    1              13  $0D  UNASSIGNED
01:00200038 00000000        	   503:          DS.L    1              14  $0E  UNASSIGNED
01:0020003C 00000000        	   504:          DS.L    1              15  $0F  UNINITIALIZED INTERRUPT VECTOR
01:00200040 00000000        	   505:          DS.L    1              16  $10  UNASSIGNED
01:00200044 00000000        	   506:          DS.L    1              17  $11  UNASSIGNED
01:00200048 00000000        	   507:          DS.L    1              18  $12  UNASSIGNED
01:0020004C 00000000        	   508:          DS.L    1              19  $13  UNASSIGNED
01:00200050 00000000        	   509:          DS.L    1              20  $14  UNASSIGNED
01:00200054 00000000        	   510:          DS.L    1              21  $15  UNASSIGNED
01:00200058 00000000        	   511:          DS.L    1              22  $16  UNASSIGNED
01:0020005C 00000000        	   512:          DS.L    1              23  $17  UNASSIGNED
01:00200060 002007EA        	   513:          DC.L    VECT24         24  $18  SPURIOUS INTERRUPT
01:00200064 002007F4        	   514:          DC.L    VECT25         25  $19  LEVEL 1 INTERRUPT
01:00200068 002007FE        	   515:          DC.L    VECT26         26  $1A  LEVEL 2 INTERRUPT
01:0020006C 00200808        	   516:          DC.L    VECT27         27  $1B  LEVEL 3 INTERRUPT
01:00200070 00200812        	   517:          DC.L    VECT28         28  $1C  LEVEL 4 INTERRUPT
01:00200074 0020081C        	   518:          DC.L    VECT29         29  $1D  LEVEL 5 INTERRUPT
01:00200078 00200826        	   519:          DC.L    VECT30         30  $1E  LEVEL 6 INTERRUPT
01:0020007C 00201D10        	   520:          DC.L    ABORTB         31  $1F  LEVEL 7 INTERRUPT
01:00200080 0020083A        	   521:          DC.L    VECT32         32  $20   TRAP  0
01:00200084 00200844        	   522:          DC.L    VECT33         33  $21   TRAP  1
01:00200088 0020084E        	   523:          DC.L    VECT34         34  $22   TRAP  2
01:0020008C 00200858        	   524:          DC.L    VECT35         35  $23   TRAP  3
01:00200090 00200862        	   525:          DC.L    VECT36         36  $24   TRAP  4
01:00200094 0020086C        	   526:          DC.L    VECT37         37  $25   TRAP  5
01:00200098 00200876        	   527:          DC.L    VECT38         38  $26   TRAP  6
01:0020009C 00200880        	   528:          DC.L    VECT39         39  $27   TRAP  7
01:002000A0 0020088A        	   529:          DC.L    VECT40         40  $28   TRAP  8
01:002000A4 00200894        	   530:          DC.L    VECT41         41  $29   TRAP  9
01:002000A8 0020089E        	   531:          DC.L    VECT42         42  $2A   TRAP 10
01:002000AC 002008A8        	   532:          DC.L    VECT43         43  $2B   TRAP 11
01:002000B0 002008B2        	   533:          DC.L    VECT44         44  $2C   TRAP 12
01:002000B4 002008BC        	   534:          DC.L    VECT45         45  $2D   TRAP 13
01:002000B8 00204250        	   535:          DC.L    TRAP14         46  $2E   TRAP 14
01:002000BC 002008D0        	   536:          DC.L    VECT47         47  $2F   TRAP 15
01:002000C0 00000000        	   537:          DS.L    1              48  $30   UNASSIGNED
01:002000C4 00000000        	   538:          DS.L    1              49  $31   UNASSIGNED
01:002000C8 00000000        	   539:          DS.L    1              50  $32   UNASSIGNED
01:002000CC 00000000        	   540:          DS.L    1              51  $33   UNASSIGNED
01:002000D0 00000000        	   541:          DS.L    1              52  $34   UNASSIGNED
01:002000D4 00000000        	   542:          DS.L    1              53  $35   UNASSIGNED
01:002000D8 00000000        	   543:          DS.L    1              54  $36   UNASSIGNED
01:002000DC 00000000        	   544:          DS.L    1              55  $37   UNASSIGNED
01:002000E0 00000000        	   545:          DS.L    1              56  $38   UNASSIGNED
01:002000E4 00000000        	   546:          DS.L    1              57  $39   UNASSIGNED
01:002000E8 00000000        	   547:          DS.L    1              58  $3A   UNASSIGNED
01:002000EC 00000000        	   548:          DS.L    1              59  $3B   UNASSIGNED
01:002000F0 00000000        	   549:          DS.L    1              60  $3C   UNASSIGNED
01:002000F4 00000000        	   550:          DS.L    1              61  $3D   UNASSIGNED
01:002000F8 00000000        	   551:          DS.L    1              62  $3E   UNASSIGNED
01:002000FC 00000000        	   552:          DS.L    1              63  $3F   UNASSIGNED
01:00200100 00000000        	   553:          DS.L    1              64  $40   USER INTERRUPT
01:00200104 00000000        	   554:          DS.L    1              65  $41   USER INTERRUPT
01:00200108 00000000        	   555:          DS.L    1              66  $42   USER INTERRUPT
01:0020010C 00000000        	   556:          DS.L    1              67  $43   USER INTERRUPT
01:00200110 00000000        	   557:          DS.L    1              68  $44   USER INTERRUPT
01:00200114 00000000        	   558:          DS.L    1              69  $45   USER INTERRUPT
01:00200118 00000000        	   559:          DS.L    1              70  $46   USER INTERRUPT
01:0020011C 00000000        	   560:          DS.L    1              71  $47   USER INTERRUPT
01:00200120 00000000        	   561:          DS.L    1              72  $48   USER INTERRUPT
01:00200124 00000000        	   562:          DS.L    1              73  $49   USER INTERRUPT
01:00200128 00000000        	   563:          DS.L    1              74  $4A   USER INTERRUPT
01:0020012C 00000000        	   564:          DS.L    1              75  $4B   USER INTERRUPT
01:00200130 00000000        	   565:          DS.L    1              76  $4C   USER INTERRUPT
01:00200134 00000000        	   566:          DS.L    1              77  $4D   USER INTERRUPT
01:00200138 00000000        	   567:          DS.L    1              78  $4E   USER INTERRUPT
01:0020013C 00000000        	   568:          DS.L    1              79  $4F   USER INTERRUPT
01:00200140 00000000        	   569:          DS.L    1              80  $50   USER INTERRUPT
01:00200144 00000000        	   570:          DS.L    1              81  $51   USER INTERRUPT
01:00200148 00000000        	   571:          DS.L    1              82  $52   USER INTERRUPT
01:0020014C 00000000        	   572:          DS.L    1              83  $53   USER INTERRUPT
01:00200150 00000000        	   573:          DS.L    1              84  $54   USER INTERRUPT
01:00200154 00000000        	   574:          DS.L    1              85  $55   USER INTERRUPT
01:00200158 00000000        	   575:          DS.L    1              86  $56   USER INTERRUPT
01:0020015C 00000000        	   576:          DS.L    1              87  $57   USER INTERRUPT
01:00200160 00000000        	   577:          DS.L    1              88  $58   USER INTERRUPT
01:00200164 00000000        	   578:          DS.L    1              89  $59   USER INTERRUPT
01:00200168 00000000        	   579:          DS.L    1              90  $5A   USER INTERRUPT
01:0020016C 00000000        	   580:          DS.L    1              91  $5B   USER INTERRUPT
01:00200170 00000000        	   581:          DS.L    1              92  $5C   USER INTERRUPT
01:00200174 00000000        	   582:          DS.L    1              93  $5D   USER INTERRUPT
01:00200178 00000000        	   583:          DS.L    1              94  $5E   USER INTERRUPT
01:0020017C 00000000        	   584:          DS.L    1              95  $5F   USER INTERRUPT
01:00200180 00000000        	   585:          DS.L    1              96  $60   USER INTERRUPT
01:00200184 00000000        	   586:          DS.L    1              97  $61   USER INTERRUPT
01:00200188 00000000        	   587:          DS.L    1              98  $62   USER INTERRUPT
01:0020018C 00000000        	   588:          DS.L    1              99  $63   USER INTERRUPT
01:00200190 00000000        	   589:          DS.L    1              100  $64  USER INTERRUPT
01:00200194 00000000        	   590:          DS.L    1              101  $65  USER INTERRUPT
01:00200198 00000000        	   591:          DS.L    1              102  $66  USER INTERRUPT
01:0020019C 00000000        	   592:          DS.L    1              103  $67  USER INTERRUPT
01:002001A0 00000000        	   593:          DS.L    1              104  $68  USER INTERRUPT
01:002001A4 00000000        	   594:          DS.L    1              105  $69  USER INTERRUPT
01:002001A8 00000000        	   595:          DS.L    1              106  $6A  USER INTERRUPT
01:002001AC 00000000        	   596:          DS.L    1              107  $6B  USER INTERRUPT
01:002001B0 00000000        	   597:          DS.L    1              108  $6C  USER INTERRUPT
01:002001B4 00000000        	   598:          DS.L    1              109  $6D  USER INTERRUPT
01:002001B8 00000000        	   599:          DS.L    1              110  $6E  USER INTERRUPT
01:002001BC 00000000        	   600:          DS.L    1              111  $6F  USER INTERRUPT
01:002001C0 00000000        	   601:          DS.L    1              112  $70  USER INTERRUPT
01:002001C4 00000000        	   602:          DS.L    1              113  $71  USER INTERRUPT
01:002001C8 00000000        	   603:          DS.L    1              114  $72  USER INTERRUPT
01:002001CC 00000000        	   604:          DS.L    1              115  $73  USER INTERRUPT
01:002001D0 00000000        	   605:          DS.L    1              116  $74  USER INTERRUPT
01:002001D4 00000000        	   606:          DS.L    1              117  $75  USER INTERRUPT
01:002001D8 00000000        	   607:          DS.L    1              118  $76  USER INTERRUPT
01:002001DC 00000000        	   608:          DS.L    1              119  $77  USER INTERRUPT
01:002001E0 00000000        	   609:          DS.L    1              120  $78  USER INTERRUPT
01:002001E4 00000000        	   610:          DS.L    1              121  $79  USER INTERRUPT
01:002001E8 00000000        	   611:          DS.L    1              122  $7A  USER INTERRUPT
01:002001EC 00000000        	   612:          DS.L    1              123  $7B  USER INTERRUPT
01:002001F0 00000000        	   613:          DS.L    1              124  $7C  USER INTERRUPT
01:002001F4 00000000        	   614:          DS.L    1              125  $7D  USER INTERRUPT
01:002001F8 00000000        	   615:          DS.L    1              126  $7E  USER INTERRUPT
01:002001FC 00000000        	   616:          DS.L    1              127  $7F  USER INTERRUPT
01:00200200 00000000        	   617:          DS.L    1              128  $80  USER INTERRUPT
01:00200204 00000000        	   618:          DS.L    1              129  $81  USER INTERRUPT
01:00200208 00000000        	   619:          DS.L    1              130  $82  USER INTERRUPT
01:0020020C 00000000        	   620:          DS.L    1              131  $83  USER INTERRUPT
01:00200210 00000000        	   621:          DS.L    1              132  $84  USER INTERRUPT
01:00200214 00000000        	   622:          DS.L    1              133  $85  USER INTERRUPT
01:00200218 00000000        	   623:          DS.L    1              134  $86  USER INTERRUPT
01:0020021C 00000000        	   624:          DS.L    1              135  $87  USER INTERRUPT
01:00200220 00000000        	   625:          DS.L    1              136  $88  USER INTERRUPT
01:00200224 00000000        	   626:          DS.L    1              137  $89  USER INTERRUPT
01:00200228 00000000        	   627:          DS.L    1              138  $8A  USER INTERRUPT
01:0020022C 00000000        	   628:          DS.L    1              139  $8B  USER INTERRUPT
01:00200230 00000000        	   629:          DS.L    1              140  $8C  USER INTERRUPT
01:00200234 00000000        	   630:          DS.L    1              141  $8D  USER INTERRUPT
01:00200238 00000000        	   631:          DS.L    1              142  $8E  USER INTERRUPT
01:0020023C 00000000        	   632:          DS.L    1              143  $8F  USER INTERRUPT
01:00200240 00000000        	   633:          DS.L    1              144  $90  USER INTERRUPT
01:00200244 00000000        	   634:          DS.L    1              145  $91  USER INTERRUPT
01:00200248 00000000        	   635:          DS.L    1              146  $92  USER INTERRUPT
01:0020024C 00000000        	   636:          DS.L    1              147  $93  USER INTERRUPT
01:00200250 00000000        	   637:          DS.L    1              148  $94  USER INTERRUPT
01:00200254 00000000        	   638:          DS.L    1              149  $95  USER INTERRUPT
01:00200258 00000000        	   639:          DS.L    1              150  $96  USER INTERRUPT
01:0020025C 00000000        	   640:          DS.L    1              151  $97  USER INTERRUPT
01:00200260 00000000        	   641:          DS.L    1              152  $98  USER INTERRUPT
01:00200264 00000000        	   642:          DS.L    1              153  $99  USER INTERRUPT
01:00200268 00000000        	   643:          DS.L    1              154  $9A  USER INTERRUPT
01:0020026C 00000000        	   644:          DS.L    1              155  $9B  USER INTERRUPT
01:00200270 00000000        	   645:          DS.L    1              156  $9C  USER INTERRUPT
01:00200274 00000000        	   646:          DS.L    1              157  $9D  USER INTERRUPT
01:00200278 00000000        	   647:          DS.L    1              158  $9E  USER INTERRUPT
01:0020027C 00000000        	   648:          DS.L    1              159  $9F  USER INTERRUPT
01:00200280 00000000        	   649:          DS.L    1              160  $A0  USER INTERRUPT
01:00200284 00000000        	   650:          DS.L    1              161  $A1  USER INTERRUPT
01:00200288 00000000        	   651:          DS.L    1              162  $A2  USER INTERRUPT
01:0020028C 00000000        	   652:          DS.L    1              163  $A3  USER INTERRUPT
01:00200290 00000000        	   653:          DS.L    1              164  $A4  USER INTERRUPT
01:00200294 00000000        	   654:          DS.L    1              165  $A5  USER INTERRUPT
01:00200298 00000000        	   655:          DS.L    1              166  $A6  USER INTERRUPT
01:0020029C 00000000        	   656:          DS.L    1              167  $A7  USER INTERRUPT
01:002002A0 00000000        	   657:          DS.L    1              168  $A8  USER INTERRUPT
01:002002A4 00000000        	   658:          DS.L    1              169  $A9  USER INTERRUPT
01:002002A8 00000000        	   659:          DS.L    1              170  $AA  USER INTERRUPT
01:002002AC 00000000        	   660:          DS.L    1              171  $AB  USER INTERRUPT
01:002002B0 00000000        	   661:          DS.L    1              172  $AC  USER INTERRUPT
01:002002B4 00000000        	   662:          DS.L    1              173  $AD  USER INTERRUPT
01:002002B8 00000000        	   663:          DS.L    1              174  $AE  USER INTERRUPT
01:002002BC 00000000        	   664:          DS.L    1              175  $AF  USER INTERRUPT
01:002002C0 00000000        	   665:          DS.L    1              176  $B0  USER INTERRUPT
01:002002C4 00000000        	   666:          DS.L    1              177  $B1  USER INTERRUPT
01:002002C8 00000000        	   667:          DS.L    1              178  $B2  USER INTERRUPT
01:002002CC 00000000        	   668:          DS.L    1              179  $B3  USER INTERRUPT
01:002002D0 00000000        	   669:          DS.L    1              180  $B4  USER INTERRUPT
01:002002D4 00000000        	   670:          DS.L    1              181  $B5  USER INTERRUPT
01:002002D8 00000000        	   671:          DS.L    1              182  $B6  USER INTERRUPT
01:002002DC 00000000        	   672:          DS.L    1              183  $B7  USER INTERRUPT
01:002002E0 00000000        	   673:          DS.L    1              184  $B8  USER INTERRUPT
01:002002E4 00000000        	   674:          DS.L    1              185  $B9  USER INTERRUPT
01:002002E8 00000000        	   675:          DS.L    1              186  $BA  USER INTERRUPT
01:002002EC 00000000        	   676:          DS.L    1              187  $BB  USER INTERRUPT
01:002002F0 00000000        	   677:          DS.L    1              188  $BC  USER INTERRUPT
01:002002F4 00000000        	   678:          DS.L    1              189  $BD  USER INTERRUPT
01:002002F8 00000000        	   679:          DS.L    1              190  $BE  USER INTERRUPT
01:002002FC 00000000        	   680:          DS.L    1              191  $BF  USER INTERRUPT
01:00200300 00000000        	   681:          DS.L    1              192  $C0  USER INTERRUPT
01:00200304 00000000        	   682:          DS.L    1              193  $C1  USER INTERRUPT
01:00200308 00000000        	   683:          DS.L    1              194  $C2  USER INTERRUPT
01:0020030C 00000000        	   684:          DS.L    1              195  $C3  USER INTERRUPT
01:00200310 00000000        	   685:          DS.L    1              196  $C4  USER INTERRUPT
01:00200314 00000000        	   686:          DS.L    1              197  $C5  USER INTERRUPT
01:00200318 00000000        	   687:          DS.L    1              198  $C6  USER INTERRUPT
01:0020031C 00000000        	   688:          DS.L    1              199  $C7  USER INTERRUPT
01:00200320 00000000        	   689:          DS.L    1              200  $C8  USER INTERRUPT
01:00200324 00000000        	   690:          DS.L    1              201  $C9  USER INTERRUPT
01:00200328 00000000        	   691:          DS.L    1              202  $CA  USER INTERRUPT
01:0020032C 00000000        	   692:          DS.L    1              203  $CB  USER INTERRUPT
01:00200330 00000000        	   693:          DS.L    1              204  $CC  USER INTERRUPT
01:00200334 00000000        	   694:          DS.L    1              205  $CD  USER INTERRUPT
01:00200338 00000000        	   695:          DS.L    1              206  $CE  USER INTERRUPT
01:0020033C 00000000        	   696:          DS.L    1              207  $CF  USER INTERRUPT
01:00200340 00000000        	   697:          DS.L    1              208  $D0  USER INTERRUPT
01:00200344 00000000        	   698:          DS.L    1              209  $D1  USER INTERRUPT
01:00200348 00000000        	   699:          DS.L    1              210  $D2  USER INTERRUPT
01:0020034C 00000000        	   700:          DS.L    1              211  $D3  USER INTERRUPT
01:00200350 00000000        	   701:          DS.L    1              212  $D4  USER INTERRUPT
01:00200354 00000000        	   702:          DS.L    1              213  $D5  USER INTERRUPT
01:00200358 00000000        	   703:          DS.L    1              214  $D6  USER INTERRUPT
01:0020035C 00000000        	   704:          DS.L    1              215  $D7  USER INTERRUPT
01:00200360 00000000        	   705:          DS.L    1              216  $D8  USER INTERRUPT
01:00200364 00000000        	   706:          DS.L    1              217  $D9  USER INTERRUPT
01:00200368 00000000        	   707:          DS.L    1              218  $DA  USER INTERRUPT
01:0020036C 00000000        	   708:          DS.L    1              219  $DB  USER INTERRUPT
01:00200370 00000000        	   709:          DS.L    1              220  $DC  USER INTERRUPT
01:00200374 00000000        	   710:          DS.L    1              221  $DD  USER INTERRUPT
01:00200378 00000000        	   711:          DS.L    1              222  $DE  USER INTERRUPT
01:0020037C 00000000        	   712:          DS.L    1              223  $DF  USER INTERRUPT
01:00200380 00000000        	   713:          DS.L    1              224  $E0  USER INTERRUPT
01:00200384 00000000        	   714:          DS.L    1              225  $E1  USER INTERRUPT
01:00200388 00000000        	   715:          DS.L    1              226  $E2  USER INTERRUPT
01:0020038C 00000000        	   716:          DS.L    1              227  $E3  USER INTERRUPT
01:00200390 00000000        	   717:          DS.L    1              228  $E4  USER INTERRUPT
01:00200394 00000000        	   718:          DS.L    1              229  $E5  USER INTERRUPT
01:00200398 00000000        	   719:          DS.L    1              230  $E6  USER INTERRUPT
01:0020039C 00000000        	   720:          DS.L    1              231  $E7  USER INTERRUPT
01:002003A0 00000000        	   721:          DS.L    1              232  $E8  USER INTERRUPT
01:002003A4 00000000        	   722:          DS.L    1              233  $E9  USER INTERRUPT
01:002003A8 00000000        	   723:          DS.L    1              234  $EA  USER INTERRUPT
01:002003AC 00000000        	   724:          DS.L    1              235  $EB  USER INTERRUPT
01:002003B0 00000000        	   725:          DS.L    1              236  $EC  USER INTERRUPT
01:002003B4 00000000        	   726:          DS.L    1              237  $ED  USER INTERRUPT
01:002003B8 00000000        	   727:          DS.L    1              238  $EE  USER INTERRUPT
01:002003BC 00000000        	   728:          DS.L    1              239  $EF  USER INTERRUPT
01:002003C0 00000000        	   729:          DS.L    1              240  $F0  USER INTERRUPT
01:002003C4 00000000        	   730:          DS.L    1              241  $F1  USER INTERRUPT
01:002003C8 00000000        	   731:          DS.L    1              242  $F2  USER INTERRUPT
01:002003CC 00000000        	   732:          DS.L    1              243  $F3  USER INTERRUPT
01:002003D0 00000000        	   733:          DS.L    1              244  $F4  USER INTERRUPT
01:002003D4 00000000        	   734:          DS.L    1              245  $F5  USER INTERRUPT
01:002003D8 00000000        	   735:          DS.L    1              246  $F6  USER INTERRUPT
01:002003DC 00000000        	   736:          DS.L    1              247  $F7  USER INTERRUPT
01:002003E0 00000000        	   737:          DS.L    1              248  $F8  USER INTERRUPT
01:002003E4 00000000        	   738:          DS.L    1              249  $F9  USER INTERRUPT
01:002003E8 00000000        	   739:          DS.L    1              250  $FA  USER INTERRUPT
01:002003EC 00000000        	   740:          DS.L    1              251  $FB  USER INTERRUPT
01:002003F0 00000000        	   741:          DS.L    1              252  $FC  USER INTERRUPT
01:002003F4 00000000        	   742:          DS.L    1              253  $FD  USER INTERRUPT
01:002003F8 00000000        	   743:          DS.L    1              254  $FE  USER INTERRUPT
01:002003FC 00000000        	   744:          DS.L    1              255  $FF  USER INTERRUPT
                            	   745: 
01:00200400 60000CB0        	   746: V2       BRA     TRACE
                            	   747: 
                            	   748: 
                            	   749: **********************************
                            	   750: * INITIALIZE HIGH RAM SUBROUTINE *
                            	   751: **********************************
                            	   752: 
01:00200404 41F8044C        	   753: INITHRAM LEA     BEGHRAM,A0     START OF WORK RAM (PAST REGISTERS)
01:00200408 203C0000020E    	   754:          MOVE.L  #(ENDHRAM-BEGHRAM),D0  BYTES TO ZERO
01:0020040E 7200            	   755:          CLR.L   D1
01:00200410 10C1            	   756: INIT     MOVE.B  D1,(A0)+       ZERO MEMORY
01:00200412 5380            	   757:          SUBQ.L  #1,D0
01:00200414 66FA            	   758:          BNE     INIT
                            	   759: 
                            	   760:          ADDR2MEM BERRMSG,AV2   POINT AT BUS TRAP ERROR MESSAGE ROUTINE
01:00200416 487A0010        	     1M          PEA     BERRMSG(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020041A 21DF0008        	     2M          MOVE.L  (A7)+,AV2       INDEPENDANT = TO "MOVE.L #BERRMSG,AV2"
                            	   761: 
                            	   762:          ADDR2MEM ADDRMSG,AV3   POINT AT ADDRESS TRAP ERROR MESSAGE ROUTINE
01:0020041E 487A0012        	     1M          PEA     ADDRMSG(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200422 21DF000C        	     2M          MOVE.L  (A7)+,AV3       INDEPENDANT = TO "MOVE.L #ADDRMSG,AV3"
                            	   763: 
01:00200426 4E75            	   764:          RTS
                            	   765: 
                            	   766: 
                            	   767: ****************************************************
                            	   768: * SPECIAL HANDLING FOR BUS ERROR AND ADDRESS ERROR *
                            	   769: ****************************************************
                            	   770: 
01:00200428 21FC425553200030	   771: BERRMSG  MOVE.L  #'BUS ',$30
                            	   772: 
01:00200430 6008            	   773:          BRA.S   VECTBE
                            	   774: 
01:00200432 21FC414444520030	   775: ADDRMSG  MOVE.L  #'ADDR',$30
                            	   776: 
                            	   777: 
01:0020043A 21DF04CA        	   778: VECTBE   MOVE.L  (A7)+,BERRD
01:0020043E 21DF04CE        	   779:          MOVE.L  (A7)+,BERRD+4
                            	   780: 
                            	   781:          SAVEREGS
01:00200442 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00200446 4FFA000A        	     2M          LEA     SV_000003(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:0020044A 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:0020044E 60000C34        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000003     DS      0
01:00200452 61001C34        	   782:          BSR     FIXBUF
01:00200456 3CFC0D0A        	   783:          MOVE.W  #$D0A,(A6)+
01:0020045A 303804CA        	   784:          MOVE.W  BERRD,D0
01:0020045E 61001942        	   785:          BSR     PNT4HX         FORMAT FUNCTION CODE
                            	   786: 
01:00200462 1CFC0020        	   787:          MOVE.B  #BLANK,(A6)+   SPACE
01:00200466 203804CC        	   788:          MOVE.L  BERRD+2,D0
01:0020046A 61001928        	   789:          BSR     PNT8HX         FORMAT ACCESS ADDRESS
                            	   790: 
01:0020046E 1CFC0020        	   791:          MOVE.B  #BLANK,(A6)+   SPACE
01:00200472 303804D0        	   792:          MOVE.W  BERRD+6,D0
01:00200476 6100192A        	   793:          BSR     PNT4HX         FORMAT INSTRUCTION REGISTER
                            	   794: 
01:0020047A 61001B80        	   795:          BSR     OUTPUT
01:0020047E 600018F0        	   796:          BRA     EVECT2         GO DISPLAY REGISTERS & PROMPT
                            	   797: 
01:00200482 53594E54415820  	   798: MSG008   DC.B    'SYNTAX '
                            	   799: 
01:00200489 4552524F5220    	   800: MSG008E  DC.B    'ERROR '
                            	   801: 
01:0020048F 04              	   802: MSGEOT   DC.B    EOT
                            	   803: 
01:00200490 57484154        	   804: MSG021   DC.B    'WHAT',EOT
01:00200494 04
                            	   805: 
01:00200495 00              	   806:          DC.B    0              PAD BYTE
                            	   807: 
                            	   808: 
                            	   809: * PRINT WHAT
                            	   810: 
01:00200496 4BFAFFF8        	   811: WHAT     LEA     MSG021(PC),A5  PRINT 'WHAT' AND ENTER MACSBUG
01:0020049A 614E            	   812: WHAT93   BSR.S   FIXDATA
01:0020049C 427804DE        	   813:          CLR.W   TRACEON
01:002004A0 61001B40        	   814: MSG      BSR     OUT1CR
01:002004A4 60000188        	   815:          BRA     MACSBUG
                            	   816: 
                            	   817: 
                            	   818: * PRINT ERROR
                            	   819: 
01:002004A8 4BFAFFDF        	   820: ERROR    LEA     MSG008E(PC),A5
01:002004AC 60EC            	   821:          BRA     WHAT93
                            	   822: 
01:002004AE 4BFAFFD2        	   823: SYNTAX   LEA     MSG008(PC),A5  'SYNTAX ERROR'
01:002004B2 60E6            	   824:          BRA     WHAT93
                            	   825: 
                            	   826: * FORMAT PHYSICAL ADDRESS FROM (D0)
01:002004B4 4BFA0022        	   827: PPHY     LEA     MSG019(PC),A5
01:002004B8 6130            	   828:          BSR.S   FIXDATA
01:002004BA 6012            	   829:          BRA.S   P2PHY2
                            	   830: 
                            	   831: * FORMAT TWO PHYSICAL ADDRESSES FROM (A0) & (A1)
01:002004BC 4BFA001A        	   832: P2PHY    LEA     MSG019(PC),A5  'PHYSICAL ADDRESS='
01:002004C0 6128            	   833:          BSR.S   FIXDATA
01:002004C2 2008            	   834:          MOVE.L  A0,D0
01:002004C4 610018CE        	   835:          BSR     PNT8HX         FORMAT ADDR1
01:002004C8 1CFC0020        	   836:          MOVE.B  #BLANK,(A6)+   SPACE FOR FORMATING
01:002004CC 2009            	   837:          MOVE.L  A1,D0
01:002004CE 610018C4        	   838: P2PHY2   BSR     PNT8HX         FORMAT ADDR2
01:002004D2 61001B0E        	   839:          BSR     OUT1CR         DISPLAY IT
01:002004D6 4E75            	   840:          RTS
                            	   841: 
01:002004D8 504859534943414C	   842: MSG019   DC.B    'PHYSICAL ADDRESS=',EOT
01:002004E0 2041444452455353
01:002004E8 3D
01:002004E9 04
                            	   843: 
                            	   844: 
                            	   845: 
                            	   846: 
                            	   847: 
                            	   848: *************************************************************
                            	   849: * -FIXDATA- SUBROUTINE...  MOVES MESSAGE POINTED TO BY (A5) *
                            	   850: *                          INTO "BUFFER". EOT, ($04), ENDS  *
                            	   851: *                          THE MOVE. AT COMPLETION (A5) IS  *
                            	   852: *                          POINTING AT THE BEGINNING, (A6)  *
                            	   853: *                          POINTS AT END.                   *
                            	   854: *************************************************************
                            	   855: 
01:002004EA 4DF80540        	   856: FIXDATA  LEA     BUFFER,A6
01:002004EE 0C150004        	   857: FIXDADD  CMPI.B  #EOT,(A5)
01:002004F2 6704            	   858:          BEQ.S   FIXD2
01:002004F4 1CDD            	   859:          MOVE.B  (A5)+,(A6)+
01:002004F6 60F6            	   860:          BRA     FIXDADD
01:002004F8 4BF80540        	   861: FIXD2    LEA     BUFFER,A5
01:002004FC 4E75            	   862:          RTS
                            	   863: 
                            	   864: 
                            	   865: ************************************************************
                            	   866: * -FIXDCRLF- SUBROUTINE INSERTS A CARRIAGE RETURN AND LINE *
                            	   867: *                       FEED IN FRONT OF THE TEXT, THEN    *
                            	   868: *                       USES THE REMAINING PORTION OF THE  *
                            	   869: *                       FIXDATA.                           *
                            	   870: ************************************************************
                            	   871: 
01:002004FE 4DF80540        	   872: FIXDCRLF LEA     BUFFER,A6
01:00200502 3CFC0D0A        	   873:          MOVE.W  #$0D0A,(A6)+   CR,LF
01:00200506 60E6            	   874:          BRA     FIXDADD
                            	   875: 
                            	   876: 
                            	   877: 
                            	   878: 
                            	   879: *-------------------------------------------------------------------------
                            	   880: * File E         VERSAbug entry point                             01/08/81
                            	   881: 
                            	   882: **********************
                            	   883: * INITIALIZE VECTORS *
                            	   884: **********************
                            	   885: *                               Set most vectors to point at "????" routine
01:00200508 41F80008        	   886: INITVECT LEA     8,A0           Skip (Restart) STACK & ADDRESS vectors
01:0020050C 43FA1846        	   887:          LEA     ABORTE(PC),A1  A1 = "Default" TRAP ERROR routine address
                            	   888: 
01:00200510 20C9            	   889: INIT0    MOVE.L  A1,(A0)+       INITIALIZE VECTOR
01:00200512 B0FC0400        	   890:          CMPA.L  #$400,A0       Done?
01:00200516 6BF8            	   891:          BMI.S   INIT0          *
01:00200518 4E75            	   892:          RTS
                            	   893: 
                            	   894: 
                            	   895: * SPECIAL ENTRY THAT DOES NOT CHANGE VECTORS
                            	   896: 
01:0020051A 48B800010406    	   897: START1S  MOVEM.W D0,REGSR+2     Assure good parity.
01:00200520 40F80406        	   898:          MOVE.W  SR,REGSR+2     SAVE TARGET'S STATUS REGISTER
01:00200524 21CF0444        	   899:          MOVE.L  A7,REGA7       SAVE TARGET'S STACK
01:00200528 21D70400        	   900:          MOVE.L  (A7),REGPC     .PROGRAM COUNTER
01:0020052C 4FF80444        	   901:          LEA     REGA7,A7
01:00200530 48E7FFFE        	   902:          MOVEM.L D0-D7/A0-A6,-(A7) .REGISTERS
01:00200534 4FF80786        	   903:          LEA     SYSTACK,A7
01:00200538 6026            	   904:          BRA     START11
                            	   905: 
                            	   906: 
                            	   907: ************************
                            	   908: *    INITIALIZATION    *
                            	   909: ************************
                            	   910: 
                            	   911: * SAVE PROCESSOR REGISTERS (EXCEPT A7 & PC)
                            	   912: 
01:0020053A 48B800010406    	   913: START    MOVEM.W D0,REGSR+2     Assure good parity
01:00200540 40F80406        	   914:          MOVE.W  SR,REGSR+2     SAVE STATUS REGISTER
01:00200544 48E7FFFE        	   915:          MOVEM.L D0-D7/A0-A6,-(A7)
                            	   916: 
01:00200548 33FC000000040000	   917:          MOVE.W  #$0000,$040000               ; Get out of BOOT mode so read from RAM works as normal
                            	   918: 
01:00200550 4FF80786        	   919:          LEA     SYSTACK,A7     SET UP STACK
01:00200554 21CF0444        	   920:          MOVE.L  A7,REGA7
                            	   921: 
01:00200558 7200            	   922:          CLR.L   D1
01:0020055A 21C10400        	   923:          MOVE.L  D1,REGPC       PC = 000000
                            	   924: 
01:0020055E 61A8            	   925:          BSR     INITVECT
                            	   926: 
                            	   927: 
01:00200560 46FC2700        	   928: START11  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
                            	   929: 
01:00200564 4E68            	   930:          MOVE.L  USP,A0
01:00200566 21C80448        	   931:          MOVE.L  A0,REGUS       USER STACK
                            	   932: 
01:0020056A 6100FE98        	   933:          BSR     INITHRAM       ZERO (INITIALIZE) HIGH RAM
                            	   934: 
                            	   935: 
                            	   936: * VECTMSG.SA
01:0020056E 61000206        	   937:          BSR     INITVMSG
                            	   938: 
                            	   939: 
                            	   940: * H.SA
                            	   941:          ADDR2MEM CHKBP,AV4     ILLEGAL INSTRUCTION
01:00200572 487A0C68        	     1M          PEA     CHKBP(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200576 21DF0010        	     2M          MOVE.L  (A7)+,AV4       INDEPENDANT = TO "MOVE.L #CHKBP,AV4"
                            	   942: 
                            	   943: 
                            	   944: * TM.SA
01:0020057A 31FC180104EA    	   945:          MOVE.W  #$1801,TMCHARS CNTLX,CNTL/A
                            	   946: 
                            	   947: 
                            	   948: * W.SA
                            	   949:          ADDR2MEM  ABORTB,AV31  ABORT
01:00200580 487A178E        	     1M          PEA     ABORTB(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200584 21DF007C        	     2M          MOVE.L  (A7)+,AV31       INDEPENDANT = TO "MOVE.L #ABORTB,AV31"
                            	   950: 
                            	   951: 
                            	   952: * Y.SA
                            	   953:          ADDR2MEM  OUT1CR0,OUTPORT1 INITIALIZE I/O ROUTINES
01:00200588 487A1A72        	     1M          PEA     OUT1CR0(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020058C 21DF0630        	     2M          MOVE.L  (A7)+,OUTPORT1       INDEPENDANT = TO "MOVE.L #OUT1CR0,OUTPORT1"
                            	   954:          ADDR2MEM  OUTPUT20,OUTPORT2
01:00200590 487A1A8A        	     1M          PEA     OUTPUT20(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200594 21DF0638        	     2M          MOVE.L  (A7)+,OUTPORT2       INDEPENDANT = TO "MOVE.L #OUTPUT20,OUTPORT2"
                            	   955:          ADDR2MEM  PRCRLF,OUTPORT3     PRINTER DRIVER
01:00200598 487A1BBE        	     1M          PEA     PRCRLF(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020059C 21DF0640        	     2M          MOVE.L  (A7)+,OUTPORT3       INDEPENDANT = TO "MOVE.L #PRCRLF,OUTPORT3"
                            	   956:          ADDR2MEM  TAPEOUT,OUTPORT4    CASSETTE
01:002005A0 487A1CEC        	     1M          PEA     TAPEOUT(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005A4 21DF0648        	     2M          MOVE.L  (A7)+,OUTPORT4       INDEPENDANT = TO "MOVE.L #TAPEOUT,OUTPORT4"
                            	   957:          ADDR2MEM  PORTIN10,INPORT1
01:002005A8 487A1B06        	     1M          PEA     PORTIN10(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005AC 21DF062C        	     2M          MOVE.L  (A7)+,INPORT1       INDEPENDANT = TO "MOVE.L #PORTIN10,INPORT1"
                            	   958:          ADDR2MEM  PORTIN20,INPORT2
01:002005B0 487A1E14        	     1M          PEA     PORTIN20(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005B4 21DF0634        	     2M          MOVE.L  (A7)+,INPORT2       INDEPENDANT = TO "MOVE.L #PORTIN20,INPORT2"
                            	   959:          ADDR2MEM  PORTIN10,INPORT3
01:002005B8 487A1AF6        	     1M          PEA     PORTIN10(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005BC 21DF063C        	     2M          MOVE.L  (A7)+,INPORT3       INDEPENDANT = TO "MOVE.L #PORTIN10,INPORT3"
                            	   960:          ADDR2MEM  TAPEIN,INPORT4      CASSETTE
01:002005C0 487A1ECC        	     1M          PEA     TAPEIN(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005C4 21DF0644        	     2M          MOVE.L  (A7)+,INPORT4       INDEPENDANT = TO "MOVE.L #TAPEIN,INPORT4"
                            	   961: 
01:002005C8 11FC00080654    	   962:          MOVE.B  #8,TAPENULS    NULLS FOR CASSETTE
01:002005CE 21FC000F0000064E	   963:          MOVE.L  #PDI1,PDIPORT  PRINTER
                            	   964: 
                            	   965: 
                            	   966: *        INITIALIZE MC68230 PI/T
01:002005D6 207C000F0000    	   967:          MOVE.L  #PDI1,A0       BASE ADDRESS OF PI/T
01:002005DC 203C0000FF00    	   968:          MOVE.L  #$0000FF00,D0
01:002005E2 01C80001        	   969:          MOVEP.L D0,1(A0)
                            	   970: 
                            	   971: *        SELECT MODE 0
                            	   972: *        IRQ'S INACTIVATED
                            	   973: *        PORT A--ALL BITS OUTPUTS
                            	   974: *        PORT B--ALL BITS INPUTS
                            	   975: 
01:002005E6 117C0060000D    	   976:          MOVE.B  #$60,13(A0)    SUBMODE 01 FOR PORT A; INTERLOCKED HANDS
01:002005EC 117C00A0000F    	   977:          MOVE.B  #$A0,15(A0)    SUBMODE 1X FOR PORT B
01:002005F2 117C00300001    	   978:          MOVE.B  #$30,1(A0)     ENABLE HANDSHAKE LINES
01:002005F8 117C00A8000F    	   979:          MOVE.B  #$A8,15(A0)    RESET AND INIT PRINTER
01:002005FE 21FC000F0010064E	   980:          MOVE.L  #PDI1+$10,PDIPORT
                            	   981: 
01:00200606 117C00A0000F    	   982:          MOVE.B  #$A0,15(A0)    CLEAR INIT
                            	   983: 
                            	   984: * INITIALIZE THE PDI'S
                            	   985: 
01:0020060C 31FC5151064C    	   986:          MOVE.W  #$5151,MD1CON
01:00200612 61001D58        	   987:          BSR     INITSER        RESET & PROGRAM PDI
                            	   988: 
                            	   989: * INITIALIZE XON/XOFF (READER ON / READER OFF)
                            	   990: *            AUTO-LINE FEED OVERRIDE
                            	   991: 
01:00200616 21FC0000000004E6	   992:          MOVE.L  #$00000000,XONOFF
                            	   993: 
                            	   994: 
                            	   995: 
                            	   996: * TRAP14.SA
                            	   997:          ADDR2MEM  TRAP14,AV46
01:0020061E 487A3C30        	     1M          PEA     TRAP14(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200622 21DF00B8        	     2M          MOVE.L  (A7)+,AV46       INDEPENDANT = TO "MOVE.L #TRAP14,AV46"
01:00200626 21FCFE2042F40656	   998:          MOVE.L  #(254<<24)+CT,CTLINK
                            	   999: 
                            	  1000: 
                            	  1001: 
                            	  1002: 
                            	  1003: 
                            	  1004: ************************************************************************
                            	  1005: *                    V E R S I O N   N U M B E R   A N D   P R O M P T *
                            	  1006: ************************************************************************
                            	  1007: 
01:0020062E 46FC2700        	  1008: MACSBUG  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
01:00200632 4FF80786        	  1009:          LEA     SYSTACK,A7     RESTORE SYSTEM STACK
01:00200636 61000B5C        	  1010:          BSR     SWAPOUT        GET BP OUT OF USER MEMORY
                            	  1011: 
01:0020063A 42B80490        	  1012:          CLR.L   BPTILL         GET RID OF 'TILL' BREAKPOINT
01:0020063E 42B8061C        	  1013:          CLR.L   OUTTO          INITIALIZE I/O TO DEFAULT
01:00200642 42B80620        	  1014:          CLR.L   INFROM         INITIALIZE I/O TO DEFAULT
01:00200646 423804E2        	  1015:          CLR.B   ECHOPT1        NO ECHO TO PORT1
                            	  1016: 
01:0020064A 4BFA00AA        	  1017:          LEA     MSG001(PC),A5  > (Prompt)
01:0020064E 6100FE9A        	  1018:          BSR     FIXDATA
                            	  1019: 
01:00200652 4A7804DE        	  1020:          TST.W   TRACEON        SEE IF IN TRACE MODE
01:00200656 6704            	  1021:          BEQ.S   MACSBUG1
01:00200658 1CFC003A        	  1022:          MOVE.B  #':',(A6)+     IN TRACE MODE
01:0020065C 1CFC003E        	  1023: MACSBUG1 MOVE.B  #'>',(A6)+     PROMPT
01:00200660 1CFC0020        	  1024:          MOVE.B  #BLANK,(A6)+   .. SPACE
01:00200664 61001996        	  1025:          BSR     OUTPUT         GO PRINT IT
                            	  1026: 
                            	  1027: * INPUT LINE
01:00200668 61001A1E        	  1028:          BSR     FIXBUF         GET READY FOR INPUT
01:0020066C 61001A22        	  1029:          BSR     PORTIN1        GET A COMMAND
01:00200670 1CBC0020        	  1030: DECODE6  MOVE.B  #BLANK,(A6)    BLANK OUT END+1
                            	  1031: 
                            	  1032: *  DECODE A COMMAND
                            	  1033: *
                            	  1034: *  DECODE SPECIAL CHARACTER USAGE:
                            	  1035: *    LEADING SPACES IGNORED
                            	  1036: *    LEADING NULLS IGNORED
                            	  1037: *    IF SECOND CHAR  *  CHAR CAN BE ANY CHAR
                            	  1038: 
01:00200674 BBCE            	  1039:          CMP.L   A6,A5          SEE IF ANYTHING ENTERED
01:00200676 6B08            	  1040:          BMI.S   DECODE1
01:00200678 4A7804DE        	  1041:          TST.W   TRACEON        SEE IF IN TRACE MODE
01:0020067C 66000316        	  1042:          BNE     TCMDHOT        DIRECT TO TRACE 1 COMMAND
                            	  1043: 
01:00200680 BBCE            	  1044: DECODE1  CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:00200682 6200FE12        	  1045:          BHI     WHAT           GO TO 'WHAT' IF CONFUSED
01:00200686 1015            	  1046:          MOVE.B  (A5),D0        GRAB FIRST CHARACTER
01:00200688 0C00002A        	  1047:          CMPI.B  #'*',D0        SEND LINE COMMAND
01:0020068C 6608            	  1048:          BNE.S   DECODE10
01:0020068E 528D            	  1049:          ADDQ.L  #1,A5          GET PAST PHOENY PROMPT
01:00200690 61001974        	  1050:          BSR     OUTPUT2        SEND LINE+CR (NO LF) TO PORT2
01:00200694 6098            	  1051:          BRA     MACSBUG        REENTER COMMAND MODE
                            	  1052: 
01:00200696 0C000020        	  1053: DECODE10 CMPI.B  #$20,D0        IGNORE LEADING SPACES
01:0020069A 6604            	  1054:          BNE.S   DECODE2        WHERE TO GO IF NOT A SPACE
01:0020069C 528D            	  1055:          ADDQ.L  #1,A5          BUMP START OF BUFFER
01:0020069E 60E0            	  1056:          BRA.S   DECODE1        TRY NEXT CHARACTER
                            	  1057: *
01:002006A0 1215            	  1058: DECODE2  MOVE.B  (A5),D1        GET 2 LETTERS OF COMMAND
01:002006A2 E149            	  1059:          LSL.W   #8,D1          MAKE ROOM FOR SECOND CHAR
01:002006A4 122D0001        	  1060:          MOVE.B  1(A5),D1       GET SECOND CHAR
01:002006A8 7600            	  1061:          CLR.L   D3             D3 = CLEAR "NO" SWITCH
                            	  1062: 
01:002006AA 43FA0058        	  1063: DECODE21 LEA     SOLIST(PC),A1  A1 = COMMAND LIST ADDRESS
01:002006AE 3419            	  1064: DECODE4  MOVE.W  (A1)+,D2       D2 = 2 CHAR COMMAND FROM LIST
01:002006B0 7000            	  1065:          CLR.L   D0             CLEAR HIGH BITS
01:002006B2 3019            	  1066:          MOVE.W  (A1)+,D0       D0 = OFFSET FROM START OF ROM
                            	  1067: 
01:002006B4 4A83            	  1068:          TST.L   D3
01:002006B6 6704            	  1069:          BEQ.S   DECODE41       NOT A "NO"
01:002006B8 4A02            	  1070:          TST.B   D2             IS "NO" OPTION SUPPORTED THIS COMMAND?
01:002006BA 6AF2            	  1071:          BPL     DECODE4        NO...THEN RUN OUT OF COMMANDS
                            	  1072: 
01:002006BC 02427F7F        	  1073: DECODE41 ANDI.W  #$7F7F,D2      CLEAR "INVISABLE" & "NO" BITS
01:002006C0 0C427F7F        	  1074:          CMPI.W  #$7F7F,D2      END OF LIST?
01:002006C4 6700FDD0        	  1075:          BEQ     WHAT           Command not found
                            	  1076: 
01:002006C8 0C02002A        	  1077:          CMPI.B  #'*',D2        SEE IF DON'T CARE CHARACTER
01:002006CC 6602            	  1078:          BNE.S   DECODE3
01:002006CE 1401            	  1079:          MOVE.B  D1,D2          DEFAULT
                            	  1080: 
01:002006D0 B441            	  1081: DECODE3  CMP.W   D1,D2          Command from table = the input?
01:002006D2 66DA            	  1082:          BNE     DECODE4        COMMAND NOT FOUND
                            	  1083: 
01:002006D4 427804DE        	  1084:          CLR.W   TRACEON        TURN OFF TRACE MODE
                            	  1085: 
01:002006D8 548D            	  1086:          ADDQ.L  #2,A5          POINT A5 PAST 2 DIGIT COMMAND
                            	  1087: 
01:002006DA 487AF924        	  1088:          PEA     FIRST(PC)      BUILD GO TO ADDRESS
01:002006DE D197            	  1089:          ADD.L   D0,(A7)        ON STACK.
01:002006E0 D797            	  1090:          ADD.L   D3,(A7)
                            	  1091: 
01:002006E2 205F            	  1092:          MOVE.L  (A7)+,A0       GO TO COMMAND
01:002006E4 4E90            	  1093:          JSR     (A0)           * SAVE MARK FOR RETURN
01:002006E6 6000FF46        	  1094:          BRA     MACSBUG        *  RETURN HERE
                            	  1095: 
                            	  1096: *
                            	  1097: *    NO COMMAND
                            	  1098: *
01:002006EA 76FC            	  1099: NOCMD    MOVEQ   #-4,D3         SET "NO" SWITCH
01:002006EC 1215            	  1100:          MOVE.B  (A5),D1        MOVE CHAR #3
01:002006EE E141            	  1101:          ASL.W   #8,D1          MOVE OVER 1 CHAR
01:002006F0 122D0001        	  1102:          MOVE.B  1(A5),D1       MOVE CHAR #4
01:002006F4 60B4            	  1103:          BRA     DECODE21       WHICH "NO" COMMAND?
                            	  1104: 
                            	  1105: 
                            	  1106: *-------------------------------------------------------------------------
                            	  1107: * File COMMANDS  Command list                                     06/20/82
                            	  1108: 
                            	  1109: 
01:002006F6 0D              	  1110: MSG001   DC.B    CR,LF,'TUTOR  1.3 ',EOT    "PROMPT"
01:002006F7 0A
01:002006F8 5455544F52202031
01:00200700 2E3320
01:00200703 04
                            	  1111: 
                            	  1112: 
                            	  1113: 
                            	  1114: 
                            	  1115: *******************************************************
                            	  1116: * C O P Y R I G H T . 1 9 8 1 . B Y . M O T O R O L A *
                            	  1117: *******************************************************
                            	  1118: 
                            	  1119: * VERSAbug command generation macro
                            	  1120: CMD      MACRO
                            	  1121: FLAG     SET     0              *
                            	  1122:          IFC     '\2','HELP=NO'
                            	  1123: FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	  1124:          ENDC
                            	  1125:          IFC     '\3','HELP=NO'
                            	  1126: FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	  1127:          ENDC
                            	  1128:          IFC     '\2','NORTN=YES'
                            	  1129: FLAG     SET     FLAG+$80       * "NO\1".Command
                            	  1130:          ENDC
                            	  1131:          IFC     '\3','NORTN=YES'
                            	  1132: FLAG     SET     FLAG+$80       * "NO\1".Command
                            	  1133:          ENDC
                            	  1134:          IFC     '\1','PER'     Check for the "PER" command
                            	  1135:          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	  1136:          DC.W    \1CMD-FIRST    *************************************
                            	  1137:          ENDC
                            	  1138:          IFNC    '\1','PER'     If not PERCMD...
                            	  1139:          IFEQ    '\1'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	  1140:          DC.W    '\1 '+FLAG     * "\1"....Command  -  -  (Single Digit)
                            	  1141:          ENDC
                            	  1142:          IFNE    '\1'&($FF00)   If 2 digit code, leave as is.
                            	  1143:          DC.W    '\1'+FLAG      * "\1"...Command
                            	  1144:          ENDC
                            	  1145:          DC.W    \1CMD-FIRST    *************************************
                            	  1146:          ENDC
                            	  1147:          ENDM
                            	  1148: 
                            	  1149: 
                            	  1150: SOLIST   DS      0              Start Of LIST
                            	  1151: 
                            	  1152:          CMD     PER,HELP=NO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'HELP=NO','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'HELP=NO','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPER".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPER".Command
                            	    13M          ENDC
                            	    14M          IFC     'PER','PER'     Check for the "PER" command
01:00200704 AE2A            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
01:00200706 1982            	    16M          DC.W    PERCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PER','PER'     If not PERCMD...
                            	    19M          IFEQ    'PER'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PER '+FLAG     * "PER"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PER'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'PER'+FLAG      * "PER"...Command
                            	    24M          ENDC
                            	    25M          DC.W    PERCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1153: 
                            	  1154:          CMD     NO,HELP=NO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'HELP=NO','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'HELP=NO','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NONO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NONO".Command
                            	    13M          ENDC
                            	    14M          IFC     'NO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    NOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'NO','PER'     If not PERCMD...
                            	    19M          IFEQ    'NO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'NO '+FLAG     * "NO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'NO'&($FF00)   If 2 digit code, leave as is.
01:00200708 CE4F            	    23M          DC.W    'NO'+FLAG      * "NO"...Command
                            	    24M          ENDC
01:0020070A 06EA            	    25M          DC.W    NOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1155: 
                            	  1156:          CMD     BF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBF".Command
                            	    13M          ENDC
                            	    14M          IFC     'BF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BF','PER'     If not PERCMD...
                            	    19M          IFEQ    'BF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BF '+FLAG     * "BF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BF'&($FF00)   If 2 digit code, leave as is.
01:0020070C 4246            	    23M          DC.W    'BF'+FLAG      * "BF"...Command
                            	    24M          ENDC
01:0020070E 08DC            	    25M          DC.W    BFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1157: 
                            	  1158:          CMD     BM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBM".Command
                            	    13M          ENDC
                            	    14M          IFC     'BM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BM','PER'     If not PERCMD...
                            	    19M          IFEQ    'BM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BM '+FLAG     * "BM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BM'&($FF00)   If 2 digit code, leave as is.
01:00200710 424D            	    23M          DC.W    'BM'+FLAG      * "BM"...Command
                            	    24M          ENDC
01:00200712 092E            	    25M          DC.W    BMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1159: 
                            	  1160: 
                            	  1161: 
                            	  1162:          CMD     BR,NORTN=YES,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'NORTN=YES','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'NORTN=YES','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBR".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBR".Command
                            	    13M          ENDC
                            	    14M          IFC     'BR','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BRCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BR','PER'     If not PERCMD...
                            	    19M          IFEQ    'BR'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BR '+FLAG     * "BR"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BR'&($FF00)   If 2 digit code, leave as is.
01:00200714 42D2            	    23M          DC.W    'BR'+FLAG      * "BR"...Command
                            	    24M          ENDC
01:00200716 0A4A            	    25M          DC.W    BRCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1163: 
                            	  1164:          CMD     BS,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBS".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBS".Command
                            	    13M          ENDC
                            	    14M          IFC     'BS','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BSCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BS','PER'     If not PERCMD...
                            	    19M          IFEQ    'BS'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BS '+FLAG     * "BS"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BS'&($FF00)   If 2 digit code, leave as is.
01:00200718 4253            	    23M          DC.W    'BS'+FLAG      * "BS"...Command
                            	    24M          ENDC
01:0020071A 0B10            	    25M          DC.W    BSCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1165: 
                            	  1166:          CMD     BT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBT".Command
                            	    13M          ENDC
                            	    14M          IFC     'BT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BT','PER'     If not PERCMD...
                            	    19M          IFEQ    'BT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BT '+FLAG     * "BT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BT'&($FF00)   If 2 digit code, leave as is.
01:0020071C 4254            	    23M          DC.W    'BT'+FLAG      * "BT"...Command
                            	    24M          ENDC
01:0020071E 0C4A            	    25M          DC.W    BTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1167: 
                            	  1168:          CMD     DC,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODC".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODC".Command
                            	    13M          ENDC
                            	    14M          IFC     'DC','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DCCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DC','PER'     If not PERCMD...
                            	    19M          IFEQ    'DC'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DC '+FLAG     * "DC"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DC'&($FF00)   If 2 digit code, leave as is.
01:00200720 4443            	    23M          DC.W    'DC'+FLAG      * "DC"...Command
                            	    24M          ENDC
01:00200722 0C9C            	    25M          DC.W    DCCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1169: 
                            	  1170:          CMD     DF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODF".Command
                            	    13M          ENDC
                            	    14M          IFC     'DF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DF','PER'     If not PERCMD...
                            	    19M          IFEQ    'DF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DF '+FLAG     * "DF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DF'&($FF00)   If 2 digit code, leave as is.
01:00200724 4446            	    23M          DC.W    'DF'+FLAG      * "DF"...Command
                            	    24M          ENDC
01:00200726 0CFA            	    25M          DC.W    DFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1171: 
                            	  1172:          CMD     DU,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODU".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODU".Command
                            	    13M          ENDC
                            	    14M          IFC     'DU','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DUCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DU','PER'     If not PERCMD...
                            	    19M          IFEQ    'DU'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DU '+FLAG     * "DU"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DU'&($FF00)   If 2 digit code, leave as is.
01:00200728 4455            	    23M          DC.W    'DU'+FLAG      * "DU"...Command
                            	    24M          ENDC
01:0020072A 0E18            	    25M          DC.W    DUCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1173: 
                            	  1174: 
                            	  1175: 
                            	  1176:          CMD     G,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOG".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOG".Command
                            	    13M          ENDC
                            	    14M          IFC     'G','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'G','PER'     If not PERCMD...
                            	    19M          IFEQ    'G'&($FF00)   If 1 digit code, 2nd will be a blank.
01:0020072C 4720            	    20M          DC.W    'G '+FLAG     * "G"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'G'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'G'+FLAG      * "G"...Command
                            	    24M          ENDC
01:0020072E 0A1C            	    25M          DC.W    GCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1177: 
                            	  1178:          CMD     GD,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGD".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGD".Command
                            	    13M          ENDC
                            	    14M          IFC     'GD','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GDCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GD','PER'     If not PERCMD...
                            	    19M          IFEQ    'GD'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GD '+FLAG     * "GD"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GD'&($FF00)   If 2 digit code, leave as is.
01:00200730 4744            	    23M          DC.W    'GD'+FLAG      * "GD"...Command
                            	    24M          ENDC
01:00200732 0A2A            	    25M          DC.W    GDCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1179: 
                            	  1180:          CMD     GO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGO".Command
                            	    13M          ENDC
                            	    14M          IFC     'GO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GO','PER'     If not PERCMD...
                            	    19M          IFEQ    'GO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GO '+FLAG     * "GO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GO'&($FF00)   If 2 digit code, leave as is.
01:00200734 474F            	    23M          DC.W    'GO'+FLAG      * "GO"...Command
                            	    24M          ENDC
01:00200736 0A1C            	    25M          DC.W    GOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1181: 
                            	  1182:          CMD     GT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGT".Command
                            	    13M          ENDC
                            	    14M          IFC     'GT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GT','PER'     If not PERCMD...
                            	    19M          IFEQ    'GT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GT '+FLAG     * "GT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GT'&($FF00)   If 2 digit code, leave as is.
01:00200738 4754            	    23M          DC.W    'GT'+FLAG      * "GT"...Command
                            	    24M          ENDC
01:0020073A 09D0            	    25M          DC.W    GTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1183: 
                            	  1184:          CMD     HE,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOHE".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOHE".Command
                            	    13M          ENDC
                            	    14M          IFC     'HE','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    HECMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'HE','PER'     If not PERCMD...
                            	    19M          IFEQ    'HE'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'HE '+FLAG     * "HE"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'HE'&($FF00)   If 2 digit code, leave as is.
01:0020073C 4845            	    23M          DC.W    'HE'+FLAG      * "HE"...Command
                            	    24M          ENDC
01:0020073E 127A            	    25M          DC.W    HECMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1185: 
                            	  1186:          CMD     LO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOLO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOLO".Command
                            	    13M          ENDC
                            	    14M          IFC     'LO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    LOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'LO','PER'     If not PERCMD...
                            	    19M          IFEQ    'LO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'LO '+FLAG     * "LO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'LO'&($FF00)   If 2 digit code, leave as is.
01:00200740 4C4F            	    23M          DC.W    'LO'+FLAG      * "LO"...Command
                            	    24M          ENDC
01:00200742 13BE            	    25M          DC.W    LOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1187: 
                            	  1188:          CMD     M,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOM".Command
                            	    13M          ENDC
                            	    14M          IFC     'M','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'M','PER'     If not PERCMD...
                            	    19M          IFEQ    'M'&($FF00)   If 1 digit code, 2nd will be a blank.
01:00200744 4D20            	    20M          DC.W    'M '+FLAG     * "M"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'M'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'M'+FLAG      * "M"...Command
                            	    24M          ENDC
01:00200746 170A            	    25M          DC.W    MCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1189: 
                            	  1190: 
                            	  1191: 
                            	  1192:          CMD     MD,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMD".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMD".Command
                            	    13M          ENDC
                            	    14M          IFC     'MD','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MDCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MD','PER'     If not PERCMD...
                            	    19M          IFEQ    'MD'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MD '+FLAG     * "MD"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MD'&($FF00)   If 2 digit code, leave as is.
01:00200748 4D44            	    23M          DC.W    'MD'+FLAG      * "MD"...Command
                            	    24M          ENDC
01:0020074A 155C            	    25M          DC.W    MDCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1193: 
                            	  1194:          CMD     MM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMM".Command
                            	    13M          ENDC
                            	    14M          IFC     'MM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MM','PER'     If not PERCMD...
                            	    19M          IFEQ    'MM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MM '+FLAG     * "MM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MM'&($FF00)   If 2 digit code, leave as is.
01:0020074C 4D4D            	    23M          DC.W    'MM'+FLAG      * "MM"...Command
                            	    24M          ENDC
01:0020074E 170A            	    25M          DC.W    MMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1195: 
                            	  1196:          CMD     MS,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMS".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMS".Command
                            	    13M          ENDC
                            	    14M          IFC     'MS','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MSCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MS','PER'     If not PERCMD...
                            	    19M          IFEQ    'MS'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MS '+FLAG     * "MS"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MS'&($FF00)   If 2 digit code, leave as is.
01:00200750 4D53            	    23M          DC.W    'MS'+FLAG      * "MS"...Command
                            	    24M          ENDC
01:00200752 188E            	    25M          DC.W    MSCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1197: 
                            	  1198:          CMD     OF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOOF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOOF".Command
                            	    13M          ENDC
                            	    14M          IFC     'OF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    OFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'OF','PER'     If not PERCMD...
                            	    19M          IFEQ    'OF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'OF '+FLAG     * "OF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'OF'&($FF00)   If 2 digit code, leave as is.
01:00200754 4F46            	    23M          DC.W    'OF'+FLAG      * "OF"...Command
                            	    24M          ENDC
01:00200756 1AB0            	    25M          DC.W    OFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1199: 
                            	  1200:          CMD     PA,NORTN=YES,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'NORTN=YES','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'NORTN=YES','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPA".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPA".Command
                            	    13M          ENDC
                            	    14M          IFC     'PA','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    PACMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PA','PER'     If not PERCMD...
                            	    19M          IFEQ    'PA'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PA '+FLAG     * "PA"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PA'&($FF00)   If 2 digit code, leave as is.
01:00200758 50C1            	    23M          DC.W    'PA'+FLAG      * "PA"...Command
                            	    24M          ENDC
01:0020075A 25AC            	    25M          DC.W    PACMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1201: 
                            	  1202:          CMD     PF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPF".Command
                            	    13M          ENDC
                            	    14M          IFC     'PF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    PFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PF','PER'     If not PERCMD...
                            	    19M          IFEQ    'PF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PF '+FLAG     * "PF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PF'&($FF00)   If 2 digit code, leave as is.
01:0020075C 5046            	    23M          DC.W    'PF'+FLAG      * "PF"...Command
                            	    24M          ENDC
01:0020075E 1B2C            	    25M          DC.W    PFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1203: 
                            	  1204: 
                            	  1205: 
                            	  1206:          CMD     T,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOT".Command
                            	    13M          ENDC
                            	    14M          IFC     'T','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'T','PER'     If not PERCMD...
                            	    19M          IFEQ    'T'&($FF00)   If 1 digit code, 2nd will be a blank.
01:00200760 5420            	    20M          DC.W    'T '+FLAG     * "T"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'T'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'T'+FLAG      * "T"...Command
                            	    24M          ENDC
01:00200762 0980            	    25M          DC.W    TCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1207: 
                            	  1208:          CMD     TM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTM".Command
                            	    13M          ENDC
                            	    14M          IFC     'TM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TM','PER'     If not PERCMD...
                            	    19M          IFEQ    'TM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TM '+FLAG     * "TM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TM'&($FF00)   If 2 digit code, leave as is.
01:00200764 544D            	    23M          DC.W    'TM'+FLAG      * "TM"...Command
                            	    24M          ENDC
01:00200766 1C62            	    25M          DC.W    TMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1209: 
                            	  1210:          CMD     TR,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTR".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTR".Command
                            	    13M          ENDC
                            	    14M          IFC     'TR','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TRCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TR','PER'     If not PERCMD...
                            	    19M          IFEQ    'TR'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TR '+FLAG     * "TR"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TR'&($FF00)   If 2 digit code, leave as is.
01:00200768 5452            	    23M          DC.W    'TR'+FLAG      * "TR"...Command
                            	    24M          ENDC
01:0020076A 0980            	    25M          DC.W    TRCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1211: 
                            	  1212:          CMD     TT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTT".Command
                            	    13M          ENDC
                            	    14M          IFC     'TT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TT','PER'     If not PERCMD...
                            	    19M          IFEQ    'TT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TT '+FLAG     * "TT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TT'&($FF00)   If 2 digit code, leave as is.
01:0020076C 5454            	    23M          DC.W    'TT'+FLAG      * "TT"...Command
                            	    24M          ENDC
01:0020076E 099C            	    25M          DC.W    TTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1213: 
                            	  1214:          CMD     VE,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOVE".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOVE".Command
                            	    13M          ENDC
                            	    14M          IFC     'VE','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    VECMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'VE','PER'     If not PERCMD...
                            	    19M          IFEQ    'VE'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'VE '+FLAG     * "VE"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'VE'&($FF00)   If 2 digit code, leave as is.
01:00200770 5645            	    23M          DC.W    'VE'+FLAG      * "VE"...Command
                            	    24M          ENDC
01:00200772 13B8            	    25M          DC.W    VECMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1215: 
01:00200774 FFFF            	  1216:          DC.W      $FFFF     End of list indicator
                            	  1217: 
                            	  1218: 
                            	  1219: 
                            	  1220: 
                            	  1221: *-------------------------------------------------------------------------
                            	  1222: * File VECTMSG   Messages for vectors                             05/29/82
                            	  1223: 
                            	  1224: ************************************************************
                            	  1225: *Reprogram some VECTORS to specific ERROR handler routines *
                            	  1226: ************************************************************
                            	  1227: 
01:00200776 41FA0022        	  1228: INITVMSG LEA     VECT(PC),A0    A0 = START OF VECTOR TABLE
01:0020077A 43F80010        	  1229:          LEA     AV4,A1         A1 = FIRST VECTOR TO INITIALIZE
01:0020077E 700A            	  1230:          MOVEQ   #10,D0         D0 = COUNT
01:00200780 22C8            	  1231: VECTI    MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
01:00200782 D1C0            	  1232:          ADD.L   D0,A0          BUMP ADDRESS
01:00200784 B2FC0030        	  1233:          CMPA.L  #AV11+4,A1
01:00200788 66F6            	  1234:          BNE     VECTI
                            	  1235: 
01:0020078A 43F80060        	  1236:          LEA     AV24,A1        A1 = NEXT VECTOR TO INITIALIZE
01:0020078E 22C8            	  1237: VECTI2   MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
01:00200790 D1C0            	  1238:          ADD.L   D0,A0          BUMP ADDRESS
01:00200792 B2FC00C0        	  1239:          CMPA.L  #AV48,A1
01:00200796 66F6            	  1240:          BNE     VECTI2
01:00200798 4E75            	  1241:          RTS
                            	  1242: 
                            	  1243: 
                            	  1244: *************************************************************************
                            	  1245: * STANDARD VECTOR "MESSAGE" HANDLING ROUTINE ($30 IS TEMP STORAGE AREA) *
                            	  1246: *************************************************************************
                            	  1247: 
01:0020079A 21FC4F50434F0030	  1248: VECT     MOVE.L  #'OPCO',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1249: 
01:002007A2 604E            	  1250:          BRA.S   EVECT5
01:002007A4 21FC444956300030	  1251: VECT5    MOVE.L  #'DIV0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1252: 
01:002007AC 6044            	  1253:          BRA.S   EVECT5
01:002007AE 21FC4348434B0030	  1254: VECT6    MOVE.L  #'CHCK',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1255: 
01:002007B6 603A            	  1256:          BRA.S   EVECT5
01:002007B8 21FC545020560030	  1257: VECT7    MOVE.L  #'TP V',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1258: 
01:002007C0 6030            	  1259:          BRA.S   EVECT5
01:002007C2 21FC505249560030	  1260: VECT8    MOVE.L  #'PRIV',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1261: 
01:002007CA 6026            	  1262:          BRA.S   EVECT5
01:002007CC 21FC545241430030	  1263: VECT9    MOVE.L  #'TRAC',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1264: 
01:002007D4 601C            	  1265:          BRA.S   EVECT5
01:002007D6 21FC313031300030	  1266: VECT10   MOVE.L  #'1010',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1267: 
01:002007DE 6012            	  1268:          BRA.S   EVECT5
01:002007E0 21FC313131310030	  1269: VECT11   MOVE.L  #'1111',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1270: 
01:002007E8 6008            	  1271:          BRA.S   EVECT5
01:002007EA 21FC535055520030	  1272: VECT24   MOVE.L  #'SPUR',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1273: 
01:002007F2 6044            	  1274: EVECT5   BRA.S   EVECT6
01:002007F4 21FC415623310030	  1275: VECT25   MOVE.L  #'AV#1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1276: 
01:002007FC 603A            	  1277:          BRA.S   EVECT6
01:002007FE 21FC415623320030	  1278: VECT26   MOVE.L  #'AV#2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1279: 
01:00200806 6030            	  1280:          BRA.S   EVECT6
01:00200808 21FC415623330030	  1281: VECT27   MOVE.L  #'AV#3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1282: 
01:00200810 6026            	  1283:          BRA.S   EVECT6
01:00200812 21FC415623340030	  1284: VECT28   MOVE.L  #'AV#4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1285: 
01:0020081A 601C            	  1286:          BRA.S   EVECT6
01:0020081C 21FC415623350030	  1287: VECT29   MOVE.L  #'AV#5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1288: 
01:00200824 6012            	  1289:          BRA.S   EVECT6
01:00200826 21FC415623360030	  1290: VECT30   MOVE.L  #'AV#6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1291: 
01:0020082E 6008            	  1292:          BRA.S   EVECT6
01:00200830 21FC415623370030	  1293: VECT31   MOVE.L  #'AV#7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1294: 
01:00200838 604E            	  1295: EVECT6   BRA.S   EVECT7
01:0020083A 21FC555420300030	  1296: VECT32   MOVE.L  #'UT 0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1297: 
01:00200842 6044            	  1298:          BRA.S   EVECT7
01:00200844 21FC555420310030	  1299: VECT33   MOVE.L  #'UT 1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1300: 
01:0020084C 603A            	  1301:          BRA.S   EVECT7
01:0020084E 21FC555420320030	  1302: VECT34   MOVE.L  #'UT 2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1303: 
01:00200856 6030            	  1304:          BRA.S   EVECT7
01:00200858 21FC555420330030	  1305: VECT35   MOVE.L  #'UT 3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1306: 
01:00200860 6026            	  1307:          BRA.S   EVECT7
01:00200862 21FC555420340030	  1308: VECT36   MOVE.L  #'UT 4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1309: 
01:0020086A 601C            	  1310:          BRA.S   EVECT7
01:0020086C 21FC555420350030	  1311: VECT37   MOVE.L  #'UT 5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1312: 
01:00200874 6012            	  1313:          BRA.S   EVECT7
01:00200876 21FC555420360030	  1314: VECT38   MOVE.L  #'UT 6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1315: 
01:0020087E 6008            	  1316:          BRA.S   EVECT7
01:00200880 21FC555420370030	  1317: VECT39   MOVE.L  #'UT 7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1318: 
01:00200888 604E            	  1319: EVECT7   BRA.S   EVECT
01:0020088A 21FC555420380030	  1320: VECT40   MOVE.L  #'UT 8',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1321: 
01:00200892 6044            	  1322:          BRA.S   EVECT
01:00200894 21FC555420390030	  1323: VECT41   MOVE.L  #'UT 9',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1324: 
01:0020089C 603A            	  1325:          BRA.S   EVECT
01:0020089E 21FC555420410030	  1326: VECT42   MOVE.L  #'UT A',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1327: 
01:002008A6 6030            	  1328:          BRA.S   EVECT
01:002008A8 21FC555420420030	  1329: VECT43   MOVE.L  #'UT B',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1330: 
01:002008B0 6026            	  1331:          BRA.S   EVECT
01:002008B2 21FC555420430030	  1332: VECT44   MOVE.L  #'UT C',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1333: 
01:002008BA 601C            	  1334:          BRA.S   EVECT
01:002008BC 21FC555420440030	  1335: VECT45   MOVE.L  #'UT D',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1336: 
01:002008C4 6012            	  1337:          BRA.S   EVECT
01:002008C6 21FC555420450030	  1338: VECT46   MOVE.L  #'UT E',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1339: 
01:002008CE 6108            	  1340:          BSR.S   EVECT
01:002008D0 21FC555420460030	  1341: VECT47   MOVE.L  #'UT F',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1342: 
                            	  1343: 
                            	  1344: *
                            	  1345: *    SAVE REGISTERS AND PRINT VECTOR MSG
                            	  1346: *
01:002008D8 60001482        	  1347: EVECT    BRA     EVECTL
                            	  1348: 
                            	  1349: 
                            	  1350: 
                            	  1351: 
                            	  1352: *-------------------------------------------------------------------------
                            	  1353: * File BF        Block Fill command                               06/16/82
                            	  1354: 
                            	  1355: *  BLOCK FILL    ADDRESS1 ADDRESS2 WORD-DATA
                            	  1356: 
01:002008DC 41FAFBD0        	  1357: BFCMD    LEA     SYNTAX(PC),A0
01:002008E0 61001584        	  1358:          BSR     FNEXTF
01:002008E4 6100064C        	  1359:          BSR     GETA
01:002008E8 6100159A        	  1360:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002008EC 2C00            	  1361:          MOVE.L  D0,D6          D6 = FROM BEGIN ADDRESS
                            	  1362: 
01:002008EE 61001576        	  1363:          BSR     FNEXTF
01:002008F2 6100063E        	  1364:          BSR     GETA
01:002008F6 6100158C        	  1365:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002008FA 2240            	  1366:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1367: 
01:002008FC 61001568        	  1368:          BSR     FNEXTF         FIND NEXT FIELD
01:00200900 610015E6        	  1369:          BSR     GETNUMA        D0 = VALUE
01:00200904 2E00            	  1370:          MOVE.L  D0,D7
                            	  1371: 
01:00200906 2046            	  1372:          MOVE.L  D6,A0          A0 = FROM BEGIN ADDRESS
01:00200908 6100FBB2        	  1373:          BSR     P2PHY          DISPLAY ADDRESSES
01:0020090C B3C8            	  1374:          CMP.L   A0,A1
01:0020090E 6500FB9E        	  1375:          BCS     SYNTAX         END ADDR TOO SMALL
                            	  1376: 
01:00200912 0C8700010000    	  1377:          CMPI.L  #$10000,D7
01:00200918 6400FB94        	  1378:          BCC     SYNTAX         WORD OVERFLOW
                            	  1379: 
                            	  1380: BFCMD11
01:0020091C 3087            	  1381:          MOVE.W  D7,(A0)        STORE DATA
01:0020091E 3218            	  1382:          MOVE.W  (A0)+,D1
01:00200920 B247            	  1383:          CMP.W   D7,D1          VERIFY DATA
01:00200922 66000F58        	  1384:          BNE     MM90           'DATA DID NOT STORE'
                            	  1385: 
01:00200926 B3C8            	  1386:          CMP.L   A0,A1
01:00200928 64F2            	  1387:          BCC     BFCMD11
01:0020092A 6000FD02        	  1388:          BRA     MACSBUG
                            	  1389: 
                            	  1390: 
                            	  1391: 
                            	  1392: 
                            	  1393: *-------------------------------------------------------------------------
                            	  1394: * File BM        BM (Block Move) Command                          11/27/81
                            	  1395: 
                            	  1396: *  BLOCK MOVE
                            	  1397: 
01:0020092E 41FAFB7E        	  1398: BMCMD    LEA     SYNTAX(PC),A0
01:00200932 61001532        	  1399:          BSR     FNEXTF
01:00200936 610005FA        	  1400:          BSR     GETA
01:0020093A 2640            	  1401:          MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
                            	  1402: 
01:0020093C 61001528        	  1403:          BSR     FNEXTF
01:00200940 610005F0        	  1404:          BSR     GETA
01:00200944 2240            	  1405:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1406: 
01:00200946 6100151E        	  1407:          BSR     FNEXTF
01:0020094A 610005E6        	  1408:          BSR     GETA
01:0020094E 2440            	  1409:          MOVE.L  D0,A2          A2 = TO BEGIN ADDRESS
                            	  1410: 
01:00200950 204B            	  1411:          MOVE.L  A3,A0
01:00200952 6100FB68        	  1412:          BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
01:00200956 200A            	  1413:          MOVE.L  A2,D0
01:00200958 6100FB5A        	  1414:          BSR     PPHY           PRINT TO ADDRESS
                            	  1415: 
01:0020095C 2209            	  1416:          MOVE.L  A1,D1
01:0020095E 928B            	  1417:          SUB.L   A3,D1          D1 =  SIZE - 1
01:00200960 6500FB4C        	  1418:          BCS     SYNTAX         END LESS THAN BEGIN
01:00200964 5281            	  1419:          ADDQ.L  #1,D1          D1 = COUNT (SIZE)
                            	  1420: 
01:00200966 B5CB            	  1421:          CMP.L   A3,A2
01:00200968 6408            	  1422:          BCC.S   BM122          MOVING LOW TO HIGH
                            	  1423: 
01:0020096A 14DB            	  1424: BM112    MOVE.B  (A3)+,(A2)+    MOVING HIGH TO LOW
01:0020096C 5381            	  1425:          SUBQ.L  #1,D1          COUNT
01:0020096E 66FA            	  1426:          BNE     BM112
01:00200970 600A            	  1427:          BRA.S   BM142
                            	  1428: 
01:00200972 D7C1            	  1429: BM122    ADD.L   D1,A3          MOVING LOW TO HIGH
01:00200974 D5C1            	  1430:          ADD.L   D1,A2
01:00200976 1523            	  1431: BM132    MOVE.B  -(A3),-(A2)
01:00200978 5381            	  1432:          SUBQ.L  #1,D1
01:0020097A 66FA            	  1433:          BNE     BM132
01:0020097C 6000FCB0        	  1434: BM142    BRA     MACSBUG
                            	  1435: 
                            	  1436: 
                            	  1437: 
                            	  1438: 
                            	  1439: *-------------------------------------------------------------------------
                            	  1440: * File BR        BR, GD, GT, TR, TT, PER Commands                 12/04/81
                            	  1441: 
                            	  1442: *   ***T***   TRACE COMMAND
                            	  1443: 
                            	  1444: TCMD     DS      0              "T" Alias for "TR" command
01:00200980 41FA0012        	  1445: TRCMD    LEA     TCMDHOT(PC),A0 IF NO PARAMTERS
01:00200984 610014E0        	  1446:          BSR     FNEXTF         FIND NEXT FIELD
01:00200988 6100155E        	  1447:          BSR     GETNUMA        FIND NUMBER OF INST TO TRACE
01:0020098C 610014FC        	  1448:          BSR     CKADDR         INSURE 24 BITS OR LESS
01:00200990 4A80            	  1449:          TST.L   D0
01:00200992 6602            	  1450:          BNE.S   TCMD15
                            	  1451: 
                            	  1452: TCMDHOT  DS      0              SPECIAL ENTRY FROM DECODE
01:00200994 7001            	  1453:          MOVEQ   #1,D0          ZERO; MAKE TRACE ONE
01:00200996 21C004DA        	  1454: TCMD15   MOVE.L  D0,TRACECNT
01:0020099A 6022            	  1455:          BRA.S   TRACE2
                            	  1456: 
                            	  1457: 
                            	  1458: *
                            	  1459: ** TT ** "TRACE TILL" COMMAND
                            	  1460: *
                            	  1461: 
01:0020099C 41FAFB10        	  1462: TTCMD    LEA     SYNTAX(PC),A0
01:002009A0 610014C4        	  1463:          BSR     FNEXTF         FIND NEXT FIELD
01:002009A4 6100058C        	  1464:          BSR     GETA           GET ADDRESS
01:002009A8 610014DA        	  1465:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1466: 
01:002009AC 2C00            	  1467:          MOVE.L  D0,D6
01:002009AE 6100FB04        	  1468:          BSR     PPHY           DISPLAY TILL ADDRESS
                            	  1469: 
01:002009B2 21C60490        	  1470:          MOVE.L  D6,BPTILL      9TH BP
01:002009B6 21FC0000FFFF04DA	  1471:          MOVE.L  #$FFFF,TRACECNT  SET FOR A VERY LONG TIME
                            	  1472: 
                            	  1473: 
01:002009BE 31FCFFFF04DE    	  1474: TRACE2   MOVE.W  #-1,TRACEON    FOR DECODE OF NEXT COMMAND
                            	  1475: 
01:002009C4 20380400        	  1476:          MOVE.L  REGPC,D0
01:002009C8 6100FAEA        	  1477:          BSR     PPHY           DISPLAY START (PC) ADDRESS
01:002009CC 60000778        	  1478:          BRA     UNTRACE
                            	  1479: 
                            	  1480: 
                            	  1481: *
                            	  1482: *   ***GT***  RUN PROGRAM TO TEMP BREAKPOINT
                            	  1483: *
                            	  1484: 
01:002009D0 41FAFADC        	  1485: GTCMD    LEA     SYNTAX(PC),A0  GET NUMBER ELSE PRINT "WHAT"
01:002009D4 61001490        	  1486:          BSR     FNEXTF         FIND NEXT FIELD
01:002009D8 61000558        	  1487:          BSR     GETA           GET ADDRESS
01:002009DC 610014A6        	  1488:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002009E0 2C00            	  1489:          MOVE.L  D0,D6          D6 = UNTIL ADDRESS
01:002009E2 6100FAD0        	  1490:          BSR     PPHY           PRINT PHYSICAL ADDRESS
                            	  1491: 
                            	  1492: * IF TILL ADDRESS IN BREAKPOINT TABLE; DISPLAY WHAT
                            	  1493: 
01:002009E6 41F80470        	  1494:          LEA     BPADD,A0       A0 = POINTER TO BP ADDRESSES
01:002009EA 7E08            	  1495:          MOVEQ   #8,D7          D7 = # OF ADDRESS ALLOWED
01:002009EC BC98            	  1496: GT21     CMP.L   (A0)+,D6
01:002009EE 670000A0        	  1497:          BEQ     BCMD55         ALREADY IN TABLE -SHOW TABLE-
01:002009F2 5387            	  1498:          SUBQ.L  #1,D7
01:002009F4 66F6            	  1499:          BNE     GT21
                            	  1500: 
01:002009F6 21C60490        	  1501:          MOVE.L  D6,BPTILL      9TH BREAKPOINT
01:002009FA 6116            	  1502:          BSR.S   GOCMD1A        NORMAL STARTUP
01:002009FC 6020            	  1503:          BRA.S   GOCMD1
                            	  1504: 
01:002009FE 41FA0012        	  1505: GOSET1   LEA     GOCMD1A(PC),A0 WHERE TO GO IF NO PARAMERS
01:00200A02 61001462        	  1506:          BSR     FNEXTF         FIND NEXT FIELD
01:00200A06 6100052A        	  1507:          BSR     GETA           GET ADDRESS
01:00200A0A 61001478        	  1508:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:00200A0E 21C00400        	  1509:          MOVE.L  D0,REGPC
                            	  1510: 
01:00200A12 20380400        	  1511: GOCMD1A  MOVE.L  REGPC,D0       (ALSO SUBROUTINE ENTRY)
01:00200A16 6100FA9C        	  1512:          BSR     PPHY           PRINT ".PC" PHYSICAL ADDRESS
01:00200A1A 4E75            	  1513:          RTS
                            	  1514: 
                            	  1515: GCMD     DS      0              "G" ALIAS FOR "GO"
01:00200A1C 61E0            	  1516: GOCMD    BSR     GOSET1         "GO" (AFTER TRACING ONE INST)
01:00200A1E 21FCFFFFFFFF04DA	  1517: GOCMD1   MOVE.L  #-1,TRACECNT   "FLAG" COUNTER AS SPECIAL
                            	  1518: 
01:00200A26 6000071E        	  1519:          BRA     UNTRACE
                            	  1520: 
01:00200A2A 61D2            	  1521: GDCMD    BSR     GOSET1         "GO DIRECT" Command
01:00200A2C 60000726        	  1522:          BRA     UNSTACK
                            	  1523: 
                            	  1524: 
                            	  1525: *   ***BR***  SET AND PRINT BREAKPOINTS
                            	  1526: 
                            	  1527: *                   DELETE ALL BREAKPOINTS
                            	  1528: 
01:00200A30 6108            	  1529: NOBRCMD  BSR.S   FIXBP          GET POINTERS
01:00200A32 4298            	  1530: BCMD01   CLR.L   (A0)+          CLEAR THE ADDRESS TABLE
01:00200A34 5387            	  1531:          SUBQ.L  #1,D7          DO IT 8 TIMES
01:00200A36 66FA            	  1532:          BNE     BCMD01
01:00200A38 6060            	  1533:          BRA.S   BCMD7          DISPLAY EMPTY TABLE
                            	  1534: 
01:00200A3A 41F80470        	  1535: FIXBP    LEA     BPADD,A0       SET UP ADDRESS & COUNTER
01:00200A3E 7E08            	  1536:          MOVEQ   #8,D7          COUNTER
01:00200A40 45F80494        	  1537:          LEA     BPCNT,A2       COUNTS
01:00200A44 4E75            	  1538:          RTS
                            	  1539: 
                            	  1540: ************************************************************
                            	  1541: * THIS COMMAND SUPPORTS THE "NO" OPTION. COMMANDS THAT ALLOW
                            	  1542: * THE "NO" OPTION PROVIDE A HARD BRANCH 4 BYTES BEFORE THE
                            	  1543: * REGULAR COMMAND.
                            	  1544: ************************************************************
                            	  1545: 
01:00200A46 6000009A        	  1546:          BRA     NOBR0          ENTRY FOR "NOBR" (IT LOOKS FOR PARMS OR NOT)
01:00200A4A 41FA004E        	  1547: BRCMD    LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARMS
01:00200A4E 61001416        	  1548: BCMD0    BSR     FNEXTF         FIND NEXT FIELD
01:00200A52 610004DE        	  1549:          BSR     GETA           GET ADDRESS
01:00200A56 6100142C        	  1550:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1551: 
01:00200A5A 61DE            	  1552:          BSR     FIXBP          SET UP COUNTER & ADDRESS
01:00200A5C B090            	  1553: BCMD00   CMP.L   (A0),D0        SEE IF ALREADY IN TABLE
01:00200A5E 6710            	  1554:          BEQ.S   BCMD33         GO CHECK FOR COUNT
01:00200A60 588A            	  1555:          ADDQ.L  #4,A2          BUMP OTHER POINTER
01:00200A62 5888            	  1556:          ADDQ.L  #4,A0          BUMP MAIN POINTER
01:00200A64 5387            	  1557:          SUBQ.L  #1,D7
01:00200A66 66F4            	  1558:          BNE     BCMD00
                            	  1559: 
01:00200A68 61D0            	  1560:          BSR     FIXBP          GET ADDRESS & POINTERS
01:00200A6A 4A90            	  1561: BCMD3    TST.L   (A0)           FIND AN EMPTY STOP
01:00200A6C 661A            	  1562:          BNE.S   BCMD5
01:00200A6E 2080            	  1563:          MOVE.L  D0,(A0)        PUT NEW ADDRESS IN TABLE
01:00200A70 4292            	  1564: BCMD33   CLR.L   (A2)           CLEAR CURRENT COUNT
01:00200A72 1215            	  1565:          MOVE.B  (A5),D1        CHECK INPUT FOR COUNT
01:00200A74 0C01003B        	  1566:          CMPI.B  #';',D1
01:00200A78 6608            	  1567:          BNE.S   BCMD6          NO COUNT
01:00200A7A 528D            	  1568:          ADDQ.L  #1,A5          BUMP THE BUFFER SCANNER
01:00200A7C 6100146A        	  1569:          BSR     GETNUMA        GO GET THE COUNT
01:00200A80 2480            	  1570:          MOVE.L  D0,(A2)        MOVE TO TABLE
                            	  1571: 
01:00200A82 41FA0016        	  1572: BCMD6    LEA     BCMD7(PC),A0   WHERE TO GO IF NO MORE PARAMETERS
01:00200A86 60C6            	  1573:          BRA     BCMD0
                            	  1574: 
01:00200A88 5888            	  1575: BCMD5    ADDQ.L  #4,A0          BUMP TABLE POINTER
01:00200A8A 588A            	  1576:          ADDQ.L  #4,A2          BUMP POINTER TO COUNTS
01:00200A8C 5387            	  1577:          SUBQ.L  #1,D7          LOOP AROUND
01:00200A8E 66DA            	  1578:          BNE     BCMD3
                            	  1579: 
01:00200A90 4BFAF9F7        	  1580: BCMD55   LEA     MSG008E(PC),A5 TABLE FULL; ERROR MESSAGE
01:00200A94 6100FA54        	  1581:          BSR     FIXDATA
01:00200A98 6008            	  1582:          BRA.S   BCMD77
                            	  1583: 
01:00200A9A 4BFA003A        	  1584: BCMD7    LEA     MSGBR(PC),A5   "BREAKPOINTS"
01:00200A9E 6100FA5E        	  1585:          BSR     FIXDCRLF
01:00200AA2 6100153E        	  1586: BCMD77   BSR     OUT1CR
                            	  1587: 
01:00200AA6 6192            	  1588:          BSR     FIXBP          SET ADDRESS & COUNTER
01:00200AA8 2C1A            	  1589: BCMD8    MOVE.L  (A2)+,D6       D6 = COUNT
01:00200AAA 2010            	  1590:          MOVE.L  (A0),D0        D0 = ADDRESS
01:00200AAC 671E            	  1591:          BEQ.S   BCMD9          ZERO ADDRESS
01:00200AAE 61001316        	  1592:          BSR     FRELADDR       FORMAT RELATIVE ADDRESS
01:00200AB2 1CFC0020        	  1593:          MOVE.B  #BLANK,(A6)+
                            	  1594: 
01:00200AB6 2010            	  1595:          MOVE.L  (A0),D0        FORMAT ABSOLUTE ADDRESS
01:00200AB8 610012E2        	  1596:          BSR     PNT6HX
01:00200ABC 2006            	  1597:          MOVE.L  D6,D0
01:00200ABE 6708            	  1598:          BEQ.S   BCMD81         DON'T PRINT ZERO COUNT
01:00200AC0 1CFC003B        	  1599:          MOVE.B  #';',(A6)+
01:00200AC4 6100135A        	  1600:          BSR     PNTZHX         PRINT WITH ZERO SURPRESS
                            	  1601: 
01:00200AC8 61001518        	  1602: BCMD81   BSR     OUT1CR
01:00200ACC 5888            	  1603: BCMD9    ADDQ.L  #4,A0
01:00200ACE 5387            	  1604:          SUBQ.L  #1,D7          LOOP AROUND
01:00200AD0 66D6            	  1605:          BNE     BCMD8
01:00200AD2 6000FB5A        	  1606:          BRA     MACSBUG
                            	  1607: 
01:00200AD6 425245414B504F49	  1608: MSGBR    DC.B    'BREAKPOINTS',EOT
01:00200ADE 4E5453
01:00200AE1 04
                            	  1609: 
                            	  1610: 
                            	  1611: 
                            	  1612: * NOBR COMMAND
                            	  1613: 
01:00200AE2 41FAFF4C        	  1614: NOBR0    LEA     NOBRCMD(PC),A0 WHERE TO GO IF NO PARAMETERS
01:00200AE6 6100137E        	  1615: NOBR1    BSR     FNEXTF         FIND NEXT FIELD
01:00200AEA 61000446        	  1616:          BSR     GETA           GO DECODE NUMBER/ADDRESS
01:00200AEE 4A80            	  1617:          TST.L   D0
01:00200AF0 679E            	  1618:          BEQ     BCMD55         ZERO NOT VALID BREAKPOINT
01:00200AF2 61001390        	  1619:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1620: 
01:00200AF6 41F80470        	  1621:          LEA     BPADD,A0       SET UP TABLE POINTER
01:00200AFA 7E08            	  1622:          MOVEQ   #8,D7          COUNTER
01:00200AFC 2210            	  1623: NOBR3    MOVE.L  (A0),D1        GET BREAKPOINT IN TABLE
01:00200AFE B081            	  1624:          CMP.L   D1,D0          SEE IF SAME
01:00200B00 6706            	  1625:          BEQ.S   NOBR4
01:00200B02 5888            	  1626:          ADDQ.L  #4,A0
01:00200B04 5387            	  1627:          SUBQ.L  #1,D7
01:00200B06 66F4            	  1628:          BNE     NOBR3
01:00200B08 4290            	  1629: NOBR4    CLR.L   (A0)           CLEAR THIS BREAKPOINT
01:00200B0A 41FAFF8E        	  1630:          LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARAMETER
01:00200B0E 60D6            	  1631:          BRA     NOBR1
                            	  1632: 
                            	  1633: 
                            	  1634: 
                            	  1635: 
                            	  1636: *-------------------------------------------------------------------------
                            	  1637: * File BS        BS (Block Search) Command                        11/27/81
                            	  1638: 
                            	  1639: *
                            	  1640: *  BLOCK SEARCH   BS <ADDR1> <ADDR2> 'LITERAL STRING'
                            	  1641: *                 BS <ADDR1> <ADDR2> <DATA> [<MASK>] [;<OPTION>]
                            	  1642: 
01:00200B10 41FAF99C        	  1643: BSCMD    LEA     SYNTAX(PC),A0
01:00200B14 61001350        	  1644:          BSR     FNEXTF
01:00200B18 61000418        	  1645:          BSR     GETA
01:00200B1C 2640            	  1646:          MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
                            	  1647: 
01:00200B1E 61001346        	  1648:          BSR     FNEXTF
01:00200B22 6100040E        	  1649:          BSR     GETA
01:00200B26 2240            	  1650:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1651: 
01:00200B28 6100133C        	  1652:          BSR     FNEXTF
01:00200B2C 1015            	  1653:          MOVE.B  (A5),D0
01:00200B2E 0C000027        	  1654:          CMPI.B  #$27,D0
01:00200B32 670000B0        	  1655:          BEQ     BS311          LITERAL STRING SEARCH
                            	  1656: 
01:00200B36 610013B0        	  1657:          BSR     GETNUMA
01:00200B3A 2E00            	  1658:          MOVE.L  D0,D7          D7 = DATA WE ARE LOOKING FOR
01:00200B3C 7A00            	  1659:          CLR.L   D5             SCAN FOR OPTIONS
01:00200B3E 204D            	  1660:          MOVE.L  A5,A0
01:00200B40 B1CE            	  1661: BS91     CMP.L   A6,A0
01:00200B42 6426            	  1662:          BCC.S   BS97           AT END OF BUFFER
                            	  1663: 
01:00200B44 1018            	  1664:          MOVE.B  (A0)+,D0
01:00200B46 0C00003B        	  1665:          CMPI.B  #';',D0
01:00200B4A 66F4            	  1666:          BNE     BS91           NOT SEMICOLON
                            	  1667: 
01:00200B4C 2C48            	  1668:          MOVE.L  A0,A6
01:00200B4E 538E            	  1669:          SUBQ.L  #1,A6          ADJUST END OF BUFFER POINTER
                            	  1670: 
01:00200B50 1010            	  1671:          MOVE.B  (A0),D0        D0 = OPTION CHARACTER
01:00200B52 0C000042        	  1672:          CMPI.B  #'B',D0
01:00200B56 6712            	  1673:          BEQ.S   BS97           BYTE  D5 = 0
                            	  1674: 
01:00200B58 7A01            	  1675:          MOVEQ   #1,D5
01:00200B5A 0C000057        	  1676:          CMPI.B  #'W',D0
01:00200B5E 670A            	  1677:          BEQ.S   BS97                WORD  D5 = +
                            	  1678: 
01:00200B60 7AFF            	  1679:          MOVEQ   #-1,D5         LONG WORD  D5 = -
01:00200B62 0C00004C        	  1680:          CMPI.B  #'L',D0
01:00200B66 6600F946        	  1681:          BNE     SYNTAX
                            	  1682: BS97     DS      0
                            	  1683: 
01:00200B6A 78FF            	  1684:          MOVEQ   #-1,D4         D4 = DEFAULT SEARCH MASK
01:00200B6C 41FA000C        	  1685:          LEA     BS101(PC),A0
01:00200B70 610012F4        	  1686:          BSR     FNEXTF         FIND NEXT FIELD
01:00200B74 61001372        	  1687:          BSR     GETNUMA
01:00200B78 2800            	  1688:          MOVE.L  D0,D4          D4 = MASK
                            	  1689: BS101    DS      0
                            	  1690: 
01:00200B7A 204B            	  1691:          MOVE.L  A3,A0
01:00200B7C 6100F93E        	  1692:          BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
                            	  1693: 
01:00200B80 B3CB            	  1694:          CMP.L   A3,A1
01:00200B82 6500F92A        	  1695:          BCS     SYNTAX         END LESS THAN BEGIN
                            	  1696: 
01:00200B86 B7C9            	  1697: BS200    CMP.L   A1,A3
01:00200B88 6400FAA4        	  1698:          BCC     MACSBUG        DONE
                            	  1699: 
01:00200B8C 610014FA        	  1700:          BSR     FIXBUF
01:00200B90 200B            	  1701:          MOVE.L  A3,D0
01:00200B92 61001208        	  1702:          BSR     PNT6HX         FORMAT ADDRESS
01:00200B96 1CFC0020        	  1703:          MOVE.B  #BLANK,(A6)+   SPACE INTO BUFFER
                            	  1704: 
01:00200B9A 4A85            	  1705:          TST.L   D5
01:00200B9C 6734            	  1706:          BEQ.S   BS225          BYTE SIZE
                            	  1707: 
01:00200B9E 200B            	  1708:          MOVE.L  A3,D0
01:00200BA0 610012E2        	  1709:          BSR     CKWADR         INSURE WORD BOUNDRY
01:00200BA4 4A85            	  1710:          TST.L   D5
01:00200BA6 6A18            	  1711:          BPL.S   BS219          WORD SIZE (2 BYTES)
                            	  1712: 
01:00200BA8 7C02            	  1713:          MOVEQ   #2,D6          D6 =  SIZE (LONG WORD)
01:00200BAA 2013            	  1714:          MOVE.L  (A3),D0        FETCH
01:00200BAC C084            	  1715:          AND.L   D4,D0          MASK
01:00200BAE B087            	  1716:          CMP.L   D7,D0          COMPARE
01:00200BB0 660A            	  1717:          BNE.S   BS215
                            	  1718: 
01:00200BB2 2013            	  1719:          MOVE.L  (A3),D0        DISPLAY NON-MASKED DATA
01:00200BB4 610011DE        	  1720:          BSR     PNT8HX
                            	  1721: 
01:00200BB8 61001428        	  1722: BS213    BSR     OUT1CR
                            	  1723: 
01:00200BBC D7C6            	  1724: BS215    ADD.L   D6,A3          BUMP FETCH ADDRESS  (D6 = SIZE)
01:00200BBE 60C6            	  1725:          BRA     BS200
                            	  1726: 
01:00200BC0 7C02            	  1727: BS219    MOVEQ   #2,D6          SIZE = WORD
01:00200BC2 3013            	  1728:          MOVE.W  (A3),D0
01:00200BC4 C044            	  1729:          AND.W   D4,D0
01:00200BC6 B047            	  1730:          CMP.W   D7,D0
01:00200BC8 66F2            	  1731:          BNE     BS215
                            	  1732: 
01:00200BCA 3013            	  1733:          MOVE.W  (A3),D0
01:00200BCC 610011D4        	  1734:          BSR     PNT4HX         DISPLAY
01:00200BD0 60E6            	  1735:          BRA     BS213
                            	  1736: 
01:00200BD2 7C01            	  1737: BS225    MOVEQ   #1,D6          SIZE = BYTE
01:00200BD4 1013            	  1738:          MOVE.B  (A3),D0
01:00200BD6 C004            	  1739:          AND.B   D4,D0
01:00200BD8 B007            	  1740:          CMP.B   D7,D0
01:00200BDA 66E0            	  1741:          BNE     BS215
                            	  1742: 
01:00200BDC 1013            	  1743:          MOVE.B  (A3),D0
01:00200BDE 610011CA        	  1744:          BSR     PNT2HX         DISPLAY
01:00200BE2 60D4            	  1745:          BRA     BS213
                            	  1746: 
                            	  1747: * LITERAL STRING SEARCH
                            	  1748: *   SAVE STRING
                            	  1749: 
01:00200BE4 45F805C0        	  1750: BS311    LEA     DUMPTEMP,A2
01:00200BE8 528D            	  1751: BS313    ADDQ.L  #1,A5
01:00200BEA BBCE            	  1752:          CMP.L   A6,A5
01:00200BEC 6400F8C0        	  1753:          BCC     SYNTAX         ADDR1 GREATER THAN ADDR2
01:00200BF0 14D5            	  1754:          MOVE.B  (A5),(A2)+
01:00200BF2 1015            	  1755:          MOVE.B  (A5),D0
01:00200BF4 0C000027        	  1756:          CMPI.B  #$27,D0
01:00200BF8 66EE            	  1757:          BNE     BS313
01:00200BFA 538A            	  1758:          SUBQ.L  #1,A2          A2 = END OF STRING + 1
                            	  1759: 
01:00200BFC 204B            	  1760:          MOVE.L  A3,A0
01:00200BFE 6100F8BC        	  1761:          BSR     P2PHY          DISPLAY ADDRESSES
                            	  1762: 
01:00200C02 B3CB            	  1763:          CMP.L   A3,A1
01:00200C04 6500F8A8        	  1764:          BCS     SYNTAX
                            	  1765: 
                            	  1766: * LOOK FOR STRING MATCH
                            	  1767: 
01:00200C08 49F805C0        	  1768: BS323    LEA     DUMPTEMP,A4    A4 = BEGIN OF STRING
01:00200C0C 204B            	  1769:          MOVE.L  A3,A0          A0 = BEGIN OF MEMORY
01:00200C0E 1010            	  1770: BS325    MOVE.B  (A0),D0
01:00200C10 B01C            	  1771:          CMP.B   (A4)+,D0       DATA COMPARE
01:00200C12 662C            	  1772:          BNE.S   BS365          MIS-MATCH
                            	  1773: 
01:00200C14 B3C8            	  1774:          CMP.L   A0,A1          ADDRESS CHECK
01:00200C16 6500FA16        	  1775:          BCS     MACSBUG        OUT OF MEMORY
                            	  1776: 
01:00200C1A 5288            	  1777:          ADDQ.L  #1,A0
01:00200C1C B9CA            	  1778:          CMP.L   A2,A4
01:00200C1E 65EE            	  1779:          BCS     BS325          MORE STRING TO CHECK
                            	  1780: 
01:00200C20 61001466        	  1781:          BSR     FIXBUF         HAVE MATCH
01:00200C24 200B            	  1782:          MOVE.L  A3,D0          FORMAT ADDRESS
01:00200C26 61001174        	  1783:          BSR     PNT6HX
01:00200C2A 1CFC0020        	  1784:          MOVE.B  #BLANK,(A6)+   SPACE
                            	  1785: 
01:00200C2E 1CFC0027        	  1786:          MOVE.B  #$27,(A6)+     LEADING QUOTE
01:00200C32 49F805C0        	  1787:          LEA     DUMPTEMP,A4    MOVE STRING TO BUFFER
01:00200C36 1CDC            	  1788: BS355    MOVE.B  (A4)+,(A6)+
01:00200C38 B5CC            	  1789:          CMP.L   A4,A2
01:00200C3A 64FA            	  1790:          BCC     BS355
                            	  1791: 
01:00200C3C 610013A4        	  1792:          BSR     OUT1CR         DISPLAY
                            	  1793: 
01:00200C40 528B            	  1794: BS365    ADDQ.L  #1,A3
01:00200C42 B3CB            	  1795:          CMP.L   A3,A1
01:00200C44 6500F9E8        	  1796:          BCS     MACSBUG        DONE
01:00200C48 60BE            	  1797:          BRA     BS323
                            	  1798: 
                            	  1799: 
                            	  1800: 
                            	  1801: 
                            	  1802: *-------------------------------------------------------------------------
                            	  1803: * File BT        BT (Block Test) command                          11/30/81
                            	  1804: 
                            	  1805: * BT   BLOCK OF MEMORY TEST
                            	  1806: 
01:00200C4A 61000CFE        	  1807: BTCMD    BSR     MTSETUP        PREPARE PARMS (FROM,TO/COUNT)
01:00200C4E 61000FBE        	  1808:          BSR     RAMTEST        EXEC MEMORY TEST SUBROUTINE
01:00200C52 6700F9DA        	  1809:          BEQ     MACSBUG        NO ERRORS, RETURN TO MACSBUG
01:00200C56 2F01            	  1810:          MOVE.L  D1,-(A7)       SAVE DATA READ
01:00200C58 2F00            	  1811:          MOVE.L  D0,-(A7)       SAVE DATA WRITTEN CAUSING ERROR
                            	  1812: 
01:00200C5A 6100142C        	  1813:          BSR     FIXBUF         SET UP TO PRINT
01:00200C5E 2CFC4641494C    	  1814:          MOVE.L  #'FAIL',(A6)+
01:00200C64 2CFC45442041    	  1815:          MOVE.L  #'ED A',(A6)+
01:00200C6A 3CFC5420        	  1816:          MOVE.W  #'T ',(A6)+
01:00200C6E 200A            	  1817:          MOVE.L  A2,D0          ADDRESS WHERE IT FAILED
01:00200C70 6100112A        	  1818:          BSR     PNT6HX
                            	  1819: 
01:00200C74 2CFC20205752    	  1820:          MOVE.L  #'  WR',(A6)+
01:00200C7A 2CFC4F54453D    	  1821:          MOVE.L  #'OTE=',(A6)+
01:00200C80 201F            	  1822:          MOVE.L  (A7)+,D0       WHAT WAS WRITTEN
01:00200C82 6100111E        	  1823:          BSR     PNT4HX
                            	  1824: 
01:00200C86 2CFC20202052    	  1825:          MOVE.L  #'   R',(A6)+
01:00200C8C 2CFC4541443D    	  1826:          MOVE.L  #'EAD=',(A6)+
01:00200C92 201F            	  1827:          MOVE.L  (A7)+,D0       WHAT WAS READ
01:00200C94 6100110C        	  1828:          BSR     PNT4HX
                            	  1829: 
01:00200C98 6000F806        	  1830:          BRA     MSG            PRINT IT
                            	  1831: 
                            	  1832: 
                            	  1833: 
                            	  1834: 
                            	  1835: *-------------------------------------------------------------------------
                            	  1836: * File DC        DC (Data Conversion) Command                     12/10/81
                            	  1837: 
                            	  1838: *
                            	  1839: *
                            	  1840: *  ***DC***  NUMBER CONVERSIONS
                            	  1841: *
                            	  1842: DCCMD    DS      0              -DATA CONVERT COMMAND-
01:00200C9C 41FAF810        	  1843: NUMCON0  LEA     SYNTAX(PC),A0  IF NO PARAMETERS
01:00200CA0 610011C4        	  1844:          BSR     FNEXTF         POINT TO NEXT PARAMETER
01:00200CA4 6100028C        	  1845:          BSR     GETA           EVALUATE EXPRESSION
                            	  1846: 
01:00200CA8 610013DE        	  1847:          BSR     FIXBUF         SET UP FOR PRINT
01:00200CAC 2E00            	  1848:          MOVE.L  D0,D7          D7=VALUE
01:00200CAE 4A87            	  1849:          TST.L   D7             SEE IF NEGATIVE
01:00200CB0 6A0E            	  1850:          BPL.S   NUMCON1
01:00200CB2 1CFC0024        	  1851:          MOVE.B  #'$',(A6)+
01:00200CB6 2007            	  1852:          MOVE.L  D7,D0          MOVE NEGATIVE RESULT TO D0
01:00200CB8 610010DA        	  1853:          BSR     PNT8HX
01:00200CBC 1CFC003D        	  1854:          MOVE.B  #'=',(A6)+
01:00200CC0 2007            	  1855: NUMCON1  MOVE.L  D7,D0          RESTORE
01:00200CC2 6A08            	  1856:          BPL.S   NUMCON2
01:00200CC4 4480            	  1857:          NEG.L   D0
01:00200CC6 6B04            	  1858:          BMI.S   NUMCON2        SPECIAL CASE (-0)
01:00200CC8 1CFC002D        	  1859:          MOVE.B  #'-',(A6)+
01:00200CCC 1CFC0024        	  1860: NUMCON2  MOVE.B  #'$',(A6)+
01:00200CD0 6100114E        	  1861:          BSR     PNTZHX
01:00200CD4 1CFC003D        	  1862:          MOVE.B  #'=',(A6)+     NOW PRINT DECIMAL VALUE
01:00200CD8 2007            	  1863:          MOVE.L  D7,D0
01:00200CDA 6A08            	  1864:          BPL.S   NUMCON3
01:00200CDC 4480            	  1865:          NEG.L   D0
01:00200CDE 6B04            	  1866:          BMI.S   NUMCON3        SPECIAL CASE (-0)
01:00200CE0 1CFC002D        	  1867:          MOVE.B  #'-',(A6)+
01:00200CE4 1CFC0026        	  1868: NUMCON3  MOVE.B  #'&',(A6)+
01:00200CE8 6100066A        	  1869:          BSR     HEX2DEC        PUT VALUE IN BUFFER
01:00200CEC 6000F7B2        	  1870:          BRA     MSG            GO PRINT IT
                            	  1871: 
                            	  1872: 
                            	  1873: 
                            	  1874: 
                            	  1875: *-------------------------------------------------------------------------
                            	  1876: * File DFDI      DF (Display registers) WITH disassembler         05/27/82
                            	  1877: 
01:00200CF0 50435352        	  1878: REGNAMES DC.L    'PCSR'         TABLE OF NAMES OF REGISTERS
01:00200CF4 55535353        	  1879:          DC.L    'USSS'
01:00200CF8 3F3F            	  1880:          DC.W    '??'           END OF TABLE
                            	  1881: 
                            	  1882: DFCMD    DS      0              DF COMMAND  ENTRY
01:00200CFA 600A            	  1883:          BRA.S   TD07
                            	  1884: 
01:00200CFC 6100138A        	  1885: TDISPLY  BSR     FIXBUF         PRINT TRACE DISPLAY SUBROUTINE
01:00200D00 4A3804E9        	  1886:          TST.B   XONOFF+3
01:00200D04 6652            	  1887:          BNE.S   TD25           SHORT DISPLAY
                            	  1888: 
01:00200D06 61001380        	  1889: TD07     BSR     FIXBUF         PRINT PRELUDE
01:00200D0A 42B8061C        	  1890:          CLR.L   OUTTO          FORCE DISPLAY TO OPERATORS CONSOLE
01:00200D0E 2CF80610        	  1891:          MOVE.L  SCREEN1,(A6)+
01:00200D12 6704            	  1892:          BEQ.S   TD09           SKIP PRELUDE
01:00200D14 610012E6        	  1893:          BSR     OUTPUT
                            	  1894: TD09
                            	  1895: 
01:00200D18 49FAFFD6        	  1896:          LEA     REGNAMES(PC),A4 REGISTER NAMES
01:00200D1C 45F80400        	  1897:          LEA     REGPC,A2       REGISTER DATA
01:00200D20 61001366        	  1898:          BSR     FIXBUF         SET UP I/O BUFFER
                            	  1899: 
01:00200D24 301C            	  1900: TD1      MOVE.W  (A4)+,D0       GET REG NAME
01:00200D26 2E1A            	  1901:          MOVE.L  (A2)+,D7       GET REG CONTENT
01:00200D28 0C403F3F        	  1902:          CMPI.W  #'??',D0       SEE IF AT END OF REGS
01:00200D2C 6650            	  1903:          BNE.S   TD4
01:00200D2E 610012B2        	  1904:          BSR     OUT1CR         PRINT BUFFER
                            	  1905: 
01:00200D32 1E3C0044        	  1906:          MOVE.B  #'D',D7        CLASS=DATA
01:00200D36 47F80408        	  1907:          LEA     REGS,A3        OFFSET
01:00200D3A 61000D96        	  1908:          BSR     PNTCLS         GO PRINT THE BLOCK
                            	  1909: 
01:00200D3E 1E3C0041        	  1910:          MOVE.B  #'A',D7        CLASS=ADDRESS
01:00200D42 47F80428        	  1911:          LEA     REGS+32,A3     OFFSET
01:00200D46 61000D8A        	  1912:          BSR     PNTCLS         GO PRINT THE BLOCK
                            	  1913: 
01:00200D4A 6100133C        	  1914:          BSR     FIXBUF
01:00200D4E 7214            	  1915:          MOVEQ   #20,D1         LOOP COUNTER
01:00200D50 1CFC002D        	  1916: TD27     MOVE.B  #'-',(A6)+     FILL BUFFER WITH BOARDER
01:00200D54 5381            	  1917:          SUBQ.L  #1,D1
01:00200D56 66F8            	  1918:          BNE TD27
                            	  1919: 
01:00200D58 28780400        	  1920: TD25     MOVE.L  REGPC,A4       DISASSEMBLE
01:00200D5C 4CD40007        	  1921:          MOVEM.L (A4),D0-D2
01:00200D60 2A4E            	  1922:          MOVE.L  A6,A5
01:00200D62 610030F4        	  1923:          BSR     DCODE68K
01:00200D66 4BF80540        	  1924:          LEA     BUFFER,A5
                            	  1925: 
01:00200D6A 61001276        	  1926:          BSR     OUT1CR         PRINT
                            	  1927: 
01:00200D6E 61001318        	  1928:          BSR     FIXBUF         PRINT END STUFF FOR SCREEN CONTROL
01:00200D72 2CF80614        	  1929:          MOVE.L  SCREEN2,(A6)+
01:00200D76 6704            	  1930:          BEQ.S   TD39           SKIP END STUFF
01:00200D78 61001282        	  1931:          BSR     OUTPUT
01:00200D7C 4E75            	  1932: TD39     RTS     RETURN FOR MORE WORK
                            	  1933: 
01:00200D7E 3400            	  1934: TD4      MOVE.W  D0,D2          PRINT REG NAME IN BUFFER
01:00200D80 E040            	  1935:          ASR.W   #8,D0          MOVE IT OVER
01:00200D82 1600            	  1936:          MOVE.B  D0,D3          SAVE REGISTER TYPE A,D,W,M ETC
01:00200D84 1CC0            	  1937:          MOVE.B  D0,(A6)+       SAVE FIRST LETTER
01:00200D86 1CC2            	  1938:          MOVE.B  D2,(A6)+       SAVE NEXT LETTER
01:00200D88 1CFC003D        	  1939:          MOVE.B  #'=',(A6)+     EQUAL SIGN
01:00200D8C 0C425553        	  1940:          CMPI.W  #'US',D2
01:00200D90 6606            	  1941:          BNE.S   T44
01:00200D92 20380448        	  1942:          MOVE.L  REGUS,D0       USER STACK
01:00200D96 6014            	  1943:          BRA.S   T449
                            	  1944: 
01:00200D98 0C425353        	  1945: T44      CMPI.W  #'SS',D2       SUPER STACK IS SPECIAL
01:00200D9C 6606            	  1946:          BNE.S   T448
01:00200D9E 20380444        	  1947:          MOVE.L  REGA7,D0       GET A7
01:00200DA2 6008            	  1948:          BRA.S   T449
                            	  1949: 
01:00200DA4 2007            	  1950: T448     MOVE.L  D7,D0          REGISTER VALUE
01:00200DA6 0C425352        	  1951:          CMPI.W  #'SR',D2       SEE IF STATUS REGISTER
01:00200DAA 670C            	  1952:          BEQ.S   TDCC
01:00200DAC 61000FE6        	  1953: T449     BSR     PNT8HX         FORMAT 8 HEX CHAR
01:00200DB0 1CFC0020        	  1954: TD9      MOVE.B  #BLANK,(A6)+   SPACE BETWEEN REGS
01:00200DB4 6000FF6E        	  1955:          BRA TD1
                            	  1956: 
                            	  1957: *   CONDITION CODE FORMAT
                            	  1958: *
01:00200DB8 3600            	  1959: TDCC     MOVE.W  D0,D3          SAVE FOR A MOMENT
01:00200DBA 61000FE6        	  1960:          BSR     PNT4HX
01:00200DBE 1CFC003D        	  1961:          MOVE.B  #'=',(A6)+
01:00200DC2 2E3C80000054    	  1962:          MOVE.L  #$80000054,D7  TRACE BIT
01:00200DC8 613E            	  1963:          BSR.S   TDCC9
01:00200DCA 2E3C20000053    	  1964:          MOVE.L  #$20000053,D7  SUPERVISOR BIT
01:00200DD0 6136            	  1965:          BSR.S   TDCC9
01:00200DD2 3003            	  1966:          MOVE.W  D3,D0          INTERRUPT LEVEL
01:00200DD4 E048            	  1967:          LSR.W   #8,D0
01:00200DD6 02000007        	  1968:          ANDI.B  #$07,D0        "7" MAX IN SR FOR LEVEL
01:00200DDA 61000FD6        	  1969:          BSR     PUTHEX
01:00200DDE 2E3C00100058    	  1970:          MOVE.L  #$100058,D7    X BIT
01:00200DE4 6122            	  1971:          BSR.S   TDCC9
01:00200DE6 2E3C0008004E    	  1972:          MOVE.L  #$8004E,D7     N BIT
01:00200DEC 611A            	  1973:          BSR.S   TDCC9
01:00200DEE 2E3C0004005A    	  1974:          MOVE.L  #$4005A,D7     Z BIT
01:00200DF4 6112            	  1975:          BSR.S   TDCC9
01:00200DF6 2E3C00020056    	  1976:          MOVE.L  #$20056,D7     V BIT
01:00200DFC 610A            	  1977:          BSR.S   TDCC9
01:00200DFE 2E3C00010043    	  1978:          MOVE.L  #$10043,D7     C BIT
01:00200E04 6102            	  1979:          BSR.S   TDCC9
01:00200E06 60A8            	  1980:          BRA     TD9
                            	  1981: *
01:00200E08 2C07            	  1982: TDCC9    MOVE.L  D7,D6          DUPLICATE STUFF
01:00200E0A 4846            	  1983:          SWAP    D6             GET BIT POSITION
01:00200E0C CC43            	  1984:          AND.W   D3,D6          SEE IF ON
01:00200E0E 6604            	  1985:          BNE.S   TDCC91
01:00200E10 1E3C002E        	  1986:          MOVE.B  #'.',D7        PUT IN PERIOD IF OFF
01:00200E14 1CC7            	  1987: TDCC91   MOVE.B  D7,(A6)+       PUT IN LETTER IF ON
01:00200E16 4E75            	  1988:          RTS
                            	  1989: 
                            	  1990: 
                            	  1991: 
                            	  1992: 
                            	  1993: *-------------------------------------------------------------------------
                            	  1994: * File DUMP      DU     Dump "S-Records"                          05/10/82
                            	  1995: 
                            	  1996: *   ***DUMP***  DUMP  'S' RECORDS
                            	  1997: *    FORMAT:  DU  ADDRESS1 ADDRESS2  [TEXT....]
                            	  1998: *
                            	  1999: DUCMD    DS      0
01:00200E18 6100172E        	  2000:          BSR     SCANPORT       SEE WHERE TO SEND OUTPUT (DUMMY CALL)
01:00200E1C 2C38061C        	  2001:          MOVE.L  OUTTO,D6       SAVE OUTTO FOR ACTUAL S-RECORD DUMP
01:00200E20 42B8061C        	  2002:          CLR.L   OUTTO          OVERRIDE SCANPORT CALL
                            	  2003: 
01:00200E24 41FAF688        	  2004:          LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMTERS
01:00200E28 6100103C        	  2005:          BSR     FNEXTF         FIND NEXT FIELD
01:00200E2C 61000104        	  2006:          BSR     GETA           GET ADDRESS1
01:00200E30 2640            	  2007:          MOVE.L  D0,A3          A3 = BEGIN ADDRESS
                            	  2008: 
01:00200E32 61001032        	  2009:          BSR     FNEXTF
01:00200E36 610000FA        	  2010:          BSR     GETA           GET ADDRESS2
01:00200E3A 2840            	  2011:          MOVE.L  D0,A4          A4 = END ADDRESS
                            	  2012: 
                            	  2013: * PROCESS HEADER
01:00200E3C 41FA0006        	  2014:          LEA     PUNCH5(PC),A0  WHERE TO GO IF NO HEADER
01:00200E40 61001024        	  2015:          BSR     FNEXTF         LOOK FOR HEADER
                            	  2016: PUNCH5   DS      0
                            	  2017: 
                            	  2018: * MOVE TEXT TO 'TEMP STORAGE'
01:00200E44 45F805C0        	  2019:          LEA     DUMPTEMP,A2
01:00200E48 2A0A            	  2020:          MOVE.L  A2,D5          D5 = START OF TEXT
01:00200E4A BDCD            	  2021: PUM11    CMP.L   A5,A6
01:00200E4C 6704            	  2022:          BEQ.S   PUM13
01:00200E4E 14DD            	  2023:          MOVE.B  (A5)+,(A2)+    MOVE
01:00200E50 60F8            	  2024:          BRA     PUM11
01:00200E52 CB8A            	  2025: PUM13    EXG     A2,D5          D5 = END OF TEXT +1
                            	  2026: 
                            	  2027: * DISPLAY ADDRESSES
01:00200E54 204B            	  2028:          MOVE.L  A3,A0
01:00200E56 224C            	  2029:          MOVE.L  A4,A1
01:00200E58 6100F662        	  2030:          BSR     P2PHY          DISPLAY TWO ADDRESSES
                            	  2031: 
                            	  2032: * INSURE END EQUAL GREATER THAN BEG
01:00200E5C B9CB            	  2033:          CMP.L   A3,A4
01:00200E5E 6500F64E        	  2034:          BCS     SYNTAX
                            	  2035: 
01:00200E62 21C6061C        	  2036:          MOVE.L  D6,OUTTO       RESTORE OPTIONAL DESTINATION OF DUMP
                            	  2037: 
                            	  2038: * FINISH PROCESSING HEADER
                            	  2039: *  A2 = START OF TEXT
01:00200E66 61001220        	  2040:          BSR     FIXBUF         A5,A6=#BUFFER
01:00200E6A 7C02            	  2041:          MOVEQ   #2,D6          THE BYTE COUNT
01:00200E6C 7800            	  2042:          CLR.L   D4             CLEAR THE CHECKSUM
01:00200E6E 2CFC53303F3F    	  2043:          MOVE.L  #'S0??',(A6)+  START OF S RECORD
01:00200E74 2CFC30303030    	  2044:          MOVE.L  #'0000',(A6)+  DUMMY ADDRESS
01:00200E7A B5C5            	  2045: MORES0   CMP.L   D5,A2          SEE IF AT END OF TEXT
01:00200E7C 6C0C            	  2046:          BGE.S   ENDS0          WHERE TO GO WHEN ALL CHARACTERS USED
01:00200E7E 5286            	  2047:          ADDQ.L  #1,D6          ANOTHER BYTE
                            	  2048: 
01:00200E80 101A            	  2049:          MOVE.B  (A2)+,D0       GET ANOTHER BYTE OF TEXT
                            	  2050: 
01:00200E82 D880            	  2051:          ADD.L   D0,D4          FOR CHECKSUM
01:00200E84 61000F24        	  2052:          BSR     PNT2HX         PUT IT IN BUFFER
01:00200E88 60F0            	  2053:          BRA     MORES0
                            	  2054: ENDS0    DS      0
                            	  2055: 
01:00200E8A 61000084        	  2056:          BSR     PNTSREC        GO PRINT THE 'S' RECORD
01:00200E8E 344B            	  2057:          MOVE    A3,A2          A2 WILL SCAN BETWEEN A3-A4
                            	  2058: 
                            	  2059: * DO ANOTHER 'S' RECORD
01:00200E90 610011F6        	  2060: MORESP   BSR     FIXBUF         A5,A6=#BUFFER
01:00200E94 7800            	  2061:          CLR.L   D4             CLEAR CHECKSUM REGISTER
01:00200E96 200B            	  2062:          MOVE.L  A3,D0          READY TO PRINT ADDRESS
01:00200E98 220B            	  2063:          MOVE.L  A3,D1          GET READY TO AND ADDRESS
01:00200E9A 7610            	  2064:          MOVEQ   #$10,D3        MAXIMUM BYTES ON S REC LINE
01:00200E9C D283            	  2065:          ADD.L   D3,D1          INSURE END OF LINE ADDRESS IS MAX
01:00200E9E 028100FF0000    	  2066:          ANDI.L  #$FF0000,D1    SEE IF 3 BYTE ADDRESS
01:00200EA4 6618            	  2067:          BNE.S   S2REC          WHERE TO GO IF 3 BYTES NEEDED
01:00200EA6 2CFC53313F3F    	  2068:          MOVE.L  #'S1??',(A6)+  PUSH
01:00200EAC 300B            	  2069:          MOVE    A3,D0          SET UP TO PRINT 2 BYTE ADDRESS
01:00200EAE 61000EF2        	  2070:          BSR     PNT4HX         PRINT 4 HEX CHAR ADDRESS
01:00200EB2 7C02            	  2071:          MOVEQ   #2,D6          BYTE COUNT
01:00200EB4 300B            	  2072:          MOVE.W  A3,D0          FIX UP CHECKSUM
01:00200EB6 D800            	  2073:          ADD.B   D0,D4          LOW BYTE
01:00200EB8 E040            	  2074:          ASR     #8,D0          SHIFT IT OVER
01:00200EBA D800            	  2075:          ADD.B   D0,D4          HIGH BYTE OF ADDRESS
01:00200EBC 6018            	  2076:          BRA.S   PNCA3          GO PUNCH A LINE
                            	  2077: 
01:00200EBE 2CFC53323F3F    	  2078: S2REC    MOVE.L  #'S2??',(A6)+  PUSH
01:00200EC4 61000ED6        	  2079:          BSR     PNT6HX         PRINT 6 HEX CHAR ADDRESS
01:00200EC8 7C03            	  2080:          MOVEQ   #3,D6          BYTE COUNT
01:00200ECA 200B            	  2081:          MOVE.L  A3,D0          FIX UP CHECKSUM
01:00200ECC D800            	  2082:          ADD.B   D0,D4          LOW BYTE
01:00200ECE E040            	  2083:          ASR     #8,D0          SHIFT IT OVER
01:00200ED0 D800            	  2084:          ADD.B   D0,D4          MIDDLE BYTE
01:00200ED2 4840            	  2085:          SWAP    D0             SET UP FOR HIGH BYTE
01:00200ED4 D800            	  2086:          ADD.B   D0,D4          ADD HIGH BYTE
01:00200ED6 B7CC            	  2087: PNCA3    CMP.L   A4,A3          SEE IF AT ENDING ADDRESS
                            	  2088: 
                            	  2089: * END OF FILE
01:00200ED8 6F1C            	  2090:          BLE.S   A3OUT          WHERE TO GO IF BELOW OR AT END ADDRESS
01:00200EDA 612E            	  2091:          BSR.S   PNTSRECX       END IT BY PRINTING LAST RECORD
01:00200EDC 610011AA        	  2092:          BSR     FIXBUF         A5,A6=#BUFFER
01:00200EE0 7800            	  2093:          CLR.L   D4             CLEAR THE CHECKSUM
01:00200EE2 2CFC53393F3F    	  2094:          MOVE.L  #'S9??',(A6)+  MOVE TO PRINT BUFFER
01:00200EE8 2CFC30303030    	  2095:          MOVE.L  #'0000',(A6)+  MOVE '0000' TO PRIT BUFFER
01:00200EEE 7C02            	  2096:          MOVEQ   #2,D6          BYTE COUNT
01:00200EF0 611E            	  2097:          BSR.S   PNTSREC        PRINT 'S9' END-OF-FILE RECORD
01:00200EF2 6000F73A        	  2098:          BRA     MACSBUG        REENTER MACSBUG
                            	  2099: 
01:00200EF6 101B            	  2100: A3OUT    MOVE.B  (A3)+,D0       GRAB THE BYTE FROM MEMORY
01:00200EF8 D840            	  2101:          ADD.W   D0,D4          ADD TO CHECKSUM
01:00200EFA 5246            	  2102:          ADDQ.W  #1,D6          BUMP THE BYTE COUNT
01:00200EFC 5289            	  2103:          ADDQ.L  #1,A1          ADD TO COUNT OF BYTES PROCESSED
01:00200EFE 61000EAA        	  2104:          BSR     PNT2HX         PUT THE HEX IN THE PRINT BUFFER
01:00200F02 5383            	  2105:          SUBQ.L  #1,D3          COUNT DOWN CHAR TO GO IN LINE
01:00200F04 66D0            	  2106:          BNE     PNCA3
01:00200F06 6108            	  2107:          BSR.S   PNTSREC        END OF LINE-PUNCH IT
01:00200F08 6086            	  2108:          BRA     MORESP         GO FIX UP NEXT LINE
                            	  2109: 
                            	  2110: * FIX UP & PRINT THE 'S' RECORD/LINE
                            	  2111: 
01:00200F0A B2FC0000        	  2112: PNTSRECX CMP.W   #0,A1          SEE IF ANY CHAR MOVED
01:00200F0E 6720            	  2113:          BEQ.S   PNTSRTS        NO CHAR MOVED
                            	  2114: 
01:00200F10 5246            	  2115: PNTSREC  ADD     #1,D6          ONE MORE BYTE (CHECKSUM)
01:00200F12 D846            	  2116:          ADD.W   D6,D4          ADD BYTE COUNT TO CHECKSUM
01:00200F14 4604            	  2117:          NOT.B   D4             COMPLIMENT THE CHECKSUM
01:00200F16 2004            	  2118:          MOVE.L  D4,D0          READY FOR PRINT-HEX
01:00200F18 61000E90        	  2119:          BSR     PNT2HX         PUT CHECKSUM IN RECORD
01:00200F1C 2E0E            	  2120:          MOVE.L  A6,D7          SAVE FOR THE MOMENT
01:00200F1E 2C4D            	  2121:          MOVE.L  A5,A6          START OF BUFFER
01:00200F20 548E            	  2122:          ADDQ.L  #2,A6          BYPASS RECORD TYPE (4 CHAR)
01:00200F22 1006            	  2123:          MOVE.B  D6,D0          SET UP BYTE COUNT FOR PNTHEX ROUTINE
01:00200F24 61000E84        	  2124:          BSR     PNT2HX         PUT THE BYTE COUNT IN THE PRINT BUFFER
01:00200F28 2C47            	  2125:          MOVE.L  D7,A6          RESTORE REAL END OF BUFFER
01:00200F2A 610010B6        	  2126:          BSR     OUT1CR         DO THE ACTUAL DISPLAY/PUNCH
01:00200F2E 93C9            	  2127:          SUB.L   A1,A1          CLEAR COUNTER OF BYTES PROCESSED
01:00200F30 4E75            	  2128: PNTSRTS  RTS
                            	  2129: 
                            	  2130: 
                            	  2131: 
                            	  2132: 
                            	  2133: *-------------------------------------------------------------------------
                            	  2134: * File GETA      GET ADDRESS Subroutine                           12/01/81
                            	  2135: 
                            	  2136: * GET ADDRESS
                            	  2137: *  ENTER (A5) POINTER START OF BUFFER
                            	  2138: *        (A6) POINTER END OF BUFFER
                            	  2139: *
                            	  2140: *  RETURN:  D0 = ADDRESS
                            	  2141: 
                            	  2142: *        (A6) POINTER END OF BUFFER
                            	  2143: *
                            	  2144: *  RETURN:  D0 = ADDRESS
                            	  2145: 
                            	  2146: 
                            	  2147: * FORMATS HANDLED:
                            	  2148: *  1.  NUMBER        DEFAULTS TO HEX
                            	  2149: *  2.  $NUMBER       HEX
                            	  2150: *  3.  &NUMBER       DECIMAL
                            	  2151: *  4.  (A@)
                            	  2152: *  5.  NUMBER(A@)
                            	  2153: *  6.  (A@,D@)
                            	  2154: *  7.  NUMBER(A@,D@)
                            	  2155: *  8.  [NUMBER]      MEMORY INDIRECT
                            	  2156: *
                            	  2157: *   FORMATS 1,2,3,8  ADD OFFSET R0 UNLESS R1 - R7 SPECIFIED
                            	  2158: 
                            	  2159: 
                            	  2160: * WORK REGISTERS
                            	  2161: *  D4    VALUE BEING BUILT
                            	  2162: *
                            	  2163: *  D5    FLAG REGISTER
                            	  2164: *     = 8000XXXX  R@ GIVEN (GARO)
                            	  2165: *     = XXXX80XX  [  GIVEN (GALB)
                            	  2166: *     = XXXXXX80  (  GIVEN (GALP)
                            	  2167: *
                            	  2168: *  D6    FLAG REGISTER
                            	  2169: *     = 8000XXXX  A@ GIVEN           (GAAVF)
                            	  2170: *     = XXXX80XX  NEED PLUS OR MINUS (GANPM)
                            	  2171: *     = XXXXXX2B  +  PLUS GIVEN      (GAPMS)
                            	  2172: *             2D  -  MINUS GIVEN
                            	  2173: 
01:00200F32 48E70E80        	  2174: GETA     MOVEM.L D4-D6/A0,-(A7) SAVE SOME REGISTERS
01:00200F36 7800            	  2175:          CLR.L   D4             VALUE BEING BUILT
01:00200F38 7A00            	  2176:          CLR.L   D5             FLAG REG
01:00200F3A 7C00            	  2177:          CLR.L   D6             FLAG REG
                            	  2178: 
01:00200F3C 101D            	  2179:          MOVE.B  (A5)+,D0       GET BYTE
01:00200F3E BDCD            	  2180:          CMP.L   A5,A6
01:00200F40 6500010C        	  2181:          BCS     GAP191         END OF BUFFER
                            	  2182: 
01:00200F44 0C00005B        	  2183:          CMPI.B  #'[',D0
01:00200F48 660C            	  2184:          BNE.S   GAP113
                            	  2185: 
                            	  2186: *  [  SET INDIRECT
                            	  2187: 
01:00200F4A 00458000        	  2188:          ORI.W   #$8000,D5      SET LEFT BRACKET (GALB)
                            	  2189: 
01:00200F4E 101D            	  2190: GAP111   MOVE.B  (A5)+,D0       GET BYTE
01:00200F50 BDCD            	  2191:          CMP.L   A5,A6
01:00200F52 650000FA        	  2192:          BCS     GAP191         END OF BUFFER
                            	  2193: GAP113   DS      0
                            	  2194: 
01:00200F56 0C00002B        	  2195:          CMPI.B  #'+',D0
01:00200F5A 675E            	  2196:          BEQ.S   GAP121         PLUS SIGN
                            	  2197: 
01:00200F5C 0C00002D        	  2198:          CMPI.B  #'-',D0
01:00200F60 6758            	  2199:          BEQ.S   GAP121         MINUS SIGN
                            	  2200: 
01:00200F62 0C00005D        	  2201:          CMPI.B  #']',D0
01:00200F66 675E            	  2202:          BEQ.S   GAP131         RIGHT BRACKET (INDIRECT)
                            	  2203: 
01:00200F68 0C000028        	  2204:          CMPI.B  #'(',D0
01:00200F6C 676C            	  2205:          BEQ.S   GAP141         LEFT PARIN
                            	  2206: 
01:00200F6E 0C00002C        	  2207:          CMPI.B  #',',D0
01:00200F72 67000092        	  2208:          BEQ     GAP161         COMMA
                            	  2209: 
01:00200F76 0C000029        	  2210:          CMPI.B  #')',D0
01:00200F7A 670000CC        	  2211:          BEQ     GAP181         RIGHT PARIN
                            	  2212: 
01:00200F7E 0C00003B        	  2213:          CMPI.B  #';',D0        "SEMI-COLON"
01:00200F82 670000CA        	  2214:          BEQ     GAP191         TERMINATE
                            	  2215: 
01:00200F86 0C000020        	  2216:          CMPI.B  #BLANK,D0      "SPACE"
01:00200F8A 670000C2        	  2217:          BEQ     GAP191         TERMINATE
                            	  2218: 
01:00200F8E 4A46            	  2219:          TST.W   D6             (GANPM)
01:00200F90 6B70            	  2220:          BMI.S   GAE            NEEDS PLUS OR MINUS
                            	  2221: 
01:00200F92 0C000052        	  2222:          CMPI.B  #'R',D0
01:00200F96 67000094        	  2223:          BEQ     GAP171         RELATIVE OFFSET
                            	  2224: 
01:00200F9A 4A06            	  2225:          TST.B   D6             (GALP)
01:00200F9C 6B64            	  2226:          BMI.S   GAE            (...   NUMBER NOT ALLOWED
                            	  2227: 
                            	  2228: * NONE OF ABOVE ASSUME NUMERIC VALUE
01:00200F9E 538D            	  2229:          SUBQ.L  #1,A5          ADJUST (A5) TO FIRST CHAR
01:00200FA0 7000            	  2230:          CLR.L   D0
01:00200FA2 61000F44        	  2231:          BSR     GETNUMA
                            	  2232: 
01:00200FA6 0C06002D        	  2233:          CMPI.B  #'-',D6        (GAPMS)
01:00200FAA 6704            	  2234:          BEQ.S   GAP118         MINUS SIGN
                            	  2235: 
01:00200FAC D880            	  2236:          ADD.L   D0,D4          PLUS SIGN
01:00200FAE 6002            	  2237:          BRA.S   GAP119
                            	  2238: 
01:00200FB0 9880            	  2239: GAP118   SUB.L   D0,D4
                            	  2240: 
01:00200FB2 4206            	  2241: GAP119   CLR.B   D6             (GAPMS)  RESET PLUS MINUS FLAG
01:00200FB4 00468000        	  2242:          ORI.W   #$8000,D6      (GANPM)  SET NEED PLUS MINUS
01:00200FB8 6094            	  2243: GAP111S  BRA     GAP111
                            	  2244: 
                            	  2245: * (*) (-) SET ARITHMETIC OPERATOR
                            	  2246: 
01:00200FBA 4A06            	  2247: GAP121   TST.B   D6             (GAPMS)
01:00200FBC 6644            	  2248:          BNE.S   GAE            MULTI OPERATORS
01:00200FBE 1C00            	  2249:          MOVE.B  D0,D6          (GAPMS)
01:00200FC0 024600FF        	  2250:          ANDI.W  #$00FF,D6      RESET (GANPM) NEED PLUS MINUS
01:00200FC4 60F2            	  2251:          BRA     GAP111S
                            	  2252: 
                            	  2253: *  ]  CLOSE INDIRECT
                            	  2254: 
01:00200FC6 4A45            	  2255: GAP131   TST.W   D5             (GALB)
01:00200FC8 6A38            	  2256:          BPL.S   GAE            [ MISSING
                            	  2257: 
                            	  2258: * IF NO R@ GIVEN ADD R0
01:00200FCA 4A85            	  2259:          TST.L   D5             (GARO)
01:00200FCC 6B04            	  2260:          BMI.S   GAP135         R@ GIVEN
01:00200FCE D8B8044C        	  2261:          ADD.L   OFFSET,D4      NO R@ GIVEN; ADD R0
                            	  2262: GAP135   DS      0
                            	  2263: 
01:00200FD2 2044            	  2264:          MOVE.L  D4,A0
01:00200FD4 2010            	  2265:          MOVE.L  (A0),D0
01:00200FD6 6000008A        	  2266:          BRA     GAP199
                            	  2267: 
                            	  2268: *  (  DO PARIN PAIR
                            	  2269: 
01:00200FDA 4A05            	  2270: GAP141   TST.B   D5             (GALP)
01:00200FDC 6B24            	  2271:          BMI.S   GAE            MULTI (
01:00200FDE 4A85            	  2272:          TST.L   D5             (GARO)
01:00200FE0 6B20            	  2273:          BMI.S   GAE            R@ NOT ALLOWED WITH (..)
01:00200FE2 00050080        	  2274:          ORI.B   #$80,D5        (GALP) SET LEFT PAREN
                            	  2275: 
                            	  2276: * LEFT PARIN SET; MUST BE A@ NEXT
01:00200FE6 101D            	  2277:          MOVE.B  (A5)+,D0       GET BYTE
01:00200FE8 BDCD            	  2278:          CMP.L   A5,A6
01:00200FEA 6516            	  2279:          BCS.S   GAE
01:00200FEC 0C000041        	  2280:          CMPI.B  #'A',D0
01:00200FF0 6610            	  2281:          BNE.S   GAE            NOT A-REG
01:00200FF2 41F80428        	  2282:          LEA     REGS+32,A0
01:00200FF6 6170            	  2283:          BSR.S   GASRGN         GET VALUE IN A@
01:00200FF8 D881            	  2284:          ADD.L   D1,D4
01:00200FFA 008680000000    	  2285:          ORI.L   #$80000000,D6  (GAAVF) A-REG VALUE FLAG
01:00201000 60B6            	  2286:          BRA     GAP111S
                            	  2287: 
01:00201002 6000F4AA        	  2288: GAE      BRA     SYNTAX
                            	  2289: 
                            	  2290: *  COMMA  A-REG or
                            	  2291: *  COMMA  D-REG REQUIRED
                            	  2292: 
01:00201006 4A86            	  2293: GAP161   TST.L   D6             (GAAVF)
01:00201008 6AF8            	  2294:          BPL     GAE            NO A-REG SPECIFIED
01:0020100A 101D            	  2295:          MOVE.B  (A5)+,D0       GET BYTE
01:0020100C BDCD            	  2296:          CMP.L   A5,A6
01:0020100E 65F2            	  2297:          BCS     GAE
01:00201010 0C000041        	  2298:          CMPI.B  #'A',D0
01:00201014 6606            	  2299:          BNE.S   GAP163
01:00201016 41F80428        	  2300:          LEA     REGS+32,A0     GET VALUE IN A@
01:0020101A 600A            	  2301:          BRA.S   GAP165
01:0020101C 0C000044        	  2302: GAP163   CMPI.B  #'D',D0
01:00201020 66E0            	  2303:          BNE     GAE            NOT D-REG
01:00201022 41F80408        	  2304:          LEA     REGS,A0        GET VALUE IN D@
01:00201026 6140            	  2305: GAP165   BSR.S   GASRGN
01:00201028 D881            	  2306:          ADD.L   D1,D4
01:0020102A 608C            	  2307:          BRA     GAP111S
                            	  2308: 
                            	  2309: *  R@  OFFSET
                            	  2310: 
01:0020102C 0C06002B        	  2311: GAP171   CMPI.B  #'+',D6        (GAPMS)
01:00201030 66D0            	  2312:          BNE     GAE            ONLY + ALLOWED
                            	  2313: 
                            	  2314: * ONLY ONE R@ ALLOWED
                            	  2315: 
01:00201032 4A85            	  2316:          TST.L   D5             (GARO)
01:00201034 6BCC            	  2317:          BMI     GAE            MULIT R@
01:00201036 008580000000    	  2318:          ORI.L   #$80000000,D5  SET R@ GIVEN (GARO)
                            	  2319: 
01:0020103C 41F8044C        	  2320:          LEA     OFFSET,A0
01:00201040 6126            	  2321:          BSR.S   GASRGN         GET VALUE IN R@
01:00201042 D881            	  2322:          ADD.L   D1,D4
01:00201044 6000FF6C        	  2323:          BRA     GAP119
                            	  2324: 
                            	  2325: *  )  CLOSE THE WORLD
                            	  2326: 
01:00201048 4A86            	  2327: GAP181   TST.L   D6             (GAAVF)
01:0020104A 6AB6            	  2328:          BPL     GAE            NO (
01:0020104C 6012            	  2329:          BRA.S   GAP197
                            	  2330: 
                            	  2331: *  SPACE  TERMINATOR
                            	  2332: 
01:0020104E 4A45            	  2333: GAP191   TST.W   D5             (GALB)
01:00201050 6BB0            	  2334:          BMI     GAE            [ WITHOUT ]
01:00201052 4A05            	  2335:          TST.B   D5             (GALP)
01:00201054 6BAC            	  2336:          BMI     GAE            ( WITHOUT )
01:00201056 538D            	  2337:          SUBQ.L  #1,A5          ADJUST CHAR POINTER
                            	  2338: 
                            	  2339: * IF NO R@ GIVEN ADD R0
                            	  2340: 
01:00201058 4A85            	  2341:          TST.L   D5             (GARO)
01:0020105A 6B04            	  2342:          BMI.S   GAP197         R@ GIVEN
01:0020105C D8B8044C        	  2343:          ADD.L   OFFSET,D4
01:00201060 2004            	  2344: GAP197   MOVE.L  D4,D0
                            	  2345: 
01:00201062 4CDF0170        	  2346: GAP199   MOVEM.L (A7)+,D4-D6/A0
01:00201066 4E75            	  2347:          RTS
                            	  2348: 
                            	  2349: * GET NEXT NUMBER
                            	  2350: *  A0 = POINTER TO TABLE OF VALUES
                            	  2351: *  D1 = VALUE ON RETURN
                            	  2352: 
01:00201068 7000            	  2353: GASRGN   CLR.L   D0
01:0020106A 101D            	  2354:          MOVE.B  (A5)+,D0       GET BYTE
01:0020106C BDCD            	  2355:          CMP.L   A5,A6
01:0020106E 6592            	  2356:          BCS     GAE
01:00201070 04000030        	  2357:          SUBI.B  #'0',D0        ADJUST TO ZERO
01:00201074 0C000007        	  2358:          CMPI.B  #7,D0
01:00201078 6288            	  2359:          BHI     GAE            NOT 0 - 7
01:0020107A C0FC0004        	  2360:          MULU    #4,D0          4 * OFFSET
01:0020107E 22300000        	  2361:          MOVE.L  (A0,D0),D1
01:00201082 4E75            	  2362:          RTS
                            	  2363: 
                            	  2364: 
                            	  2365: 
                            	  2366: 
                            	  2367: *-------------------------------------------------------------------------
                            	  2368: * File H         Register save,Trace, Breakpoint                  03/03/82
                            	  2369: 
                            	  2370: *       SAVE ALL REGISTERS ROUTINE-JMP [TEMP] BACK
                            	  2371: *          USUALLY CALLED BY THE MACRO "SAVEREGS"
                            	  2372: 
                            	  2373: SAVE     DS      0
01:00201084 4FF80444        	  2374:          LEA     REGA7,A7       WHERE TO START STORING
01:00201088 48E7FFFE        	  2375:          MOVEM.L D0-D7/A0-A6,-(A7)  SAVE REGISTERS
                            	  2376: 
01:0020108C 4FF8078A        	  2377:          LEA     SYSTACK+4,A7   SET UP STRETCHED VERSAUG STACK
                            	  2378: 
01:00201090 20780444        	  2379:          MOVE.L  REGA7,A0       A0 = TARGETS SUPERVISOR STACK POINTER
01:00201094 31D80406        	  2380:          MOVE.W  (A0)+,REGSR+2  GET TARGETS SR
                            	  2381: 
01:00201098 21D80400        	  2382:          MOVE.L  (A0)+,REGPC    GET TARGETS PC
                            	  2383: 
01:0020109C 21C80444        	  2384:          MOVE.L  A0,REGA7       WHERE TARGET STACK REALLY POINTS
                            	  2385: 
01:002010A0 4E69            	  2386:          MOVE.L  USP,A1         GET USERS STACK POINTER
01:002010A2 21C90448        	  2387:          MOVE.L  A1,REGUS       SAVE IT FOR DISPLAY ETC
                            	  2388: 
01:002010A6 20380400        	  2389:          MOVE.L  REGPC,D0       GET PROGRAM COUNTER
01:002010AA 598F            	  2390:          SUBQ.L  #4,A7          SET REAL MACSBUG STACK
01:002010AC 2F3804D6        	  2391:          MOVE.L  TEMP,-(A7)     PUT RETURN ADDRESS ON STACK
01:002010B0 4E75            	  2392:          RTS                    RETURN TO SENDER
                            	  2393: 
                            	  2394: *
                            	  2395: *     ***TRACE***  TRACE ENTRY POINT
                            	  2396: *       ENTER FROM VECTOR 9  (LOCATION 24) FOR
                            	  2397: *
                            	  2398: 
                            	  2399: * REGISTER USAGE
                            	  2400: *  A0 = ADDRESS OF BREAKPOINT ADDRESS
                            	  2401: *  A2 = ADDRESS OF BREAKPOINT COUNTS
                            	  2402: *  D1 = PC
                            	  2403: *  D5 = TRACECNT
                            	  2404: *  D7 = BKPT COUNT
                            	  2405: 
01:002010B2 46FC2700        	  2406: TRACE    MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
                            	  2407:          SAVEREGS
01:002010B6 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002010BA 4FFA0008        	     2M          LEA     SV_000043(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002010BE 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002010C2 60C0            	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000043     DS      0
                            	  2408: 
                            	  2409: * IF PC POINTS TO 'TRACE'; DOUBLE EVENT OCCURED
                            	  2410: *  CLEAR LAST EVENT BY IGNORING
                            	  2411: 
01:002010C4 0CB8002004000400	  2412:          CMPI.L  #V2,REGPC
                            	  2413: 
01:002010CC 6610            	  2414:          BNE.S   TRACE16
                            	  2415: 
01:002010CE 2A780444        	  2416:          MOVE.L  REGA7,A5       TRIM LAST EVENT FROM STACK
01:002010D2 31DD0406        	  2417:          MOVE.W  (A5)+,REGSR+2  *MOVE VALUES FROM STACK TO
01:002010D6 21DD0400        	  2418:          MOVE.L  (A5)+,REGPC    *PSUEDO SR, PC,
01:002010DA 21CD0444        	  2419:          MOVE.L  A5,REGA7       *REFLECT ADJUSTMENTS IN PSUEDO STACK
01:002010DE 02787FFF0406    	  2420: TRACE16  ANDI.W  #$7FFF,REGSR+2 RESET "T" (TRACE) BIT
                            	  2421: 
                            	  2422: 
01:002010E4 2A3804DA        	  2423:          MOVE.L  TRACECNT,D5
01:002010E8 6B54            	  2424:          BMI.S   TRACE39        EXECUTING ONE-INSTRUCTION
01:002010EA 67000C4C        	  2425:          BEQ     ABORT335       NOT TRACEING
                            	  2426: 
                            	  2427: *   MAKE SURE WE ARE NOT TRACING OURSELVES
01:002010EE 22380400        	  2428:          MOVE.L  REGPC,D1       GET PC
01:002010F2 41FAEF0C        	  2429:          LEA.L   FIRST(PC),A0
01:002010F6 B288            	  2430:          CMP.L   A0,D1
01:002010F8 6B10            	  2431:          BMI.S   TISOK          TRACING BELOW OURSELVES
01:002010FA 41FA32E4        	  2432:          LEA     LAST(PC),A0
01:002010FE B288            	  2433:          CMP.L   A0,D1
01:00201100 6208            	  2434:          BHI.S   TISOK          TRACING ABOVE OURSELVES
01:00201102 4BFA015E        	  2435:          LEA     MSG020(PC),A5  TRACING OURSELVES
01:00201106 60000128        	  2436:          BRA     CHKBP4
                            	  2437: TISOK
                            	  2438: 
01:0020110A 41F80470        	  2439:          LEA     BPADD,A0
01:0020110E 45F80494        	  2440:          LEA     BPCNT,A2
01:00201112 7E09            	  2441:          MOVEQ   #9,D7          9TH BP IS "UNTILL" FEATURE
                            	  2442: 
01:00201114 B290            	  2443: TRACE01  CMP.L   (A0),D1        SEE IF PC MATCHES ADDRESS IN TABLE
01:00201116 6610            	  2444:          BNE.S   TRACE08
01:00201118 2012            	  2445:          MOVE.L  (A2),D0        GET COUNT
01:0020111A 67000110        	  2446:          BEQ     CHKBP3         COUNT ZERO
01:0020111E 5380            	  2447:          SUBQ.L  #1,D0          COUNT DOWN
01:00201120 2480            	  2448:          MOVE.L  D0,(A2)        SAVE IT
01:00201122 67000108        	  2449:          BEQ     CHKBP3         COUNT WENT TO ZERO
01:00201126 6008            	  2450:          BRA.S   TRACE03
                            	  2451: 
01:00201128 5888            	  2452: TRACE08  ADDQ.L  #4,A0          BUMP TABLE POINTER
01:0020112A 588A            	  2453:          ADDQ.L  #4,A2          BUMP COUNT TABLE POINTER
01:0020112C 5387            	  2454:          SUBQ.L  #1,D7          LOOP AROUND
01:0020112E 66E4            	  2455:          BNE     TRACE01
                            	  2456: 
01:00201130 6100FBCA        	  2457: TRACE03  BSR     TDISPLY        DO TRACE DISPLAY
01:00201134 53B804DA        	  2458:          SUBQ.L  #1,TRACECNT    TRACE COUNT
01:00201138 6700F4F4        	  2459:          BEQ     MACSBUG        STOP WHEN ZERO
01:0020113C 6008            	  2460:          BRA.S   UNTRACE        CONTINUE WITH TRACE
                            	  2461: 
                            	  2462: 
                            	  2463: * END UP HERE AFTER BREAKPOINTING ONE INSTRUCTION
                            	  2464: * -- PUT BP BACK IN AND CONTINUE TO RUN
                            	  2465: 
01:0020113E 42B804DA        	  2466: TRACE39  CLR.L   TRACECNT
01:00201142 613A            	  2467:          BSR.S   SWAPIN         PUT BP INTO USER'S MEMORY
01:00201144 600E            	  2468:          BRA.S   UNSTACK        CONTINUE TO RUN
                            	  2469: 
                            	  2470: 
01:00201146 007880000406    	  2471: UNTRACE  ORI.W   #$8000,REGSR+2 SET UP TRACE BIT!
                            	  2472:          ADDR2MEM TRACE,AV9     TAKE TRACE VECTOR
01:0020114C 487AFF64        	     1M          PEA     TRACE(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00201150 21DF0024        	     2M          MOVE.L  (A7)+,AV9       INDEPENDANT = TO "MOVE.L #TRACE,AV9"
                            	  2473: 
01:00201154 22780448        	  2474: UNSTACK  MOVE.L  REGUS,A1
01:00201158 4E61            	  2475:          MOVE.L  A1,USP         US = TARGET'S USER STACK
01:0020115A 24780400        	  2476:          MOVE.L  REGPC,A2       A2 = TARGET'S PC
                            	  2477: 
                            	  2478: 
                            	  2479:          DS      0              INSURE MEMORY AT LOCATION OF PC
01:0020115E 3012            	  2480:          MOVE.W  (A2),D0        * ADDR TRAP ERROR * IF NO MEMORY
                            	  2481: 
01:00201160 22780444        	  2482:          MOVE.L  REGA7,A1       A1 = TARGET SYSTEM STACK (SS)
                            	  2483: 
                            	  2484:          DS      0              INSURE MEMORY AT TARGET'S STACK
01:00201164 230A            	  2485:          MOVE.L  A2,-(A1)       MOVE PC ONTO TARGET'S STACK
                            	  2486: 
01:00201166 30380406        	  2487:          MOVE.W  REGSR+2,D0
01:0020116A 3300            	  2488:          MOVE.W  D0,-(A1)       SR ONTO TARGET'S STACK
                            	  2489: 
01:0020116C 21C904D6        	  2490:          MOVE.L  A1,TEMP        TEMP = TARGETS SS
                            	  2491: 
01:00201170 4FF80408        	  2492:          LEA     REGS,A7        A7 = POINTER TO PSUEDO REGISTERS
01:00201174 4CDF7FFF        	  2493:          MOVEM.L (A7)+,D0-D7/A0-A6  ARM MOST OF TARGET REGISTERS
01:00201178 2E7804D6        	  2494:          MOVE.L  TEMP,A7        SS = TARGET'S
                            	  2495: 
01:0020117C 4E73            	  2496:          RTE                    GO BACK TO THE USER
                            	  2497: 
                            	  2498: 
01:0020117E 6114            	  2499: SWAPIN   BSR.S   SWAPOUT        MAKE SURE THEY ARE ALL OUT
                            	  2500: 
01:00201180 21F8001004D2    	  2501:          MOVE.L  AV4,SAVEAV4    SAVE VECTOR (WHOM EVER'S IT WAS)
01:00201186 4DFA0054        	  2502:          LEA     CHKBP(PC),A6
01:0020118A 21CE0010        	  2503:          MOVE.L  A6,AV4         REPLACE IT WITH THE "CHKBP" RTN
01:0020118E 4DFA002A        	  2504:          LEA     SWAPIN1(PC),A6 A6 = ROUTINE ADDRESS
01:00201192 6010            	  2505:          BRA.S   SWAP
                            	  2506: 
01:00201194 4A7804E0        	  2507: SWAPOUT  TST.W   BPSTATUS        SEE IF OUT ALREADY
01:00201198 6740            	  2508:          BEQ.S   SWAPEND         YES...DONE
01:0020119A 21F804D20010    	  2509:          MOVE.L  SAVEAV4,AV4     NO....REPLACE THE VECTOR
                            	  2510: 
01:002011A0 4DFA0028        	  2511:          LEA     SWAPOUT1(PC),A6 A6 = ROUTINE ADDRESS
01:002011A4 41F80470        	  2512: SWAP     LEA     BPADD,A0       A0 = ADDRESS OF TABLE
01:002011A8 45F80494        	  2513:          LEA     BPCNT,A2       A2 = ADDRESS OF COUNTS
01:002011AC 7E09            	  2514:          MOVEQ   #9,D7          DO 9 BP
01:002011AE 47F804B8        	  2515:          LEA     BPDATA,A3      CONTENT TABLE
                            	  2516: 
01:002011B2 2850            	  2517: SWAP1    MOVE.L  (A0),A4        GET POSSIBLE ADDDRESS
01:002011B4 4A90            	  2518:          TST.L   (A0)           IS POSSIBLE ADDRESS ZERO
01:002011B6 671A            	  2519:          BEQ.S   SWAP99         ZERO MEANS NO BP DEFINED
01:002011B8 4ED6            	  2520:          JMP     (A6)           GO TO RIGHT ROUTINE
                            	  2521: 
                            	  2522: SWAPIN1
01:002011BA 3014            	  2523:          MOVE.W  (A4),D0        USER'S PROGRAM GOES INTO TABLE
                            	  2524: 
01:002011BC 3680            	  2525:          MOVE.W  D0,(A3)
01:002011BE 38BC4AFB        	  2526:          MOVE.W  #BKPOINT,(A4)  PUT BREAKPOINT IN
                            	  2527: 
01:002011C2 31FC000104E0    	  2528:          MOVE.W  #1,BPSTATUS    FLAG AS BP IN
01:002011C8 6008            	  2529:          BRA.S   SWAP99
                            	  2530: 
01:002011CA 3013            	  2531: SWAPOUT1 MOVE.W  (A3),D0        GET CONTENTS FROM TABLE
01:002011CC 3880            	  2532:          MOVE.W  D0,(A4)        PUT CONTENTS BACK INTO PROGRAM
                            	  2533: 
01:002011CE 427804E0        	  2534:          CLR.W   BPSTATUS       FLAG AS BREAKPOINTS OUT
01:002011D2 5888            	  2535: SWAP99   ADDQ.L  #4,A0          BUMP ADDRESS TABLE POINTER
01:002011D4 548B            	  2536:          ADDQ.L  #2,A3          BUMP CONTENT TABLE POINTER
01:002011D6 5387            	  2537:          SUBQ.L  #1,D7
01:002011D8 66D8            	  2538:          BNE     SWAP1
01:002011DA 4E75            	  2539: SWAPEND  RTS
                            	  2540: 
                            	  2541: *  ILLEGAL INSTRUCTION ENTRY POINT
                            	  2542: *   BREAKPOINT TEST
                            	  2543: *
01:002011DC 46FC2700        	  2544: CHKBP    MOVE.W  #$2700,SR      MASK OF INT.
                            	  2545:          SAVEREGS
01:002011E0 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002011E4 4FFA000A        	     2M          LEA     SV_000045(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002011E8 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002011EC 6000FE96        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000045     DS      0
01:002011F0 20380400        	  2546:          MOVE.L  REGPC,D0       GET PROGRAM COUNTER TO COMPARE
01:002011F4 2A40            	  2547:          MOVE.L  D0,A5          A5 = TARGET PC
01:002011F6 3215            	  2548:          MOVE.W  (A5),D1        SEE WHAT OP CODE WAS XEQ
                            	  2549: 
01:002011F8 619A            	  2550:          BSR     SWAPOUT        TAKE BREAKPOINTS OUT
                            	  2551: 
01:002011FA 0C414AFB        	  2552:          CMPI.W  #BKPOINT,D1    USED FOR BP
01:002011FE 6616            	  2553:          BNE.S   CHKBP11        NOT AT BREAKPOINT
                            	  2554: 
01:00201200 41F80470        	  2555:          LEA     BPADD,A0       A0 = ADDRESS OF BP ADDRESSES
01:00201204 45F80494        	  2556:          LEA     BPCNT,A2       A2 = ADDRESS OF BP COUNTS
01:00201208 7E09            	  2557:          MOVEQ   #9,D7          D7 = LOOP COUNT
                            	  2558: 
01:0020120A BBD0            	  2559: CHKBP1   CMP.L   (A0),A5        SEE IF WE ARE THERE
01:0020120C 6712            	  2560:          BEQ.S   CHKBP2         AT BREAKPOINT; AT AN ADDRESS
                            	  2561: 
01:0020120E 5888            	  2562:          ADDQ.L  #4,A0          BUMP BOTH POINTERS
01:00201210 588A            	  2563:          ADDQ.L  #4,A2
01:00201212 5387            	  2564:          SUBQ.L  #1,D7
01:00201214 66F4            	  2565:          BNE     CHKBP1
                            	  2566: 
                            	  2567: * IS NOT A BREAKPOINT; ASSUME ILLEGAL INSTRUCTION
01:00201216 4BFA0028        	  2568: CHKBP11  LEA     MSG009(PC),A5  'ILLEGAL INSTRUCTION'
01:0020121A 427804DE        	  2569:          CLR.W   TRACEON        RESET TRACE MODE
01:0020121E 6010            	  2570:          BRA.S   CHKBP4
                            	  2571: 
                            	  2572: * AT BREAKPOINT...CHECK COUNT
01:00201220 2012            	  2573: CHKBP2   MOVE.L  (A2),D0        GET COUNT
01:00201222 6708            	  2574:          BEQ.S   CHKBP3         COUNT ZERO
01:00201224 5380            	  2575:          SUBQ.L  #1,D0          DECREMENT
01:00201226 2480            	  2576:          MOVE.L  D0,(A2)        PUT COUNT BACK
01:00201228 6600F7F4        	  2577:          BNE     GOCMD1         COUNT NOT ZERO; KEEP GOING
                            	  2578: 
01:0020122C 4BFA0026        	  2579: CHKBP3   LEA     MSG014(PC),A5  "AT BREAKPOINT"
                            	  2580: 
01:00201230 6100F2CC        	  2581: CHKBP4   BSR     FIXDCRLF
01:00201234 61000DAC        	  2582:          BSR     OUT1CR
01:00201238 6100FAC2        	  2583:          BSR     TDISPLY        PRINT TRACE DISPLAY
01:0020123C 6000F3F0        	  2584:          BRA     MACSBUG
                            	  2585: 
01:00201240 494C4C4547414C20	  2586: MSG009   DC.B    'ILLEGAL INSTRUCTION',EOT
01:00201248 494E535452554354
01:00201250 494F4E
01:00201253 04
                            	  2587: 
                            	  2588: 
                            	  2589: 
                            	  2590: 
01:00201254 415420425245414B	  2591: MSG014   DC.B    'AT BREAKPOINT',EOT
01:0020125C 504F494E54
01:00201261 04
                            	  2592: 
                            	  2593: 
                            	  2594: 
01:00201262 2E50432077697468	  2595: MSG020   DC.B    '.PC within "DEBUGGER"',BELL,EOT
01:0020126A 696E202244454255
01:00201272 4747455222
01:00201277 07
01:00201278 04
                            	  2596: 
                            	  2597: 
                            	  2598: 
                            	  2599: 
                            	  2600: 
01:00201279 00              	  2601:          DC.B    0              PAD BYTE
                            	  2602: 
                            	  2603: 
                            	  2604: 
                            	  2605: 
                            	  2606: *-------------------------------------------------------------------------
                            	  2607: * File HE        HELP Command                                     12/01/81
                            	  2608: 
                            	  2609: * HELP  COMMAND
                            	  2610: *  PRINT: REGISTERS AND COMMANDS IN TABLES
                            	  2611: 
01:0020127A 4BFA0066        	  2612: HECMD    LEA     MSG002(PC),A5
01:0020127E 6100F26A        	  2613:          BSR     FIXDATA
01:00201282 61000D5E        	  2614:          BSR     OUT1CR         PRINT
                            	  2615: 
01:00201286 49FAF47C        	  2616:          LEA     SOLIST(PC),A4  A4 = POINTER TO COMMAND LIST
                            	  2617: 
01:0020128A 61000DFC        	  2618:          BSR     FIXBUF
01:0020128E 143C0008        	  2619:          MOVE.B  #8,D2          D2 = # CMDS PER LINE
01:00201292 321C            	  2620: HELP4    MOVE.W  (A4)+,D1       GET 2 BYTE COMMAND
01:00201294 0C41FFFF        	  2621:          CMPI.W  #$FFFF,D1
01:00201298 6740            	  2622:          BEQ.S   HELP6          DONE PRINT LAST BUFFER
01:0020129A 548C            	  2623:          ADDQ.L  #2,A4          BUMP POINTER UP BY 2
01:0020129C 4A41            	  2624:          TST.W   D1             IS THE INVISIBLE INDICATOR ON?
01:0020129E 6BF2            	  2625:          BMI     HELP4          YES... THEN BYPASS THIS ONE
01:002012A0 3601            	  2626:          MOVE.W  D1,D3          SAVE XX FOR "XX" AND "NOXX" IN HELP
01:002012A2 02417F7F        	  2627:          ANDI.W  #$7F7F,D1      REMOVE CONTROL BITS
01:002012A6 3CC1            	  2628:          MOVE.W  D1,(A6)+       NO.... MOVE THIS COMMAND TO "PRINT" LINE
01:002012A8 2CFC20202020    	  2629:          MOVE.L  #'    ',(A6)+  MOVE BLANKS FOR SPACING
01:002012AE 6118            	  2630:          BSR.S   HELP81         PRINT THE LINE IF FULL
01:002012B0 08030007        	  2631:          BTST    #7,D3          IS "NO" OPTION SUPPORTED?
01:002012B4 6710            	  2632:          BEQ.S   EOHLOOP        NO...BYPASS THIS COMMAND, ELSE...
01:002012B6 3CFC4E4F        	  2633:          MOVE.W  #'NO',(A6)+    "NO  "   IN MSG
01:002012BA 02437F7F        	  2634:          ANDI.W  #$7F7F,D3      RESET CONTROL BITS
01:002012BE 3CC3            	  2635:          MOVE.W  D3,(A6)+       "NOCC"   IN MSG (WHERE CC=COMMAND CODE)
01:002012C0 3CFC2020        	  2636:          MOVE.W  #'  ',(A6)+    "NOCC  " IN MSG    "    "    "      "
01:002012C4 6102            	  2637:          BSR.S   HELP81         PRINT THE LINE IF FULL
01:002012C6 60CA            	  2638: EOHLOOP  BRA     HELP4          NEXT COMMAND.
                            	  2639: 
                            	  2640: *        DISPLAY LINE OF COMMANDS (IF FULL)
                            	  2641: 
01:002012C8 5302            	  2642: HELP81   SUBQ.B  #1,D2          D2 = COUNT OF COMMANDS PER LINE
01:002012CA 660C            	  2643:          BNE.S   HELP85         NOT FULL, JUST RETURN FOR MORE
01:002012CC 61000D14        	  2644:          BSR     OUT1CR         YES, THEN WRITE IT
01:002012D0 61000DB6        	  2645:          BSR     FIXBUF         SET-UP LINE FOR NEXT COMMANDS
01:002012D4 143C0008        	  2646:          MOVE.B  #8,D2          D2 = MAX NUMBER CAN BE PLACED IN LINE
01:002012D8 4E75            	  2647: HELP85   RTS
                            	  2648: 
01:002012DA 61000D06        	  2649: HELP6    BSR     OUT1CR         PRINT ANY REMAINING PORTION
                            	  2650: *        BRA     HELP1          SEE IF COMPLETE
01:002012DE 6000F34E        	  2651:          BRA     MACSBUG        HELP IS COMPLETE SO RETURN
                            	  2652: 
01:002012E2 2E5043202E535220	  2653: MSG002   DC.B    '.PC .SR .US .SS',CR,LF
01:002012EA 2E5553202E5353
01:002012F1 0D
01:002012F2 0A
                            	  2654: 
                            	  2655: 
                            	  2656: 
01:002012F3 2E4430202E443120	  2657:          DC.B    '.D0 .D1 .D2 .D3 .D4 .D5 .D6 .D7',CR,LF
01:002012FB 2E4432202E443320
01:00201303 2E4434202E443520
01:0020130B 2E4436202E4437
01:00201312 0D
01:00201313 0A
                            	  2658: 
                            	  2659: 
                            	  2660: 
                            	  2661: 
                            	  2662: 
                            	  2663: 
01:00201314 2E4130202E413120	  2664:          DC.B    '.A0 .A1 .A2 .A3 .A4 .A5 .A6 .A7',CR,LF
01:0020131C 2E4132202E413320
01:00201324 2E4134202E413520
01:0020132C 2E4136202E4137
01:00201333 0D
01:00201334 0A
                            	  2665: 
                            	  2666: 
                            	  2667: 
                            	  2668: 
                            	  2669: 
                            	  2670: 
01:00201335 2E5230202E523120	  2671:          DC.B    '.R0 .R1 .R2 .R3 .R4 .R5 .R6',CR,LF,EOT
01:0020133D 2E5232202E523320
01:00201345 2E5234202E523520
01:0020134D 2E5236
01:00201350 0D
01:00201351 0A
01:00201352 04
                            	  2672: 
                            	  2673: 
                            	  2674: 
                            	  2675: 
                            	  2676: 
                            	  2677: 
01:00201353 00              	  2678:          DC.B    0              PAD BYTE
                            	  2679: 
                            	  2680: 
                            	  2681: 
                            	  2682: *-------------------------------------------------------------------------
                            	  2683: * File HEX2DEC   HEX2DEC convert hex to decimal                   11/02/81
                            	  2684: 
                            	  2685: 
                            	  2686: *    CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
                            	  2687: 
01:00201354 48E77B00        	  2688: HEX2DEC  MOVEM.L D1-D4/D6-D7,-(A7)   SAVE REGISTERS
01:00201358 2E00            	  2689:          MOVE.L  D0,D7          SAVE IT HERE
01:0020135A 6A08            	  2690:          BPL.S   HX2DC
01:0020135C 4487            	  2691:          NEG.L   D7             CHANGE TO POSITIVE
01:0020135E 6B4E            	  2692:          BMI.S   HX2DC57        SPECIAL CASE (-0)
01:00201360 1CFC002D        	  2693:          MOVE.B  #'-',(A6)+     PUT IN NEG SIGN
01:00201364 4244            	  2694: HX2DC    CLR.W   D4             FOR ZERO SURPRESS
01:00201366 7C0A            	  2695:          MOVEQ   #10,D6         COUNTER
01:00201368 7401            	  2696: HX2DC0   MOVEQ   #1,D2          VALUE TO SUB
01:0020136A 2206            	  2697:          MOVE.L  D6,D1          COUNTER
01:0020136C 5381            	  2698:          SUBQ.L  #1,D1          ADJUST - FORM POWER OF TEN
01:0020136E 671A            	  2699:          BEQ.S   HX2DC2         IF POWER IS ZERO
01:00201370 3602            	  2700: HX2DC1   MOVE.W  D2,D3          D3=LOWER WORD
01:00201372 C6FC000A        	  2701:          MULU    #10,D3
01:00201376 4842            	  2702:          SWAP    D2             D2=UPPER WORD
01:00201378 C4FC000A        	  2703:          MULU    #10,D2
01:0020137C 4843            	  2704:          SWAP    D3             ADD UPPER TO UPPER
01:0020137E D443            	  2705:          ADD.W   D3,D2
01:00201380 4842            	  2706:          SWAP    D2             PUT UPPER IN UPPER
01:00201382 4843            	  2707:          SWAP    D3             PUT LOWER IN LOWER
01:00201384 3403            	  2708:          MOVE.W  D3,D2          D2=UPPER & LOWER
01:00201386 5381            	  2709:          SUBQ.L  #1,D1
01:00201388 66E6            	  2710:          BNE     HX2DC1
01:0020138A 7000            	  2711: HX2DC2   CLR.L   D0             HOLDS SUB AMT
01:0020138C BE82            	  2712: HX2DC22  CMP.L   D2,D7
01:0020138E 6D06            	  2713:          BLT.S   HX2DC3         IF NO MORE SUB POSSIBLE
01:00201390 5280            	  2714:          ADDQ.L  #1,D0          BUMP SUBS
01:00201392 9E82            	  2715:          SUB.L   D2,D7          COUNT DOWN BY POWERS OF TEN
01:00201394 60F6            	  2716:          BRA.S   HX2DC22        DO MORE
01:00201396 4A00            	  2717: HX2DC3   TST.B   D0             ANY VALUE?
01:00201398 6604            	  2718:          BNE.S   HX2DC4
01:0020139A 4A44            	  2719:          TST.W   D4             ZERO SURPRESS
01:0020139C 6708            	  2720:          BEQ.S   HX2DC5
01:0020139E 06000030        	  2721: HX2DC4   ADDI.B  #$30,D0        BINARY TO ASCII
01:002013A2 1CC0            	  2722:          MOVE.B  D0,(A6)+       PUT IN BUFFER
01:002013A4 1800            	  2723:          MOVE.B  D0,D4          MARK AS NON ZERO SURPRESS
01:002013A6 5386            	  2724: HX2DC5   SUBQ.L  #1,D6          NEXT POWER
01:002013A8 66BE            	  2725:          BNE     HX2DC0
01:002013AA 4A44            	  2726:          TST.W   D4             SEE IF ANYTHING PRINTED
01:002013AC 6604            	  2727:          BNE.S   HX2DC6
01:002013AE 1CFC0030        	  2728: HX2DC57  MOVE.B  #'0',(A6)+     PRINT AT LEST A ZERO
01:002013B2 4CDF00DE        	  2729: HX2DC6   MOVEM.L (A7)+,D1-D4/D6-D7   RESTORE REGISTERS
01:002013B6 4E75            	  2730:          RTS                    END OF ROUTINE
                            	  2731: 
                            	  2732: 
                            	  2733: 
                            	  2734: 
                            	  2735: *-------------------------------------------------------------------------
                            	  2736: * File LOAD      LO & VE (Load & Verify) Commands.                02/22/82
                            	  2737: 
                            	  2738: * THIS FUNCTION
                            	  2739: *   1.) READS A "S-RECORD"
                            	  2740: *   2.) FORMATS THE DATA ON THE STACK
                            	  2741: *   3.) CALCULATES THE CHECKSUM
                            	  2742: *   4.) THEN STORES (VERIFIES) THE DATA TO MEMORY
                            	  2743: *
                            	  2744: * WHEN VERIFYING RECORDS MAKE BE SKIPPED WHILE DISPLAYING THE MISS-MATCHED
                            	  2745: *  RECORDS.  DISPLAY FORMAT
                            	  2746: *   S1CCAAAA.-.-.-33.-
                            	  2747: *     CC                     BYTE COUNT
                            	  2748: *       AAAA                 ADDRESS
                            	  2749: *           .-.-.-  .-       DATA FIELDS THAT MATCHED
                            	  2750: *                 33         DATA MISS MATCH (DISPLAY DATA FROM S-RECORD)
                            	  2751: 
                            	  2752: *   ***LOAD*** AND ***VERIFY***  'S' RECORDS
                            	  2753: *
                            	  2754: *        D4 = ERROR FLAG
                            	  2755: *
                            	  2756: *        D5 = V000I0CC
                            	  2757: *             0.......  = LOAD
                            	  2758: *             8.......  = VERIFY
                            	  2759: *             ....0...  = CALCULATE CHECKSUM
                            	  2760: *             ....8...  = IGNORE CHECKSUM
                            	  2761: *             ......CC  = CHECKSUM
                            	  2762: 
01:002013B8 7A01            	  2763: VECMD    MOVEQ   #1,D5          MARK THE MODE
01:002013BA E29D            	  2764:          ROR.L   #1,D5          D5 = $80000000
01:002013BC 6002            	  2765:          BRA.S   CHKCHKS        GO CHECK CHECKSUM OPTION
                            	  2766: 
01:002013BE 7A00            	  2767: LOCMD    CLR.L   D5             READ MODE
01:002013C0 7800            	  2768: CHKCHKS  CLR.L   D4             RESET ERROR FLAG
01:002013C2 61001184        	  2769:          BSR     SCANPORT       SET UP OUTPUT P1,P2,P3 ETC
                            	  2770: 
                            	  2771: * SEE IF CHECKSUM -C OPTION AND =SEND THIS OPTION
                            	  2772: 
01:002013C6 BBCE            	  2773: READ01   CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:002013C8 643C            	  2774:          BCC.S   READ09
01:002013CA 101D            	  2775:          MOVE.B  (A5)+,D0       GET A CHARACTER
01:002013CC 0C00003D        	  2776: READ03   CMPI.B  #'=',D0        SEE IF EQUAL SIGN
01:002013D0 6730            	  2777:          BEQ.S   READ08
                            	  2778: 
01:002013D2 0C000058        	  2779:          CMPI.B  #'X',D0        SEE IF ECHO
01:002013D6 6606            	  2780:          BNE.S   READ021
01:002013D8 1A3C00FF        	  2781:          MOVE.B  #-1,D5         D5.B = ECHO TO PORT ONE
01:002013DC 60E8            	  2782:          BRA     READ01
                            	  2783: 
01:002013DE 0C00002D        	  2784: READ021  CMPI.B  #'-',D0        SEE IF MINUS SIGN
01:002013E2 66E2            	  2785:          BNE.S   READ01
01:002013E4 BBCE            	  2786:          CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:002013E6 671E            	  2787:          BEQ.S   READ09
01:002013E8 101D            	  2788:          MOVE.B  (A5)+,D0       GRAB SECOND CHARACTER
01:002013EA 0C000043        	  2789:          CMPI.B  #'C',D0        SEE IF LETTER C AS IN -C
01:002013EE 66DC            	  2790:          BNE     READ03
01:002013F0 00458000        	  2791:          ORI.W   #$8000,D5      MARK AS IGNORE CHECKSUM
01:002013F4 60D0            	  2792:          BRA     READ01
                            	  2793: 
01:002013F6 7C00            	  2794: READS1   CLR.L   D6             D6 = TYPE "S1"
01:002013F8 5983            	  2795:          SUBQ.L  #4,D3          BYTE COUNT
                            	  2796: 
01:002013FA 7000            	  2797:          CLR.L   D0
01:002013FC 6100013C        	  2798:          BSR     READHEX4       FORM ADDRESS
01:00201400 6066            	  2799:          BRA.S   READS202
                            	  2800: 
01:00201402 61000C02        	  2801: READ08   BSR     OUTPUT2        SEND REST OF LINE(+CR) TO PORT
                            	  2802: 
01:00201406 11C504E2        	  2803: READ09   MOVE.B  D5,ECHOPT1     MOVE ECHO FLAG
01:0020140A 21F80630061C    	  2804:          MOVE.L  OUTPORT1,OUTTO SEND OUTPUT TO CONSOLE
                            	  2805: 
                            	  2806: 
01:00201410 4FF80786        	  2807: READ0    LEA     SYSTACK,A7     FORCE STACK (FOR ERROR RECOVERY)
                            	  2808: 
01:00201414 4E54FFBC        	  2809:          LINK    A4,#-((BUFFSIZE/2)+4)  CREATE BUFFER ON STACK
                            	  2810: 
01:00201418 4205            	  2811:          CLR.B   D5             ZERO CHECKSUM
                            	  2812: 
01:0020141A 61000C6C        	  2813:          BSR     FIXBUF         START OF INPUT BUFFER
01:0020141E 61000F94        	  2814:          BSR     PORTIN2        GET A RECORD FROM PORT
                            	  2815: 
01:00201422 264D            	  2816:          MOVE.L  A5,A3 SAVE     START ADDRESS OF BUFFER
01:00201424 101B            	  2817: READ00   MOVE.B  (A3)+,D0       GET FIRST CHARACTER
01:00201426 BDCB            	  2818:          CMP.L   A3,A6
01:00201428 65E6            	  2819:          BCS     READ0          END OF BUFFER WITHOUT "S"
                            	  2820: 
01:0020142A 0C000053        	  2821: READ005  CMPI.B  #'S',D0        SEE IF IT IS AN S
01:0020142E 66F4            	  2822:          BNE     READ00         GET ANOTHER CHARACTER
01:00201430 610000C4        	  2823:          BSR     GETCHR         GET RECORD TYPE
01:00201434 2C00            	  2824:          MOVE.L  D0,D6
                            	  2825: 
01:00201436 610000B0        	  2826:          BSR     READHEX        GET CHAR COUNT
01:0020143A 7600            	  2827:          CLR.L   D3
01:0020143C 1600            	  2828:          MOVE.B  D0,D3
                            	  2829: 
01:0020143E 0C060030        	  2830:          CMPI.B  #'0',D6        'S0'???
01:00201442 67CC            	  2831:          BEQ     READ0          JUST IGNORE
01:00201444 0C060031        	  2832:          CMPI.B  #'1',D6
01:00201448 67AC            	  2833:          BEQ.S   READS1         S1 RECORD TYPE (2 BYTE ADDRESS)
01:0020144A 0C060038        	  2834:          CMPI.B  #'8',D6
01:0020144E 670000F6        	  2835:          BEQ     READS8         S8 RECORD TYPE
01:00201452 0C060039        	  2836:          CMPI.B  #'9',D6
01:00201456 670000FE        	  2837:          BEQ     READS9         S9 RECORD TYPE
01:0020145A 0C060032        	  2838:          CMPI.B  #'2',D6
01:0020145E 66CA            	  2839:          BNE.S   READ005        KEEP LOOKING FOR "Sn"
                            	  2840: 
01:00201460 7C02            	  2841: READS2   MOVEQ   #2,D6          D6 = TYPE = S2 (3 BYTE ADDRESS)
01:00201462 610000D0        	  2842:          BSR     READHEX6
01:00201466 5B83            	  2843:          SUBQ.L  #5,D3          BYTE COUNT
01:00201468 2943FFBC        	  2844: READS202 MOVE.L  D3,CC(A4)
                            	  2845: 
01:0020146C 2940FFC0        	  2846:          MOVE.L  D0,ADDRESS(A4) ADDRESS + OFFSET
01:00201470 45ECFFC4        	  2847:          LEA     LDATA(A4),A2   A2 = STORE TO STACK POINTER
                            	  2848: 
01:00201474 6172            	  2849: READ100  BSR.S   READHEX        GET DATA BYTE
01:00201476 14C0            	  2850:          MOVE.B  D0,(A2)+       MOVE DATA TO STACK
01:00201478 51CBFFFA        	  2851:          DBRA    D3,READ100
                            	  2852: 
01:0020147C 4A45            	  2853:          TST.W   D5
01:0020147E 6B0A            	  2854:          BMI.S   READ120        IGNORE CHECKSUM
                            	  2855: 
01:00201480 1E05            	  2856:          MOVE.B  D5,D7
01:00201482 6164            	  2857:          BSR.S   READHEX        GET CHECKSUM FROM DATA
01:00201484 4607            	  2858:          NOT.B   D7             CALCULATED CHECKSUM
01:00201486 B007            	  2859:          CMP.B   D7,D0
01:00201488 664C            	  2860:          BNE.S   READCKSM       ERROR
                            	  2861: READ120
                            	  2862: 
                            	  2863: 
                            	  2864: * STORE DATA (VERIFY) TO MEMORY
                            	  2865: 
01:0020148A 262CFFBC        	  2866:          MOVE.L  CC(A4),D3      BYTE COUNT
01:0020148E 266CFFC0        	  2867:          MOVE.L  ADDRESS(A4),A3 MEMORY STORE ADDRESS
01:00201492 45ECFFC4        	  2868:          LEA     LDATA(A4),A2   DATA ADDRESS ON STACK
                            	  2869: 
01:00201496 4A85            	  2870:          TST.L   D5
01:00201498 6B10            	  2871:          BMI.S   READ400        VERIFY
                            	  2872: 
01:0020149A 1692            	  2873: READ130  MOVE.B  (A2),(A3)      STORE DATA
01:0020149C B70A            	  2874:          CMP.B   (A2)+,(A3)+    VERIFY DATA STORED
01:0020149E 6600045A        	  2875:          BNE     SETME          DATA DID NOT STORE
01:002014A2 51CBFFF6        	  2876:          DBRA    D3,READ130
01:002014A6 6000FF68        	  2877: READ135  BRA     READ0
                            	  2878: 
                            	  2879: 
                            	  2880: ***     VERIFY
                            	  2881: 
01:002014AA 43ED0008        	  2882: READ400  LEA     8(A5),A1       A1 = PTR TO INPUT STRING
01:002014AE D3C6            	  2883:          ADD.L   D6,A1
                            	  2884: 
01:002014B0 7E00            	  2885:          CLR.L   D7             D7 = MISS-MATCH FLAG
                            	  2886: 
01:002014B2 B70A            	  2887: READ410  CMP.B   (A2)+,(A3)+    VERIFY DATA
01:002014B4 6618            	  2888:          BNE.S   READ440        MISS-MATCH
01:002014B6 12FC002E        	  2889:          MOVE.B  #'.',(A1)+     OVERLAY INPUT STRING IF OK
01:002014BA 12FC002D        	  2890:          MOVE.B  #'-',(A1)+
01:002014BE 51CBFFF2        	  2891: READ420  DBRA    D3,READ410
                            	  2892: 
01:002014C2 4A87            	  2893:          TST.L   D7
01:002014C4 67E0            	  2894:          BEQ     READ135        RECORD OK
                            	  2895: 
01:002014C6 2C49            	  2896:          MOVE.L  A1,A6          DONOT DISPLAY CHECKSUM
01:002014C8 61000B18        	  2897: READ430  BSR     OUT1CR         DISPLAY IT
01:002014CC 60D8            	  2898:          BRA     READ135        READ NEXT RECORD
                            	  2899: 
01:002014CE 7EFF            	  2900: READ440  MOVEQ   #-1,D7         D7 = Set miss-match flag
01:002014D0 78FF            	  2901:          MOVEQ   #-1,D4         D4 = Set Summary error flag
01:002014D2 5489            	  2902:          ADDQ.L  #2,A1
01:002014D4 60E8            	  2903:          BRA     READ420
                            	  2904: 
01:002014D6 78FF            	  2905: READCKSM MOVEQ   #-1,D4         D4 = Set summary error flag
01:002014D8 4BFA0051        	  2906:          LEA     MSGLOAD2(PC),A5
01:002014DC 6100F010        	  2907:          BSR     FIXDADD
01:002014E0 2007            	  2908:          MOVE.L  D7,D0
01:002014E2 610008C6        	  2909:          BSR     PNT2HX         CALCULATED CHECKSUM
01:002014E6 60E0            	  2910:          BRA     READ430
                            	  2911: 
01:002014E8 6114            	  2912: READHEX  BSR.S   GETHEXC        FORM BYTE
01:002014EA E900            	  2913:          ASL.B   #4,D0
01:002014EC 1200            	  2914:          MOVE.B  D0,D1
01:002014EE 610E            	  2915:          BSR.S   GETHEXC
01:002014F0 8001            	  2916:          OR.B    D1,D0          D0 = BYTE FORMED
01:002014F2 DA00            	  2917:          ADD.B   D0,D5          UPDATE CHECKSUM
01:002014F4 4E75            	  2918:          RTS
                            	  2919: 
01:002014F6 101B            	  2920: GETCHR   MOVE.B  (A3)+,D0
01:002014F8 BDCB            	  2921:          CMP.L   A3,A6
01:002014FA 65DA            	  2922:          BCS     READCKSM       OVERFLOW
01:002014FC 4E75            	  2923:          RTS
                            	  2924: 
01:002014FE 61F6            	  2925: GETHEXC  BSR     GETCHR
01:00201500 04000030        	  2926:          SUBI.B  #$30,D0        SEE IF LESS THAN ZERO
01:00201504 6D10            	  2927:          BLT.S   RHEX3
01:00201506 0C000009        	  2928:          CMPI.B  #$09,D0        SEE IF GT 9
01:0020150A 6F08            	  2929:          BLE.S   RHEX2
01:0020150C 5F00            	  2930:          SUBQ.B  #7,D0          NORMALIZE $A TO 10
01:0020150E 0C000010        	  2931:          CMPI.B  #$10,D0        SEE IF TOO LARGE
01:00201512 6402            	  2932:          BCC.S   RHEX3
01:00201514 4E75            	  2933: RHEX2    RTS
                            	  2934: 
01:00201516 4BFA000A        	  2935: RHEX3    LEA     MSGLOAD1(PC),A5 'NOT HEX=X?'  MESSAGE
01:0020151A 6100EFD2        	  2936:          BSR     FIXDADD
01:0020151E 1CE3            	  2937:          MOVE.B  -(A3),(A6)+    BAD CHARACTER
01:00201520 60A6            	  2938:          BRA     READ430        GO TRY NEXT RECORD
                            	  2939: 
01:00201522 4E4F54204845583D	  2940: MSGLOAD1 DC.B    'NOT HEX=',EOT
01:0020152A 04
                            	  2941: 
                            	  2942: 
01:0020152B 2043484B53554D3D	  2943: MSGLOAD2 DC.B    ' CHKSUM=',EOT
01:00201533 04
                            	  2944: 
                            	  2945: 
01:00201534 7000            	  2946: READHEX6 CLR.L   D0             FORM ADDRESS (3 BYTE)
01:00201536 61B0            	  2947:          BSR     READHEX
01:00201538 E180            	  2948:          ASL.L   #8,D0
01:0020153A 61AC            	  2949: READHEX4 BSR     READHEX        FORM ADDRESS (2 BYTE)
01:0020153C E180            	  2950:          ASL.L   #8,D0
01:0020153E 61A8            	  2951:          BSR     READHEX
01:00201540 D0B8044C        	  2952:          ADD.L   OFFSET,D0
01:00201544 4E75            	  2953:          RTS
                            	  2954: 
01:00201546 61EC            	  2955: READS8   BSR     READHEX6
01:00201548 21C00400        	  2956: READS800 MOVE.L  D0,REGPC       SAVE IT IN THE USER PREG
                            	  2957: 
01:0020154C 4A84            	  2958:          TST.L   D4
01:0020154E 6600EF58        	  2959:          BNE     ERROR          DISPLAY "ERROR"
01:00201552 6000F0DA        	  2960:          BRA     MACSBUG        END OF ROUTINE
                            	  2961: 
01:00201556 7000            	  2962: READS9   CLR.L   D0
01:00201558 61E0            	  2963:          BSR     READHEX4       GET ADDRESS
01:0020155A 60EC            	  2964:          BRA     READS800
                            	  2965: 
                            	  2966: 
                            	  2967: *-------------------------------------------------------------------------
                            	  2968: * File MDDI      MD[S] (Memory Display) Command                   06/16/82
                            	  2969: 
                            	  2970: *   ***MD***   MEMORY DISPLAY         ENTRY POINT
                            	  2971: *     FORMAT:  MD[S] <ADDRESS> [<COUNT>] [;DI]
                            	  2972: * 1.  IF 'S' USED IN COMMAND THEN IT WILL DUMP 16 LINES, (1 Screen), AND
                            	  2973: *     PROMPT-ENTER CR FOR 16 MORE LINES ETC OR ANY MACSBUG COMMAND.
                            	  2974: *
                            	  2975: 
                            	  2976: MDCMD    DS      0
01:0020155C 61000FEA        	  2977:          BSR     SCANPORT       WHERE TO SEND OUTPUT
01:00201560 21F90000062C0620	  2978:          MOVE.L  INPORT1.L,INFROM ONLY ALLOW INPUT FROM PORT1
                            	  2979: 
01:00201568 7CFF            	  2980:          MOVEQ   #-1,D6         D6 = HOW MANY LINES PER PAGE
                            	  2981: 
01:0020156A 97CB            	  2982:          SUB.L   A3,A3          A4 = DEFAULT ZERO  START
01:0020156C 284B            	  2983:          MOVE.L  A3,A4          A3 = END ADDR
                            	  2984: 
01:0020156E 7E00            	  2985:          CLR.L   D7             D7 = DO NOT DISASSEMBLE
01:00201570 244D            	  2986:          MOVE.L  A5,A2
01:00201572 BDCA            	  2987: PRINT8   CMP.L   A2,A6          LOOK FOR OPTIONS
01:00201574 651A            	  2988:          BCS.S   PRINTDI        NO  OPTIONS
01:00201576 0C1A003B        	  2989:          CMPI.B  #';',(A2)+
01:0020157A 66F6            	  2990:          BNE     PRINT8
                            	  2991: 
01:0020157C 2C4A            	  2992:          MOVE.L  A2,A6
01:0020157E 538E            	  2993:          SUBQ.L  #1,A6          A6 = POINTER TO ;
                            	  2994: 
01:00201580 0C1A0044        	  2995:          CMPI.B  #'D',(A2)+
01:00201584 6600EF28        	  2996: PRINTMB  BNE     SYNTAX         COMMAND SYNTAX ERROR
01:00201588 0C1A0049        	  2997:          CMPI.B  #'I',(A2)+
01:0020158C 66F6            	  2998:          BNE     PRINTMB
01:0020158E 7EFF            	  2999:          MOVEQ   #-1,D7         DISASSEMBLE OPTION
                            	  3000: PRINTDI
                            	  3001: 
                            	  3002: 
                            	  3003: * LOOK FOR "S" IN COMMAND
01:00201590 1015            	  3004:          MOVE.B  (A5),D0
01:00201592 0C000053        	  3005:          CMPI.B  #'S',D0
01:00201596 6608            	  3006:          BNE.S   PRINT5         NO "S" IN COMMAND
01:00201598 528D            	  3007:          ADDQ.L  #1,A5          MOVE PAST "S"
                            	  3008: 
01:0020159A 7C10            	  3009:          MOVEQ   #16,D6         DO 16 LINES AT A TIME
01:0020159C 97CB            	  3010:          SUB.L   A3,A3
01:0020159E 538B            	  3011:          SUBQ.L  #1,A3          MAX END ADDRESS
                            	  3012: 
01:002015A0 41FA001A        	  3013: PRINT5   LEA     PRINT7(PC),A0  WHERE TO GO IF NO PARAMETERS
01:002015A4 610008C0        	  3014:          BSR     FNEXTF         FIND NEXT FIELD
01:002015A8 6100F988        	  3015:          BSR     GETA
01:002015AC 2840            	  3016:          MOVE.L  D0,A4          A4 = GET ADDRESS
                            	  3017: 
01:002015AE 610008B6        	  3018:          BSR     FNEXTF
01:002015B2 61000906        	  3019:          BSR     GETEXP         D0 = GET COUNT
01:002015B6 D08C            	  3020:          ADD.L   A4,D0          END=START+COUNT-1
01:002015B8 5380            	  3021:          SUBQ.L  #1,D0          BACK OFF ONE
01:002015BA 2640            	  3022:          MOVE.L  D0,A3          A3 = END ADDRESS
                            	  3023: 
01:002015BC 4A87            	  3024: PRINT7   TST.L   D7
01:002015BE 672A            	  3025:          BEQ.S   PUTADR         NOT DISASSEMBLE
                            	  3026: 
01:002015C0 61000AC6        	  3027: PRINTDI5 BSR     FIXBUF         ;DI OPTION
01:002015C4 48E70310        	  3028:          MOVEM.L A3/D6-D7,-(A7)
01:002015C8 4CD40007        	  3029:          MOVEM.L (A4),D0-D2     D0-D2 = DATA TO DISASSEMBLE
01:002015CC 6100288A        	  3030:          BSR     DCODE68K       DISASSEMBLE
01:002015D0 61000A10        	  3031:          BSR     OUT1CR
01:002015D4 4CDF08C0        	  3032:          MOVEM.L (A7)+,A3/D6-D7
                            	  3033: 
01:002015D8 5386            	  3034:          SUBQ.L  #1,D6
01:002015DA 676C            	  3035:          BEQ.S   PRINT9         'MDS' COMMAND
                            	  3036: 
01:002015DC B7CC            	  3037:          CMP.L   A4,A3          END CHECK
01:002015DE 64E0            	  3038:          BCC     PRINTDI5
01:002015E0 6066            	  3039:          BRA.S   PRINT9
                            	  3040: 
01:002015E2 7C10            	  3041: PRINT3   MOVEQ   #16,D6         D6 = LINE BLOCK COUNT
01:002015E4 97CB            	  3042:          SUB.L   A3,A3
01:002015E6 538B            	  3043:          SUBQ.L  #1,A3          A3 = MAX END ADDRESS
01:002015E8 60D2            	  3044:          BRA     PRINT7
                            	  3045: 
                            	  3046: * START A NEW  LINE
                            	  3047: *
01:002015EA 61000A9C        	  3048: PUTADR   BSR     FIXBUF         SET UP OUTPUT BUFFER
01:002015EE 200C            	  3049:          MOVE.L  A4,D0          CURRENT LINE ADDRESS
01:002015F0 610007D4        	  3050:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:002015F4 1CFC0020        	  3051:          MOVE.B  #$20,(A6)+     FORMAT  SPACE
01:002015F8 204C            	  3052:          MOVE.L  A4,A0          A0 IS SCANNING ADDRESS
01:002015FA 7610            	  3053:          MOVEQ   #$10,D3        SET UP COUNTER FOR LOOP
                            	  3054: 
01:002015FC 1018            	  3055: NXTBP    MOVE.B  (A0)+,D0       GET BYTE TO PRINT
01:002015FE 610007AA        	  3056:          BSR     PNT2HX         PRINT IT
01:00201602 1CFC0020        	  3057:          MOVE.B  #$20,(A6)+     SPACE BETWEEN EACH HEX
                            	  3058: 
01:00201606 0C030009        	  3059:          CMPI.B  #9,D3          HALF LINE SPACING
01:0020160A 6604            	  3060:          BNE.S   NXTBP3
01:0020160C 1CFC0020        	  3061:          MOVE.B  #$20,(A6)+
                            	  3062: NXTBP3
                            	  3063: 
01:00201610 5383            	  3064:          SUBQ.L  #1,D3
01:00201612 66E8            	  3065:          BNE     NXTBP          LOOP TILL D3 IS ZERO
                            	  3066: 
01:00201614 1CFC0020        	  3067:          MOVE.B  #$20,(A6)+     MOVE A SPACE
01:00201618 204C            	  3068:          MOVE.L  A4,A0          RELOAD SCANNER FOR ASCII PRINTS
01:0020161A 7610            	  3069:          MOVEQ   #$10,D3        RELOAD COUNTER
                            	  3070: 
01:0020161C 1018            	  3071: NXTCHR   MOVE.B  (A0)+,D0       FETCH BYTE
01:0020161E 0200007F        	  3072:          ANDI.B  #$7F,D0        REMOVE HIGH ORDER BIT, (ASCII ONLY USES 7 BITS)
01:00201622 0C000020        	  3073:          CMPI.B  #$20,D0        SEE IF IT IS CONTROL CHAR
01:00201626 6D06            	  3074:          BLT.S   NOTCHR         BYPASS IF IT IS... ELSE
01:00201628 0C00007F        	  3075:          CMPI.B  #$7F,D0        IS IT A "7F"?    (CAUSES PRINTER PROBLEM)
01:0020162C 6D04            	  3076:          BLT.S   PUTCHR         NO... THEN PRINT IT, ELSE SUBSTITUTE "."
01:0020162E 103C002E        	  3077: NOTCHR   MOVE.B  #$2E,D0        CHANGE UNPRINTABLE TO PERIOD
                            	  3078: 
01:00201632 1CC0            	  3079: PUTCHR   MOVE.B  D0,(A6)+       MOVE "EDITTED" CHARACTER TO PRINT LINE
01:00201634 5383            	  3080:          SUBQ.L  #1,D3          LOOP AROUND FOR NEXT CHAR
01:00201636 66E4            	  3081:          BNE     NXTCHR         ANY LEFT?
01:00201638 610009A8        	  3082:          BSR     OUT1CR         NO... THEN PRINT THE COMPLETE LINE
01:0020163C 508C            	  3083:          ADDQ.L  #$08,A4        UPDATE STARTING ADDRESS OF NEXT ADDRESS
01:0020163E 508C            	  3084:          ADDQ.L  #$08,A4        ........
01:00201640 B7CC            	  3085:          CMP.L   A4,A3          DOES NEW LINE START PAST END
01:00201642 6504            	  3086:          BCS.S   PRINT9         SEE IF STILL GOING
01:00201644 5386            	  3087:          SUBQ.L  #1,D6          DECR THE COUNTER
01:00201646 66A2            	  3088:          BNE     PUTADR         DO ANOTHER LINE
                            	  3089: 
01:00201648 4BFAF0AC        	  3090: PRINT9   LEA     MSG001(PC),A5  SET UP FOR PROMPT
01:0020164C 6100EE9C        	  3091:          BSR     FIXDATA
01:00201650 1CFC003E        	  3092:          MOVE.B  #'>',(A6)+     PROMPT SAME AS MACSBUG
01:00201654 1CFC0020        	  3093:          MOVE.B  #BLANK,(A6)+
01:00201658 610009A2        	  3094:          BSR     OUTPUT         PRINT IT
                            	  3095: 
01:0020165C 61000A2A        	  3096:          BSR     FIXBUF         RESET BUFFER
01:00201660 61000A2E        	  3097:          BSR     PORTIN1        TAKE IN INPUT
01:00201664 BBCE            	  3098:          CMP.L   A6,A5          SEE IF ANYTHING ENTERED
01:00201666 6700FF7A        	  3099:          BEQ     PRINT3         NOTHING ENTERED; DO 16 MORE LINES
01:0020166A 42B8061C        	  3100:          CLR.L   OUTTO          *
01:0020166E 6000F000        	  3101:          BRA     DECODE6        GO MAKE SURE 2ND DIGIT IS BLANK
                            	  3102: 
                            	  3103: 
                            	  3104: 
                            	  3105: 
                            	  3106: *-------------------------------------------------------------------------
                            	  3107: * File MMDI      Modify Memory command WITH asm/disasm            11/27/81
                            	  3108: 
                            	  3109: * MODIFY MEMORY
                            	  3110: *  COMMON REGISTER USAGE
                            	  3111: *   A6  IO BUFFER POINTER  END
                            	  3112: *   A5  IO BUFFER POINTER  START
                            	  3113: *   A4  ADDRESS TO MODIFY
                            	  3114: *   A3
                            	  3115: *   A2
                            	  3116: *   A1
                            	  3117: *   A0
                            	  3118: *   D7  DATA READ (DATA STORED)
                            	  3119: *   D6  SIZE  1/2/4 BYTES  (ASM/DISASM 2 - 10 BYTES)
                            	  3120: *   D5  OVERRIDE BYTE (80XX=NON VERIFY)  (XX80=BYTE SIZE)
                            	  3121: *
                            	  3122: * ;OPTIONS
                            	  3123: *   ;W  WORD
                            	  3124: *   ;L  LONG WORD (4 BYTES)
                            	  3125: *   ;DI DISASSEMBLE
                            	  3126: *     ;O  ODD ADDRESSES ONLY
                            	  3127: *     ;V  EVEN ADDRESSES ONLY
                            	  3128: *       ;N  NON-VERIFY
                            	  3129: *
                            	  3130: 
01:00201672 61000810        	  3131: MMDI     BSR     CKWADR
01:00201676 61000812        	  3132:          BSR     CKADDR
01:0020167A 7C00            	  3133:          CLR.L   D6             SIZE = 0
01:0020167C D9C6            	  3134: MMDI22   ADD.L   D6,A4          PC = PC + SIZE
01:0020167E 61000A08        	  3135: MMDI23   BSR     FIXBUF         A5 & A6 = POINTER TO BUFFER
                            	  3136: 
                            	  3137: *                  ENTRY
                            	  3138: *                   A4 = PROGRAM COUNTER
                            	  3139: *                   A5 = POINTER TO STORE DISASSEMBLED LINE
01:00201682 4CD40007        	  3140:          MOVEM.L   (A4),D0-D2          DATA TO DISASSEMBLE
01:00201686 610027D0        	  3141:          BSR       DCODE68K
                            	  3142: *                  RETURN
                            	  3143: *                   A4 = NEW PROGRAM COUNTER
                            	  3144: *                   A5 = PTR START BUFFER
                            	  3145: *                   A6 = PRT END BUFFER
                            	  3146: *                   D6 = NUMBER OF BYTES DISASSEMBLED
                            	  3147: 
01:0020168A 1CFC003F        	  3148:          MOVE.B  #'?',(A6)+
01:0020168E 6100096C        	  3149:          BSR     OUTPUT
                            	  3150: 
01:00201692 610009F4        	  3151: MMDI31   BSR     FIXBUF
01:00201696 61000A0A        	  3152:          BSR     PORTIN1N       INPUT ASSEMBLY SOURCE (NO LINE FEED)
01:0020169A BDCD            	  3153:          CMP.L   A5,A6
01:0020169C 6606            	  3154:          BNE.S   MMDI34
01:0020169E 61000942        	  3155:          BSR     OUT1CR         NOTHING INPUT; OUTPUT LINE FEED
01:002016A2 60DA            	  3156:          BRA     MMDI23
                            	  3157: 
01:002016A4 99C6            	  3158: MMDI34   SUB.L   D6,A4          BACKUP PC
                            	  3159: 
01:002016A6 0C15002E        	  3160:          CMPI.B  #'.',(A5)
01:002016AA 670001DC        	  3161:          BEQ     MM905          CLOSE
                            	  3162: 
01:002016AE 47F80797        	  3163:          LEA     SYSTACK+17,A3  STORE BUFFER
                            	  3164: 
                            	  3165: *                  A3 = STORE POINTER
                            	  3166: *                  A4 = PROGRAM COUNTER
                            	  3167: *                  A5 = POINTER TO DATA TO ASSEMBLE
                            	  3168: *                  A6 = POINTER TO END OF SOURCE DATA
                            	  3169: 
01:002016B2 610015CA        	  3170:          BSR     CODE68K        ASSEMBLE
                            	  3171: 
                            	  3172: *                  A3 = POINTER TO LINE ASSEMBLED
                            	  3173: *                  A4 = PROGRAM COUNTER
                            	  3174: *                  A6 = POINTER END OF LINE ASSEMBLED
                            	  3175: *                  D0-D2 = DATA ASSEMBLED
                            	  3176: *                  D6 = NUMBER OF BYTES ASSEMBLED
                            	  3177: *                  D7 = ERROR FLAG & POSITION OF ERROR
                            	  3178: 
01:002016B6 2A4B            	  3179:          MOVE.L  A3,A5
01:002016B8 47EB004E        	  3180:          ADD.L   #78,A3         A3 = MAX LINE
01:002016BC B7CE            	  3181: MMDI26   CMP.L   A6,A3
01:002016BE 6506            	  3182:          BCS.S   MMDI27
01:002016C0 1CFC0020        	  3183:          MOVE.B  #BLANK,(A6)+   SPACE FILL LINE
01:002016C4 60F6            	  3184:          BRA     MMDI26
01:002016C6 6100091A        	  3185: MMDI27   BSR     OUT1CR         PRINT LINE JUST ENTERED
                            	  3186: 
01:002016CA 4A07            	  3187:          TST.B   D7
01:002016CC 6620            	  3188:          BNE.S   MMDI30         ERROR; DON'T STORE DATA
                            	  3189: 
01:002016CE 45F8078A        	  3190:          LEA     SYSTACK+4,A2   A2 = TEMP AREA
01:002016D2 48E2E000        	  3191:          MOVEM.L D0/D1/D2,-(A2) STORE DATA
01:002016D6 2206            	  3192:          MOVE.L  D6,D1          D1 = NUMBER OF BYTES TO STORE
01:002016D8 5381            	  3193:          SUBQ.L  #1,D1
01:002016DA 224C            	  3194:          MOVE.L  A4,A1          A1 = DATA STORE POINTER
01:002016DC 101A            	  3195: MMDI29   MOVE.B  (A2)+,D0
01:002016DE 1280            	  3196:          MOVE.B  D0,(A1)
01:002016E0 1419            	  3197:          MOVE.B  (A1)+,D2       INSURE DATA STORED
01:002016E2 B400            	  3198:          CMP.B   D0,D2
01:002016E4 66000196        	  3199:          BNE     MM90
01:002016E8 51C9FFF2        	  3200:          DBRA    D1,MMDI29
01:002016EC 608E            	  3201:          BRA     MMDI22
                            	  3202: 
01:002016EE 61000998        	  3203: MMDI30   BSR     FIXBUF
01:002016F2 1CFC0020        	  3204: MMDI44   MOVE.B  #BLANK,(A6)+   SPACES
01:002016F6 51CFFFFA        	  3205:          DBRA    D7,MMDI44
                            	  3206: 
01:002016FA 1D7C0058FFFF    	  3207:          MOVE.B  #'X',-1(A6)    X UNDER ERROR
01:00201700 1CFC003F        	  3208:          MOVE.B  #'?',(A6)+     ? ALLOW REINPUT
01:00201704 610008F6        	  3209:          BSR     OUTPUT
01:00201708 6088            	  3210:          BRA     MMDI31
                            	  3211: 
                            	  3212: 
                            	  3213: MCMD     DS      0              "M" Alias for "MM" Command
                            	  3214: MMCMD    DS      0              "MM" Command -Memory Modify-
01:0020170A 41FAEDA2        	  3215:          LEA     SYNTAX(PC),A0  A0=ERROR RETURN
01:0020170E 61000756        	  3216:          BSR     FNEXTF
01:00201712 6100F81E        	  3217:          BSR     GETA
01:00201716 2840            	  3218:          MOVE.L  D0,A4          A4= ADDRESS OF DATA
01:00201718 7C01            	  3219:          MOVEQ   #1,D6          SIZE = BYTE
01:0020171A 7A00            	  3220:          CLR.L   D5             NO OVERRIDE
                            	  3221: 
01:0020171C BDCD            	  3222: MM05     CMP.L   A5,A6
01:0020171E 6566            	  3223:          BCS.S   MM10           AT END OF BUFFER
                            	  3224: 
                            	  3225: * LOOK FOR ;OPTIONS
01:00201720 101D            	  3226:          MOVE.B  (A5)+,D0
01:00201722 0C00003B        	  3227:          CMPI.B  #';',D0
01:00201726 66F4            	  3228:          BNE     MM05           IGNORE NOT ;
                            	  3229: 
01:00201728 101D            	  3230:          MOVE.B  (A5)+,D0       GET NEXT CHAR
01:0020172A 0C000044        	  3231:          CMPI.B  #'D',D0
01:0020172E 660A            	  3232:          BNE.S   MM045
                            	  3233: 
01:00201730 0C1D0049        	  3234:          CMPI.B  #'I',(A5)+     DISSAMBLY OPTION
01:00201734 66E6            	  3235:          BNE     MM05
01:00201736 6000FF3A        	  3236:          BRA     MMDI
                            	  3237: 
01:0020173A 0C000057        	  3238: MM045    CMPI.B  #'W',D0
01:0020173E 6742            	  3239:          BEQ.S   MM065          ;W   D6=2
                            	  3240: 
01:00201740 0C00004C        	  3241:          CMPI.B  #'L',D0
01:00201744 6608            	  3242:          BNE.S   MM054
01:00201746 1C3C0004        	  3243:          MOVE.B  #4,D6          ;L   D6=4
01:0020174A 4205            	  3244:          CLR.B   D5             RESET BYTE OVERRIDE
01:0020174C 60CE            	  3245:          BRA     MM05
                            	  3246: 
01:0020174E 0C00004E        	  3247: MM054    CMPI.B  #'N',D0
01:00201752 6606            	  3248:          BNE.S   MM056
01:00201754 00458000        	  3249:          ORI.W   #$8000,D5      ;N  D5=$8000
01:00201758 60C2            	  3250:          BRA     MM05
                            	  3251: 
01:0020175A 0C00004F        	  3252: MM056    CMPI.B  #'O',D0
01:0020175E 6608            	  3253:          BNE.S   MM058
01:00201760 200C            	  3254:          MOVE.L  A4,D0          ;O
01:00201762 00000001        	  3255:          ORI.B   #1,D0          FORCE ODD ADDRESS
01:00201766 600E            	  3256:          BRA.S   MM060
                            	  3257: 
01:00201768 0C000056        	  3258: MM058    CMPI.B  #'V',D0
01:0020176C 6600ED40        	  3259:          BNE     SYNTAX         ERROR
01:00201770 200C            	  3260:          MOVE.L  A4,D0          ;V
01:00201772 020000FE        	  3261:          ANDI.B  #$FE,D0        FORCE EVEN ADDRESS
01:00201776 2840            	  3262: MM060    MOVE.L  D0,A4
01:00201778 00050080        	  3263:          ORI.B   #$80,D5        BYTE OVERRIDE
01:0020177C 1C3C0002        	  3264: MM064    MOVE.B  #2,D6          SIZE = WORD (2 BYTES)
01:00201780 609A            	  3265:          BRA     MM05
                            	  3266: 
01:00201782 4205            	  3267: MM065    CLR.B   D5             RESET BYTE OVERRIDE
01:00201784 60F6            	  3268:          BRA     MM064
                            	  3269: 
                            	  3270: * FORMAT ADDRESS FOR PRINTING
01:00201786 200C            	  3271: MM10     MOVE.L  A4,D0
01:00201788 0C060001        	  3272:          CMPI.B  #1,D6
01:0020178C 6708            	  3273:          BEQ.S   MM11           "BYTE"
01:0020178E 4A05            	  3274:          TST.B   D5
01:00201790 6B04            	  3275:          BMI.S   MM11           BYTE OVERRIDE
01:00201792 610006F0        	  3276:          BSR     CKWADR         CHK ALLIGNMENT
01:00201796 610006F2        	  3277: MM11     BSR     CKADDR         *
01:0020179A 610008EC        	  3278:          BSR     FIXBUF
01:0020179E 61000626        	  3279:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:002017A2 1CFC0020        	  3280:          MOVE.B  #BLANK,(A6)+   SPACE
                            	  3281: 
01:002017A6 4A45            	  3282:          TST.W   D5
01:002017A8 6B2C            	  3283:          BMI.S   MM18           NON-VERIFY (DON'T READ MEMORY)
                            	  3284: 
                            	  3285: * READ DATA FROM MEMORY & FORMAT IT
01:002017AA 4A05            	  3286:          TST.B   D5
01:002017AC 6B0C            	  3287:          BMI.S   MM12           BYTE OVERRIDE
                            	  3288: 
01:002017AE 0C060002        	  3289:          CMPI.B  #2,D6
01:002017B2 6710            	  3290:          BEQ.S   MM14           WORD
01:002017B4 0C060004        	  3291:          CMPI.B  #4,D6
01:002017B8 6714            	  3292:          BEQ.S   MM16           LONG WORD
                            	  3293: 
                            	  3294: * BYTE
                            	  3295: MM12
01:002017BA 1E14            	  3296:          MOVE.B  (A4),D7        D7 = DATA READ
01:002017BC 2007            	  3297:          MOVE.L  D7,D0
01:002017BE 610005EA        	  3298:          BSR     PNT2HX         FORMAT BYTE
01:002017C2 6012            	  3299:          BRA.S   MM18
                            	  3300: 
                            	  3301: * WORD
                            	  3302: MM14
01:002017C4 3E14            	  3303:          MOVE.W  (A4),D7
01:002017C6 2007            	  3304:          MOVE.L  D7,D0
01:002017C8 610005D8        	  3305:          BSR     PNT4HX         FORMAT WORD
01:002017CC 6008            	  3306:          BRA.S   MM18
                            	  3307: 
                            	  3308: * LONG WORD
                            	  3309: MM16
01:002017CE 2E14            	  3310:          MOVE.L  (A4),D7
01:002017D0 2007            	  3311:          MOVE.L  D7,D0
01:002017D2 610005C0        	  3312:          BSR     PNT8HX         FORMAT LONG WORD
                            	  3313: 
01:002017D6 1CFC0020        	  3314: MM18     MOVE.B  #BLANK,(A6)+   SPACE
01:002017DA 1CFC003F        	  3315:          MOVE.B  #'?',(A6)+
01:002017DE 6100081C        	  3316:          BSR     OUTPUT
                            	  3317: 
                            	  3318: * READ USER INPUT
                            	  3319: *  [DATA] (CR)   NEXT
                            	  3320: *           ^    LAST
                            	  3321: *           =    SAME
                            	  3322: *           .    EXIT
                            	  3323: 
01:002017E2 610008A4        	  3324:          BSR     FIXBUF
01:002017E6 610008A8        	  3325:          BSR     PORTIN1
01:002017EA BDCD            	  3326:          CMP.L   A5,A6
01:002017EC 67000082        	  3327:          BEQ     MM50           NO DATA (CR ONLY)
                            	  3328: 
01:002017F0 41FA005A        	  3329:          LEA     MM40(PC),A0    A0 = NO PARAMETER RETURN
01:002017F4 61000670        	  3330:          BSR     FNEXTF         FIND NEXT FIELD
                            	  3331: 
                            	  3332: * IF = ^ OR .  TAKE ACTION
01:002017F8 1015            	  3333:          MOVE.B  (A5),D0
01:002017FA 0C00003D        	  3334:          CMPI.B  #'=',D0
01:002017FE 6786            	  3335:          BEQ     MM10
01:00201800 0C00002E        	  3336:          CMPI.B  #'.',D0
01:00201804 6700EE28        	  3337:          BEQ     MACSBUG
01:00201808 0C00005E        	  3338:          CMPI.B  #'^',D0
01:0020180C 6768            	  3339:          BEQ.S   MM60
                            	  3340: 
01:0020180E 610006AA        	  3341:          BSR     GETEXP         GET DATA
01:00201812 2E00            	  3342:          MOVE.L  D0,D7          D7=DATA STORED
                            	  3343: 
                            	  3344: * WE HAVE DATA; STORE IT
01:00201814 4A05            	  3345:          TST.B   D5
01:00201816 6B0C            	  3346:          BMI.S   MM22           BYTE OVERRIDE
                            	  3347: 
01:00201818 0C060002        	  3348:          CMPI.B  #2,D6
01:0020181C 6714            	  3349:          BEQ.S   MM24           WORD
01:0020181E 0C060004        	  3350:          CMPI.B  #4,D6
01:00201822 671C            	  3351:          BEQ.S   MM26           LONG WORD
                            	  3352: 
                            	  3353: * BYTE
                            	  3354: MM22
01:00201824 1880            	  3355:          MOVE.B  D0,(A4)        STORE DATA
01:00201826 4A45            	  3356:          TST.W   D5
01:00201828 6B22            	  3357:          BMI.S   MM40           NO-VERIFY
01:0020182A 1014            	  3358:          MOVE.B  (A4),D0
01:0020182C B007            	  3359:          CMP.B   D7,D0
01:0020182E 664C            	  3360:          BNE.S   MM90           NO MATCH
01:00201830 601A            	  3361:          BRA.S   MM40
                            	  3362: 
                            	  3363: * WORD
                            	  3364: MM24
01:00201832 3880            	  3365:          MOVE.W  D0,(A4)        STORE
01:00201834 4A45            	  3366:          TST.W   D5
01:00201836 6B14            	  3367:          BMI.S   MM40           DO NOT VERIFY
01:00201838 3014            	  3368:          MOVE.W  (A4),D0
01:0020183A B047            	  3369:          CMP.W   D7,D0
01:0020183C 663E            	  3370:          BNE.S   MM90           NO MATCH
01:0020183E 600C            	  3371:          BRA.S   MM40
                            	  3372: 
                            	  3373: * LONG WORD
                            	  3374: MM26
01:00201840 2880            	  3375:          MOVE.L  D0,(A4)
01:00201842 4A45            	  3376:          TST.W   D5
01:00201844 6B06            	  3377:          BMI.S   MM40           DO NOT VERIFY
01:00201846 2014            	  3378:          MOVE.L  (A4),D0
01:00201848 B087            	  3379:          CMP.L   D7,D0
01:0020184A 6630            	  3380:          BNE.S   MM90           NO MATCH
                            	  3381: 
                            	  3382: * LOOK FOR  . = ^
01:0020184C 1015            	  3383: MM40     MOVE.B  (A5),D0
01:0020184E 0C00002E        	  3384:          CMPI.B  #'.',D0
01:00201852 6700EDDA        	  3385:          BEQ     MACSBUG        DONE
01:00201856 0C00005E        	  3386:          CMPI.B  #'^',D0
01:0020185A 671A            	  3387:          BEQ.S   MM60           BACKUP ADDRESS
01:0020185C 0C00003D        	  3388:          CMPI.B  #'=',D0
01:00201860 6700FF24        	  3389:          BEQ     MM10           ADDRESS STAYS THE SAME
01:00201864 0C000020        	  3390:          CMPI.B  #BLANK,D0
01:00201868 6706            	  3391:          BEQ.S   MM50
01:0020186A BDCD            	  3392:          CMP.L   A5,A6
01:0020186C 6600EC40        	  3393:          BNE     SYNTAX         ERROR
                            	  3394: 
                            	  3395: * ADDRESS LOW TO HIGH
01:00201870 D9C6            	  3396: MM50     ADD.L   D6,A4
01:00201872 6000FF12        	  3397:          BRA     MM10
                            	  3398: 
                            	  3399: * ADDRESS HIGH TO LOW
01:00201876 99C6            	  3400: MM60     SUB.L   D6,A4
01:00201878 6000FF0C        	  3401:          BRA     MM10
                            	  3402: 
01:0020187C 4BFA00B6        	  3403: MM90     LEA     MSG017(PC),A5  'DATA DID NOT STORE'
01:00201880 6100EC7C        	  3404: MM95     BSR     FIXDCRLF
01:00201884 6000EC1A        	  3405:          BRA     MSG
                            	  3406: 
01:00201888 4BFAEC05        	  3407: MM905    LEA     MSGEOT(PC),A5
01:0020188C 60F2            	  3408:          BRA     MM95
                            	  3409: 
                            	  3410: 
                            	  3411: 
                            	  3412: 
                            	  3413: *-------------------------------------------------------------------------
                            	  3414: * File MS        Memory set command                               11/02/81
                            	  3415: 
                            	  3416: *    ***MS***   MEMORY SET
                            	  3417: *     FORMAT: MS  ADDRESS HEX HEX,HEX,'ASCII'  ETC.
                            	  3418: *     COMMAS OR SPACES BETWEEN FIELDS
                            	  3419: *     FIELDS ARE SIZE ADJUSTED (STORES UP TO 4 BYTES)
                            	  3420: *     ASCII ENCLOSED IN SINGLE QUOTES-ANY LENGTH
                            	  3421: 
01:0020188E 41FAEC1E        	  3422: MSCMD    LEA     SYNTAX(PC),A0  IF NO PARAMETERS
01:00201892 610005D2        	  3423:          BSR     FNEXTF         FIND NEXT FIELD
01:00201896 6100F69A        	  3424:          BSR     GETA           GET ADDRESS
01:0020189A 610005EE        	  3425:          BSR     CKADDR         CHECK VALID ADDRESS
                            	  3426: 
01:0020189E 2240            	  3427:          MOVE.L  D0,A1          A1=START (OPEN) ADDRESS
01:002018A0 41FAED8C        	  3428: SETM1    LEA     MACSBUG(PC),A0 IF NO PARAMTER
01:002018A4 610005C0        	  3429:          BSR     FNEXTF         FIND NEXT FIELD
01:002018A8 284D            	  3430:          MOVE.L  A5,A4          SAVE ADDRESS OF PARAMTER
01:002018AA 1015            	  3431:          MOVE.B  (A5),D0        CHECK OUT NEXT CHARACTER
01:002018AC 0C000027        	  3432:          CMPI.B  #$27,D0        SEE IF IT IS QUOTE MARK
01:002018B0 6730            	  3433:          BEQ.S   SETM5          SPECIAL ROUTINE
01:002018B2 0C00004E        	  3434:          CMPI.B  #'N',D0        SEE IF NEXT LINE FEATURE
01:002018B6 674E            	  3435:          BEQ.S   SETM7
01:002018B8 6100062E        	  3436:          BSR     GETNUMA        GET THE DATA
01:002018BC 2649            	  3437:          MOVE.L  A1,A3          ADDRESS
01:002018BE 220D            	  3438:          MOVE.L  A5,D1          COMPUTE BYTES OF DATA
01:002018C0 928C            	  3439:          SUB.L   A4,D1          LEN=END-START
01:002018C2 E281            	  3440:          ASR.L   #1,D1          BYTES=CHAR/2
01:002018C4 6402            	  3441:          BCC.S   SETM3          TAKE CARE OF ODD CHARACTER
01:002018C6 5281            	  3442:          ADDQ.L  #1,D1          WHOLE NUMBER OF BYTES
01:002018C8 2401            	  3443: SETM3    MOVE.L  D1,D2          D1 SCANS DOWN
01:002018CA 5382            	  3444:          SUBQ.L  #1,D2          KNOCK IT DOWN TO INDEX
01:002018CC 17802000        	  3445:          MOVE.B  D0,0(A3,D2)    INDEXED BECAUSE BACKWARD
                            	  3446: 
01:002018D0 16332000        	  3447:          MOVE.B  0(A3,D2),D3    REREAD TO CHECK IF STORED OK
                            	  3448: 
01:002018D4 B600            	  3449:          CMP.B   D0,D3          ARE SAME?
01:002018D6 6622            	  3450:          BNE.S   SETME          'DATA DID NOT STORE'
                            	  3451: 
01:002018D8 E080            	  3452:          ASR.L   #8,D0          SHIFT ONE BYTE
01:002018DA 5289            	  3453:          ADDQ.L  #1,A1          BUMP ADDRESS
01:002018DC 5381            	  3454:          SUBQ.L  #1,D1
01:002018DE 66E8            	  3455:          BNE     SETM3
01:002018E0 60BE            	  3456:          BRA.S   SETM1          GO DO NEXT DATA
                            	  3457: 
                            	  3458: *  DATA IN IN ASCII STRING
01:002018E2 528D            	  3459: SETM5    ADDQ.L  #1,A5          GET PAST QUOTE MARK
01:002018E4 BBCE            	  3460: SETM6    CMP.L   A6,A5          SEE IF END OF BUFFER
01:002018E6 6C00ED46        	  3461:          BGE     MACSBUG
01:002018EA 101D            	  3462:          MOVE.B  (A5)+,D0       GRAB CHARACTER
01:002018EC 0C000027        	  3463:          CMPI.B  #$27,D0        SEE IF QUOTE MARK
01:002018F0 67AE            	  3464:          BEQ.S   SETM1          IF SO-END OF STRING
01:002018F2 1280            	  3465:          MOVE.B  D0,(A1)        SAVE DATA
                            	  3466: 
01:002018F4 1219            	  3467:          MOVE.B  (A1)+,D1       REREAD FOR CHECK
                            	  3468: 
01:002018F6 B001            	  3469:          CMP.B   D1,D0          SEE IF SAME
01:002018F8 67EA            	  3470:          BEQ     SETM6
01:002018FA 4BFA0038        	  3471: SETME    LEA     MSG017(PC),A5  'DATA DID NOT STORE'
01:002018FE 6100EBFE        	  3472:          BSR     FIXDCRLF
01:00201902 6000EB9C        	  3473:          BRA     MSG
                            	  3474: 
01:00201906 61000780        	  3475: SETM7    BSR     FIXBUF         DISPLAY CURRENT ADDRESS
01:0020190A 2009            	  3476:          MOVE.L  A1,D0
01:0020190C 61000486        	  3477:          BSR     PNT8HX         PUT ADDRESS IN BUFFER
01:00201910 2CFC20203F20    	  3478:          MOVE.L  #'  ? ',(A6)+  PROMPT
01:00201916 610006E4        	  3479:          BSR     OUTPUT         DUMP BUFFER WITH NO LF CR
01:0020191A 6100076C        	  3480:          BSR     FIXBUF         GET READY FOR INPUT
01:0020191E 1AFC0020        	  3481:          MOVE.B  #BLANK,(A5)+   ADVANCE IN BUFFER
01:00201922 2C4D            	  3482:          MOVE.L  A5,A6          BECAUSE OF SNAFU IN FINDNP
01:00201924 6100076A        	  3483:          BSR     PORTIN1        INPUT FROM CONSOLE
01:00201928 1025            	  3484:          MOVE.B  -(A5),D0       JUST BACK UP IN BUFFER
01:0020192A BBCE            	  3485:          CMP.L   A6,A5
01:0020192C 6700ED00        	  3486:          BEQ     MACSBUG
01:00201930 6000FF6E        	  3487:          BRA     SETM1          DO DECODE IT
                            	  3488: 
01:00201934 4441544120444944	  3489: MSG017   DC.B    'DATA DID NOT STORE',CR,LF,EOT
01:0020193C 204E4F542053544F
01:00201944 5245
01:00201946 0D
01:00201947 0A
01:00201948 04
                            	  3490: 
                            	  3491: 
                            	  3492: 
                            	  3493: 
                            	  3494: 
01:00201949 00              	  3495:          DC.B    0              PAD BYTE
                            	  3496: 
                            	  3497: 
                            	  3498: 
                            	  3499: 
                            	  3500: *-------------------------------------------------------------------------
                            	  3501: * File MTSETUP   MTSETUP memory test setup                        11/02/81
                            	  3502: 
                            	  3503: *
                            	  3504: * SET UP PARMS FOR BLOCK TEST AND BLOCK INITIALIZE
                            	  3505: *
                            	  3506: 
                            	  3507: MTSETUP  DS      0
01:0020194A 21CF04D6        	  3508:          MOVE.L  A7,TEMP        STACK FOR EXCEPTION RETURN
01:0020194E 41FAEB5E        	  3509:          LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMETERS
01:00201952 61000512        	  3510:          BSR     FNEXTF         FIND NEXT FIELD
01:00201956 6100F5DA        	  3511:          BSR     GETA           GET ADDR1
01:0020195A 61000528        	  3512:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:0020195E 2640            	  3513:          MOVE.L  D0,A3          SAVE STARTING ADDRESS
                            	  3514: 
01:00201960 41FAEB4C        	  3515:          LEA     SYNTAX(PC),A0  SET UP TO TRY "TO" ADDRESS
01:00201964 61000500        	  3516:          BSR     FNEXTF         *
01:00201968 6100F5C8        	  3517:          BSR     GETA           GET ADDR2
01:0020196C 61000516        	  3518:          BSR     CKWADR
01:00201970 2240            	  3519:          MOVE.L  D0,A1          A1 = END ADDRESS?
01:00201972 204B            	  3520:          MOVE.L  A3,A0          A0 = STARTING ADDRESS
01:00201974 6100EB46        	  3521:          BSR     P2PHY          DISPLAY TWO ADDRESSES
01:00201978 B3C8            	  3522:          CMP.L   A0,A1
01:0020197A 6500EB32        	  3523:          BCS     SYNTAX         END ADDR TOO SMALL
01:0020197E 5489            	  3524:          ADDQ.L  #2,A1          ADJUST END ADDR
01:00201980 4E75            	  3525:          RTS
                            	  3526: 
                            	  3527: 
                            	  3528: 
                            	  3529: 
                            	  3530: *-------------------------------------------------------------------------
                            	  3531: * File OF        OF & PERIOD Command                              12/18/81
                            	  3532: 
                            	  3533: * .*  HANDLER
                            	  3534: *   GET TWO CHARACTERS FOLLOWING PERIOD
                            	  3535: 
01:00201982 E149            	  3536: PERCMD   LSL.W   #8,D1
01:00201984 1215            	  3537:          MOVE.B  (A5),D1        D1 = 2ND,3RD CHARACTERS
01:00201986 538D            	  3538:          SUBQ.L  #1,A5          A5 = POINTER TO 2ND CHAR  (1ST REAL CHARACTER)
                            	  3539: 
01:00201988 41FA0030        	  3540:          LEA     REGTBL(PC),A0
01:0020198C 7E00            	  3541: PER4     CLR.L   D7
01:0020198E 3E18            	  3542:          MOVE.W  (A0)+,D7       SAVE FIRST WORD FOR END OF TABLE TEST
01:00201990 3018            	  3543:          MOVE.W  (A0)+,D0       GET REAL REGISTER ID INTO D0
01:00201992 0C47FFFF        	  3544:          CMPI.W  #$FFFF,D7      ARE WE AT THE END OF THE TABLE?
01:00201996 6700EAFE        	  3545:          BEQ     WHAT           YES...THEN WE DIDNT FIND IT
                            	  3546: 
01:0020199A 0C000040        	  3547:          CMPI.B  #'@',D0
01:0020199E 660E            	  3548:          BNE.S   PER3           NOT @
                            	  3549: 
                            	  3550: * THIRD CHAR MUST BE NUMERIC 0 - 7
01:002019A0 1001            	  3551:          MOVE.B  D1,D0          ALLEGED DIGIT
01:002019A2 0C000030        	  3552:          CMPI.B  #'0',D0
01:002019A6 6BE4            	  3553:          BMI     PER4           NOT A DIGIT
01:002019A8 0C000038        	  3554:          CMPI.B  #'8',D0
01:002019AC 6ADE            	  3555:          BPL     PER4           NOT A DIGIT
                            	  3556: 
01:002019AE B041            	  3557: PER3     CMP.W   D1,D0
01:002019B0 66DA            	  3558:          BNE     PER4           MISS-MATCH
                            	  3559: 
                            	  3560: *******************************************************************
                            	  3561: *        AT THIS TIME WE HAVE FOUND THE ENTRY IN THE "REG TABLE"  *
                            	  3562: *        WE NOW NEED TO EXTRACT AND USE THE OFFSET                *
                            	  3563: *******************************************************************
                            	  3564: 
01:002019B2 41FAE64C        	  3565:          LEA     FIRST(PC),A0   A0 = Start of VERSAbug RO
01:002019B6 D1C7            	  3566:          ADD.L   D7,A0          Add offset
01:002019B8 4ED0            	  3567:          JMP     (A0)           Now go to the calculated location
                            	  3568: 
                            	  3569: 
                            	  3570: ***************
                            	  3571: REGTBL   EQU  *
                            	  3572: ***************
                            	  3573: 
01:002019BA 19FC            	  3574:          DC.W    SETA7-FIRST    Stack Register Routine
01:002019BC 4137            	  3575:          DC.W    'A7'           *
                            	  3576: 
01:002019BE 19F0            	  3577:          DC.W    SETPC-FIRST    Program Counter Routine
01:002019C0 5043            	  3578:          DC.W    'PC'           *
                            	  3579: 
01:002019C2 19F6            	  3580:          DC.W    SETSR-FIRST    Status Register Routine
01:002019C4 5352            	  3581:          DC.W    'SR'           *
                            	  3582: 
01:002019C6 1A0C            	  3583:          DC.W    SETUS-FIRST    User Stack Routine
01:002019C8 5553            	  3584:          DC.W    'US'           *
                            	  3585: 
01:002019CA 1A06            	  3586:          DC.W    SETSS-FIRST    System Stack Routine
01:002019CC 5353            	  3587:          DC.W    'SS'           *
                            	  3588: 
01:002019CE 19E4            	  3589:          DC.W    SETD-FIRST     Data Register Routine
01:002019D0 4440            	  3590:          DC.W    'D@'           *
                            	  3591: 
01:002019D2 19EA            	  3592:          DC.W    SETA-FIRST     Address Register Routine
01:002019D4 4140            	  3593:          DC.W    'A@'           *
                            	  3594: 
01:002019D6 1AC4            	  3595:          DC.W    PNTCLSA-FIRST  All Address Registers Routine
01:002019D8 4120            	  3596:          DC.W    'A '           *
                            	  3597: 
01:002019DA 1ABA            	  3598:          DC.W    PNTCLSD-FIRST  All Data Registers Routine
01:002019DC 4420            	  3599:          DC.W    'D '           *
                            	  3600: 
01:002019DE 1A12            	  3601:          DC.W    SETRN-FIRST    All Registers Routine
01:002019E0 5240            	  3602:          DC.W    'R@'           *
                            	  3603: 
01:002019E2 FFFF            	  3604:          DC.W    $FFFF          END OF TABLE
                            	  3605: 
                            	  3606: *    PRINT & INPUT REGISTER ROUTINES
                            	  3607: 
01:002019E4 49F80408        	  3608: SETD     LEA     REGS,A4        START OF REGISTERS
01:002019E8 6034            	  3609:          BRA.S   SETR
                            	  3610: 
01:002019EA 49F80428        	  3611: SETA     LEA     REGS+32,A4     OFFSET IN REGISTER TABLE
01:002019EE 602E            	  3612:          BRA.S   SETR
                            	  3613: 
01:002019F0 49F80400        	  3614: SETPC    LEA     REGPC,A4       WHERE PC IS
01:002019F4 6030            	  3615:          BRA.S   SETR0
                            	  3616: 
01:002019F6 49F80404        	  3617: SETSR    LEA     REGSR,A4       WHERE SR IS
01:002019FA 602A            	  3618:          BRA.S   SETR0
                            	  3619: 
01:002019FC 22380404        	  3620: SETA7    MOVE.L  REGSR,D1       GET CONDITION CODES
01:00201A00 02412000        	  3621:          ANDI.W  #$2000,D1      CHECK SUPERVISOR BIT
01:00201A04 6706            	  3622:          BEQ.S   SETUS
01:00201A06 49F80444        	  3623: SETSS    LEA     REGA7,A4       WHERE SUPERVISOR STACK IS
01:00201A0A 601A            	  3624:          BRA.S   SETR0
                            	  3625: 
01:00201A0C 49F80448        	  3626: SETUS    LEA     REGUS,A4       USER STACK
01:00201A10 6014            	  3627:          BRA.S   SETR0
                            	  3628: 
01:00201A12 49F8044C        	  3629: SETRN    LEA     OFFSET,A4      SET OFFSET
01:00201A16 0C010037        	  3630:          CMPI.B  #'7',D1
01:00201A1A 6700EA92        	  3631:          BEQ     SYNTAX         NOT ALLOWED TO CHANGE A7
                            	  3632: 
                            	  3633: 
                            	  3634: *  ROUTINE TO ENTER DATA FOR A SINGLE REGISTER
                            	  3635: *   A5-A6 ARE COMMAND BUFFER
                            	  3636: *   D0 HAS REGISTER DIGIT A4 HAS CLASS OFFSET
                            	  3637: 
01:00201A1E 61000578        	  3638: SETR     BSR     GETHEX         GET REG NUMBER
01:00201A22 E588            	  3639:          LSL.L   #2,D0          SHIFT LEFT...MULT BY 4
01:00201A24 D9C0            	  3640:          ADD.L   D0,A4          A4 NOW HAS EXACT ADDRESS
01:00201A26 548D            	  3641: SETR0    ADDQ.L  #2,A5          NOW FIND PARAMETERS
01:00201A28 103C003A        	  3642:          MOVE.B  #':',D0        SEE IF COLON IN COMMAND
01:00201A2C 6154            	  3643:          BSR.S   SCAN
01:00201A2E 671E            	  3644:          BEQ.S   SETR5
                            	  3645: *SEE IF ANY PARAMER (HEX)
01:00201A30 41FA0016        	  3646:          LEA     SETR4(PC),A0   WHERE TO GO IF NO PARAMETERS
01:00201A34 61000430        	  3647:          BSR     FNEXTF         FIND NEXT FIELD
                            	  3648: 
01:00201A38 0C00002E        	  3649:          CMPI.B  #'.',D0
01:00201A3C 6706            	  3650:          BEQ.S   SEMACS         PERIOD; GET OUT
                            	  3651: 
01:00201A3E 6100F4F2        	  3652:          BSR     GETA           GET ADDRESS VALUE
01:00201A42 2880            	  3653:          MOVE.L  D0,(A4)        SAVE NEW VALUE
01:00201A44 6000EBE8        	  3654: SEMACS   BRA     MACSBUG
                            	  3655: 
                            	  3656: *JUST PRINT IT
                            	  3657: 
01:00201A48 6148            	  3658: SETR4    BSR.S   PRINTR         FIX UP TO PRINT
01:00201A4A 6000EA54        	  3659:          BRA     MSG            GO PRINT MESSAGE-GO TO MACSBUG
                            	  3660: 
01:00201A4E 6102            	  3661: SETR5    BSR.S   SETSR1
01:00201A50 60F2            	  3662:          BRA     SEMACS
                            	  3663: 
01:00201A52 613E            	  3664: SETSR1   BSR.S   PRINTR         FIX UP TO PRINT
01:00201A54 1CFC0020        	  3665:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201A58 1CFC003F        	  3666:          MOVE.B  #'?',(A6)+     PROMPT
01:00201A5C 1CFC0020        	  3667:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201A60 6100059A        	  3668:          BSR     OUTPUT         PRINT IT
                            	  3669: 
01:00201A64 61000622        	  3670:          BSR     FIXBUF
01:00201A68 61000626        	  3671:          BSR     PORTIN1
                            	  3672: 
01:00201A6C 41FA0012        	  3673:          LEA     SETSR15(PC),A0 A0=DEFAULT (NO PARM) ADDRESS
01:00201A70 610003F4        	  3674:          BSR     FNEXTF         FIND FIELD
                            	  3675: 
01:00201A74 0C00002E        	  3676:          CMPI.B  #'.',D0
01:00201A78 67CA            	  3677:          BEQ     SEMACS         PERIOD; GET OUT
                            	  3678: 
01:00201A7A 6100F4B6        	  3679:          BSR     GETA           CONVERT IT
01:00201A7E 2880            	  3680:          MOVE.L  D0,(A4)        STORE NEW DATA
                            	  3681: 
                            	  3682: SETSR15  DS      0
01:00201A80 4E75            	  3683:          RTS
                            	  3684: 
                            	  3685: 
                            	  3686: * SEE IF CHARACTER IS IN BUFFER
                            	  3687: 
01:00201A82 204D            	  3688: SCAN     MOVE.L  A5,A0          A0 IS WORKING SCANNER
01:00201A84 B1CE            	  3689: SCAN2    CMP.L   A6,A0          SEE IF AT END OF BUFFER
01:00201A86 6208            	  3690:          BHI.S   RETURN5
01:00201A88 B010            	  3691:          CMP.B   (A0),D0        LOOK AT CHARACTER
01:00201A8A 6704            	  3692:          BEQ.S   RETURN5
01:00201A8C 5288            	  3693:          ADDQ.L  #1,A0          GET PAST CHARACTER
01:00201A8E 60F4            	  3694:          BRA.S   SCAN2
01:00201A90 4E75            	  3695: RETURN5  RTS
                            	  3696: 
                            	  3697: * ROUTINE TO SET UP TO PRINT REG
                            	  3698: 
01:00201A92 610005F4        	  3699: PRINTR   BSR     FIXBUF
                            	  3700: 
01:00201A96 568E            	  3701:          ADDQ.L  #3,A6          GET PAST REG NAME (.XX)
01:00201A98 1CFC003D        	  3702:          MOVE.B  #'=',(A6)+     PUT IN EQUAL SIGN
01:00201A9C 2014            	  3703:          MOVE.L  (A4),D0        GET VALUE
01:00201A9E B8FC0404        	  3704:          CMPA.L  #REGSR,A4      SEE IF THIS IS CONDITION CODES
01:00201AA2 6606            	  3705:          BNE.S   PRINTR2
01:00201AA4 610002FC        	  3706:          BSR     PNT4HX         JUST PRINT WORD
01:00201AA8 4E75            	  3707:          RTS
                            	  3708: 
01:00201AAA 610002E8        	  3709: PRINTR2  BSR     PNT8HX         PRINT THE VALUE
01:00201AAE 4E75            	  3710:          RTS
                            	  3711: 
                            	  3712: *
                            	  3713: *   PRINT ALL REGISTERS IN A CLASS (A OR D OR R)
                            	  3714: *
                            	  3715: 
                            	  3716: OFCMD    DS      0              "OF" Command -Display Offset registers-
01:00201AB0 1E3C0052        	  3717: SETO     MOVE.B  #'R',D7
01:00201AB4 47F8044C        	  3718:          LEA     OFFSET,A3
01:00201AB8 6012            	  3719:          BRA.S   PNTCLSB
                            	  3720: 
01:00201ABA 1E3C0044        	  3721: PNTCLSD  MOVE.B  #'D',D7        CLASS=DATA
01:00201ABE 47F80408        	  3722:          LEA     REGS,A3        OFFSET
01:00201AC2 6008            	  3723:          BRA.S   PNTCLSB
                            	  3724: 
01:00201AC4 1E3C0041        	  3725: PNTCLSA  MOVE.B  #'A',D7        CLASS=ADDRESS
01:00201AC8 47F80428        	  3726:          LEA     REGS+32,A3     OFFSET
01:00201ACC 6104            	  3727: PNTCLSB  BSR.S   PNTCLS
01:00201ACE 6000EB5E        	  3728:          BRA     MACSBUG
                            	  3729: 
01:00201AD2 610005B4        	  3730: PNTCLS   BSR     FIXBUF
01:00201AD6 7C00            	  3731:          CLR.L   D6             REGISTER COUNTER
01:00201AD8 611C            	  3732: PNTCLS1  BSR.S   PNTREG         PRINT THE REGISTER
01:00201ADA 0C060004        	  3733:          CMPI.B  #4,D6          DISPLAY AFTER 3&7
01:00201ADE 660A            	  3734:          BNE.S   PNTCLS2
01:00201AE0 61000500        	  3735:          BSR     OUT1CR
01:00201AE4 610005A2        	  3736:          BSR     FIXBUF
01:00201AE8 60EE            	  3737:          BRA     PNTCLS1        DO SOME MORE
                            	  3738: 
01:00201AEA 0C060008        	  3739: PNTCLS2  CMPI.B  #8,D6          AT END?
01:00201AEE 66E8            	  3740:          BNE     PNTCLS1
01:00201AF0 610004F0        	  3741:          BSR     OUT1CR         PRINT IT
01:00201AF4 4E75            	  3742:          RTS
                            	  3743: 
                            	  3744: *  SUBROUTINE TO PRINT REGISTER  X#=01234567.
                            	  3745: 
01:00201AF6 1CC7            	  3746: PNTREG   MOVE.B  D7,(A6)+       CLASS
01:00201AF8 1006            	  3747:          MOVE.B  D6,D0          REG#
01:00201AFA 610002B6        	  3748:          BSR     PUTHEX
01:00201AFE 1CFC003D        	  3749:          MOVE.B  #'=',(A6)+     EQUAL SIGN
01:00201B02 2006            	  3750:          MOVE.L  D6,D0          COMPUTE ADDRESS OF REG
01:00201B04 E588            	  3751:          LSL.L   #2,D0          MULT BY FOUR
01:00201B06 D08B            	  3752:          ADD.L   A3,D0          ADD IN OFFSET
01:00201B08 2840            	  3753:          MOVE.L  D0,A4          SET UP TO GET DEFFERED
01:00201B0A B8FC0444        	  3754:          CMPA.L  #REGA7,A4      SEE IF REG A7
01:00201B0E 660E            	  3755:          BNE.S   PNTREG1
01:00201B10 20380404        	  3756:          MOVE.L  REGSR,D0       GET STATUS REGISTER
01:00201B14 02402000        	  3757:          ANDI.W  #$2000,D0      CHECK SUPERVISOR BIT
01:00201B18 6604            	  3758:          BNE.S   PNTREG1
01:00201B1A 49F80448        	  3759:          LEA     REGUS,A4       TAKE ADDRESS OF USER STACK
01:00201B1E 2014            	  3760: PNTREG1  MOVE.L  (A4),D0        GET REG CONTENT
01:00201B20 61000272        	  3761:          BSR     PNT8HX         PUT IN BUFFER
01:00201B24 1CFC0020        	  3762:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201B28 5286            	  3763:          ADDQ.L  #1,D6          BUMP REG#
01:00201B2A 4E75            	  3764:          RTS
                            	  3765: 
                            	  3766: 
                            	  3767: 
                            	  3768: 
                            	  3769: *-------------------------------------------------------------------------
                            	  3770: * File PF        "PFCMD", Port format                             05/19/82
                            	  3771: 
                            	  3772: * **PF**   PF      DISPLAY PORT PROFILE
                            	  3773: *          PF1     DISPLAY/CHANGE PORT 1
                            	  3774: *          PF2     DISPLAY/CHANGE PORT 2
                            	  3775: 
01:00201B2C 1C15            	  3776: PFCMD    MOVE.B  (A5),D6        D6 = PORT #
01:00201B2E 0C060031        	  3777:          CMPI.B  #'1',D6
01:00201B32 675A            	  3778:          BEQ.S   PFCMD1         CHANGE PORT 1
01:00201B34 0C060032        	  3779:          CMPI.B  #'2',D6
01:00201B38 6754            	  3780:          BEQ.S   PFCMD1         CHANGE PORT 2
                            	  3781: 
01:00201B3A 43F8064C        	  3782:          LEA     MD1CON,A1      PRINT BOTH PORTS
01:00201B3E 4BFA00A2        	  3783:          LEA     MSG003(PC),A5
01:00201B42 6132            	  3784:          BSR.S   PFPT           DISPLAY/CHANGE
01:00201B44 610004B6        	  3785:          BSR     OUTPUT
                            	  3786: 
01:00201B48 43F80618        	  3787:          LEA     NULLPADS,A1
01:00201B4C 4BFA009F        	  3788:          LEA     MSG004(PC),A5
01:00201B50 6124            	  3789:          BSR.S   PFPT
01:00201B52 610004A8        	  3790:          BSR     OUTPUT
                            	  3791: 
01:00201B56 43F8061A        	  3792:          LEA     CRPADS,A1
01:00201B5A 4BFA009C        	  3793:          LEA     MSG005(PC),A5
01:00201B5E 6116            	  3794:          BSR.S   PFPT
                            	  3795: 
01:00201B60 4BFA00A1        	  3796:          LEA     MSG031(PC),A5  TELL WHERE XONOFF IS
01:00201B64 6100E988        	  3797:          BSR     FIXDADD
01:00201B68 203C000004E6    	  3798:          MOVE.L  #OPTIONS,D0
01:00201B6E 6100022C        	  3799:          BSR     PNT6HX         "OPTIONS@AAAAAA"
01:00201B72 6000E92C        	  3800:          BRA     MSG
                            	  3801: 
01:00201B76 6100E986        	  3802: PFPT     BSR     FIXDCRLF       FORMAT FROM A5
01:00201B7A 1011            	  3803:          MOVE.B  (A1),D0
01:00201B7C 6100022C        	  3804:          BSR     PNT2HX         FORMAT DATA
01:00201B80 1CFC0020        	  3805:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201B84 10290001        	  3806:          MOVE.B  1(A1),D0
01:00201B88 61000220        	  3807:          BSR     PNT2HX         FORMAT DATA PORT 2
01:00201B8C 4E75            	  3808:          RTS
                            	  3809: 
                            	  3810: 
01:00201B8E 43F8064C        	  3811: PFCMD1   LEA     MD1CON,A1
01:00201B92 4BFA004E        	  3812:          LEA     MSG003(PC),A5
01:00201B96 6120            	  3813:          BSR.S   PFCH           DISPLAY/CHANGE
                            	  3814: 
01:00201B98 43F80618        	  3815:          LEA     NULLPADS,A1
01:00201B9C 4BFA004F        	  3816:          LEA     MSG004(PC),A5
01:00201BA0 6116            	  3817:          BSR.S   PFCH
                            	  3818: 
01:00201BA2 43F8061A        	  3819:          LEA     CRPADS,A1
01:00201BA6 4BFA0050        	  3820:          LEA     MSG005(PC),A5
01:00201BAA 610C            	  3821:          BSR.S   PFCH
01:00201BAC 610007BE        	  3822:          BSR     INITSER        PLACE NEW SBITS INTO ACIA
01:00201BB0 610004D6        	  3823:          BSR     FIXBUF         BLANK LINE FOR SPACING
01:00201BB4 6000E8EA        	  3824:          BRA     MSG
                            	  3825: 
01:00201BB8 6100E930        	  3826: PFCH     BSR     FIXDATA        FORMAT FROM A5
01:00201BBC 0C060031        	  3827:          CMPI.B  #'1',D6
01:00201BC0 6702            	  3828:          BEQ.S   PFCH2          PORT 1
01:00201BC2 5289            	  3829:          ADDQ.L  #1,A1          PORT 2
01:00201BC4 1011            	  3830: PFCH2    MOVE.B  (A1),D0
01:00201BC6 610001E2        	  3831:          BSR     PNT2HX         FORMAT DATA
01:00201BCA 1CFC003F        	  3832:          MOVE.B  #'?',(A6)+
01:00201BCE 6100042C        	  3833:          BSR     OUTPUT
                            	  3834: 
01:00201BD2 610004BC        	  3835:          BSR     PORTIN1        INPUT LINE
01:00201BD6 BDCD            	  3836:          CMP.L   A5,A6
01:00201BD8 6706            	  3837:          BEQ.S   PFCH4          NOTHING INPUT
                            	  3838: 
01:00201BDA 6100030C        	  3839:          BSR     GETNUMA
01:00201BDE 1280            	  3840:          MOVE.B  D0,(A1)
01:00201BE0 4E75            	  3841: PFCH4    RTS
                            	  3842: 
01:00201BE2 464F524D41543D20	  3843: MSG003   DC.B    'FORMAT=   ',EOT
01:00201BEA 2020
01:00201BEC 04
                            	  3844: 
                            	  3845: 
                            	  3846: 
01:00201BED 43484152204E554C	  3847: MSG004   DC.B    'CHAR NULL=',EOT
01:00201BF5 4C3D
01:00201BF7 04
                            	  3848: 
                            	  3849: 
                            	  3850: 
01:00201BF8 432F5220204E554C	  3851: MSG005   DC.B    'C/R  NULL=',EOT
01:00201C00 4C3D
01:00201C02 04
                            	  3852: 
                            	  3853: 
                            	  3854: 
01:00201C03 0D              	  3855: MSG031   DC.B    CR,LF,'OPTIONS@',EOT
01:00201C04 0A
01:00201C05 4F5054494F4E5340
01:00201C0D 04
                            	  3856: 
                            	  3857: 
                            	  3858: 
                            	  3859: 
                            	  3860: 
                            	  3861: 
                            	  3862: *-------------------------------------------------------------------------
                            	  3863: * File RAMTEST   RAMTEST                                          11/02/81
                            	  3864: 
                            	  3865: ***********************************************************************
                            	  3866: * MEMORY TEST SUBROUTINE.                                             *
                            	  3867: *                                                                     *
                            	  3868: *        A0=BEGINNING ADDRESS (MUST BE EVEN ADDRESS)                  *
                            	  3869: *        A1=ENDING ADDRESS+1  (MUST BE EVEN ADDRESS)                  *
                            	  3870: *        A2=FAILING ADDRESS                                           *
                            	  3871: *        D0=DATA WRITTEN TO RAM                                       *
                            	  3872: *        D1=DATA READ FROM RAM                                        *
                            	  3873: *                                                                     *
                            	  3874: *        ZERO FLAG IS SET IF TEST IS SUCCESSFUL                       *
                            	  3875: *           REGISTERS D2,D3,D4 DESTROYED                              *
                            	  3876: ***********************************************************************
                            	  3877: 
                            	  3878: *       -1ST TEST-
                            	  3879: RAMTEST  DS      0
01:00201C0E 2608            	  3880:          MOVE.L  A0,D3          D3 = BEGINNING ADDRESS
01:00201C10 2443            	  3881:          MOVE.L  D3,A2          USE A2 AS POINTER IN MEMORY
01:00201C12 70FE            	  3882: WALK3    MOVEQ   #-2,D0         PREPARE FOR "WALKING BIT" TEST
                            	  3883: WALK0
01:00201C14 3480            	  3884:          MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
01:00201C16 3212            	  3885:          MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
01:00201C18 B240            	  3886:          CMP.W   D0,D1          WRITTEN VS. READ
01:00201C1A 6642            	  3887:          BNE.S   RAMERR         STOP ON ERROR
01:00201C1C E358            	  3888:          ROL.W   #1,D0          ROLL A ZERO IN A FIELD OF ONES
01:00201C1E 65F4            	  3889:          BCS.S   WALK0          CONTINUE TILL DONE
                            	  3890: 
01:00201C20 7001            	  3891:          MOVEQ   #$00000001,D0  THIS TIME, WALK A 1 THROUGH ZEROS
                            	  3892: WALK1
01:00201C22 3480            	  3893:          MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
01:00201C24 3212            	  3894:          MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
01:00201C26 B240            	  3895:          CMP.W   D0,D1          WRITTEN VS. READ
01:00201C28 6634            	  3896:          BNE.S   RAMERR         STOP ON ERROR
01:00201C2A D040            	  3897:          ASL.W   #1,D0          ROLL A ONE TO THE NEXT POSITION
01:00201C2C 64F4            	  3898:          BCC.S   WALK1          CONTINUE TILL DONE
                            	  3899: 
01:00201C2E 45EA0100        	  3900:          LEA     $0100(A2),A2   GO TO NEXT 256TH POSITION
01:00201C32 B5C9            	  3901:          CMP.L   A1,A2          CHECK TO SEE IF DONE
01:00201C34 6DDC            	  3902:          BLT.S   WALK3          CONTINUE
                            	  3903: 
                            	  3904: * -2ND TEST-
01:00201C36 2443            	  3905:          MOVE.L  D3,A2          SET A2 TO POINT TO START OF MEMORY
01:00201C38 7000            	  3906:          MOVEQ   #$00000000,D0  CLEAR D0
                            	  3907: MTCLR
01:00201C3A 34C0            	  3908:          MOVE.W  D0,(A2)+       CLEAR MEMORY
01:00201C3C B5C9            	  3909:          CMP.L   A1,A2          DONE?
01:00201C3E 66FA            	  3910:          BNE.S   MTCLR          NO... ZERO ALL OF MEMORY
                            	  3911: 
01:00201C40 74FF            	  3912:          MOVEQ   #-1,D2         SET D2 = FFFF
                            	  3913: MTSTOR1
01:00201C42 3222            	  3914:          MOVE.W  -(A2),D1       FIRST READ BACK MEMORY
01:00201C44 B240            	  3915:          CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
01:00201C46 6616            	  3916:          BNE.S   RAMERR         STOP ON ERROR
01:00201C48 3482            	  3917:          MOVE.W  D2,(A2)        STORE COMPLEMENT
01:00201C4A B5C3            	  3918:          CMP.L   D3,A2          DONE?
01:00201C4C 66F4            	  3919:          BNE.S   MTSTOR1        NO... COMPLEMENT ALL OF MEMORY
01:00201C4E 3002            	  3920:          MOVE.W  D2,D0          D0=WHAT WAS WRITTEN
01:00201C50 4642            	  3921:          NOT.W   D2             SAVE COMPLEMENT FOR LATER
                            	  3922: 
                            	  3923: MTSTOR0
01:00201C52 3212            	  3924:          MOVE.W  (A2),D1        READ BACK MEMORY
01:00201C54 B240            	  3925:          CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
01:00201C56 6606            	  3926:          BNE.S   RAMERR         STOP ON ERROR
01:00201C58 34C2            	  3927:          MOVE.W  D2,(A2)+       STORE COMPLEMENT
01:00201C5A B5C9            	  3928:          CMP.L   A1,A2          DONE?
01:00201C5C 66F4            	  3929:          BNE     MTSTOR0        NO...KEEP LOOPING, YES...
                            	  3930: 
01:00201C5E 2043            	  3931: RAMERR   MOVE.L  D3,A0          RESTORE A0
01:00201C60 4E75            	  3932:          RTS                    RETURN
                            	  3933: 
                            	  3934: 
                            	  3935: 
                            	  3936: 
                            	  3937: *-------------------------------------------------------------------------
                            	  3938: * File TM        TM  Transparent mode                             12/28/81
                            	  3939: 
                            	  3940: *    TM  [[EXIT CHAR]TRAILING CHAR]
                            	  3941: *
                            	  3942: *  In transparent mode the terminal is physically connected to the
                            	  3943: *  host; at the same time the terminal is watched by TM software
                            	  3944: *  for the EXIT character.  When the exit character is transmitted
                            	  3945: *  by the terminal it goes directly to the host; and at the same
                            	  3946: *  time the TM software reconfigures the hardware.  If a nonnull
                            	  3947: *  trailing character is present it is now sent via port 2 to
                            	  3948: *  the host.
                            	  3949: 
                            	  3950: *   TRANSPARENT MODE
                            	  3951: 
01:00201C62 41FA0012        	  3952: TMCMD    LEA     P2CMD0(PC),A0
01:00201C66 610001FE        	  3953:          BSR     FNEXTF         FIND NEXT FIELD
01:00201C6A 11DD04EB        	  3954:          MOVE.B  (A5)+,TMCHARS+1 QUIT CHARACTER
01:00201C6E 610001F6        	  3955:          BSR     FNEXTF         FIND NEXT FIELD
01:00201C72 11DD04EA        	  3956:          MOVE.B  (A5)+,TMCHARS  OPTIONAL TRAILING CHAR
01:00201C76 3E3804EA        	  3957: P2CMD0   MOVE.W  TMCHARS,D7
01:00201C7A 610003E8        	  3958:          BSR     GETSER1        ADDRESS FOR PORT1 INTO A0
01:00201C7E 4BFA007A        	  3959:          LEA     MSG006(PC),A5  "TRANSPARENT MODE"
01:00201C82 6100E87A        	  3960:          BSR     FIXDCRLF       SET UP FOR MESSAGE
01:00201C86 2007            	  3961:          MOVE.L  D7,D0          EXIT CHARACTER
01:00201C88 61000120        	  3962:          BSR     PNT2HX         PRINT 2 HEX CHARACTERS
01:00201C8C 3CFC203D        	  3963:          MOVE.W  #' =',(A6)+
01:00201C90 1007            	  3964:          MOVE.B  D7,D0          SEE IF CONTROL CHAR
01:00201C92 0C000020        	  3965:          CMPI.B  #BLANK,D0
01:00201C96 6A0A            	  3966:          BPL.S   P2CMD01
01:00201C98 2CFC2043544C    	  3967:          MOVE.L  #' CTL',(A6)+
01:00201C9E 06000040        	  3968:          ADDI.B  #64,D0         MAKE IT A PRINTABLE CHARACTER
01:00201CA2 1CFC0020        	  3969: P2CMD01  MOVE.B  #BLANK,(A6)+
01:00201CA6 1CC0            	  3970:          MOVE.B  D0,(A6)+
01:00201CA8 3CFC0D0A        	  3971:          MOVE.W  #$0D0A,(A6)+
01:00201CAC 61000334        	  3972:          BSR     OUT1CR         GO PRINT BUFFER WITH CRLF
                            	  3973: 
01:00201CB0 10390000064C    	  3974:          MOVE.B  MD1CON.L,D0    PROGRAM ACIA FOR TRANSPARENT MODE
01:00201CB6 0200009F        	  3975:          ANDI.B  #$9F,D0
01:00201CBA 00000040        	  3976:          ORI.B   #$40,D0        FORCE RTS HIGH
01:00201CBE 1080            	  3977:          MOVE.B  D0,(A0)
01:00201CC0 08100000        	  3978: P2CMD2   BTST.B  #$0,(A0)      READ STATUS
01:00201CC4 67FA            	  3979:          BEQ.S   P2CMD2
01:00201CC6 10280001        	  3980:          MOVE.B  1(A0),D0       RECEIVE CHAR FROM PORT 1
01:00201CCA 0200007F        	  3981:          ANDI.B  #$7F,D0
01:00201CCE B007            	  3982:          CMP.B   D7,D0          SEE IF QUIT CHARACTER (CTL A USUALLY)
01:00201CD0 66EE            	  3983:          BNE.S   P2CMD2
01:00201CD2 10390000064C    	  3984:          MOVE.B  MD1CON.L,D0    REPROGRAM FOR NON-TRANSPARENT
01:00201CD8 0200009F        	  3985:          ANDI.B  #$9F,D0
01:00201CDC 1080            	  3986:          MOVE.B  D0,(A0)
                            	  3987: 
01:00201CDE E047            	  3988:          ASR.W   #8,D7
01:00201CE0 4A07            	  3989:          TST.B   D7
01:00201CE2 6712            	  3990:          BEQ.S   P2CMD6
                            	  3991: * SPECIAL SECOND CHAR TO HOST SEQUENCE
01:00201CE4 203C00001000    	  3992:          MOVE.L  #DELAYC1,D0
01:00201CEA 5380            	  3993: P2CMD4   SUBQ.L  #1,D0          DELAY; ALLOW HOST TO SYNC
01:00201CEC 66FC            	  3994:          BNE.S   P2CMD4
01:00201CEE 61000386        	  3995:          BSR     GETSER2
01:00201CF2 11470001        	  3996:          MOVE.B  D7,1(A0)       SEND CHAR
01:00201CF6 6000E936        	  3997: P2CMD6   BRA     MACSBUG
                            	  3998: 
01:00201CFA 2A5452414E535041	  3999: MSG006   DC.B    '*TRANSPARENT* EXIT=$',EOT
01:00201D02 52454E542A204558
01:00201D0A 49543D24
01:00201D0E 04
                            	  4000: 
                            	  4001: 
                            	  4002: 
                            	  4003: 
                            	  4004: 
01:00201D0F 00              	  4005:          DC.B    0              PAD BYTE
                            	  4006: 
                            	  4007: 
                            	  4008: 
                            	  4009: 
                            	  4010: *-------------------------------------------------------------------------
                            	  4011: * File W         Software Abort, Hex print routines               06/05/82
                            	  4012: 
                            	  4013: *
                            	  4014: *   HANDLE THE ABORT BUTTON
                            	  4015: *
01:00201D10 46FC2700        	  4016: ABORTB   MOVE.W  #$2700,SR
                            	  4017:          SAVEREGS
01:00201D14 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00201D18 4FFA000A        	     2M          LEA     SV_000046(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:00201D1C 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:00201D20 6000F362        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000046     DS      0
01:00201D24 6100060A        	  4018:          BSR     FAULTSER       RESET SERIAL PORTS
01:00201D28 4BFA0016        	  4019:          LEA     MSG012(PC),A5  'SOFTWARE ABORT'
                            	  4020: 
01:00201D2C 6100063E        	  4021:          BSR     INITSER        RESET SERIAL PORTS (CLEAR TM MODE)
01:00201D30 6100E7CC        	  4022:          BSR     FIXDCRLF       MOVE MESSAGE TO BUFFER
01:00201D34 610002C6        	  4023: EVECT4   BSR     OUTPUT         MSG TO PORT1
01:00201D38 6100EFC2        	  4024: ABORT335 BSR     TDISPLY        DISPLAY REGISTERS
01:00201D3C 6000E8F0        	  4025:          BRA     MACSBUG
                            	  4026: 
01:00201D40 0A              	  4027: MSG012   DC.B    LF,LF,'SOFTWARE ABORT',CR,LF,EOT
01:00201D41 0A
01:00201D42 534F465457415245
01:00201D4A 2041424F5254
01:00201D50 0D
01:00201D51 0A
01:00201D52 04
                            	  4028: 
                            	  4029: 
                            	  4030: 
                            	  4031: 
01:00201D53 00              	  4032:          DC.B    0              PAD BYTE
                            	  4033: 
01:00201D54 21FC3F3F3F3F0030	  4034: ABORTE MOVE.L    #'????',$30    UNKNOWN INTERRUPT
                            	  4035: 
                            	  4036: 
                            	  4037: *    SAVE REGISTERS AND PRINT VECTOR MSG
                            	  4038: *
                            	  4039: EVECTL   SAVEREGS
01:00201D5C 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00201D60 4FFA000A        	     2M          LEA     SV_000047(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:00201D64 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:00201D68 6000F31A        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000047     DS      0
01:00201D6C 610005C2        	  4040:          BSR     FAULTSER       RESET SERIAL PORTS
01:00201D70 61000316        	  4041: EVECT2   BSR     FIXBUF         PRINT MESSAGE "XXXX TRAP ERROR"
01:00201D74 3CFC0D0A        	  4042:          MOVE.W  #$0D0A,(A6)+
01:00201D78 2CF80030        	  4043:          MOVE.L  AV12,(A6)+     TYPE OF ERROR
01:00201D7C 4BFA0008        	  4044:          LEA     MSG010(PC),A5  'TRAP ERROR'
01:00201D80 6100E76C        	  4045:          BSR     FIXDADD
01:00201D84 60AE            	  4046:          BRA     EVECT4
                            	  4047: 
01:00201D86 2054524150204552	  4048: MSG010   DC.B    ' TRAP ERROR',CR,LF,EOT
01:00201D8E 524F52
01:00201D91 0D
01:00201D92 0A
01:00201D93 04
                            	  4049: 
                            	  4050: 
                            	  4051: 
                            	  4052: 
                            	  4053: *
                            	  4054: *  PRINT HEX ROUTINES
                            	  4055: *
                            	  4056: *
                            	  4057: * PRINT 8 HEX CHARACTERS
                            	  4058: *
                            	  4059: *  D0,D1,D2 DESTROYED
                            	  4060: *
01:00201D94 4840            	  4061: PNT8HX   SWAP    D0             FLIP REG HALVES
01:00201D96 610A            	  4062:          BSR.S   PNT4HX         DO TOP WORD
01:00201D98 4840            	  4063:          SWAP    D0             NOW DO LOWER WORD
01:00201D9A 6006            	  4064:          BRA.S   PNT4HX
                            	  4065: * PRINT 6 HEX CHARACTERS
01:00201D9C 4840            	  4066: PNT6HX   SWAP    D0             FLIP REGISTER HALVES
01:00201D9E 610A            	  4067:          BSR.S   PNT2HX
01:00201DA0 4840            	  4068:          SWAP    D0             FLIP BACK REG HALVES
                            	  4069: * PRINT 4 HEX CHARACTERS IN D0.W
01:00201DA2 3200            	  4070: PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
01:00201DA4 E058            	  4071:          ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
01:00201DA6 6102            	  4072:          BSR.S   PNT2HX         PRINT IT
01:00201DA8 3001            	  4073:          MOVE.W  D1,D0          PULL IT BACK
                            	  4074: * PRINT 2 HEX CHARACTERS IN D0.B
01:00201DAA 3400            	  4075: PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
01:00201DAC E850            	  4076:          ROXR.W  #4,D0          FORM UPPER NIBBLE
01:00201DAE 6102            	  4077:          BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
01:00201DB0 3002            	  4078:          MOVE.W  D2,D0          GET BACK FROM TEMP
                            	  4079: * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
                            	  4080: *
01:00201DB2 0200000F        	  4081: PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
01:00201DB6 00000030        	  4082:          ORI.B   #$30,D0        CONVERT TO ASCII
01:00201DBA 0C000039        	  4083:          CMPI.B  #$39,D0        SEE IF IT IS>9
01:00201DBE 6F02            	  4084:          BLE.S   SAVHEX
01:00201DC0 5E40            	  4085:          ADD     #7,D0          ADD TO MAKE 10=>A
01:00201DC2 1CC0            	  4086: SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
01:00201DC4 4E75            	  4087:          RTS
                            	  4088: 
                            	  4089: * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
                            	  4090: *        ENTER     D0 = VALUE
                            	  4091: *                  A6 = STORE POINTER
                            	  4092: *
01:00201DC6 48E74780        	  4093: FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
01:00201DCA 41F8044C        	  4094:          LEA     OFFSET,A0
01:00201DCE 7EFF            	  4095:          MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
01:00201DD0 7C00            	  4096:          CLR.L   D6             D6 = OFFSET POSITION
                            	  4097: 
01:00201DD2 2200            	  4098: FREL10   MOVE.L  D0,D1
01:00201DD4 4A90            	  4099:          TST.L   (A0)
01:00201DD6 670C            	  4100:          BEQ.S   FREL15         ZERO OFFSET
01:00201DD8 9290            	  4101:          SUB.L   (A0),D1        D1 = DIFF.
01:00201DDA 6B08            	  4102:          BMI.S   FREL15         NO FIT
                            	  4103: 
01:00201DDC B287            	  4104:          CMP.L   D7,D1
01:00201DDE 6404            	  4105:          BCC.S   FREL15         OLD FIT BETTER
                            	  4106: 
01:00201DE0 2E01            	  4107:          MOVE.L  D1,D7          D7 = NEW BEST FIT
01:00201DE2 2A06            	  4108:          MOVE.L  D6,D5          D5 = POSITION
                            	  4109: 
01:00201DE4 5888            	  4110: FREL15   ADDQ.L  #4,A0
01:00201DE6 5286            	  4111:          ADDQ.L  #1,D6
01:00201DE8 0C460008        	  4112:          CMPI.W  #8,D6
01:00201DEC 66E4            	  4113:          BNE     FREL10         MORE OFFSETS TO CHECK
                            	  4114: 
01:00201DEE 4A87            	  4115:          TST.L   D7
01:00201DF0 6B1C            	  4116:          BMI.S   FREL25         NO FIT
01:00201DF2 4A46            	  4117:          TST     D6
01:00201DF4 6606            	  4118:          BNE.S   FREL20
01:00201DF6 4AB8044C        	  4119:          TST.L   OFFSET
01:00201DFA 6712            	  4120:          BEQ.S   FREL25         R0 = 000000; NO FIT
                            	  4121: 
01:00201DFC 2007            	  4122: FREL20   MOVE.L  D7,D0
01:00201DFE 619C            	  4123:          BSR     PNT6HX         FORMAT OFFSET
01:00201E00 1CFC002B        	  4124:          MOVE.B  #'+',(A6)+     +
01:00201E04 1CFC0052        	  4125:          MOVE.B  #'R',(A6)+     R
01:00201E08 06050030        	  4126:          ADDI.B  #'0',D5        MAKE ASCII
01:00201E0C 600A            	  4127:          BRA.S   FREL30
                            	  4128: 
01:00201E0E 618C            	  4129: FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
01:00201E10 1A3C0020        	  4130:          MOVE.B  #BLANK,D5
01:00201E14 1CC5            	  4131:          MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
01:00201E16 1CC5            	  4132:          MOVE.B  D5,(A6)+
01:00201E18 1CC5            	  4133: FREL30   MOVE.B  D5,(A6)+
                            	  4134: 
01:00201E1A 4CDF01E2        	  4135:          MOVEM.L (A7)+,D1/D5-D7/A0
01:00201E1E 4E75            	  4136:          RTS
                            	  4137: 
                            	  4138: *
                            	  4139: *
                            	  4140: *   PRINT HEX (ZERO SURPRESS)
                            	  4141: *
01:00201E20 7800            	  4142: PNTZHX   CLR.L   D4             IS ZERO WHEN SURPRESSING
01:00201E22 2200            	  4143:          MOVE.L  D0,D1          SAVE IN TEMP
01:00201E24 6738            	  4144:          BEQ.S   PNTZ81         IF ZERO
01:00201E26 6A08            	  4145:          BPL.S   PNTZ0
01:00201E28 4481            	  4146:          NEG.L   D1             CHANGE TO POSITIVE VALUE
01:00201E2A 6B32            	  4147:          BMI.S   PNTZ81         WATCH OUT SPECIAL CASE $80000000
01:00201E2C 1CFC002D        	  4148:          MOVE.B  #'-',(A6)+     PUT SIGN INTO BUFFER
01:00201E30 7408            	  4149: PNTZ0    MOVEQ   #8,D2          8 POSSIBLE CHARACTERS
01:00201E32 2001            	  4150: PNTZ1    MOVE.L  D1,D0          UNSAVE IT
01:00201E34 2602            	  4151:          MOVE.L  D2,D3          COUNT DOWN FROM HERE
01:00201E36 5383            	  4152:          SUBQ.L  #1,D3          BACK OFF ONE
01:00201E38 670C            	  4153:          BEQ.S   PNTZ4          IF NO ROTATE SKIP THIS
01:00201E3A E880            	  4154: PNTZ2    ASR.L   #4,D0          ROTATE LRIGHT
01:00201E3C 02800FFFFFFF    	  4155:          ANDI.L  #$FFFFFFF,D0   CLEAR TOP NIBBLE
01:00201E42 5383            	  4156:          SUBQ.L  #1,D3
01:00201E44 66F4            	  4157:          BNE     PNTZ2
01:00201E46 0200000F        	  4158: PNTZ4    ANDI.B  #$F,D0         SAVE ONLY NIBBLE
01:00201E4A 6604            	  4159:          BNE.S   PNTZ3
01:00201E4C 4A04            	  4160:          TST.B   D4             SEE IF STILL SURPRESSING
01:00201E4E 6706            	  4161:          BEQ.S   PNTZ8
01:00201E50 6100FF60        	  4162: PNTZ3    BSR     PUTHEX         PUT A HEX CHAR IN BUFFER
01:00201E54 1800            	  4163:          MOVE.B  D0,D4          MARK AS NON-SURPRESSING MODE
01:00201E56 5382            	  4164: PNTZ8    SUBQ.L  #1,D2          DO ANOTHER CHAR
01:00201E58 66D8            	  4165:          BNE     PNTZ1
01:00201E5A 4A04            	  4166:          TST.B   D4             SEE IF ANYTHING PRINTED
01:00201E5C 6604            	  4167:          BNE.S   PNTZ9
01:00201E5E 1CFC0030        	  4168: PNTZ81   MOVE.B  #'0',(A6)+     MOVE AT LEAST ONE ZERO
01:00201E62 4E75            	  4169: PNTZ9    RTS
                            	  4170: 
                            	  4171: * FIND NEXT FIELD... (A5) POINTS TO FIELD, (A0) NULL FIELD RETURN
                            	  4172: *   *-*-WARNING-*-* IF (A0) RETURN IS USED;  RETURN MUST BE AT
                            	  4173: *                   SAME SUBROUTINE LEVEL OR STACK GETS SCREWED UP
                            	  4174: *
                            	  4175: *  SKIP LEADING SPACES
                            	  4176: *  TERMINATE NULL FIELD ON COMA ,SEMICOLEN OR A5=A6
                            	  4177: 
01:00201E64 528D            	  4178: FNEXTF1  ADDQ.L  #1,A5
                            	  4179: 
01:00201E66 1015            	  4180: FNEXTF   MOVE.B  (A5),D0        ENTRY POINT
01:00201E68 BBCE            	  4181:          CMP.L   A6,A5
01:00201E6A 6414            	  4182:          BCC.S   FNEXTF7        AT END OF BUFFER
01:00201E6C 0C000020        	  4183:          CMPI.B  #BLANK,D0
01:00201E70 67F2            	  4184:          BEQ     FNEXTF1        SPACE
                            	  4185: 
01:00201E72 0C00002C        	  4186:          CMPI.B  #',',D0
01:00201E76 6708            	  4187:          BEQ.S   FNEXTF7        COMMA - NULL FIELD
01:00201E78 0C00003B        	  4188:          CMPI.B  #';',D0
01:00201E7C 6702            	  4189:          BEQ.S   FNEXTF7        SEMICOLON - NULL FIELD
01:00201E7E 4E75            	  4190:          RTS                    NORMAL FOUND FIELD RETURN
                            	  4191: 
01:00201E80 588F            	  4192: FNEXTF7  ADDQ.L  #4,A7          TRIM STACK
01:00201E82 4ED0            	  4193:          JMP     (A0)           NULL FIELD RETURN
                            	  4194: 
                            	  4195: **************************************************************
                            	  4196: * THIS ROUTINE MAKES SURE YOU ARE ON THE CORRECT BOUNDRY.    *
                            	  4197: *  D0 = ARGUMENT...   CHECKS ADDRESS AND WORD ALIGNMENTS.   *
                            	  4198: **************************************************************
                            	  4199: 
01:00201E84 E298            	  4200: CKWADR   ROR.L   #1,D0
01:00201E86 E398            	  4201:          ROL.L   #1,D0
01:00201E88 6508            	  4202:          BCS.S   CKADR39        NOT WORD ALIGNED
                            	  4203: 
01:00201E8A 0C8001000000    	  4204: CKADDR   CMPI.L  #$1000000,D0   VALID ADDRESS?
01:00201E90 6514            	  4205:          BCS.S   CKADR99        GOOD ADDRESS
                            	  4206: 
01:00201E92 4BFA0014        	  4207: CKADR39  LEA     MSG018(PC),A5
01:00201E96 6100E652        	  4208:          BSR     FIXDATA
01:00201E9A 6100FEF8        	  4209:          BSR     PNT8HX
01:00201E9E 61000142        	  4210:          BSR     OUT1CR
01:00201EA2 6000E78A        	  4211:          BRA     MACSBUG
                            	  4212: 
01:00201EA6 4E75            	  4213: CKADR99  RTS
                            	  4214: 
01:00201EA8 494E56414C494420	  4215: MSG018   DC.B    'INVALID ADDRESS=',EOT
01:00201EB0 414444524553533D
01:00201EB8 04
                            	  4216: 
                            	  4217: 
                            	  4218: 
                            	  4219: 
01:00201EB9 00              	  4220:          DC.B    0              PAD BYTE
                            	  4221: 
                            	  4222: * EVALUATE EXPRESSION
                            	  4223: *  NUMBER PLUS OR MINUS NUMBER....
                            	  4224: *
01:00201EBA 2F07            	  4225: GETEXP   MOVE.L  D7,-(A7)       SAVE D7
01:00201EBC 7E00            	  4226:          CLR.L   D7
01:00201EBE 6128            	  4227: GETEXP21 BSR.S   GETNUMA        GET NUMBER
01:00201EC0 DE80            	  4228:          ADD.L   D0,D7          D7 = NUMBER BEING BUILT
01:00201EC2 121D            	  4229: GETEXP15 MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
01:00201EC4 7000            	  4230:          CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
01:00201EC6 0C01002B        	  4231:          CMPI.B  #'+',D1
01:00201ECA 67F2            	  4232:          BEQ     GETEXP21       PLUS
01:00201ECC 0C01002D        	  4233:          CMPI.B  #'-',D1
01:00201ED0 6606            	  4234:          BNE.S   GETEXP39       NOT MINUS
01:00201ED2 6114            	  4235:          BSR.S   GETNUMA        GET NEXT NUMBER
01:00201ED4 9E80            	  4236:          SUB.L   D0,D7
01:00201ED6 60EA            	  4237:          BRA     GETEXP15
                            	  4238: 
01:00201ED8 2007            	  4239: GETEXP39 MOVE.L  D7,D0          D0 = VALUE BUILT
01:00201EDA 538D            	  4240:          SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
01:00201EDC 2E1F            	  4241:          MOVE.L  (A7)+,D7       RESTORE D7
01:00201EDE 4E75            	  4242:          RTS
                            	  4243: 
                            	  4244: *   ROUTINES TO CONVERT STRING TO BINARY VALUE
                            	  4245: *
                            	  4246: *        ACCEPTS PREFIXES:
                            	  4247: *         % binary
                            	  4248: *         @ octal
                            	  4249: *         & decimal
                            	  4250: *         $ hex
                            	  4251: *
01:00201EE0 610A            	  4252: GETNUMD  BSR.S   GETDECNU       GET DECIMAL NUMBER
01:00201EE2 6600E5C4        	  4253: GETNUMD9 BNE     ERROR
01:00201EE6 4E75            	  4254:          RTS
                            	  4255: 
01:00201EE8 610A            	  4256: GETNUMA  BSR.S   GETHEXNU       GET HEX NUMBER
01:00201EEA 60F6            	  4257:          BRA     GETNUMD9
                            	  4258: 
01:00201EEC 48E77C80        	  4259: GETDECNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A DECIMAL NUMBER
01:00201EF0 760A            	  4260:          MOVEQ   #10,D3         D3 = BASE (DECIMAL)
01:00201EF2 6006            	  4261:          BRA.S   GETN20
                            	  4262: 
01:00201EF4 48E77C80        	  4263: GETHEXNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A HEX NUMBER
01:00201EF8 7610            	  4264:          MOVEQ   #16,D3         D3 = BASE
                            	  4265: 
01:00201EFA 4244            	  4266: GETN20   CLR.W   D4             D4 = FLAG FOR CHARACTER HIT
01:00201EFC 7200            	  4267:          CLR.L   D1             D1 = TEMP RESULTS
01:00201EFE 0C150020        	  4268:          CMPI.B  #BLANK,(A5)
01:00201F02 6778            	  4269:          BEQ.S   GETN80         FIRST CHAR SPACE; ERROR
                            	  4270: 
01:00201F04 BBCE            	  4271: GETN30   CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:00201F06 677A            	  4272:          BEQ.S   GETN90
01:00201F08 7000            	  4273:          CLR.L   D0
01:00201F0A 101D            	  4274:          MOVE.B  (A5)+,D0       D0 = CHARACTER
                            	  4275: 
01:00201F0C 41FA007E        	  4276:          LEA     GETNDATA(PC),A0 POINTER TO TERMINATE CHARS
01:00201F10 1A18            	  4277: GETN40   MOVE.B  (A0)+,D5       D5 = TERMINATION CHAR
01:00201F12 6706            	  4278:          BEQ.S   GETN50         NOT TERM.CHAR
01:00201F14 B005            	  4279:          CMP.B   D5,D0
01:00201F16 6768            	  4280:          BEQ.S   GETN85         FOUND TERMINATION CHAR; EXIT
01:00201F18 60F6            	  4281:          BRA     GETN40
                            	  4282: 
01:00201F1A 0C000025        	  4283: GETN50   CMPI.B  #'%',D0        SEE IF FLAGGED AS BINARY
01:00201F1E 660A            	  4284:          BNE.S   GETN60
01:00201F20 7602            	  4285:          MOVEQ   #2,D3          BASE IS BINARY
01:00201F22 4A44            	  4286: GETN55   TST.W   D4             ANYTHING ENTERED
01:00201F24 6656            	  4287:          BNE.S   GETN80         CONFLICT
                            	  4288: 
01:00201F26 78FF            	  4289: GETN57   MOVEQ   #-1,D4         SET DATA ENTERED FLAG
01:00201F28 60DA            	  4290:          BRA     GETN30
                            	  4291: 
01:00201F2A 0C000040        	  4292: GETN60   CMPI.B  #'@',D0        SEE IF FLAGGED AS OCTAL
01:00201F2E 6604            	  4293:          BNE.S   GETN65
01:00201F30 7608            	  4294:          MOVEQ   #8,D3          BASE IS OCTAL
01:00201F32 60EE            	  4295:          BRA     GETN55
                            	  4296: 
01:00201F34 0C000026        	  4297: GETN65   CMPI.B  #'&',D0        SEE IF FLAGGED AS DECIMAL
01:00201F38 6604            	  4298:          BNE.S   GETN70
01:00201F3A 760A            	  4299:          MOVEQ   #10,D3         BASE IS DECIMAL
01:00201F3C 60E4            	  4300:          BRA     GETN55
                            	  4301: 
01:00201F3E 0C000024        	  4302: GETN70   CMPI.B  #'$',D0        SEE IF FLAGGED AS HEX
01:00201F42 6604            	  4303:          BNE.S   GETN75
01:00201F44 7610            	  4304:          MOVEQ   #16,D3         BASE IS 16
01:00201F46 60DA            	  4305:          BRA     GETN55
                            	  4306: 
01:00201F48 04000030        	  4307: GETN75   SUBI.B  #$30,D0
01:00201F4C 6D2E            	  4308:          BLT.S   GETN80         LESS THAN ZERO
01:00201F4E 0C000009        	  4309:          CMPI.B  #9,D0
01:00201F52 6F0E            	  4310:          BLE.S   GETN77         VALUE 0 - 9
01:00201F54 0C000011        	  4311:          CMPI.B  #$11,D0
01:00201F58 6D22            	  4312:          BLT.S   GETN80         LESS THAN A
01:00201F5A 0C000016        	  4313:          CMPI.B  #$16,D0
01:00201F5E 6E1C            	  4314:          BGT.S   GETN80         GREATER THAN F
01:00201F60 5F00            	  4315:          SUBQ.B  #7,D0          MAKE BINARY
                            	  4316: 
01:00201F62 B043            	  4317: GETN77   CMP.W   D3,D0          IS INPUT LARGER THAN BASE
01:00201F64 6416            	  4318:          BCC.S   GETN80         LARGER THAN BASE
01:00201F66 2401            	  4319:          MOVE.L  D1,D2          GET READY TO MULTIPLY D1*BASE
01:00201F68 4841            	  4320:          SWAP    D1
01:00201F6A C2C3            	  4321:          MULU    D3,D1          TOP PART
01:00201F6C 4841            	  4322:          SWAP    D1
01:00201F6E 4A41            	  4323:          TST.W   D1             CHECK FOR OVERFLOW
01:00201F70 660A            	  4324:          BNE.S   GETN80         VALUE IS TOO LARGE
01:00201F72 C4C3            	  4325:          MULU    D3,D2          NOW WORK ON LOW WORD
01:00201F74 D282            	  4326:          ADD.L   D2,D1          PUT IT BACK TOGETHER
01:00201F76 6904            	  4327:          BVS.S   GETN80         OVERFLOW?
01:00201F78 D280            	  4328:          ADD.L   D0,D1          ADD IN NEW STUFF
01:00201F7A 68AA            	  4329:          BVC     GETN57
01:00201F7C 70FF            	  4330: GETN80   MOVEQ   #-1,D0         ERROR RETURN (BNE)
01:00201F7E 6006            	  4331:          BRA.S   GETN95
                            	  4332: 
01:00201F80 538D            	  4333: GETN85   SUBQ.L  #1,A5          BACK UP TO POINT AT SPACE/PREVIOUS CHAR
01:00201F82 2001            	  4334: GETN90   MOVE.L  D1,D0          SET UP RESULT FOR RETURN
01:00201F84 7200            	  4335:          CLR.L   D1             NORMAL RETURN (BEQ)
01:00201F86 4CDF013E        	  4336: GETN95   MOVEM.L (A7)+,D1-D5/A0 RESTORE SOME REGISTERS
01:00201F8A 4E75            	  4337:          RTS
                            	  4338: 
01:00201F8C 20282B2C2D2E3A3B	  4339: GETNDATA DC.B    ' (+,-.:;=^]',0 TERMINATE CHARS
01:00201F94 3D5E5D
01:00201F97 00
                            	  4340: 
                            	  4341: 
                            	  4342: 
                            	  4343: *
                            	  4344: *  ***GETHEX***  GET HEX (BINARY VALUE FROM ASCII)
                            	  4345: *   D0.B HAS ASCII CHAR  RETURNS $0-$F BINARY
                            	  4346: *
01:00201F98 0C000030        	  4347: GETHEX CMPI.B    #$30,D0        IS IT LESS THAN ZERO
01:00201F9C 6D1C            	  4348:        BLT.S     PNMSG011
01:00201F9E 0C000039        	  4349:        CMPI.B    #$39,D0        IS IT GREATER THAN 9
01:00201FA2 6F0E            	  4350:        BLE.S     GTHX2          GOOD HEX
                            	  4351: 
01:00201FA4 0C000041        	  4352:        CMPI.B    #$41,D0        IS IT LESS THAN 'A'
01:00201FA8 6D10            	  4353:        BLT.S     PNMSG011
01:00201FAA 0C000046        	  4354:        CMPI.B    #$46,D0        IS IT GT 'F'
01:00201FAE 6E0A            	  4355:        BGT.S     PNMSG011
01:00201FB0 5F00            	  4356:        SUBQ.B    #7,D0          MAKE IT SMALLER A=10
01:00201FB2 02800000000F    	  4357: GTHX2  ANDI.L    #$F,D0
01:00201FB8 4E75            	  4358:        RTS
                            	  4359: 
01:00201FBA 610000CC        	  4360: PNMSG011 BSR     FIXBUF         PRINT NOT A HEX DIGIT
01:00201FBE 1CC0            	  4361:          MOVE.B  D0,(A6)+       PUT IN OFFENDING CHAR
01:00201FC0 4BFA000A        	  4362:          LEA     MSG011(PC),A5  '  IS NOT A HEX DIGIT'
01:00201FC4 6100E528        	  4363:          BSR     FIXDADD
01:00201FC8 6000E4D6        	  4364:          BRA     MSG            GO PRINT IT AND ENTER MACSBUG
                            	  4365: 
01:00201FCC 20204953204E4F54	  4366: MSG011   DC.B    '  IS NOT A HEX DIGIT',EOT
01:00201FD4 2041204845582044
01:00201FDC 49474954
01:00201FE0 04
                            	  4367: 
                            	  4368: 
                            	  4369: 
                            	  4370: 
                            	  4371: 
01:00201FE1 00              	  4372:          DC.B    0              PAD BYTE
                            	  4373: 
                            	  4374: 
                            	  4375: 
                            	  4376: 
                            	  4377: *-------------------------------------------------------------------------
                            	  4378: * File X         COMMON I/O                                       05/17/82
                            	  4379: 
                            	  4380: ******************************
                            	  4381: *
                            	  4382: *    SEND LINE TO PORT1 WITH CR/LF
                            	  4383: *
01:00201FE2 1CFC000D        	  4384: OUT1CR   MOVE.B  #CR,(A6)+
01:00201FE6 1CFC000A        	  4385:          MOVE.B  #LF,(A6)+
01:00201FEA 4AB8061C        	  4386:          TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
01:00201FEE 6706            	  4387:          BEQ.S   OUT1CRX
01:00201FF0 2F38061C        	  4388:          MOVE.L  OUTTO,-(A7)    PUSH ON STACK
01:00201FF4 4E75            	  4389:          RTS                    GO DO IT
                            	  4390: 
01:00201FF6 2F380630        	  4391: OUT1CRX  MOVE.L  OUTPORT1,-(A7) GO TO I/O ADDRESS
01:00201FFA 4E75            	  4392:          RTS                    ; (THIS NORMALLY GOES TO OUT1CR0)
                            	  4393: *
                            	  4394: OUT1CR0  DS      0
                            	  4395: *
                            	  4396: *    OUTPUT BUFFER TO PORT1
                            	  4397: *
01:00201FFC 48E7F0C0        	  4398: OUTPUT   MOVEM.L D0-D3/A0-A1,-(A7) GET SOME WORKING ROOM
01:00202000 7600            	  4399:          CLR.L   D3             D3 = NO OFFSET INTO NULL CHARACTERS
01:00202002 6160            	  4400:          BSR.S   GETSER1        A0 = GET SERIAL PORT 1 ADDRESS
01:00202004 601E            	  4401:          BRA.S   OUTP2
                            	  4402: *
                            	  4403: *    SEND LINE TO PORT2 WITH CR
                            	  4404: *
01:00202006 1CFC000D        	  4405: OUTPUT2  MOVE.B  #$D,(A6)+      TACK ON A "CR"
01:0020200A 4AB8061C        	  4406:          TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
01:0020200E 6706            	  4407:          BEQ.S   OUTPUT2X
01:00202010 2F38061C        	  4408:          MOVE.L  OUTTO,-(A7)    PUSH ON STACK
01:00202014 4E75            	  4409:          RTS                    GO DO IT
                            	  4410: 
01:00202016 2F380638        	  4411: OUTPUT2X MOVE.L  OUTPORT2,-(A7) GO TO IO ROUTINE
01:0020201A 4E75            	  4412:          RTS                    ; (THIS NORMALLY GOES TO OUTPUT20)
                            	  4413: *
                            	  4414: OUTPUT20 DS      0
                            	  4415: *
                            	  4416: *     OUTPUT BUFFER TO PORT2
                            	  4417: *
01:0020201C 48E7F0C0        	  4418: OUTPUT21 MOVEM.L D0-D3/A0-A1,-(A7)
01:00202020 7601            	  4419:          MOVEQ   #1,D3          SIGNAL FOR PORT2
01:00202022 6152            	  4420:          BSR.S   GETSER2        RETURNS SERIAL PORT 2 BASE ADDRESS IN A0
                            	  4421: *
                            	  4422: *   SEND BUFFER TO PORT
                            	  4423: *
01:00202024 BBCE            	  4424: OUTP2    CMP.L   A6,A5          SEE IF AT OR BEYOND END OF LINE
01:00202026 6506            	  4425:          BCS.S   OUTP3          NO... KEEP GOING, ELSE
01:00202028 4CDF030F        	  4426:          MOVEM.L (A7)+,D0-D3/A0-A1 RESTORE REGISTERS
01:0020202C 4E75            	  4427:          RTS                    END OF ROUTINE
                            	  4428: 
01:0020202E 101D            	  4429: OUTP3    MOVE.B  (A5)+,D0       GRAB BYTE TO OUTPUT
01:00202030 6102            	  4430:          BSR.S   OUTCH1         GO PRINT IT
01:00202032 60F0            	  4431:          BRA.S   OUTP2          GO DO ANOTHER
                            	  4432: 
                            	  4433: *   SEND CHARACTER IN D0.B TO PORT1
                            	  4434: *   WHOSE BASE ADDRESS IS IN A0
                            	  4435: *   D3=0 FOR PORT1  D3=1 FOR PORT2
                            	  4436: *   PUTS IN NULL PADDING AS NEEDED
                            	  4437: *
01:00202034 610001D6        	  4438: OUTCH1   BSR     OUTCH          GO PRINT D0
01:00202038 4A00            	  4439:          TST.B   D0             SEE IF NULL
01:0020203A 6726            	  4440:          BEQ.S   OUTCHRTS       JUST END IF NULL
01:0020203C 7400            	  4441:          CLR.L   D2             CLEAR UPPER BYTES OF NULL LOOP COUNTER
01:0020203E 43F80618        	  4442:          LEA     NULLPADS,A1    FORM ADDRESS OF PADS
01:00202042 D3C3            	  4443:          ADD.L   D3,A1          D3=0 FOR PORT1 1=PORT2
01:00202044 1411            	  4444:          MOVE.B  (A1),D2        DEFAULT NULL PADS
01:00202046 0C00000D        	  4445:          CMPI.B  #$D,D0         SEE IF CR
01:0020204A 6608            	  4446:          BNE.S   OUTCH2
01:0020204C 43F8061A        	  4447:          LEA     CRPADS,A1      FORM ADDRESS OF CR PADS
01:00202050 D3C3            	  4448:          ADD.L   D3,A1          D3=0 FOR PORT1  1=PORT2
01:00202052 1411            	  4449:          MOVE.B  (A1),D2        NULLS AFTER CR
01:00202054 4A82            	  4450: OUTCH2   TST.L   D2  SEE        IF ANY PADDS TO BE SEND
01:00202056 670A            	  4451:          BEQ.S   OUTCHRTS       0=NONE
01:00202058 7000            	  4452:          CLR.L   D0             0=NULL CHAR TO BE SEND
01:0020205A 610001B0        	  4453: OUTCH3   BSR     OUTCH          SEND A NULL
01:0020205E 5382            	  4454:          SUBQ.L  #1,D2          LOOP AROUND
01:00202060 66F8            	  4455:          BNE     OUTCH3
01:00202062 4E75            	  4456: OUTCHRTS RTS                    END OF OUTCH ROUTINE
                            	  4457: 
                            	  4458: *
                            	  4459: *   GET BASE ADDRESS OF SERIAL PORT 1 IN  A0
                            	  4460: *
                            	  4461: 
01:00202064 41F9003C0008    	  4462: GETSER1  LEA     SER1,A0        DEFAULT
01:0020206A 4AB80624        	  4463:          TST.L   ALTSER1        IF ALTERNATE IS ZERO
01:0020206E 6704            	  4464:          BEQ.S   RETURN         THEN RETURN
01:00202070 20780624        	  4465:          MOVE.L  ALTSER1,A0     ELSE USE ALTERNATE SERIAL PORT 1
01:00202074 4E75            	  4466: RETURN   RTS     RETURN         (USED FROM A COUPLE OF PLACES)
                            	  4467: 
                            	  4468: 
                            	  4469: *
                            	  4470: *   GET BASE ADDRESS OF SERIAL PORT 2 IN A0
                            	  4471: *
                            	  4472: 
01:00202076 41F9003C0008    	  4473: GETSER2  LEA     SER2,A0        DEFAULT SERIAL PORT 2
01:0020207C 4AB80628        	  4474:          TST.L   ALTSER2        IF ALTERNATE IS ZERO
01:00202080 67F2            	  4475:          BEQ     RETURN         THEN RETURN
01:00202082 20780628        	  4476:          MOVE.L  ALTSER2,A0     ELSE USE ALTERNATE SERIAL PORT 2
01:00202086 4E75            	  4477:          RTS                    RETURN
                            	  4478: *
                            	  4479: *     FIX THE BUFFER A5 & A6 SET TO START OF BUFFER QUE
                            	  4480: *
01:00202088 4BF80540        	  4481: FIXBUF   LEA     BUFFER,A5
01:0020208C 2C4D            	  4482:          MOVE.L  A5,A6
01:0020208E 4E75            	  4483:          RTS
                            	  4484: 
                            	  4485: *   INPUT A LINE FROM PORT1
                            	  4486: *
01:00202090 4AB80620        	  4487: PORTIN1  TST.L   INFROM         SEE IF ALTERNAME ADDRESS
01:00202094 6706            	  4488:          BEQ.S   PORTIN1X
01:00202096 2F380620        	  4489:          MOVE.L  INFROM,-(A7)   PUSH ON STACK
01:0020209A 4E75            	  4490:          RTS                    GO DO IT
01:0020209C 2F38062C        	  4491: PORTIN1X MOVE.L  INPORT1,-(A7)  GO TO IO ROUTINE
01:002020A0 4E75            	  4492:          RTS                    NORMALLY GOES TO PORTIN10
                            	  4493: 
01:002020A2 48E7F9E0        	  4494: PORTIN1N MOVEM.L D0-D4/D7/A0-A2,-(A7)
01:002020A6 4A3804E8        	  4495:          TST.B   XONOFF+2
01:002020AA 6608            	  4496:          BNE.S   PORTIN1V       OVERRIDE "No Auto Line Feed"
01:002020AC 7E01            	  4497:          MOVEQ   #1,D7          "No Auto Line Feed" Entry point
01:002020AE 6006            	  4498:          BRA.S   PORTIN1W
                            	  4499: 
                            	  4500: * ENTRY ALSO POSSIBLE FROM:  PORTIN2
01:002020B0 48E7F9E0        	  4501: PORTIN10 MOVEM.L D0-D4/D7/A0-A2,-(A7)
01:002020B4 7E00            	  4502: PORTIN1V CLR.L   D7             "Auto Line Feed" Entry point.
01:002020B6 7600            	  4503: PORTIN1W CLR.L   D3             FLAG AS PORT1
01:002020B8 61AA            	  4504:          BSR     GETSER1        MOVE ADDRESS INTO A0
                            	  4505: 
01:002020BA 610002DC        	  4506: READBUF  BSR     INCHNE         GO GET SOME DATA  (NO ECHO)
01:002020BE 4A00            	  4507:          TST.B   D0             CHECK FOR NULLS
01:002020C0 67F8            	  4508:          BEQ.S   READBUF
01:002020C2 3800            	  4509:          MOVE.W  D0,D4          SAVE FOR A WHILE
01:002020C4 6100FF6E        	  4510:          BSR     OUTCH1         ECHO WHAT IS IN D0
01:002020C8 3004            	  4511:          MOVE.W  D4,D0          RESTORE IT
01:002020CA 0C00000A        	  4512:          CMPI.B  #LF,D0         SEE IF LINE FEED
01:002020CE 67EA            	  4513:          BEQ.S   READBUF        DONT PUT IT IN BUFFER
                            	  4514: 
01:002020D0 0C000018        	  4515:          CMPI.B  #CTLX,D0       SEE IF CTRL-X "CANCEL LINE"
01:002020D4 6610            	  4516:          BNE.S   CHKCTLH        No... Then go check for backspace
01:002020D6 700D            	  4517:          MOVEQ   #CR,D0         Yes.. 1) Send a carriage return
01:002020D8 6100FF5A        	  4518:          BSR     OUTCH1         *
01:002020DC 700A            	  4519:          MOVEQ   #LF,D0         *     2) Send a line feed
01:002020DE 6100FF54        	  4520:          BSR     OUTCH1         *
01:002020E2 2C4D            	  4521:          MOVE.L  A5,A6          *     3) Set BUFFER at start again
01:002020E4 60D4            	  4522:          BRA.S   READBUF        *     4) Restart this routine
                            	  4523: 
01:002020E6 0C000008        	  4524: CHKCTLH  CMPI.B  #CTLH,D0       CTRL-H? (Backspace)
01:002020EA 6714            	  4525:          BEQ.S   BS4CTLH        Yes...  Go backspace 1 character
01:002020EC 0C00007F        	  4526:          CMPI.B  #DEL,D0        DEL?    (Also a Backspace)
01:002020F0 6624            	  4527:          BNE.S   CHKCTLD        No....  Then go check for CTRL D
01:002020F2 BDCD            	  4528: BKSPACE  CMP.L   A5,A6          Yes...  Usually need an extra "Backspace"
01:002020F4 67C4            	  4529:          BEQ     READBUF        If at start of buffer, don't back up any more.
01:002020F6 103C0008        	  4530:          MOVE.B  #CTLH,D0       Backspace cursor.
01:002020FA 6100FF38        	  4531:          BSR     OUTCH1         *
01:002020FE 6004            	  4532:          BRA.S   BLANKIT        Bypass check for start of buffer
                            	  4533: 
                            	  4534: BS4CTLH  DS      0              CTL-H already backed up 1 character.
01:00202100 BDCD            	  4535:          CMP.L   A5,A6          At beginning of buffer?
01:00202102 67B6            	  4536:          BEQ     READBUF        Yes...  Then don't back up any more.
01:00202104 7020            	  4537: BLANKIT  MOVEQ   #$20,D0        Now blank out previous character.
01:00202106 6100FF2C        	  4538:          BSR     OUTCH1         *
01:0020210A 1026            	  4539:          MOVE.B  -(A6),D0       Remove last character from buffer.
01:0020210C 103C0008        	  4540:          MOVE.B  #CTLH,D0       Backup cursor again.
01:00202110 6100FF22        	  4541:          BSR     OUTCH1         *
01:00202114 60A4            	  4542:          BRA     READBUF        Go get next character.
                            	  4543: 
01:00202116 0C000004        	  4544: CHKCTLD  CMPI.B  #CTLD,D0       CTL D?  (REPRINT)
01:0020211A 6626            	  4545:          BNE.S   CHKCR          No....  Then go check if a "CR".
01:0020211C 700D            	  4546:          MOVEQ   #CR,D0         Yes...  Print "CR"
01:0020211E 6100FF14        	  4547:          BSR     OUTCH1         *
01:00202122 700A            	  4548:          MOVEQ   #LF,D0         Print "LF"
01:00202124 6100FF0E        	  4549:          BSR     OUTCH1         *
01:00202128 2F0D            	  4550:          MOVE.L  A5,-(A7)       SAVE ON STACK FOR A MOMENT
01:0020212A 6100FED0        	  4551:          BSR     OUTPUT         GO PRINT BUFFER
01:0020212E 2A5F            	  4552:          MOVE.L  (A7)+,A5       GET BACK FROM STACK
01:00202130 6088            	  4553:          BRA     READBUF
                            	  4554: 
01:00202132 1CC0            	  4555: CHARSAVE MOVE.B  D0,(A6)+       SAVE DATA INTO BUFFER
01:00202134 220E            	  4556:          MOVE.L  A6,D1          CALCULATE ROOM USED
01:00202136 928D            	  4557:          SUB.L   A5,D1          DONT USE MORE THAN "BUFFSIZE"
01:00202138 0C410080        	  4558:          CMPI.W  #BUFFSIZE,D1
01:0020213C 6B00FF7C        	  4559:          BMI     READBUF        We're OK, go get next character.
01:00202140 60B0            	  4560:          BRA     BKSPACE        If not, handle as though a "CNTL-H"
                            	  4561: 
01:00202142 0C00000D        	  4562: CHKCR    CMPI.B  #CR,D0         CR?  (End of command line).
01:00202146 66EA            	  4563:          BNE.S   CHARSAVE       No.. Then go store this character.
                            	  4564: 
01:00202148 4A07            	  4565:          TST.B   D7             Check "Auto Line Feed" switch
01:0020214A 6606            	  4566:          BNE.S   NOAUTOLF       Yes.. Bypass sending Line feed.
01:0020214C 700A            	  4567:          MOVEQ   #LF,D0         No... Set one up and...
01:0020214E 6100FEE4        	  4568:          BSR     OUTCH1         .     Send it!
                            	  4569: NOAUTOLF DS      0
                            	  4570: 
01:00202152 4CDF079F        	  4571:  MOVEM.L (A7)+,D0-D4/D7/A0-A2 Restore Regs.
01:00202156 4E75            	  4572:          RTS                    RETURN TO CALLER
                            	  4573: 
                            	  4574: 
                            	  4575: 
                            	  4576: 
                            	  4577: 
                            	  4578: *-------------------------------------------------------------------------
                            	  4579: * File Y         TUTOR     I/O Routine                            05/19/82
                            	  4580: 
                            	  4581: LTIME    SET     205000         LONG TIMER 5 SEC @ 8 MHZ
                            	  4582: STIME    SET     41000          SHORT TIMER  100 MLS @ 8 MHZ
                            	  4583: 
                            	  4584: PDI1     SET     $0F0000        PARALLEL PORT ADDRESS
                            	  4585: PITCDDR  SET     $0F0009        PORT C DATA DIRECTION REGISTER
                            	  4586: PITPCDR  SET     $0F0019        PORT C DATA REGISTER
                            	  4587: PITTCR   SET     $0F0021        TIMER CONTROL REGISTER
                            	  4588: PSTATUS  SET     $B             PRINTER STATUS
                            	  4589: PBDATA   SET     3              PRINTER CONTROL--BUSY,PAPER,SELECT
                            	  4590: PDATA    SET     1              PRINTER DATA
                            	  4591: SER1     SET     $3C0008        TERMINAL
                            	  4592: SER2     SET     $3C0008        SERIAL PORT2 ADDRESS
                            	  4593: 
                            	  4594: *        PRINTER DRIVER
                            	  4595: *
                            	  4596: *    SEND BUFFER TO PRINTER
                            	  4597: *
                            	  4598: PRCRLF   DS      0
                            	  4599: 
01:00202158 48E70006        	  4600:          MOVEM.L A5-A6,-(A7)    SAVE REGISTERS
                            	  4601: *
                            	  4602: *   SEND LINE
                            	  4603: *
01:0020215C BBCE            	  4604: LIST     CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:0020215E 6B06            	  4605:          BMI.S   LIST1
01:00202160 4CDF6000        	  4606:          MOVEM.L (A7)+,A5-A6    RESTORE REGISTERS
01:00202164 4E75            	  4607:          RTS
                            	  4608: *
01:00202166 101D            	  4609: LIST1    MOVE.B  (A5)+,D0       GRAB BYTE
01:00202168 6102            	  4610:          BSR.S   CHRPRINT       PRINT CHAR
01:0020216A 60F0            	  4611:          BRA     LIST
                            	  4612: 
                            	  4613: * OUTPUT CHAR IN D0 TO PRINTER
01:0020216C 48E7C186        	  4614: CHRPRINT MOVEM.L D0/D1/D7/A0/A5/A6,-(A7) SAVE SOME REGISTERS
01:00202170 610000D2        	  4615: LIST2    BSR     CHKBRK         CHECK FOR BREAK
                            	  4616: 
01:00202174 2078064E        	  4617:          MOVE.L  PDIPORT,A0     A0 = ADDRESS OF PORT
                            	  4618: 
01:00202178 102F0003        	  4619:          MOVE.B  3(A7),D0       D0 = CHAR TO BE SENT
                            	  4620: * CHANGE CONTROL CHARS TO "."
01:0020217C 0200007F        	  4621:          ANDI.B  #$7F,D0
01:00202180 0C00000D        	  4622:          CMPI.B  #CR,D0
01:00202184 6716            	  4623:          BEQ.S   LIST25         OK CARRIAGE RETURN
01:00202186 0C00000A        	  4624:          CMPI.B  #LF,D0
01:0020218A 6710            	  4625:          BEQ.S   LIST25         OK LINE FEED
01:0020218C 0C000020        	  4626:          CMPI.B  #$20,D0
01:00202190 6D06            	  4627:          BLT.S   LIST24
01:00202192 0C00007F        	  4628:          CMPI.B  #$7F,D0
01:00202196 6D04            	  4629:          BLT.S   LIST25
01:00202198 103C002E        	  4630: LIST24   MOVE.B  #'.',D0        MAKE CHAR A PERIOD
                            	  4631: LIST25   DS      0
                            	  4632: 
01:0020219C 11400001        	  4633:          MOVE.B  D0,PDATA(A0)   SEND DATA
01:002021A0 13FC0068000F000D	  4634:          MOVE.B  #$68,PDI1+13   STROBE PRINTER
                            	  4635: 
01:002021A8 13FC0060000F000D	  4636:          MOVE.B  #$60,PDI1+13
                            	  4637: 
                            	  4638: *
                            	  4639: *
01:002021B0 61000092        	  4640: LIST3    BSR     CHKBRK         CHECK FOR BREAK
01:002021B4 10280003        	  4641:          MOVE.B  PBDATA(A0),D0
01:002021B8 02000003        	  4642:          ANDI.B  #3,D0          PAPER OUT? DESELECTED?
01:002021BC 5300            	  4643:          SUBQ.B  #1,D0
01:002021BE 6728            	  4644:          BEQ.S   LIST5
01:002021C0 3E380652        	  4645:          MOVE.W  CRTPNT,D7
01:002021C4 42780652        	  4646:          CLR.W   CRTPNT
01:002021C8 4BFA002C        	  4647:          LEA     MSG007(PC),A5
01:002021CC 6100E31C        	  4648:          BSR     FIXDATA
01:002021D0 6100FE2A        	  4649:          BSR     OUTPUT
                            	  4650: *
                            	  4651: *   WAIT FOR BREAK OR PRINTER TO BE READY
                            	  4652: *
01:002021D4 616E            	  4653: LERR1    BSR.S   CHKBRK
01:002021D6 10280003        	  4654:          MOVE.B  PBDATA(A0),D0
01:002021DA 02000003        	  4655:          ANDI.B  #3,D0
01:002021DE 5300            	  4656:          SUBQ.B  #1,D0
01:002021E0 66F2            	  4657:          BNE     LERR1          PRINTER NOT READY
01:002021E2 31C70652        	  4658:          MOVE.W  D7,CRTPNT      RESTORE POSSIBLE "PA" SWITCH
01:002021E6 6088            	  4659:          BRA     LIST2          TRY AGAIN
                            	  4660: 
01:002021E8 08280000000B    	  4661: LIST5    BTST.B  #0,PSTATUS(A0) ACKNOWLEDGE?
01:002021EE 67C0            	  4662:          BEQ.S   LIST3
                            	  4663: 
01:002021F0 4CDF6183        	  4664:          MOVEM.L (A7)+,D0/D1/D7/A0/A5/A6  RESTORE REGISTERS
01:002021F4 4E75            	  4665:          RTS
                            	  4666: 
01:002021F6 0D              	  4667: MSG007   DC.B    CR,LF,'PRINTER NOT READY',CR,LF,EOT
01:002021F7 0A
01:002021F8 5052494E54455220
01:00202200 4E4F542052454144
01:00202208 59
01:00202209 0D
01:0020220A 0A
01:0020220B 04
                            	  4668: 
                            	  4669: 
                            	  4670: 
                            	  4671: 
                            	  4672: 
                            	  4673:          DS.B    0
                            	  4674: 
                            	  4675: *
                            	  4676: *       SEND CHARACTER IN D0.B TO SERIAL PORT IN (A0) (NO NULL PADS)
                            	  4677: *
01:0020220C 6136            	  4678: OUTCH    BSR.S   CHKBRK         CHECK FOR BREAK
01:0020220E 1210            	  4679:          MOVE.B  (A0),D1        READ STATUS AGAIN
01:00202210 02010002        	  4680:          ANDI.B  #$2,D1         CHECK FOR READY TO SEND
01:00202214 67F6            	  4681:          BEQ.S   OUTCH          STILL NOT READY
01:00202216 11400001        	  4682:          MOVE.B  D0,1(A0)       SEND CHARACTER  ****************
                            	  4683: 
                            	  4684: * IF PRINT FLAG SET GOTO PRINTER
01:0020221A 670A            	  4685:          BEQ.S   OUTCH21        NULL; IGNORE SENDING TO PRINTER
01:0020221C 4A780652        	  4686:          TST.W   CRTPNT
01:00202220 6704            	  4687:          BEQ.S   OUTCH21        CRT ONLY
01:00202222 6100FF48        	  4688:          BSR     CHRPRINT       GOTO PRINTER
                            	  4689: OUTCH21  DS      0
                            	  4690: 
                            	  4691: *   CHECK FOR CONTROL W
01:00202226 1210            	  4692:          MOVE.B  (A0),D1        READ STATUS
01:00202228 02010001        	  4693:          ANDI.B  #1,D1
01:0020222C 6714            	  4694:          BEQ.S   CTLW9          CHAR NOT READY
01:0020222E 12280001        	  4695:          MOVE.B  1(A0),D1       READ CHARACTER
01:00202232 0C010017        	  4696:          CMPI.B  #CTLW,D1
01:00202236 660A            	  4697:          BNE.S   CTLW9          NOT CNTL/W
01:00202238 610A            	  4698: CTLWH    BSR.S   CHKBRK         CHECK FOR BREAK
01:0020223A 1210            	  4699:          MOVE.B  (A0),D1        READ STATUS
01:0020223C 02010001        	  4700:          ANDI.B  #1,D1
01:00202240 67F6            	  4701:          BEQ     CTLWH          WAIT FOR ANY CHAR TO CONTINUE
01:00202242 4E75            	  4702: CTLW9    RTS
                            	  4703: *
                            	  4704: *   CHECK FOR BREAK ON PORT #1
                            	  4705: *
01:00202244 2F08            	  4706: CHKBRK   MOVE.L  A0,-(A7)       SAVE A0 * * *
01:00202246 6100FE1C        	  4707:          BSR     GETSER1        RETURNS ADDRESS IN A0
01:0020224A 1210            	  4708:          MOVE.B  (A0),D1        READ STATUS
01:0020224C 02010010        	  4709:          ANDI.B  #$10,D1
01:00202250 661E            	  4710:          BNE.S   BREAK
01:00202252 205F            	  4711:          MOVE.L  (A7)+,A0       RESTORE A0 * * *
01:00202254 4E75            	  4712:          RTS
                            	  4713: 
                            	  4714: *    WHAT TO DO WHEN THE BREAK IS PRESSED
                            	  4715: *
                            	  4716: 
01:00202256 42280001        	  4717: BREAK2   CLR.B   1(A0)          SEND NULL TO ACIA TO RESET
01:0020225A 08100001        	  4718: BREAK1   BTST.B  #1,(A0)        CHECK IF "TRANSMIT READY"
01:0020225E 67FA            	  4719:          BEQ.S   BREAK1         WAIT FOR READY
                            	  4720: 
01:00202260 10280001        	  4721:          MOVE.B  1(A0),D0       READ TWO CHARS
01:00202264 10280001        	  4722:          MOVE.B  1(A0),D0       *
                            	  4723: 
01:00202268 08100004        	  4724:          BTST.B  #4,(A0)        SEE IF BREAK BUTTON RELEASED
01:0020226C 66E8            	  4725:          BNE     BREAK2         NO... KEEP LOOPING
01:0020226E 4E75            	  4726:          RTS
                            	  4727: 
01:00202270 61E4            	  4728: BREAK    BSR     BREAK2
01:00202272 4BFA000E        	  4729:          LEA     MSG013(PC),A5  MSG:  "BREAK"
                            	  4730: 
01:00202276 6100E286        	  4731: BREAK79  BSR     FIXDCRLF       *
01:0020227A 6100FD80        	  4732:          BSR     OUTPUT         PRINT MESSAGE
01:0020227E 6000E3AE        	  4733:          BRA     MACSBUG        AND REENTER MACSBUG
                            	  4734: 
01:00202282 0A              	  4735: MSG013   DC.B    LF,LF,'BREAK',CR,LF,LF,EOT
01:00202283 0A
01:00202284 425245414B
01:00202289 0D
01:0020228A 0A
01:0020228B 0A
01:0020228C 04
                            	  4736: 
                            	  4737: 
                            	  4738: 
01:0020228D 00              	  4739:          DC.B    0              PAD BYTE
                            	  4740: 
                            	  4741: ***  OUTPUT BUFFER TO TAPE  ***
01:0020228E 48E7F8C0        	  4742: TAPEOUT  MOVEM.L D0-D4/A0-A1,-(A7)  SAVE REGISTERS
01:00202292 204D            	  4743:          MOVE.L  A5,A0          REMEMBER WHERE BUFFER STARTS
01:00202294 227C000F0000    	  4744:          MOVEA.L #PDI1,A1
01:0020229A 42290021        	  4745:          CLR.B   $21(A1)
01:0020229E 0C505330        	  4746:          CMPI.W  #'S0',(A0)     HEADER RECORD?
01:002022A2 6612            	  4747:          BNE.S   TAPEOUT2       NO
01:002022A4 137C00020009    	  4748:          MOVE.B  #2,9(A1)       YES, PC0 INPUT, PC1 OUTPUT
01:002022AA 363C02BC        	  4749:          MOVE.W  #700,D3        OUTPUT NULLS (HEADER)
01:002022AE 4200            	  4750: TAPEOUT1 CLR.B   D0
01:002022B0 6120            	  4751:          BSR.S   TAPEO
01:002022B2 5343            	  4752:          SUBQ.W  #1,D3
01:002022B4 66F8            	  4753:          BNE.S   TAPEOUT1
01:002022B6 BBCE            	  4754: TAPEOUT2 CMP.L   A6,A5          SEE IF AT OR BEYOND END OF LINE
01:002022B8 6512            	  4755:          BCS.S   TAPEOUT4       NO. KEEP GOING.
01:002022BA 16380654        	  4756:          MOVE.B  TAPENULS,D3    OUTPUT NULLS AFTER EACH RECORD
01:002022BE 4200            	  4757: TAPEOUT5 CLR.B   D0             YES. OUTPUT A NULL
01:002022C0 6110            	  4758:          BSR.S   TAPEO
01:002022C2 5303            	  4759:          SUBQ.B  #1,D3
01:002022C4 66F8            	  4760:          BNE.S   TAPEOUT5
01:002022C6 4CDF031F        	  4761:          MOVEM.L (A7)+,D0-D4/A0-A1  RESTORE REGISTERS
01:002022CA 4E75            	  4762:          RTS
01:002022CC 101D            	  4763: TAPEOUT4 MOVE.B  (A5)+,D0       GRAB BYTE TO OUTPUT
01:002022CE 6102            	  4764:          BSR.S   TAPEO          GO OUTPUT IT
01:002022D0 60E4            	  4765:          BRA.S   TAPEOUT2       GO DO ANOTHER
                            	  4766: *
                            	  4767: * OUTPUTS THE CHARACTER IN D0.B TO TAPE
                            	  4768: * A LOGIC `0' IS RECORDED AS ONE SQUARE WAVE PERIOD OF
                            	  4769: *        1 MILLISEC DURATION, 50% DUTY CYCLE
                            	  4770: * A LOGIC `1' IS RECORDED AS ONE SQUARE WAVE PERIOD OF
                            	  4771: *        500 MICROSEC DURATION, 50% DUTY CYCLE
                            	  4772: *
01:002022D2 003C0010        	  4773: TAPEO    ORI.B   #%10000,CCR    SET X BIT IN SR
01:002022D6 E310            	  4774:          ROXL.B  #1,D0          DATA BIT INTO X
01:002022D8 E312            	  4775: TAPEO1   ROXL.B  #1,D2          DATA BIT INTO D2
01:002022DA 613E            	  4776:          BSR.S   TIMERTST       WAIT UNTIL LAST PULSE DONE
01:002022DC 08A900000021    	  4777:          BCLR.B  #0,$21(A1)     HALT TIMER
01:002022E2 721E            	  4778:          MOVEQ   #30,D1         TIMER COUNT FOR A `1'
01:002022E4 08020000        	  4779:          BTST.L  #0,D2          SENDING A `1'?
01:002022E8 6606            	  4780:          BNE.S   TAPEO2         YES.
01:002022EA 068100000020    	  4781:          ADDI.L  #32,D1         NO. TIMER COUNT FOR 0
01:002022F0 03C90025        	  4782: TAPEO2   MOVEP.L D1,$25(A1)     SET TIMER PRELOAD REGISTER
01:002022F4 08E900010019    	  4783:          BSET.B  #1,$19(A1)     SEND 1 TO TAPE
01:002022FA 08E900000021    	  4784:          BSET.B  #0,$21(A1)     START TIMER
01:00202300 6118            	  4785:          BSR.S   TIMERTST       WAIT UNTIL PULSE DONE
01:00202302 08A900000021    	  4786:          BCLR.B  #0,$21(A1)     HALT TIMER
01:00202308 08A900010019    	  4787:          BCLR.B  #1,$19(A1)     SEND 0 TO TAPE
01:0020230E 08E900000021    	  4788:          BSET.B  #0,$21(A1)     START TIMER
01:00202314 D000            	  4789:          ASL.B   #1,D0          SENT 8 BITS?
01:00202316 66C0            	  4790:          BNE     TAPEO1         NO. CONTINUE
01:00202318 4E75            	  4791:          RTS
                            	  4792: *
                            	  4793: * WAITS UNTIL PROGRAMMED TIME DELAY HAS ELAPSED
                            	  4794: * (IF TIMER IS RUNNING)
                            	  4795: * ALSO CHECKS FOR BREAK
                            	  4796: * USES D1
                            	  4797: *
01:0020231A 6100FF28        	  4798: TIMERTST BSR     CHKBRK         CHECK FOR BREAK
01:0020231E 082900000021    	  4799:          BTST.B  #0,$21(A1)     IS TIMER RUNNING?
01:00202324 6708            	  4800:          BEQ.S   TIMERTS1       NO. RETURN
01:00202326 082900000035    	  4801:          BTST.B  #0,$35(A1)     HAS TIME DELAY ELAPSED?
01:0020232C 67EC            	  4802:          BEQ.S   TIMERTST       NO. WAIT
01:0020232E 4E75            	  4803: TIMERTS1 RTS
                            	  4804: 
                            	  4805: *   IF FAULT THEN INITIALIZE AN ACIA
                            	  4806: *
01:00202330 48E78080        	  4807: FAULTSER MOVEM.L D0/A0,-(A7)  FREE UP SOME WORKING REGISTERS
                            	  4808: 
                            	  4809: * DELAY TO ALLOW ACIA TO FINISH TRANSMITTING
                            	  4810: *  LONGEST TIME FOR TWO CHARACTERS; 110 BAUD, 16MHZ NO WAIT STATES
01:00202334 203C0000C350    	  4811:          MOVE.L  #50000,D0      DELAY A WHILE
01:0020233A 5380            	  4812: FAULTAC4 SUBQ.L  #1,D0          LOOP AROUND
01:0020233C 66FC            	  4813:          BNE     FAULTAC4
                            	  4814: 
01:0020233E 6100FD24        	  4815:          BSR     GETSER1        MOVE ADDRESS INTO A0
01:00202342 1010            	  4816:          MOVE.B  (A0),D0        READ STATUS
01:00202344 02000070        	  4817:          ANDI.B  #$70,D0        SEE IF FAULT
01:00202348 6708            	  4818:          BEQ.S   FAULTAC2
01:0020234A 10BC0003        	  4819:          MOVE.B  #RESET,(A0)    MASTER RESET
01:0020234E 10B8064C        	  4820:          MOVE.B  MD1CON,(A0)    HOW TO PROGRAM IT
                            	  4821: 
01:00202352 6100FD22        	  4822: FAULTAC2 BSR     GETSER2        MOVE ADDRESS INTO A0
01:00202356 1010            	  4823:          MOVE.B  (A0),D0
01:00202358 02000070        	  4824:          ANDI.B  #$70,D0
01:0020235C 6708            	  4825:          BEQ.S   FAULTAC3
01:0020235E 10BC0003        	  4826:          MOVE.B  #RESET,(A0)    MASTER RESET
01:00202362 10B8064D        	  4827:          MOVE.B  MD1CON+1,(A0)  HOW TO PROGRAM IT
                            	  4828: FAULTAC3
01:00202366 4CDF0101        	  4829:          MOVEM.L (A7)+,A0/D0    RESTORE REGISTERS
01:0020236A 4E75            	  4830:          RTS
                            	  4831: 
                            	  4832: *   INITIALIZE BOTH ACIAs
                            	  4833: *
01:0020236C 48E78080        	  4834: INITSER  MOVEM.L D0/A0,-(A7)  FREE UP SOME WORKING REGISTERS
                            	  4835: 
                            	  4836: * DELAY TO ALLOW ACIA TO FINISH TRANSMITTING
                            	  4837: *  LONGEST TIME FOR TWO CHARACTERS; 110 BAUD, 16MHZ NO WAIT STATES
01:00202370 203C0000C350    	  4838:          MOVE.L  #50000,D0      DELAY A WHILE
01:00202376 5380            	  4839: INITAC3  SUBQ.L  #1,D0          LOOP AROUND
01:00202378 66FC            	  4840:          BNE     INITAC3
                            	  4841: 
01:0020237A 6100FCE8        	  4842:          BSR     GETSER1        MOVE ADDRESS INTO A0
01:0020237E 10BC0003        	  4843:          MOVE.B  #RESET,(A0)    MASTER RESET
01:00202382 10B8064C        	  4844:          MOVE.B  MD1CON,(A0)    HOW TO PROGRAM IT
01:00202386 6100FCEE        	  4845:          BSR     GETSER2        MOVE ADDRESS INTO A0
01:0020238A 10BC0003        	  4846:          MOVE.B  #RESET,(A0)    MASTER RESET
01:0020238E 10B8064D        	  4847:          MOVE.B  MD1CON+1,(A0)  HOW TO PROGRAM IT
01:00202392 4CDF0101        	  4848:          MOVEM.L (A7)+,A0/D0    RESTORE REGISTERS
01:00202396 4E75            	  4849:          RTS
                            	  4850: 
                            	  4851: *    INPUT CHARACTER FROM PORT1
                            	  4852: *    ACIA ADDRESS IN (A0)
                            	  4853: *
                            	  4854: 
01:00202398 1210            	  4855: INCHNE   MOVE.B  (A0),D1        (INCH NO ECHO) LOAD STATUS SIDE
01:0020239A 02010010        	  4856:          ANDI.B  #$10,D1        .              CHECK FOR BREAK
01:0020239E 6600FED0        	  4857:          BNE     BREAK          .              GO PROCESS IT
                            	  4858: 
01:002023A2 1210            	  4859:          MOVE.B  (A0),D1        LOAD STATUS SIDE
01:002023A4 02010001        	  4860:          ANDI.B  #1,D1          SEE IF READY
01:002023A8 67EE            	  4861:          BEQ.S   INCHNE         IF NOT READY
01:002023AA 10280001        	  4862:          MOVE.B  1(A0),D0       READ DATA SIDE   *****************
01:002023AE 0200007F        	  4863:          ANDI.B  #$7F,D0        DROP PARITY BIT
01:002023B2 4E75            	  4864:          RTS
                            	  4865: 
                            	  4866: *  INPUT A LINE FROM PORT2 (ACIA2)
                            	  4867: *   [ECHO TO PORT1 (ACIA1)]
                            	  4868: *                  XONOFF
                            	  4869: *                   0000     NULL  NULL    DO NOTHING
                            	  4870: *                   0817   BKSPACE CNTL/W
                            	  4871: *                   1214     X-ON  X-OFF   READER ON OFF
                            	  4872: *
01:002023B4 4AB80620        	  4873: PORTIN2  TST.L   INFROM         SEE IF ALTERNATE ADDRESS
01:002023B8 6706            	  4874:          BEQ.S   PORTIN2X
01:002023BA 2F380620        	  4875:          MOVE.L  INFROM,-(A7)
01:002023BE 4E75            	  4876:          RTS                    GO DO IT
01:002023C0 2F380634        	  4877: PORTIN2X MOVE.L  INPORT2,-(A7)  GO TO IO ROUTINE
01:002023C4 4E75            	  4878:          RTS                    ; (THIS NORMALLY GOES TO PORTIN20)
                            	  4879: *
01:002023C6 48E77090        	  4880: PORTIN20 MOVEM.L D1-D3/A0/A3,-(A7)  SAVE WORKING REGISTERS
                            	  4881: 
01:002023CA 6100FCAA        	  4882:          BSR     GETSER2
01:002023CE 2648            	  4883:          MOVE.L  A0,A3          A3 = ADDRESS OF PORT 2
01:002023D0 6100FC92        	  4884:          BSR     GETSER1        A0 = ADDRESS OF PORT 1
                            	  4885: 
01:002023D4 243C000320C8    	  4886:          MOVE.L  #LTIME,D2 D2 = 5 SEC DEADMAN @ 8MHZ
                            	  4887: 
01:002023DA 614A            	  4888: PORT2100 BSR.S   P2READY
01:002023DC 6704            	  4889:          BEQ.S   PORT2120       PORT2 DATA IN NOT-READY
                            	  4890: 
01:002023DE 615C            	  4891:          BSR.S   RES            READ/ECHO/STORE CHAR
01:002023E0 60F8            	  4892:          BRA     PORT2100
                            	  4893: 
01:002023E2 7601            	  4894: PORT2120 MOVEQ   #1,D3          D3 = MLS TIMER (ONE TICK)
01:002023E4 6140            	  4895: PORT2130 BSR.S   P2READY
01:002023E6 6622            	  4896:          BNE.S   PORT2250       PORT2 DATA IN READY
                            	  4897: 
01:002023E8 5382            	  4898:          SUBQ.L  #1,D2
01:002023EA 6B2A            	  4899:          BMI.S   PORT2300       SECOND TIME OUT
                            	  4900: 
01:002023EC 5383            	  4901:          SUBQ.L  #1,D3
01:002023EE 66F4            	  4902:          BNE     PORT2130       MLS TIMER
                            	  4903: 
01:002023F0 103804E6        	  4904: PORT2140 MOVE.B  XONOFF,D0
01:002023F4 670C            	  4905:          BEQ.S   PORT2150       NULL; IGNORE READER ON
01:002023F6 1213            	  4906:          MOVE.B  (A3),D1
01:002023F8 02010002        	  4907:          ANDI.B  #2,D1
01:002023FC 67E4            	  4908:          BEQ     PORT2120       PORT2 DATA OUT NOT-READY
01:002023FE 17400002        	  4909:          MOVE.B  D0,2(A3)       SEND START READER CHAR
                            	  4910: PORT2150
                            	  4911: 
01:00202402 263C0000A028    	  4912:          MOVE.L  #STIME,D3      D3 = 100 MLS @ 8MHZ
01:00202408 60DA            	  4913:          BRA     PORT2130
                            	  4914: 
01:0020240A 611A            	  4915: PORT2250 BSR.S   P2READY
01:0020240C 6702            	  4916:          BEQ.S   PORT2260       PORT2 DATA IN NOT-READY
01:0020240E 612C            	  4917:          BSR.S   RES            READ/ECHO/STORE CHAR
                            	  4918: 
01:00202410 5383            	  4919: PORT2260 SUBQ.L  #1,D3
01:00202412 6BDC            	  4920:          BMI     PORT2140       CHARACTER TIME OUT
01:00202414 60F4            	  4921:          BRA     PORT2250
                            	  4922: 
01:00202416 4BFA0006        	  4923: PORT2300 LEA     MSG030(PC),A5  TIMEOUT ERROR
01:0020241A 6000FE5A        	  4924:          BRA     BREAK79
                            	  4925: 
01:0020241E 54494D454F5554  	  4926: MSG030   DC.B    'TIMEOUT',EOT
01:00202425 04
                            	  4927: 
                            	  4928: 
01:00202426 1210            	  4929: P2READY  MOVE.B  (A0),D1        CHECK FOR ACTIVITY ON PORT1
01:00202428 02010010        	  4930:          ANDI.B  #$10,D1        CHECK FOR BREAK
01:0020242C 6600FE42        	  4931:          BNE     BREAK
01:00202430 12280001        	  4932:          MOVE.B  1(A0),D1       READ POSSIBLE CHAR PORT 1; IGNORE
                            	  4933: 
01:00202434 1213            	  4934:          MOVE.B  (A3),D1        READ STATUS OF PORT2
01:00202436 02010001        	  4935:          ANDI.B  #1,D1          SEE IF CHARACTER SENT
01:0020243A 4E75            	  4936:          RTS
                            	  4937: 
01:0020243C 122B0002        	  4938: RES      MOVE.B  2(A3),D1       D1 = CHAR READ FROM PORT2
01:00202440 0201007F        	  4939:          ANDI.B  #$7F,D1        DROP PARITY BIT
                            	  4940: 
01:00202444 4A7804E2        	  4941:          TST.W   ECHOPT1        SEE IF ECHO ON
01:00202448 6704            	  4942:          BEQ.S   RES140
01:0020244A 11410001        	  4943:          MOVE.B  D1,1(A0)       SEND TO DATA SIDE (PORT1)
                            	  4944: RES140
                            	  4945: 
01:0020244E 0C01000D        	  4946:          CMPI.B  #CR,D1
01:00202452 671C            	  4947:          BEQ.S   RES190         END OF LINE
                            	  4948: 
01:00202454 0C010020        	  4949:          CMPI.B  #$20,D1        IGNORE CONTROL CHARACTERS (NULLS)
01:00202458 6D14            	  4950:          BLT.S   RES150
01:0020245A 1C81            	  4951:          MOVE.B  D1,(A6)        SAVE CHAR IN BUFFER
                            	  4952: 
01:0020245C 263C00019064    	  4953:          MOVE.L  #LTIME/2,D3    D3 = 2 1/2 SEC @ 8MHZ (CHARATER  TIMER)
                            	  4954: 
01:00202462 220E            	  4955:          MOVE.L  A6,D1          CHECK BUFFER FULL
01:00202464 928D            	  4956:          SUB.L   A5,D1
01:00202466 0C410050        	  4957:          CMPI.W  #BUFSIZE,D1
01:0020246A 6A02            	  4958:          BPL.S   RES150         FULL
01:0020246C 528E            	  4959:          ADDQ.L  #1,A6          INCREMENT STORE POINTER
01:0020246E 4E75            	  4960: RES150   RTS
                            	  4961: 
                            	  4962: 
01:00202470 BDCD            	  4963: RES190   CMP.L   A5,A6
01:00202472 67FA            	  4964:          BEQ     RES150         NULL RECORD; IGNORE
                            	  4965: 
01:00202474 588F            	  4966:          ADDQ.L  #4,A7          TRIM STACK
                            	  4967: 
01:00202476 103804E7        	  4968:          MOVE.B  XONOFF+1,D0
01:0020247A 670C            	  4969:          BEQ.S   RES195         XOFF = NULL CHAR; IGNORE
01:0020247C 1213            	  4970: RES194   MOVE.B  (A3),D1
01:0020247E 02010002        	  4971:          ANDI.B  #2,D1
01:00202482 67F8            	  4972:          BEQ     RES194         PORT2 DATA OUT NOT-READY
01:00202484 17400002        	  4973:          MOVE.B  D0,2(A3)       STOP READER
                            	  4974: RES195
                            	  4975: 
01:00202488 4CDF090E        	  4976:          MOVEM.L (A7)+,D1-D3/A0/A3   RESTORE THE REGISTERS
01:0020248C 4E75            	  4977:          RTS
                            	  4978: 
                            	  4979: *
                            	  4980: * INPUT A LINE FROM AUDIO TAPE (PI/T)
                            	  4981: * [ECHO TO PORT1 (ACIA1)]
                            	  4982: *
01:0020248E 48E778F0        	  4983: TAPEIN   MOVEM.L D1-D4/A0-A3,-(A7)  SAVE WORKING REGISTERS
01:00202492 6100FBD0        	  4984:          BSR     GETSER1        ACIA1 ADDRESS INTO A0
01:00202496 227C000F0000    	  4985:          MOVEA.L #PDI1,A1
01:0020249C 13FC0002000F0009	  4986:          MOVE.B  #2,PITCDDR     PC0 INPUT, PC1 OUTPUT.
                            	  4987: 
                            	  4988: * SYNCHRONIZE ON S CHARACTER
01:002024A4 4201            	  4989:          CLR.B   D1
01:002024A6 613C            	  4990: TAPEIN10 BSR.S   TAPEIN40       GET TAPE
01:002024A8 65FC            	  4991:          BCS.S   TAPEIN10       WAIT FOR LOW
01:002024AA 6138            	  4992: TAPEIN11 BSR.S   TAPEIN40       GET TAPE
01:002024AC 64FC            	  4993:          BCC.S   TAPEIN11       WAIT FOR HIGH
01:002024AE 6154            	  4994:          BSR.S   STARTIMR       START TIMER
01:002024B0 D201            	  4995: TAPEIN12 ASL.B   #1,D1
01:002024B2 6110            	  4996:          BSR.S   TAPEIN30       GET ONE BIT FROM TAPE
01:002024B4 0C010053        	  4997:          CMPI.B  #'S',D1        S?
01:002024B8 66F6            	  4998:          BNE.S   TAPEIN12       NO. GET NEXT BIT
01:002024BA 6072            	  4999:          BRA.S   TAPEIN51
                            	  5000: 
                            	  5001: * GET ONE CHARACTER FROM THE TAPE
01:002024BC 7202            	  5002: TAPEIN20 MOVEQ   #2,D1          SET STOP BIT
01:002024BE 6104            	  5003: TAPEIN21 BSR.S   TAPEIN30       GET 1 BIT FROM TAPE
01:002024C0 D201            	  5004:          ASL.B   #1,D1          STOP IN CARRY
01:002024C2 64FA            	  5005:          BCC.S   TAPEIN21       NO
                            	  5006: *FALL INTO LOAD BIT ROUTINE FOR LAST BIT
01:002024C4 611E            	  5007: TAPEIN30 BSR.S   TAPEIN40       GET TAPE
01:002024C6 65FC            	  5008:          BCS.S   TAPEIN30       WAIT FOR LOW
01:002024C8 611A            	  5009: TAPEIN31 BSR.S   TAPEIN40       GET TAPE
01:002024CA 64FC            	  5010:          BCC.S   TAPEIN31       WAIT FOR HIGH
01:002024CC 4239000F0021    	  5011:          CLR.B   PITTCR         STOP TIMER
01:002024D2 0749002D        	  5012:          MOVEP.L $2D(A1),D3     GET PERIOD MEASUREMENT
01:002024D6 612C            	  5013:          BSR.S   STARTIMR       START TIMER
01:002024D8 048300FFFFA1    	  5014:          SUBI.L  #$FFFFFF-94,D3 IS IT A LOGIC 1?
01:002024DE 6502            	  5015:          BLO.S   TAPEIN32       NO
01:002024E0 5201            	  5016:          ADDQ.B  #1,D1          YES. STORE LOGIC 1
01:002024E2 4E75            	  5017: TAPEIN32 RTS
                            	  5018: 
                            	  5019: * READ THE TAPE LEVEL INTO THE CARRY AND CHECK FOR BREAK
01:002024E4 1410            	  5020: TAPEIN40 MOVE.B  (A0),D2        CHECK FOR ACTIVITY ON PORT1
01:002024E6 02020010        	  5021:          ANDI.B  #$10,D2        CHECK FOR BREAK
01:002024EA 6600FD84        	  5022:          BNE     BREAK
01:002024EE 1410            	  5023:          MOVE.B  (A0),D2        SEE IF CHARACTER SENT
01:002024F0 02020001        	  5024:          ANDI.B  #1,D2
01:002024F4 6704            	  5025:          BEQ.S   TAPEIN41       NONE SENT.
01:002024F6 14280001        	  5026:          MOVE.B  1(A0),D2       READ WHAT WAS SENT
01:002024FA 1439000F0019    	  5027: TAPEIN41 MOVE.B  PITPCDR,D2     READ PI/T
01:00202500 E202            	  5028:          ASR.B   #1,D2          DATA INTO CARRY
01:00202502 4E75            	  5029:          RTS
                            	  5030: 
                            	  5031: *STARTS PROGRAMMABLE TIMER
01:00202504 283C00FFFFFF    	  5032: STARTIMR MOVE.L  #$00FFFFFF,D4  INIT. COUNT. PRELOAD REG.
01:0020250A 09C90025        	  5033:          MOVEP.L D4,$25(A1)
01:0020250E 13FC0001000F0021	  5034:          MOVE.B  #1,PITTCR      START TIMER
                            	  5035: 
01:00202516 4E75            	  5036:          RTS
                            	  5037: 
01:00202518 0C010020        	  5038: TAPEIN53 CMPI.B  #$20,D1
01:0020251C 6D0E            	  5039:          BLT.S   TAPEIN50       IGNORE CONTROL CHARACTERS
01:0020251E 1C81            	  5040:          MOVE.B  D1,(A6)        SAVE CHARACTER IN BUFFER
01:00202520 220E            	  5041:          MOVE.L  A6,D1          CHECK BUFFER FULL
01:00202522 928D            	  5042:          SUB.L   A5,D1
01:00202524 0C410050        	  5043:          CMPI.W  #BUFSIZE,D1
01:00202528 6A02            	  5044:          BPL.S   TAPEIN50       FULL
01:0020252A 528E            	  5045:          ADDQ.L  #1,A6          INCREMENT BUFFER POINTER
                            	  5046: 
01:0020252C 618E            	  5047: TAPEIN50 BSR     TAPEIN20       GET ONE CHARACTER FROM TAPE
01:0020252E 0201007F        	  5048: TAPEIN51 ANDI.B  #$7F,D1        DROP PARITY BIT
01:00202532 4A7804E2        	  5049:          TST.W   ECHOPT1        SEE IF ECHO ON
01:00202536 6704            	  5050:          BEQ.S   TAPEIN52
01:00202538 11410001        	  5051:          MOVE.B  D1,1(A0)       SEND TO PORT1
01:0020253C 0C01000A        	  5052: TAPEIN52 CMPI.B  #LF,D1         END OF LINE?
01:00202540 66D6            	  5053:          BNE.S   TAPEIN53       NO.
01:00202542 4CDF0F1E        	  5054:          MOVEM.L (A7)+,D1-D4/A0-A3  RESTORE REGISTERS
01:00202546 4E75            	  5055:          RTS
                            	  5056: 
                            	  5057: *     SCAN COMMAND LINE FOR PORT NUMBER
                            	  5058: *     DU LO VE MD
                            	  5059: *
01:00202548 42B80620        	  5060: SCANPORT CLR.L   INFROM         DEFAULT IS WHATEVER IS CALLED
01:0020254C 42B8061C        	  5061:          CLR.L   OUTTO
01:00202550 1015            	  5062:          MOVE.B  (A5),D0        NO....GET CHARACTER
01:00202552 0C000020        	  5063:          CMPI.B  #BLANK,D0      .     IS IT A BLANK?
01:00202556 6750            	  5064:          BEQ.S   SCANP6         .     YES..EXIT
                            	  5065: 
01:00202558 0C000031        	  5066:          CMPI.B  #'1',D0        SEE IF PORT 1 OVERRIDE
01:0020255C 660E            	  5067:          BNE.S   SCANP4
01:0020255E 21F8062C0620    	  5068:          MOVE.L  INPORT1,INFROM
01:00202564 21F80630061C    	  5069:          MOVE.L  OUTPORT1,OUTTO
01:0020256A 603A            	  5070:          BRA.S   SCANP7
                            	  5071: 
01:0020256C 0C000032        	  5072: SCANP4   CMPI.B  #'2',D0        SEE IF PORT 2 OVERRIDE
01:00202570 660E            	  5073:          BNE.S   SCANP5
01:00202572 21F806340620    	  5074:          MOVE.L  INPORT2,INFROM
01:00202578 21F80638061C    	  5075:          MOVE.L  OUTPORT2,OUTTO
01:0020257E 6026            	  5076:          BRA.S   SCANP7
                            	  5077: 
01:00202580 0C000033        	  5078: SCANP5   CMPI.B  #'3',D0        SEE IF PORT3 OVERRIDE
01:00202584 660E            	  5079:          BNE.S   SCANP8
01:00202586 21F8063C0620    	  5080:          MOVE.L  INPORT3,INFROM
01:0020258C 21F80640061C    	  5081:          MOVE.L  OUTPORT3,OUTTO
01:00202592 6012            	  5082:          BRA.S   SCANP7
                            	  5083: 
01:00202594 0C000034        	  5084: SCANP8   CMPI.B  #'4',D0        SEE IF PORT4 OVERRIDE
01:00202598 660E            	  5085:          BNE.S   SCANP6
01:0020259A 21F806440620    	  5086:          MOVE.L  INPORT4,INFROM
01:002025A0 21F80648061C    	  5087:          MOVE.L  OUTPORT4,OUTTO
                            	  5088: 
01:002025A6 528D            	  5089: SCANP7   ADDQ.L  #1,A5          ADJUST GET CHAR POINTER
01:002025A8 4E75            	  5090: SCANP6   RTS
                            	  5091: 
                            	  5092: *       *  P A  *      "PRINTER ATTACH" COMMAND          *
                            	  5093: *                                                        *
                            	  5094: * IF THE "PRINTER" HAS BEEN ATTACHED, ALL CHARACTERS     *
                            	  5095: * ENTERED AND TRANSMITTED VIA THE CONSOLE WILL PRINT ON  *
                            	  5096: * THE HARD COPY PRINTER. -- TO TERMINATE, ENTER "NOPA"   *
                            	  5097: *                                                        *
                            	  5098: * THIS COMMAND MAKES USE OF THE "NO" OPTION.  THERE IS A *
                            	  5099: * 4 BYTE HARD BRANCH INFRONT OF THE REGULAR ENTRY POINT. *
                            	  5100: **********************************************************
                            	  5101: 
01:002025AA 6004            	  5102:          BRA     NOPACMD        ENTRY FOR "NOPA"
                            	  5103: 
                            	  5104: *
01:002025AC 70FF            	  5105: PACMD    MOVEQ   #-1,D0         ENTRY FOR "PA" (D0=-1[CRT & PRINT])
01:002025AE 6002            	  5106:          BRA.S   SETCRTPR       GO ACTUALLY SET THE SWITCH
01:002025B0 7000            	  5107: NOPACMD  CLR.L   D0             D0 = ZEROS... "CRT" ONLY
01:002025B2 31C00652        	  5108: SETCRTPR MOVE.W  D0,CRTPNT      SET THE "CRT" AND "PRINTER" SWITCH
01:002025B6 6000E076        	  5109:          BRA     MACSBUG        GO BE "READY"
                            	  5110: 
                            	  5111: 
                            	  5112: 
                            	  5113: 
                            	  5114: *-------------------------------------------------------------------------
                            	  5115: * File CODE68K   68K ONE LINE ASSEMBLER                           07/23/82
                            	  5116: 
                            	  5117: * EVALUATE EXPRESSION
                            	  5118: *  NUMBER PLUS OR MINUS NUMBER....
                            	  5119: *
                            	  5120: EV       DS      0
01:002025BA 2F07            	  5121:          MOVE.L  D7,-(A7)       SAVE D7
01:002025BC 7E00            	  5122:          CLR.L   D7
01:002025BE 6120            	  5123: EV21     BSR.S   GETFIELD       GET NUMBER
01:002025C0 DE80            	  5124:          ADD.L   D0,D7          D7 = NUMBER BEING BUILT
01:002025C2 121D            	  5125: EV15     MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
01:002025C4 7000            	  5126:          CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
01:002025C6 0C01002B        	  5127:          CMPI.B  #'+',D1
01:002025CA 67F2            	  5128:          BEQ     EV21           PLUS
01:002025CC 0C01002D        	  5129:          CMPI.B  #'-',D1
01:002025D0 6606            	  5130:          BNE.S   EV39           NOT MINUS
01:002025D2 610C            	  5131:          BSR.S   GETFIELD       GET NEXT NUMBER
01:002025D4 9E80            	  5132:          SUB.L   D0,D7
01:002025D6 60EA            	  5133:          BRA     EV15
                            	  5134: 
01:002025D8 2007            	  5135: EV39     MOVE.L  D7,D0          D0 = VALUE BUILT
01:002025DA 538D            	  5136:          SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
01:002025DC 2E1F            	  5137:          MOVE.L  (A7)+,D7       RESTORE D7
01:002025DE 4E75            	  5138:          RTS
                            	  5139: 
                            	  5140: GETFIELD DS      0
01:002025E0 0C15002A        	  5141:          CMPI.B  #'*',(A5)
01:002025E4 6606            	  5142:          BNE.S   GETF305
                            	  5143: 
01:002025E6 2004            	  5144:          MOVE.L  D4,D0          D0 = PROGRAM COUNTER
01:002025E8 528D            	  5145:          ADDQ.L  #1,A5
01:002025EA 6036            	  5146:          BRA.S   GETF333
                            	  5147: 
01:002025EC 0C150027        	  5148: GETF305  CMPI.B  #$27,(A5)
01:002025F0 662A            	  5149:          BNE.S   GETF325        NOT LITERAL
                            	  5150: 
01:002025F2 528D            	  5151:          ADDQ.L  #1,A5
01:002025F4 7000            	  5152:          CLR.L   D0
                            	  5153: 
01:002025F6 3229000C        	  5154:          MOVE.W  TLENGTH(A1),D1  D1 = SIZE
01:002025FA 6704            	  5155:          BEQ.S   GETF308        .B = 0
01:002025FC EA49            	  5156:          LSR.W   #5,D1          .W = 1
01:002025FE 5381            	  5157:          SUBQ.L  #1,D1          .L = 3
                            	  5158: GETF308
                            	  5159: 
01:00202600 E188            	  5160: GETF311  LSL.L   #8,D0
01:00202602 101D            	  5161:          MOVE.B  (A5)+,D0
01:00202604 0C150027        	  5162:          CMPI.B  #$27,(A5)
01:00202608 6706            	  5163:          BEQ.S   GETF312        CLOSING QUOTE
01:0020260A 51C9FFF4        	  5164:          DBF     D1,GETF311
01:0020260E 6056            	  5165:          BRA.S   ER1            OVERFLOW
                            	  5166: 
01:00202610 528D            	  5167: GETF312  ADDQ.L  #1,A5          MOVE PAST CLOSING QUOTE
01:00202612 6002            	  5168:          BRA.S   GETF314
                            	  5169: 
01:00202614 E188            	  5170: GETF313  LSL.L   #8,D0
01:00202616 51C9FFFC        	  5171: GETF314  DBF     D1,GETF313     LEFT NORNALIZE
01:0020261A 6006            	  5172:          BRA.S   GETF333
                            	  5173: 
01:0020261C 6100F8CE        	  5174: GETF325  BSR     GETDECNU       GET DECIMAL NUMBER
01:00202620 6644            	  5175:          BNE.S   ER1            MESSED UP NUMBER
                            	  5176: 
01:00202622 4E75            	  5177: GETF333  RTS
                            	  5178: 
                            	  5179: XBASE    DS        0
                            	  5180: 
                            	  5181: * FIND AND SET SIZE
                            	  5182: * BIT 5432109876543210
                            	  5183: *     ........00......  = BYTE
                            	  5184: *     ........01......  = WORD
                            	  5185: *     ........10......  = LONG
                            	  5186: *
01:00202624 8469000C        	  5187: FSIZE    OR.W    TLENGTH(A1),D2  SET SIZE BITS
01:00202628 4E75            	  5188:          RTS
                            	  5189: 
                            	  5190: *  D0 = VALUE 0 - 7
                            	  5191: *  D1 = 0 IF D@     = 1 IF A@
01:0020262A 7200            	  5192: GETREGD  CLR.L   D1
01:0020262C 0C1D0044        	  5193:          CMPI.B  #'D',(A5)+
01:00202630 6634            	  5194:          BNE.S   ER1
01:00202632 7000            	  5195: GET41    CLR.L   D0
01:00202634 101D            	  5196:          MOVE.B  (A5)+,D0
01:00202636 04000030        	  5197:          SUBI.B  #'0',D0
01:0020263A 6B2A            	  5198:          BMI.S   ER1
01:0020263C 0C000007        	  5199:          CMPI.B  #$7,D0
01:00202640 6E24            	  5200:          BGT.S   ER1
01:00202642 4E75            	  5201:          RTS
                            	  5202: 
01:00202644 7200            	  5203: GETREGA  CLR.L   D1
01:00202646 123C0008        	  5204:          MOVE.B  #8,D1
01:0020264A 0C1D0041        	  5205:          CMPI.B  #'A',(A5)+
01:0020264E 6616            	  5206:          BNE.S   ER1
01:00202650 60E0            	  5207:          BRA     GET41
                            	  5208: 
01:00202652 4241            	  5209: GETREGAD CLR     D1
01:00202654 101D            	  5210:          MOVE.B  (A5)+,D0
01:00202656 0C000044        	  5211:          CMPI.B  #'D',D0
01:0020265A 67D6            	  5212:          BEQ     GET41
01:0020265C 123C0008        	  5213:          MOVE.B  #8,D1
01:00202660 0C000041        	  5214:          CMPI.B  #'A',D0
01:00202664 67CC            	  5215:          BEQ     GET41
01:00202666 60000786        	  5216: ER1      BRA     ER
                            	  5217: 
01:0020266A 3E3C01FD        	  5218: EADA     MOVE.W  #$1FD,D7       DATA ALTERABLE ONLY
01:0020266E 6022            	  5219:          BRA.S   EA
                            	  5220: 
01:00202670 3E3C07E4        	  5221: EAC      MOVE.W  #$7E4,D7       CONTROL ONLY
01:00202674 601C            	  5222:          BRA.S   EA
                            	  5223: 
01:00202676 3E3C01FC        	  5224: EAM      MOVE.W  #$1FC,D7       MEMORY ALTERABLE ONLY
01:0020267A 6016            	  5225:          BRA.S   EA
                            	  5226: 
01:0020267C 3E3C0800        	  5227: EAZ      MOVE.W  #$800,D7       IMMEDIATE ONLY
01:00202680 6010            	  5228:          BRA.S   EA
                            	  5229: 
01:00202682 3E3C0FFD        	  5230: EADADDR  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:00202686 600A            	  5231:          BRA.S   EA
                            	  5232: 
01:00202688 3E3C01FF        	  5233: EAA      MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
01:0020268C 6004            	  5234:          BRA.S   EA
                            	  5235: 
01:0020268E 3E3C0FFF        	  5236: EAALL    MOVE.W  #$FFF,D7       ALL MODES
                            	  5237: 
                            	  5238: *  ...............1  D@                DATA REGISTER
                            	  5239: *  ..............1.  A@
                            	  5240: *  .............1..  (A@)
                            	  5241: *  ............1...  -(A@)
                            	  5242: *  ...........1....  (A@)+
                            	  5243: *  ..........1.....  DATA(A@)
                            	  5244: *  .........1......  DATA(A@,R@)
                            	  5245: *  ........1.......  DATA  (SHORT)
                            	  5246: *  .......1........  DATA  (LONG)
                            	  5247: *  ......1.........  DATA(PC)
                            	  5248: *  .....1..........  DATA(PC,R@)
                            	  5249: *  ....1...........  #DATA
                            	  5250: *  1...............  SPECIAL CASE JMP.L
                            	  5251: 
                            	  5252: * D0 = VALUE CALCULATED
                            	  5253: * D2 = MASK WORD (1ST WORD OF INSTRUCTION)
                            	  5254: * D3 = OFFSET FOR DATA STORE (TDATA+..)
                            	  5255: * D4 = EXTENSION WORD
                            	  5256: * D5 = <DATA>
                            	  5257: * D6 = MODE AS BUILT   .........XXXXXX
                            	  5258: * D7 = MODES ALLOWED
                            	  5259: *
                            	  5260: * A4 = BASE ADDRESS FOR DATA STORE (TDATA+..)[A4,D3]
                            	  5261: EA       DS      0
01:00202692 7A00            	  5262:          CLR.L   D5             ZERO VALUE
01:00202694 7C00            	  5263:          CLR.L   D6             MODE = 000000
01:00202696 1015            	  5264:          MOVE.B  (A5),D0
01:00202698 0C000023        	  5265:          CMPI.B  #'#',D0
01:0020269C 6646            	  5266:          BNE.S   EA10
                            	  5267: 
                            	  5268: * IMMEDIATE MODE
                            	  5269: 
01:0020269E 0807000B        	  5270:          BTST    #11,D7
01:002026A2 67C2            	  5271:          BEQ     ER1
                            	  5272: 
01:002026A4 1C3C003C        	  5273:          MOVE.B  #$3C,D6        D6 = MODE  111100
01:002026A8 528D            	  5274:          ADDQ.L  #1,A5
                            	  5275: 
01:002026AA 6100FF0E        	  5276:          BSR     EV             EVALUATE EXPRESSION
01:002026AE 2A00            	  5277:          MOVE.L  D0,D5          D5 = VALUE
                            	  5278: 
01:002026B0 4A29000B        	  5279:          TST.B   TLSPEC(A1)
01:002026B4 670A            	  5280:          BEQ.S   EA0633         .SIZE NOT SPECIFIED (.W ASSUMED)
                            	  5281: 
01:002026B6 3029000C        	  5282:          MOVE.W  TLENGTH(A1),D0
01:002026BA 6714            	  5283:          BEQ.S   EA0635         .BYTE
                            	  5284: 
01:002026BC 4A00            	  5285:          TST.B   D0
01:002026BE 6B18            	  5286:          BMI.S   EA0637         .LONG
                            	  5287: 
01:002026C0 61000238        	  5288: EA0633   BSR     EA16BIT        .WORD     -32K TO +64K
01:002026C4 39853000        	  5289: EA0634   MOVE.W  D5,(A4,D3)
01:002026C8 5429000A        	  5290:          ADDQ.B  #2,TNB(A1)     BYTE COUNT
01:002026CC 5483            	  5291:          ADDQ.L  #2,D3          OFFSET
01:002026CE 4E75            	  5292:          RTS
                            	  5293: 
01:002026D0 6100023E        	  5294: EA0635   BSR     EA8BIT         -127 TO +255
01:002026D4 6690            	  5295:          BNE     ER1
01:002026D6 60EC            	  5296:          BRA     EA0634
                            	  5297: 
01:002026D8 29853000        	  5298: EA0637   MOVE.L  D5,(A4,D3)
01:002026DC 5829000A        	  5299:          ADDQ.B  #4,TNB(A1)
01:002026E0 5883            	  5300:          ADDQ.L  #4,D3
01:002026E2 4E75            	  5301:          RTS
                            	  5302: 
                            	  5303: EA10     DS      0
01:002026E4 0C15002D        	  5304:          CMPI.B  #'-',(A5)
01:002026E8 6626            	  5305:          BNE.S   EA11
                            	  5306: 
01:002026EA 0C2D00280001    	  5307:          CMPI.B  #'(',1(A5)
01:002026F0 66000090        	  5308:          BNE     EA41           MAY BE "-<DATA>
                            	  5309: 
01:002026F4 548D            	  5310:          ADDQ.L  #2,A5
01:002026F6 3C3C0020        	  5311:          MOVE.W  #$0020,D6      MODE = -(A@)    100AAA
                            	  5312: 
01:002026FA 08070004        	  5313:          BTST    #4,D7
01:002026FE 6700FF66        	  5314:          BEQ     ER1            THIS MODE NOT ALLOWED
                            	  5315: 
01:00202702 6100FF40        	  5316:          BSR     GETREGA
01:00202706 8C40            	  5317:          OR.W    D0,D6
                            	  5318: 
01:00202708 0C1D0029        	  5319:          CMPI.B  #')',(A5)+
01:0020270C 6670            	  5320:          BNE.S   ER3            NO CLOSING PAREN
01:0020270E 4E75            	  5321:          RTS
                            	  5322: 
01:00202710 0C000041        	  5323: EA11     CMPI.B  #'A',D0
01:00202714 6612            	  5324:          BNE.S   EA21
                            	  5325: 
01:00202716 1C3C0008        	  5326:          MOVE.B  #$08,D6        MODE = 001...
01:0020271A 08070001        	  5327:          BTST    #1,D7
01:0020271E 675E            	  5328:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5329: 
01:00202720 6100FF22        	  5330:          BSR     GETREGA
01:00202724 8C40            	  5331:          OR.W    D0,D6
01:00202726 4E75            	  5332:          RTS
                            	  5333: 
01:00202728 0C000044        	  5334: EA21     CMPI.B  #'D',D0
01:0020272C 660E            	  5335:          BNE.S   EA31
                            	  5336: 
01:0020272E 08070000        	  5337:          BTST    #0,D7
01:00202732 674A            	  5338:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5339: 
01:00202734 6100FEF4        	  5340:          BSR     GETREGD        MODE = D@   000AAA
01:00202738 8C40            	  5341:          OR.W    D0,D6
01:0020273A 4E75            	  5342:          RTS
                            	  5343: 
01:0020273C 0C000028        	  5344: EA31     CMPI.B  #'(',D0
01:00202740 6640            	  5345:          BNE.S   EA41
                            	  5346: 
                            	  5347: * POSSIBLE
                            	  5348: *  (A@)
                            	  5349: *  (A@)+
                            	  5350: *  (A@,R@)  IMPLIED ZERO DISPLACEMENT
                            	  5351: *
01:00202742 528D            	  5352:          ADDQ.L  #1,A5
01:00202744 6100FEFE        	  5353:          BSR     GETREGA
01:00202748 8C40            	  5354:          OR.W    D0,D6
                            	  5355: 
01:0020274A 101D            	  5356:          MOVE.B  (A5)+,D0
01:0020274C 0C00002C        	  5357:          CMPI.B  #',',D0
01:00202750 670000D0        	  5358:          BEQ     EA5116         MODE = (A@,R@)  ;IMPLIED D5 = 0 DATA
                            	  5359: 
01:00202754 0C000029        	  5360:          CMPI.B  #')',D0        LOOK FOR CLOSING )
01:00202758 6624            	  5361:          BNE.S   ER3
                            	  5362: 
01:0020275A 0C150020        	  5363:          CMPI.B  #BLANK,(A5)    LOOK FOR BLANK
01:0020275E 6714            	  5364:          BEQ.S   EA35           MODE = (A@)
                            	  5365: 
01:00202760 0C15002B        	  5366:          CMPI.B  #'+',(A5)
01:00202764 660E            	  5367:          BNE.S   EA35
01:00202766 528D            	  5368:          ADDQ.L  #1,A5
                            	  5369: 
01:00202768 00460018        	  5370:          ORI.W   #$18,D6        MODE = 011...    (A@)+
                            	  5371: 
01:0020276C 08070003        	  5372:          BTST    #3,D7
01:00202770 670C            	  5373:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5374: 
01:00202772 4E75            	  5375: EA34     RTS
                            	  5376: 
01:00202774 00460010        	  5377: EA35     ORI.W   #$10,D6        MODE = 010...   (A@)
                            	  5378: 
01:00202778 08070002        	  5379:          BTST    #2,D7
01:0020277C 66F4            	  5380:          BNE     EA34           MODE ALLOWED
01:0020277E 6000066E        	  5381: ER3      BRA     ER             MODE NOT ALLOWED
                            	  5382: 
                            	  5383: * POSSIBLE
                            	  5384: *   <DATA>   SHORT
                            	  5385: *   <DATA>   LONG
                            	  5386: *   <DATA>(A@)
                            	  5387: *   <DATA>(A@,R@)
                            	  5388: *   <DATA>(A@,R@.W)
                            	  5389: *   <DATA>(A@,R@.L)
                            	  5390: *   <DATA>(PC)
                            	  5391: *   <DATA>(PC,R@)
                            	  5392: *   <DATA>(PC,R@.W)
                            	  5393: *   <DATA>(PC,R@.L)
                            	  5394: *
01:00202782 6100FE36        	  5395: EA41     BSR     EV             EVALUATE EXPRESSION
01:00202786 2A00            	  5396:          MOVE.L  D0,D5          D5 = <DATA>
                            	  5397: 
01:00202788 1015            	  5398:          MOVE.B  (A5),D0
01:0020278A 0C00002C        	  5399:          CMPI.B  #',',D0
01:0020278E 6706            	  5400:          BEQ.S   EA4102
01:00202790 0C000020        	  5401:          CMPI.B  #BLANK,D0
01:00202794 6642            	  5402:          BNE.S   EA4120
                            	  5403: 
                            	  5404: *  <DATA>         ONLY
                            	  5405: * CHECK IF NEGATIVE NUMBER
                            	  5406: 
01:00202796 2005            	  5407: EA4102   MOVE.L  D5,D0
01:00202798 6A02            	  5408:          BPL.S   EA4105         POSITIVE NUMBER
01:0020279A 4680            	  5409:          NOT.L   D0
01:0020279C 02408000        	  5410: EA4105   ANDI.W  #$8000,D0
01:002027A0 4A80            	  5411:          TST.L   D0
01:002027A2 661E            	  5412:          BNE.S   EA4135         .LONG
                            	  5413: 
                            	  5414: *  <DATA>.W
01:002027A4 08070007        	  5415:          BTST    #7,D7
01:002027A8 6608            	  5416:          BNE.S   EA4127         SHORT ALLOWED
01:002027AA 0807000F        	  5417:          BTST    #15,D7
01:002027AE 67CE            	  5418:          BEQ     ER3            MODE NOT ALLOWED
01:002027B0 6010            	  5419:          BRA.S   EA4135         SPECIAL CASE (JMP.L)
                            	  5420: 
01:002027B2 00460038        	  5421: EA4127   ORI.W   #$38,D6        EA = ABSOULTE SHORT
01:002027B6 39853000        	  5422:          MOVE.W  D5,(A4,D3)     D5 = DATA
01:002027BA 5429000A        	  5423:          ADDQ.B  #2,TNB(A1)     BYTE COUNT
01:002027BE 5483            	  5424:          ADDQ.L  #2,D3
01:002027C0 4E75            	  5425:          RTS
                            	  5426: 
                            	  5427: *EA4134  CMPI.B  #'L',D0
                            	  5428: *        BNE     ER3
                            	  5429: 
                            	  5430: *  <DATA>.L
01:002027C2 00460039        	  5431: EA4135   ORI.W   #$39,D6        EA = ABSOLUTE LONG
01:002027C6 29853000        	  5432:          MOVE.L  D5,(A4,D3)
01:002027CA 5829000A        	  5433:          ADDQ.B  #4,TNB(A1)     BYTE COUNT
01:002027CE 5883            	  5434:          ADDQ.L  #4,D3
01:002027D0 08070008        	  5435:          BTST    #8,D7
01:002027D4 67A8            	  5436:          BEQ     ER3            MODE NOT ALLOWED
01:002027D6 4E75            	  5437:          RTS
                            	  5438: 
01:002027D8 528D            	  5439: EA4120   ADDQ.L  #1,A5
01:002027DA 0C000028        	  5440:          CMPI.B  #'(',D0
01:002027DE 669E            	  5441:          BNE     ER3
                            	  5442: 
01:002027E0 0C150050        	  5443:          CMPI.B  #'P',(A5)
01:002027E4 6700008E        	  5444:          BEQ     EA61
                            	  5445: 
                            	  5446: * <DATA>(A@.......
01:002027E8 6100011A        	  5447:          BSR     EA16BITS       -32K TO +32K
                            	  5448: 
01:002027EC 6100FE56        	  5449:          BSR     GETREGA
01:002027F0 8C40            	  5450:          OR.W    D0,D6
                            	  5451: 
01:002027F2 1015            	  5452:          MOVE.B  (A5),D0
01:002027F4 0C000029        	  5453:          CMPI.B  #')',D0
01:002027F8 6624            	  5454:          BNE.S   EA5115
                            	  5455: 
                            	  5456: * <DATA>(A@)
01:002027FA 528D            	  5457:          ADDQ.L  #1,A5
                            	  5458: 
01:002027FC 08070005        	  5459:          BTST    #5,D7
01:00202800 670000A0        	  5460:          BEQ     ER4            MODE NOT ALLOWED
                            	  5461: 
01:00202804 00460028        	  5462:          ORI.W   #$0028,D6      MODE = 101AAA
                            	  5463: 
01:00202808 0C8500010000    	  5464:          CMPI.L  #$10000,D5
01:0020280E 6A000092        	  5465:          BPL     ER4
                            	  5466: 
01:00202812 39853000        	  5467:          MOVE.W  D5,(A4,D3)
01:00202816 5429000A        	  5468:          ADDQ.B  #2,TNB(A1)
01:0020281A 5483            	  5469:          ADDQ.L  #2,D3
01:0020281C 4E75            	  5470:          RTS
                            	  5471: 
01:0020281E 610005B4        	  5472: EA5115   BSR     COMMA
                            	  5473: 
                            	  5474: *  <DATA>(A@,-----    ADDRESS REGISTER WITH INDEX
01:00202822 48C5            	  5475: EA5116   EXT.L   D5
01:00202824 610000F2        	  5476:          BSR     EA8BITS        -128 TO +127
01:00202828 6678            	  5477:          BNE.S   ER4
01:0020282A 024500FF        	  5478:          ANDI.W  #$00FF,D5
01:0020282E 00460030        	  5479:          ORI.W   #$0030,D6      MODE  110---
                            	  5480: 
01:00202832 08070006        	  5481:          BTST    #6,D7
01:00202836 676A            	  5482:          BEQ.S   ER4            MODE NOT ALLOWED
                            	  5483: 
01:00202838 6100FE18        	  5484:          BSR     GETREGAD
01:0020283C 8041            	  5485:          OR.W    D1,D0
01:0020283E E858            	  5486:          ROR.W   #4,D0
01:00202840 8A40            	  5487:          OR.W    D0,D5          EXTENSION WORD
                            	  5488: 
                            	  5489: * BIT 11 EXTENSION WORD
                            	  5490: *   0 = SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REGISTER
                            	  5491: *   1 = LONG VALUE IN INDEX REGISTER  (DEFAULT)
                            	  5492: *
01:00202842 101D            	  5493:          MOVE.B  (A5)+,D0
01:00202844 0C000029        	  5494:          CMPI.B  #')',D0
01:00202848 671E            	  5495:          BEQ.S   EA5119         DEFAULT   .W
                            	  5496: 
01:0020284A 0C00002E        	  5497:          CMPI.B  #'.',D0
01:0020284E 6652            	  5498:          BNE.S   ER4
                            	  5499: 
01:00202850 101D            	  5500:          MOVE.B  (A5)+,D0
01:00202852 0C000057        	  5501:          CMPI.B  #'W',D0
01:00202856 670A            	  5502:          BEQ.S   EA5118
                            	  5503: 
01:00202858 0C00004C        	  5504:          CMPI.B  #'L',D0
01:0020285C 6644            	  5505:          BNE.S   ER4            NEITHER .W NOR .L
                            	  5506: 
01:0020285E 00450800        	  5507:          ORI.W   #$0800,D5      EXTENSION WORD, W/L BIT = .L
                            	  5508: 
01:00202862 0C1D0029        	  5509: EA5118   CMPI.B  #')',(A5)+
01:00202866 663A            	  5510:          BNE.S   ER4            NO CLOSING ")"
                            	  5511: 
01:00202868 39853000        	  5512: EA5119   MOVE.W  D5,(A4,D3)
01:0020286C 5429000A        	  5513:          ADDQ.B  #2,TNB(A1)
01:00202870 5483            	  5514:          ADDQ.L  #2,D3
01:00202872 4E75            	  5515: EA5119E  RTS
                            	  5516: 
                            	  5517: *  <DATA>(P-----
01:00202874 528D            	  5518: EA61     ADDQ.L  #1,A5
01:00202876 0C1D0043        	  5519:          CMPI.B  #'C',(A5)+
01:0020287A 66000572        	  5520:          BNE     ER
                            	  5521: 
01:0020287E 9AA9000E        	  5522:          SUB.L   PCOUNTER(A1),D5  D5 = D5 - PC
01:00202882 5585            	  5523:          SUBQ.L  #2,D5          D5 = D5 - (PC + 2)
                            	  5524: 
01:00202884 101D            	  5525:          MOVE.B  (A5)+,D0
01:00202886 0C000029        	  5526:          CMPI.B  #')',D0
01:0020288A 661A            	  5527:          BNE.S   EA71
                            	  5528: 
                            	  5529: *  <DATA>(PC)
01:0020288C 0046003A        	  5530:          ORI.W   #$3A,D6        MODE = 111010
                            	  5531: 
01:00202890 6172            	  5532:          BSR.S   EA16BITS       -32K TO +32K
01:00202892 39853000        	  5533:          MOVE.W  D5,(A4,D3)
01:00202896 5429000A        	  5534:          ADDQ.B  #2,TNB(A1)
01:0020289A 5483            	  5535:          ADDQ.L  #2,D3
                            	  5536: 
01:0020289C 08070009        	  5537:          BTST    #9,D7
01:002028A0 66D0            	  5538:          BNE     EA5119E
01:002028A2 6000054A        	  5539: ER4      BRA     ER
                            	  5540: 
                            	  5541: *  <DATA>(PC----          PROGRAM COUNTER WITH INDEX
01:002028A6 3C3C003B        	  5542: EA71     MOVE.W  #$003B,D6      MODE = 111011
                            	  5543: 
01:002028AA 0C00002C        	  5544:          CMPI.B  #',',D0
01:002028AE 66F2            	  5545:          BNE     ER4
                            	  5546: 
01:002028B0 0807000A        	  5547:          BTST    #10,D7
01:002028B4 67EC            	  5548:          BEQ     ER4            MODE NOT ALLOWED
                            	  5549: 
01:002028B6 6160            	  5550:          BSR.S   EA8BITS        -128 TO +127
01:002028B8 66E8            	  5551:          BNE     ER4
                            	  5552: 
01:002028BA 024500FF        	  5553:          ANDI.W  #$00FF,D5      D5 = VALUE
01:002028BE 6100FD92        	  5554:          BSR     GETREGAD
01:002028C2 8041            	  5555:          OR.W    D1,D0
                            	  5556: 
01:002028C4 E858            	  5557:          ROR.W   #4,D0
01:002028C6 8A40            	  5558:          OR.W    D0,D5          D5 = EXTENSION WORD
                            	  5559: 
01:002028C8 101D            	  5560:          MOVE.B  (A5)+,D0
01:002028CA 0C000029        	  5561:          CMPI.B  #')',D0
01:002028CE 671E            	  5562:          BEQ.S   EA7115         DEFAULT  .W
                            	  5563: 
01:002028D0 0C00002E        	  5564:          CMPI.B  #'.',D0
01:002028D4 66CC            	  5565:          BNE     ER4
                            	  5566: 
01:002028D6 101D            	  5567:          MOVE.B  (A5)+,D0
01:002028D8 0C000057        	  5568:          CMPI.B  #'W',D0
01:002028DC 670A            	  5569:          BEQ.S   EA7113
                            	  5570: 
01:002028DE 0C00004C        	  5571:          CMPI.B  #'L',D0
01:002028E2 66BE            	  5572:          BNE     ER4
01:002028E4 00450800        	  5573:          ORI.W   #$0800,D5      EXTENSION WORD W/L = .L
                            	  5574: 
01:002028E8 0C1D0029        	  5575: EA7113   CMPI.B  #')',(A5)+
01:002028EC 66B4            	  5576:          BNE     ER4            NO CLOSING ")"
                            	  5577: 
01:002028EE 39853000        	  5578: EA7115   MOVE.W  D5,(A4,D3)
01:002028F2 5429000A        	  5579:          ADDQ.B  #2,TNB(A1)
01:002028F6 5483            	  5580:          ADDQ.L  #2,D3
01:002028F8 4E75            	  5581:          RTS
                            	  5582: 
                            	  5583: ****************************************************************************
                            	  5584: *
                            	  5585: *        ROUTINES TO TEST FOR VALID EFFECTIVE ADDRESSES
                            	  5586: *
                            	  5587: *        EA16BIT   tests that -32768 <= D5 <= 65535.  (signed or unsigned)
                            	  5588: *        EA16BITS  tests that -32768 <= D5 <= 32767.  (signed only)
                            	  5589: *        EA8BIT    tests that   -128 <= D5 <=   255.  (signed or unsigned)
                            	  5590: *        EA8BITS   tests that   -128 <= D5 <=   127.  (signed only)
                            	  5591: *
                            	  5592: *        The 16-bit tests branch to ER if invalid, else return.
                            	  5593: *        The  8-bit tests return condition codes <EQ> if valid, else <NE>.
                            	  5594: *        D5 is preserved unless a branch to ER results.
                            	  5595: *        D1 is destroyed.
                            	  5596: *
                            	  5597: ****************************************************************************
                            	  5598: 
                            	  5599: EA16BIT:
01:002028FA 610C            	  5600:          BSR.S   EA16BITC       CHECK RANGE -32768 TO 32767.  IF
01:002028FC 2205            	  5601:          MOVE.L  D5,D1          INVALID, CHECK WHETHER THE HIGH 16
01:002028FE 4841            	  5602:          SWAP    D1             BITS ARE 0 (WHICH IMPLIES THAT
01:00202900 4A41            	  5603:          TST.W   D1             D5 <= 65535).  IF NOT, FALL THRU TO
01:00202902 6728            	  5604:          BEQ.S   EASEX          THE 16-BIT SIGNED TEST--WE WILL
                            	  5605: *                               FAIL AND GO TO ER.
                            	  5606: 
                            	  5607: EA16BITS:
01:00202904 487A04E8        	  5608:          PEA     ER(PC)         SET UP TO RETURN TO ER IF INVALID.
                            	  5609: 
01:00202908 223C00007FFF    	  5610: EA16BITC MOVE.L  #$7FFF,D1      D1  <--  2^16-1.
01:0020290E 600E            	  5611:          BRA.S   EAS            GO TO THE COMMON TEST ROUTINE.
                            	  5612: 
                            	  5613: 
                            	  5614: EA8BIT:
01:00202910 610A            	  5615:          BSR.S   EA8BITC        CHECK RANGE -128 TO 127.  IF INVALID,
01:00202912 2205            	  5616:          MOVE.L  D5,D1          CHECK WHETHER THE HIGH 24 BITS ARE
01:00202914 E089            	  5617:          LSR.L   #8,D1          0 (WHICH IMPLIES THAT D5 <= 255).
01:00202916 4E75            	  5618:          RTS
                            	  5619: 
                            	  5620: EA8BITS:
01:00202918 6102            	  5621:          BSR.S   EA8BITC        JUST CHECK FOR -127 <= D5 <= 128.
01:0020291A 4E75            	  5622:          RTS                    ; (BSR PUTS NEEDED ADDRESS ON STACK!)
                            	  5623: 
01:0020291C 727F            	  5624: EA8BITC  MOVEQ   #$7F,D1        D1  <--  2^8 - 1.
                            	  5625: 
                            	  5626: *                  *** NOTE: THIS ROUTINE PLAYS WITH THE STACK ***
01:0020291E BA81            	  5627: EAS      CMP.L   D1,D5          IF D5 > 2^N-1, RETURN WITH <NE> (INVAL).
01:00202920 6E0A            	  5628:          BGT.S   EASEX
01:00202922 4681            	  5629:          NOT.L   D1             IF D5 < -2^N,  RETURN WITH <NE> (INVAL).
01:00202924 BA81            	  5630:          CMP.L   D1,D5
01:00202926 6D04            	  5631:          BLT.S   EASEX
                            	  5632: 
01:00202928 588F            	  5633:          ADDQ.L  #4,A7          POP THE RETURN ADDRESS OFF THE STACK,
01:0020292A 7200            	  5634:          CLR.L   D1             SET <EQ> (VALID), AND RETURN.
                            	  5635: 
01:0020292C 4E75            	  5636: EASEX    RTS
                            	  5637: 
                            	  5638: ADR      MACRO
                            	  5639:          DC.W    M\1-XBASE
                            	  5640:          ENDM
                            	  5641: 
                            	  5642: TBLKEYS  DS      0              INDEX
                            	  5643:          ADR     ABCD            0  ABCD SBCD
01:0020292E 0808            	     1M          DC.W    MABCD-XBASE
                            	  5644:          ADR     ADD             1  ADD  SUB
01:00202930 08BE            	     1M          DC.W    MADD-XBASE
                            	  5645:          ADR     ADDA            2  ADDA CMPA SUBA
01:00202932 0966            	     1M          DC.W    MADDA-XBASE
                            	  5646:          ADR     ADDI            3  ADDI CMPI SUBI
01:00202934 0918            	     1M          DC.W    MADDI-XBASE
                            	  5647:          ADR     ADDQ            4  ADDQ SUBQ
01:00202936 098E            	     1M          DC.W    MADDQ-XBASE
                            	  5648:          ADR     ADDX            5  ADDX SUBX
01:00202938 09D0            	     1M          DC.W    MADDX-XBASE
                            	  5649:          ADR     AND             6  AND  EOR OR
01:0020293A 0A12            	     1M          DC.W    MAND-XBASE
                            	  5650:          ADR     ASL             7  ASL  LSL ROL ROXL
01:0020293C 0AC0            	     1M          DC.W    MASL-XBASE
                            	  5651:          ADR     DBCC            8  DBCC
01:0020293E 0BAC            	     1M          DC.W    MDBCC-XBASE
                            	  5652:          ADR     BCHG            9  BCHG
01:00202940 0B30            	     1M          DC.W    MBCHG-XBASE
                            	  5653:          ADR     BRA            10  BRA  BSR  BCC
01:00202942 0BBA            	     1M          DC.W    MBRA-XBASE
                            	  5654:          ADR     BSET           11  BSET
01:00202944 0B88            	     1M          DC.W    MBSET-XBASE
                            	  5655:          ADR     CHK            12  CHK  DIVS DIVU MILS MULU
01:00202946 0C12            	     1M          DC.W    MCHK-XBASE
                            	  5656:          ADR     CLR            13  CLR NEG NEGX NOT TST
01:00202948 0C2C            	     1M          DC.W    MCLR-XBASE
                            	  5657:          ADR     CMPM           14  CMPM
01:0020294A 0C3A            	     1M          DC.W    MCMPM-XBASE
                            	  5658:          ADR     MOVEQ          15  MOVEQ
01:0020294C 0E18            	     1M          DC.W    MMOVEQ-XBASE
                            	  5659:          ADR     EXG            16  EXG
01:0020294E 0C64            	     1M          DC.W    MEXG-XBASE
                            	  5660:          ADR     EXT            17  EXT
01:00202950 0C9E            	     1M          DC.W    MEXT-XBASE
                            	  5661:          ADR     JMP            18  JMP  JSR
01:00202952 0FAC            	     1M          DC.W    MJMP-XBASE
                            	  5662:          ADR     LEA            19  LEA
01:00202954 0FD8            	     1M          DC.W    MLEA-XBASE
                            	  5663:          ADR     LINK           20  LINK
01:00202956 1022            	     1M          DC.W    MLINK-XBASE
                            	  5664:          ADR     MOVE           21  MOVE
01:00202958 0E64            	     1M          DC.W    MMOVE-XBASE
                            	  5665:          ADR     CMMD2          22  NOP RESET RTE RTR RTS TRAPV
01:0020295A 07D8            	     1M          DC.W    MCMMD2-XBASE
                            	  5666:          ADR     STOP           23  STOP
01:0020295C 1040            	     1M          DC.W    MSTOP-XBASE
                            	  5667:          ADR     SWAP           24  SWAP
01:0020295E 1000            	     1M          DC.W    MSWAP-XBASE
                            	  5668:          ADR     TRAP           25  TRAP
01:00202960 1058            	     1M          DC.W    MTRAP-XBASE
                            	  5669:          ADR     UNLK           26  UNLK
01:00202962 106A            	     1M          DC.W    MUNLK-XBASE
                            	  5670:          ADR     MOVEM          27  MOVEM
01:00202964 0CB8            	     1M          DC.W    MMOVEM-XBASE
                            	  5671:          ADR     ANDI           28  ANDI EORI ORI
01:00202966 092E            	     1M          DC.W    MANDI-XBASE
                            	  5672:          ADR     SCC            29  NBCD SCC TAS
01:00202968 0B22            	     1M          DC.W    MSCC-XBASE
                            	  5673:          ADR     BCLR           30  BCLR
01:0020296A 0B94            	     1M          DC.W    MBCLR-XBASE
                            	  5674:          ADR     BTST           31  BTST
01:0020296C 0BA0            	     1M          DC.W    MBTST-XBASE
                            	  5675:          ADR     MOVEA          32  MOVEA
01:0020296E 0F80            	     1M          DC.W    MMOVEA-XBASE
                            	  5676:          ADR     MOVEP          33  MOVEP
01:00202970 0DB8            	     1M          DC.W    MMOVEP-XBASE
                            	  5677:          ADR     CMP            34  CMP
01:00202972 084C            	     1M          DC.W    MCMP-XBASE
                            	  5678:          ADR     EOR            35  EOR
01:00202974 0A74            	     1M          DC.W    MEOR-XBASE
                            	  5679:          ADR     PEA            36  PEA
01:00202976 0FF2            	     1M          DC.W    MPEA-XBASE
                            	  5680:          ADR     DC             37  DC.W
01:00202978 1074            	     1M          DC.W    MDC-XBASE
                            	  5681: 
                            	  5682: 
                            	  5683: * \1,\2 = MNEUMONIC (\2 SIGN BIT SET AS LAST CHARACTER)
                            	  5684: * \3    = INDEX TO TABLKEYS
                            	  5685: * \4,\5 = FIRST WORD MASK
                            	  5686: * \6    = NO OPERAND ALLOWED IF SIGN SET
                            	  5687: * \7    = .S ALLOWED (.W NOT ALLOWED)
                            	  5688: OPC      MACRO
                            	  5689:          DC.B    '\1','\2'+128
                            	  5690:          DC.B    \3+\6+\7,$\4,$\5
                            	  5691:          ENDM
                            	  5692: 
                            	  5693: NOC      EQU     $80            (BIT 7 SET) NO OPERAND
                            	  5694: NW       EQU     $40            (BIT 6 SET) .W NOT ALLOWED
                            	  5695: 
                            	  5696: TBLOPC   OPC     ABC,D,0,C1,00,0,0     ABCD
01:0020297A 414243          	     1M          DC.B    'ABC','D'+128
01:0020297D C4
01:0020297E 00              	     2M          DC.B    0+0+0,$C1,$00
01:0020297F C1
01:00202980 00
                            	  5697:          OPC     ADD,A,2,D0,C0,0,0     ADDA
01:00202981 414444          	     1M          DC.B    'ADD','A'+128
01:00202984 C1
01:00202985 02              	     2M          DC.B    2+0+0,$D0,$C0
01:00202986 D0
01:00202987 C0
                            	  5698:          OPC     ADD,I,3,06,00,0,0     ADDI
01:00202988 414444          	     1M          DC.B    'ADD','I'+128
01:0020298B C9
01:0020298C 03              	     2M          DC.B    3+0+0,$06,$00
01:0020298D 06
01:0020298E 00
                            	  5699:          OPC     ADD,Q,4,50,00,0,0     ADDQ
01:0020298F 414444          	     1M          DC.B    'ADD','Q'+128
01:00202992 D1
01:00202993 04              	     2M          DC.B    4+0+0,$50,$00
01:00202994 50
01:00202995 00
                            	  5700:          OPC     ADD,X,5,D1,00,0,0     ADDX
01:00202996 414444          	     1M          DC.B    'ADD','X'+128
01:00202999 D8
01:0020299A 05              	     2M          DC.B    5+0+0,$D1,$00
01:0020299B D1
01:0020299C 00
                            	  5701:          OPC     AD,D,1,D0,00,0,0      ADD
01:0020299D 4144            	     1M          DC.B    'AD','D'+128
01:0020299F C4
01:002029A0 01              	     2M          DC.B    1+0+0,$D0,$00
01:002029A1 D0
01:002029A2 00
                            	  5702:          OPC     AND,I,28,02,00,0,0    ANDI
01:002029A3 414E44          	     1M          DC.B    'AND','I'+128
01:002029A6 C9
01:002029A7 1C              	     2M          DC.B    28+0+0,$02,$00
01:002029A8 02
01:002029A9 00
                            	  5703:          OPC     AN,D,6,C0,00,0,0      AND
01:002029AA 414E            	     1M          DC.B    'AN','D'+128
01:002029AC C4
01:002029AD 06              	     2M          DC.B    6+0+0,$C0,$00
01:002029AE C0
01:002029AF 00
                            	  5704:          OPC     AS,L,7,E1,00,0,0      ASL
01:002029B0 4153            	     1M          DC.B    'AS','L'+128
01:002029B2 CC
01:002029B3 07              	     2M          DC.B    7+0+0,$E1,$00
01:002029B4 E1
01:002029B5 00
                            	  5705:          OPC     AS,R,07,E0,00,0,0     ASR
01:002029B6 4153            	     1M          DC.B    'AS','R'+128
01:002029B8 D2
01:002029B9 07              	     2M          DC.B    07+0+0,$E0,$00
01:002029BA E0
01:002029BB 00
                            	  5706:          OPC     BR,A,10,60,00,0,NW    BRA
01:002029BC 4252            	     1M          DC.B    'BR','A'+128
01:002029BE C1
01:002029BF 4A              	     2M          DC.B    10+0+NW,$60,$00
01:002029C0 60
01:002029C1 00
                            	  5707:          OPC     BH,I,10,62,00,0,NW    BHI
01:002029C2 4248            	     1M          DC.B    'BH','I'+128
01:002029C4 C9
01:002029C5 4A              	     2M          DC.B    10+0+NW,$62,$00
01:002029C6 62
01:002029C7 00
                            	  5708:          OPC     BL,S,10,63,00,0,NW    BLS
01:002029C8 424C            	     1M          DC.B    'BL','S'+128
01:002029CA D3
01:002029CB 4A              	     2M          DC.B    10+0+NW,$63,$00
01:002029CC 63
01:002029CD 00
                            	  5709:          OPC     BC,C,10,64,00,0,NW    BCC
01:002029CE 4243            	     1M          DC.B    'BC','C'+128
01:002029D0 C3
01:002029D1 4A              	     2M          DC.B    10+0+NW,$64,$00
01:002029D2 64
01:002029D3 00
                            	  5710:          OPC     BC,S,10,65,00,0,NW    BCS
01:002029D4 4243            	     1M          DC.B    'BC','S'+128
01:002029D6 D3
01:002029D7 4A              	     2M          DC.B    10+0+NW,$65,$00
01:002029D8 65
01:002029D9 00
                            	  5711:          OPC     BN,E,10,66,00,0,NW    BNE
01:002029DA 424E            	     1M          DC.B    'BN','E'+128
01:002029DC C5
01:002029DD 4A              	     2M          DC.B    10+0+NW,$66,$00
01:002029DE 66
01:002029DF 00
                            	  5712:          OPC     BE,Q,10,67,00,0,NW    BEQ
01:002029E0 4245            	     1M          DC.B    'BE','Q'+128
01:002029E2 D1
01:002029E3 4A              	     2M          DC.B    10+0+NW,$67,$00
01:002029E4 67
01:002029E5 00
                            	  5713:          OPC     BV,C,10,68,00,0,NW    BVC
01:002029E6 4256            	     1M          DC.B    'BV','C'+128
01:002029E8 C3
01:002029E9 4A              	     2M          DC.B    10+0+NW,$68,$00
01:002029EA 68
01:002029EB 00
                            	  5714:          OPC     BV,S,10,69,00,0,NW    BVS
01:002029EC 4256            	     1M          DC.B    'BV','S'+128
01:002029EE D3
01:002029EF 4A              	     2M          DC.B    10+0+NW,$69,$00
01:002029F0 69
01:002029F1 00
                            	  5715:          OPC     BP,L,10,6A,00,0,NW    BPL
01:002029F2 4250            	     1M          DC.B    'BP','L'+128
01:002029F4 CC
01:002029F5 4A              	     2M          DC.B    10+0+NW,$6A,$00
01:002029F6 6A
01:002029F7 00
                            	  5716:          OPC     BM,I,10,6B,00,0,NW    BMI
01:002029F8 424D            	     1M          DC.B    'BM','I'+128
01:002029FA C9
01:002029FB 4A              	     2M          DC.B    10+0+NW,$6B,$00
01:002029FC 6B
01:002029FD 00
                            	  5717:          OPC     BG,E,10,6C,00,0,NW    BGE
01:002029FE 4247            	     1M          DC.B    'BG','E'+128
01:00202A00 C5
01:00202A01 4A              	     2M          DC.B    10+0+NW,$6C,$00
01:00202A02 6C
01:00202A03 00
                            	  5718:          OPC     BL,T,10,6D,00,0,NW    BLT
01:00202A04 424C            	     1M          DC.B    'BL','T'+128
01:00202A06 D4
01:00202A07 4A              	     2M          DC.B    10+0+NW,$6D,$00
01:00202A08 6D
01:00202A09 00
                            	  5719:          OPC     BG,T,10,6E,00,0,NW    BGT
01:00202A0A 4247            	     1M          DC.B    'BG','T'+128
01:00202A0C D4
01:00202A0D 4A              	     2M          DC.B    10+0+NW,$6E,$00
01:00202A0E 6E
01:00202A0F 00
                            	  5720:          OPC     BL,E,10,6F,00,0,NW    BLE
01:00202A10 424C            	     1M          DC.B    'BL','E'+128
01:00202A12 C5
01:00202A13 4A              	     2M          DC.B    10+0+NW,$6F,$00
01:00202A14 6F
01:00202A15 00
                            	  5721:          OPC     BCH,G,9,01,40,0,0     BCHG
01:00202A16 424348          	     1M          DC.B    'BCH','G'+128
01:00202A19 C7
01:00202A1A 09              	     2M          DC.B    9+0+0,$01,$40
01:00202A1B 01
01:00202A1C 40
                            	  5722:          OPC     BCL,R,30,01,80,0,0    BCLR      DYNAMIC
01:00202A1D 42434C          	     1M          DC.B    'BCL','R'+128
01:00202A20 D2
01:00202A21 1E              	     2M          DC.B    30+0+0,$01,$80
01:00202A22 01
01:00202A23 80
                            	  5723:          OPC     BSE,T,11,01,C0,0,0    BSET
01:00202A24 425345          	     1M          DC.B    'BSE','T'+128
01:00202A27 D4
01:00202A28 0B              	     2M          DC.B    11+0+0,$01,$C0
01:00202A29 01
01:00202A2A C0
                            	  5724:          OPC     BS,R,10,61,00,0,NW    BSR
01:00202A2B 4253            	     1M          DC.B    'BS','R'+128
01:00202A2D D2
01:00202A2E 4A              	     2M          DC.B    10+0+NW,$61,$00
01:00202A2F 61
01:00202A30 00
                            	  5725:          OPC     BTS,T,31,01,00,0,0    BTST
01:00202A31 425453          	     1M          DC.B    'BTS','T'+128
01:00202A34 D4
01:00202A35 1F              	     2M          DC.B    31+0+0,$01,$00
01:00202A36 01
01:00202A37 00
                            	  5726:          OPC     B,T,10,60,00,0,NW     BT
01:00202A38 42              	     1M          DC.B    'B','T'+128
01:00202A39 D4
01:00202A3A 4A              	     2M          DC.B    10+0+NW,$60,$00
01:00202A3B 60
01:00202A3C 00
                            	  5727:          OPC     CH,K,12,41,80,0,0     CHK
01:00202A3D 4348            	     1M          DC.B    'CH','K'+128
01:00202A3F CB
01:00202A40 0C              	     2M          DC.B    12+0+0,$41,$80
01:00202A41 41
01:00202A42 80
                            	  5728:          OPC     CL,R,13,42,00,0,0     CLR
01:00202A43 434C            	     1M          DC.B    'CL','R'+128
01:00202A45 D2
01:00202A46 0D              	     2M          DC.B    13+0+0,$42,$00
01:00202A47 42
01:00202A48 00
                            	  5729:          OPC     CMP,A,2,B0,C0,0,0     CMPA
01:00202A49 434D50          	     1M          DC.B    'CMP','A'+128
01:00202A4C C1
01:00202A4D 02              	     2M          DC.B    2+0+0,$B0,$C0
01:00202A4E B0
01:00202A4F C0
                            	  5730:          OPC     CMP,I,3,0C,00,0,0     CMPI
01:00202A50 434D50          	     1M          DC.B    'CMP','I'+128
01:00202A53 C9
01:00202A54 03              	     2M          DC.B    3+0+0,$0C,$00
01:00202A55 0C
01:00202A56 00
                            	  5731:          OPC     CMP,M,14,B1,08,0,0    CMPM
01:00202A57 434D50          	     1M          DC.B    'CMP','M'+128
01:00202A5A CD
01:00202A5B 0E              	     2M          DC.B    14+0+0,$B1,$08
01:00202A5C B1
01:00202A5D 08
                            	  5732:          OPC     CM,P,34,B0,00,0,0     CMP
01:00202A5E 434D            	     1M          DC.B    'CM','P'+128
01:00202A60 D0
01:00202A61 22              	     2M          DC.B    34+0+0,$B0,$00
01:00202A62 B0
01:00202A63 00
                            	  5733:          OPC     DB,T,8,50,C8,0,NW     DBT
01:00202A64 4442            	     1M          DC.B    'DB','T'+128
01:00202A66 D4
01:00202A67 48              	     2M          DC.B    8+0+NW,$50,$C8
01:00202A68 50
01:00202A69 C8
                            	  5734:          OPC     DB,F,8,51,C8,0,NW     DBF
01:00202A6A 4442            	     1M          DC.B    'DB','F'+128
01:00202A6C C6
01:00202A6D 48              	     2M          DC.B    8+0+NW,$51,$C8
01:00202A6E 51
01:00202A6F C8
                            	  5735:          OPC     DBR,A,8,51,C8,0,NW    DBRA
01:00202A70 444252          	     1M          DC.B    'DBR','A'+128
01:00202A73 C1
01:00202A74 48              	     2M          DC.B    8+0+NW,$51,$C8
01:00202A75 51
01:00202A76 C8
                            	  5736:          OPC     DBH,I,8,52,C8,0,NW    DBHI
01:00202A77 444248          	     1M          DC.B    'DBH','I'+128
01:00202A7A C9
01:00202A7B 48              	     2M          DC.B    8+0+NW,$52,$C8
01:00202A7C 52
01:00202A7D C8
                            	  5737:          OPC     DBL,S,8,53,C8,0,NW    DBLS
01:00202A7E 44424C          	     1M          DC.B    'DBL','S'+128
01:00202A81 D3
01:00202A82 48              	     2M          DC.B    8+0+NW,$53,$C8
01:00202A83 53
01:00202A84 C8
                            	  5738:          OPC     DBC,C,8,54,C8,0,NW    DBCC
01:00202A85 444243          	     1M          DC.B    'DBC','C'+128
01:00202A88 C3
01:00202A89 48              	     2M          DC.B    8+0+NW,$54,$C8
01:00202A8A 54
01:00202A8B C8
                            	  5739:          OPC     DBC,S,8,55,C8,0,NW    DBCS
01:00202A8C 444243          	     1M          DC.B    'DBC','S'+128
01:00202A8F D3
01:00202A90 48              	     2M          DC.B    8+0+NW,$55,$C8
01:00202A91 55
01:00202A92 C8
                            	  5740:          OPC     DBN,E,8,56,C8,0,NW    DBNE
01:00202A93 44424E          	     1M          DC.B    'DBN','E'+128
01:00202A96 C5
01:00202A97 48              	     2M          DC.B    8+0+NW,$56,$C8
01:00202A98 56
01:00202A99 C8
                            	  5741:          OPC     DBE,Q,8,57,C8,0,NW    DBEQ
01:00202A9A 444245          	     1M          DC.B    'DBE','Q'+128
01:00202A9D D1
01:00202A9E 48              	     2M          DC.B    8+0+NW,$57,$C8
01:00202A9F 57
01:00202AA0 C8
                            	  5742:          OPC     DBV,C,8,58,C8,0,NW    DBVC
01:00202AA1 444256          	     1M          DC.B    'DBV','C'+128
01:00202AA4 C3
01:00202AA5 48              	     2M          DC.B    8+0+NW,$58,$C8
01:00202AA6 58
01:00202AA7 C8
                            	  5743:          OPC     DBV,S,8,59,C8,0,NW    DBVS
01:00202AA8 444256          	     1M          DC.B    'DBV','S'+128
01:00202AAB D3
01:00202AAC 48              	     2M          DC.B    8+0+NW,$59,$C8
01:00202AAD 59
01:00202AAE C8
                            	  5744:          OPC     DBP,L,8,5A,C8,0,NW    DBPL
01:00202AAF 444250          	     1M          DC.B    'DBP','L'+128
01:00202AB2 CC
01:00202AB3 48              	     2M          DC.B    8+0+NW,$5A,$C8
01:00202AB4 5A
01:00202AB5 C8
                            	  5745:          OPC     DBM,I,8,5B,C8,0,NW    DBMI
01:00202AB6 44424D          	     1M          DC.B    'DBM','I'+128
01:00202AB9 C9
01:00202ABA 48              	     2M          DC.B    8+0+NW,$5B,$C8
01:00202ABB 5B
01:00202ABC C8
                            	  5746:          OPC     DBG,E,8,5C,C8,0,NW    DBGE
01:00202ABD 444247          	     1M          DC.B    'DBG','E'+128
01:00202AC0 C5
01:00202AC1 48              	     2M          DC.B    8+0+NW,$5C,$C8
01:00202AC2 5C
01:00202AC3 C8
                            	  5747:          OPC     DBL,T,8,5D,C8,0,NW    DBLT
01:00202AC4 44424C          	     1M          DC.B    'DBL','T'+128
01:00202AC7 D4
01:00202AC8 48              	     2M          DC.B    8+0+NW,$5D,$C8
01:00202AC9 5D
01:00202ACA C8
                            	  5748:          OPC     DBG,T,8,5E,C8,0,NW    DBGT
01:00202ACB 444247          	     1M          DC.B    'DBG','T'+128
01:00202ACE D4
01:00202ACF 48              	     2M          DC.B    8+0+NW,$5E,$C8
01:00202AD0 5E
01:00202AD1 C8
                            	  5749:          OPC     DBL,E,8,5F,C8,0,NW    DBLE
01:00202AD2 44424C          	     1M          DC.B    'DBL','E'+128
01:00202AD5 C5
01:00202AD6 48              	     2M          DC.B    8+0+NW,$5F,$C8
01:00202AD7 5F
01:00202AD8 C8
                            	  5750:          OPC     DC.,W,37,00,00,0,0    DC.W  (WORD ONLY)
01:00202AD9 44432E          	     1M          DC.B    'DC.','W'+128
01:00202ADC D7
01:00202ADD 25              	     2M          DC.B    37+0+0,$00,$00
01:00202ADE 00
01:00202ADF 00
                            	  5751:          OPC     DIV,S,12,81,C0,0,0    DIVS
01:00202AE0 444956          	     1M          DC.B    'DIV','S'+128
01:00202AE3 D3
01:00202AE4 0C              	     2M          DC.B    12+0+0,$81,$C0
01:00202AE5 81
01:00202AE6 C0
                            	  5752:          OPC     DIV,U,12,80,C0,0,0    DIVU
01:00202AE7 444956          	     1M          DC.B    'DIV','U'+128
01:00202AEA D5
01:00202AEB 0C              	     2M          DC.B    12+0+0,$80,$C0
01:00202AEC 80
01:00202AED C0
                            	  5753:          OPC     EOR,I,28,0A,00,0,0    EORI
01:00202AEE 454F52          	     1M          DC.B    'EOR','I'+128
01:00202AF1 C9
01:00202AF2 1C              	     2M          DC.B    28+0+0,$0A,$00
01:00202AF3 0A
01:00202AF4 00
                            	  5754:          OPC     EO,R,35,B1,00,0,0     EOR
01:00202AF5 454F            	     1M          DC.B    'EO','R'+128
01:00202AF7 D2
01:00202AF8 23              	     2M          DC.B    35+0+0,$B1,$00
01:00202AF9 B1
01:00202AFA 00
                            	  5755:          OPC     EX,G,16,C1,00,0,0     EXG
01:00202AFB 4558            	     1M          DC.B    'EX','G'+128
01:00202AFD C7
01:00202AFE 10              	     2M          DC.B    16+0+0,$C1,$00
01:00202AFF C1
01:00202B00 00
                            	  5756:          OPC     EX,T,17,48,00,0,0     EXT
01:00202B01 4558            	     1M          DC.B    'EX','T'+128
01:00202B03 D4
01:00202B04 11              	     2M          DC.B    17+0+0,$48,$00
01:00202B05 48
01:00202B06 00
                            	  5757:          OPC     JM,P,18,4E,C0,0,NW    JMP
01:00202B07 4A4D            	     1M          DC.B    'JM','P'+128
01:00202B09 D0
01:00202B0A 52              	     2M          DC.B    18+0+NW,$4E,$C0
01:00202B0B 4E
01:00202B0C C0
                            	  5758:          OPC     JS,R,18,4E,80,0,NW    JSR
01:00202B0D 4A53            	     1M          DC.B    'JS','R'+128
01:00202B0F D2
01:00202B10 52              	     2M          DC.B    18+0+NW,$4E,$80
01:00202B11 4E
01:00202B12 80
                            	  5759:          OPC     LE,A,19,41,C0,0,0     LEA
01:00202B13 4C45            	     1M          DC.B    'LE','A'+128
01:00202B15 C1
01:00202B16 13              	     2M          DC.B    19+0+0,$41,$C0
01:00202B17 41
01:00202B18 C0
                            	  5760:          OPC     LIN,K,20,4E,50,0,0    LINK
01:00202B19 4C494E          	     1M          DC.B    'LIN','K'+128
01:00202B1C CB
01:00202B1D 14              	     2M          DC.B    20+0+0,$4E,$50
01:00202B1E 4E
01:00202B1F 50
                            	  5761:          OPC     LS,L,7,E3,08,0,0      LSL
01:00202B20 4C53            	     1M          DC.B    'LS','L'+128
01:00202B22 CC
01:00202B23 07              	     2M          DC.B    7+0+0,$E3,$08
01:00202B24 E3
01:00202B25 08
                            	  5762:          OPC     LS,R,07,E2,08,0,0     LSR
01:00202B26 4C53            	     1M          DC.B    'LS','R'+128
01:00202B28 D2
01:00202B29 07              	     2M          DC.B    07+0+0,$E2,$08
01:00202B2A E2
01:00202B2B 08
                            	  5763:          OPC     MOVE,A,32,00,04,0,0   MOVEA
01:00202B2C 4D4F5645        	     1M          DC.B    'MOVE','A'+128
01:00202B30 C1
01:00202B31 20              	     2M          DC.B    32+0+0,$00,$04
01:00202B32 00
01:00202B33 04
                            	  5764:          OPC     MOVE,M,27,48,80,0,0   MOVEM
01:00202B34 4D4F5645        	     1M          DC.B    'MOVE','M'+128
01:00202B38 CD
01:00202B39 1B              	     2M          DC.B    27+0+0,$48,$80
01:00202B3A 48
01:00202B3B 80
                            	  5765:          OPC     MOVE,P,33,01,08,0,0   MOVEP
01:00202B3C 4D4F5645        	     1M          DC.B    'MOVE','P'+128
01:00202B40 D0
01:00202B41 21              	     2M          DC.B    33+0+0,$01,$08
01:00202B42 01
01:00202B43 08
                            	  5766:          OPC     MOVE,Q,15,70,00,0,0   MOVEQ
01:00202B44 4D4F5645        	     1M          DC.B    'MOVE','Q'+128
01:00202B48 D1
01:00202B49 0F              	     2M          DC.B    15+0+0,$70,$00
01:00202B4A 70
01:00202B4B 00
                            	  5767:          OPC     MOV,E,21,00,00,0,0    MOVE
01:00202B4C 4D4F56          	     1M          DC.B    'MOV','E'+128
01:00202B4F C5
01:00202B50 15              	     2M          DC.B    21+0+0,$00,$00
01:00202B51 00
01:00202B52 00
                            	  5768:          OPC     MUL,S,12,C1,C0,0,0    MULS
01:00202B53 4D554C          	     1M          DC.B    'MUL','S'+128
01:00202B56 D3
01:00202B57 0C              	     2M          DC.B    12+0+0,$C1,$C0
01:00202B58 C1
01:00202B59 C0
                            	  5769:          OPC     MUL,U,12,C0,C0,0,0    MULU
01:00202B5A 4D554C          	     1M          DC.B    'MUL','U'+128
01:00202B5D D5
01:00202B5E 0C              	     2M          DC.B    12+0+0,$C0,$C0
01:00202B5F C0
01:00202B60 C0
                            	  5770:          OPC     NBC,D,29,48,0,0,0     NBCD
01:00202B61 4E4243          	     1M          DC.B    'NBC','D'+128
01:00202B64 C4
01:00202B65 1D              	     2M          DC.B    29+0+0,$48,$0
01:00202B66 48
01:00202B67 00
                            	  5771:          OPC     NEG,X,13,40,00,0,0    NEGX
01:00202B68 4E4547          	     1M          DC.B    'NEG','X'+128
01:00202B6B D8
01:00202B6C 0D              	     2M          DC.B    13+0+0,$40,$00
01:00202B6D 40
01:00202B6E 00
                            	  5772:          OPC     NE,G,13,44,00,0,0     NEG
01:00202B6F 4E45            	     1M          DC.B    'NE','G'+128
01:00202B71 C7
01:00202B72 0D              	     2M          DC.B    13+0+0,$44,$00
01:00202B73 44
01:00202B74 00
                            	  5773:          OPC     NO,P,22,4E,71,NOC,0   NOP
01:00202B75 4E4F            	     1M          DC.B    'NO','P'+128
01:00202B77 D0
01:00202B78 96              	     2M          DC.B    22+NOC+0,$4E,$71
01:00202B79 4E
01:00202B7A 71
                            	  5774:          OPC     NO,T,13,46,00,0,0     NOT
01:00202B7B 4E4F            	     1M          DC.B    'NO','T'+128
01:00202B7D D4
01:00202B7E 0D              	     2M          DC.B    13+0+0,$46,$00
01:00202B7F 46
01:00202B80 00
                            	  5775:          OPC     OR,I,28,00,00,0,0     ORI
01:00202B81 4F52            	     1M          DC.B    'OR','I'+128
01:00202B83 C9
01:00202B84 1C              	     2M          DC.B    28+0+0,$00,$00
01:00202B85 00
01:00202B86 00
                            	  5776:          OPC     O,R,6,80,00,0,0       OR
01:00202B87 4F              	     1M          DC.B    'O','R'+128
01:00202B88 D2
01:00202B89 06              	     2M          DC.B    6+0+0,$80,$00
01:00202B8A 80
01:00202B8B 00
                            	  5777:          OPC     PE,A,36,48,40,0,0     PEA
01:00202B8C 5045            	     1M          DC.B    'PE','A'+128
01:00202B8E C1
01:00202B8F 24              	     2M          DC.B    36+0+0,$48,$40
01:00202B90 48
01:00202B91 40
                            	  5778:          OPC     RESE,T,22,4E,70,NOC,0 RESET
01:00202B92 52455345        	     1M          DC.B    'RESE','T'+128
01:00202B96 D4
01:00202B97 96              	     2M          DC.B    22+NOC+0,$4E,$70
01:00202B98 4E
01:00202B99 70
                            	  5779:          OPC     RO,L,7,E7,18,0,0      ROL
01:00202B9A 524F            	     1M          DC.B    'RO','L'+128
01:00202B9C CC
01:00202B9D 07              	     2M          DC.B    7+0+0,$E7,$18
01:00202B9E E7
01:00202B9F 18
                            	  5780:          OPC     RO,R,07,E6,18,0,0     ROR
01:00202BA0 524F            	     1M          DC.B    'RO','R'+128
01:00202BA2 D2
01:00202BA3 07              	     2M          DC.B    07+0+0,$E6,$18
01:00202BA4 E6
01:00202BA5 18
                            	  5781:          OPC     ROX,L,7,E5,10,0,0     ROXL
01:00202BA6 524F58          	     1M          DC.B    'ROX','L'+128
01:00202BA9 CC
01:00202BAA 07              	     2M          DC.B    7+0+0,$E5,$10
01:00202BAB E5
01:00202BAC 10
                            	  5782:          OPC     ROX,R,07,E4,10,0,0    ROXR
01:00202BAD 524F58          	     1M          DC.B    'ROX','R'+128
01:00202BB0 D2
01:00202BB1 07              	     2M          DC.B    07+0+0,$E4,$10
01:00202BB2 E4
01:00202BB3 10
                            	  5783:          OPC     RT,E,22,4E,73,NOC,0   RTE
01:00202BB4 5254            	     1M          DC.B    'RT','E'+128
01:00202BB6 C5
01:00202BB7 96              	     2M          DC.B    22+NOC+0,$4E,$73
01:00202BB8 4E
01:00202BB9 73
                            	  5784:          OPC     RT,R,22,4E,77,NOC,0   RTR
01:00202BBA 5254            	     1M          DC.B    'RT','R'+128
01:00202BBC D2
01:00202BBD 96              	     2M          DC.B    22+NOC+0,$4E,$77
01:00202BBE 4E
01:00202BBF 77
                            	  5785:          OPC     RT,S,22,4E,75,NOC,0   RTS
01:00202BC0 5254            	     1M          DC.B    'RT','S'+128
01:00202BC2 D3
01:00202BC3 96              	     2M          DC.B    22+NOC+0,$4E,$75
01:00202BC4 4E
01:00202BC5 75
                            	  5786:          OPC     SBC,D,0,81,00,0,0     SBCD
01:00202BC6 534243          	     1M          DC.B    'SBC','D'+128
01:00202BC9 C4
01:00202BCA 00              	     2M          DC.B    0+0+0,$81,$00
01:00202BCB 81
01:00202BCC 00
                            	  5787:          OPC     S,F,29,51,C0,0,0      SF
01:00202BCD 53              	     1M          DC.B    'S','F'+128
01:00202BCE C6
01:00202BCF 1D              	     2M          DC.B    29+0+0,$51,$C0
01:00202BD0 51
01:00202BD1 C0
                            	  5788:          OPC     SH,I,29,52,C0,0,0     SHI
01:00202BD2 5348            	     1M          DC.B    'SH','I'+128
01:00202BD4 C9
01:00202BD5 1D              	     2M          DC.B    29+0+0,$52,$C0
01:00202BD6 52
01:00202BD7 C0
                            	  5789:          OPC     SL,S,29,53,C0,0,0     SLS
01:00202BD8 534C            	     1M          DC.B    'SL','S'+128
01:00202BDA D3
01:00202BDB 1D              	     2M          DC.B    29+0+0,$53,$C0
01:00202BDC 53
01:00202BDD C0
                            	  5790:          OPC     SC,C,29,54,C0,0,0     SCC
01:00202BDE 5343            	     1M          DC.B    'SC','C'+128
01:00202BE0 C3
01:00202BE1 1D              	     2M          DC.B    29+0+0,$54,$C0
01:00202BE2 54
01:00202BE3 C0
                            	  5791:          OPC     SC,S,29,55,C0,0,0     SCS
01:00202BE4 5343            	     1M          DC.B    'SC','S'+128
01:00202BE6 D3
01:00202BE7 1D              	     2M          DC.B    29+0+0,$55,$C0
01:00202BE8 55
01:00202BE9 C0
                            	  5792:          OPC     SN,E,29,56,C0,0,0     SNE
01:00202BEA 534E            	     1M          DC.B    'SN','E'+128
01:00202BEC C5
01:00202BED 1D              	     2M          DC.B    29+0+0,$56,$C0
01:00202BEE 56
01:00202BEF C0
                            	  5793:          OPC     SE,Q,29,57,C0,0,0     SEQ
01:00202BF0 5345            	     1M          DC.B    'SE','Q'+128
01:00202BF2 D1
01:00202BF3 1D              	     2M          DC.B    29+0+0,$57,$C0
01:00202BF4 57
01:00202BF5 C0
                            	  5794:          OPC     SV,C,29,58,C0,0,0     SVC
01:00202BF6 5356            	     1M          DC.B    'SV','C'+128
01:00202BF8 C3
01:00202BF9 1D              	     2M          DC.B    29+0+0,$58,$C0
01:00202BFA 58
01:00202BFB C0
                            	  5795:          OPC     SV,S,29,59,C0,0,0     SVS
01:00202BFC 5356            	     1M          DC.B    'SV','S'+128
01:00202BFE D3
01:00202BFF 1D              	     2M          DC.B    29+0+0,$59,$C0
01:00202C00 59
01:00202C01 C0
                            	  5796:          OPC     SP,L,29,5A,C0,0,0     SPL
01:00202C02 5350            	     1M          DC.B    'SP','L'+128
01:00202C04 CC
01:00202C05 1D              	     2M          DC.B    29+0+0,$5A,$C0
01:00202C06 5A
01:00202C07 C0
                            	  5797:          OPC     SM,I,29,5B,C0,0,0     SMI
01:00202C08 534D            	     1M          DC.B    'SM','I'+128
01:00202C0A C9
01:00202C0B 1D              	     2M          DC.B    29+0+0,$5B,$C0
01:00202C0C 5B
01:00202C0D C0
                            	  5798:          OPC     SG,E,29,5C,C0,0,0     SGE
01:00202C0E 5347            	     1M          DC.B    'SG','E'+128
01:00202C10 C5
01:00202C11 1D              	     2M          DC.B    29+0+0,$5C,$C0
01:00202C12 5C
01:00202C13 C0
                            	  5799:          OPC     SL,T,29,5D,C0,0,0     SLT
01:00202C14 534C            	     1M          DC.B    'SL','T'+128
01:00202C16 D4
01:00202C17 1D              	     2M          DC.B    29+0+0,$5D,$C0
01:00202C18 5D
01:00202C19 C0
                            	  5800:          OPC     SG,T,29,5E,C0,0,0     SGT
01:00202C1A 5347            	     1M          DC.B    'SG','T'+128
01:00202C1C D4
01:00202C1D 1D              	     2M          DC.B    29+0+0,$5E,$C0
01:00202C1E 5E
01:00202C1F C0
                            	  5801:          OPC     SL,E,29,5F,C0,0,0     SLE
01:00202C20 534C            	     1M          DC.B    'SL','E'+128
01:00202C22 C5
01:00202C23 1D              	     2M          DC.B    29+0+0,$5F,$C0
01:00202C24 5F
01:00202C25 C0
                            	  5802:          OPC     STO,P,23,4E,72,0,0    STOP
01:00202C26 53544F          	     1M          DC.B    'STO','P'+128
01:00202C29 D0
01:00202C2A 17              	     2M          DC.B    23+0+0,$4E,$72
01:00202C2B 4E
01:00202C2C 72
                            	  5803:          OPC     S,T,29,50,C0,0,0      ST
01:00202C2D 53              	     1M          DC.B    'S','T'+128
01:00202C2E D4
01:00202C2F 1D              	     2M          DC.B    29+0+0,$50,$C0
01:00202C30 50
01:00202C31 C0
                            	  5804:          OPC     SUB,A,2,90,C0,0,0     SUBA
01:00202C32 535542          	     1M          DC.B    'SUB','A'+128
01:00202C35 C1
01:00202C36 02              	     2M          DC.B    2+0+0,$90,$C0
01:00202C37 90
01:00202C38 C0
                            	  5805:          OPC     SUB,I,3,04,00,0,0     SUBI
01:00202C39 535542          	     1M          DC.B    'SUB','I'+128
01:00202C3C C9
01:00202C3D 03              	     2M          DC.B    3+0+0,$04,$00
01:00202C3E 04
01:00202C3F 00
                            	  5806:          OPC     SUB,Q,4,51,00,0,0     SUBQ
01:00202C40 535542          	     1M          DC.B    'SUB','Q'+128
01:00202C43 D1
01:00202C44 04              	     2M          DC.B    4+0+0,$51,$00
01:00202C45 51
01:00202C46 00
                            	  5807:          OPC     SUB,X,5,91,00,0,0     SUBX
01:00202C47 535542          	     1M          DC.B    'SUB','X'+128
01:00202C4A D8
01:00202C4B 05              	     2M          DC.B    5+0+0,$91,$00
01:00202C4C 91
01:00202C4D 00
                            	  5808:          OPC     SU,B,1,90,00,0,0      SUB
01:00202C4E 5355            	     1M          DC.B    'SU','B'+128
01:00202C50 C2
01:00202C51 01              	     2M          DC.B    1+0+0,$90,$00
01:00202C52 90
01:00202C53 00
                            	  5809:          OPC     SWA,P,24,48,40,0,0    SWAP
01:00202C54 535741          	     1M          DC.B    'SWA','P'+128
01:00202C57 D0
01:00202C58 18              	     2M          DC.B    24+0+0,$48,$40
01:00202C59 48
01:00202C5A 40
                            	  5810:          OPC     TA,S,29,4A,C0,0,0     TAS
01:00202C5B 5441            	     1M          DC.B    'TA','S'+128
01:00202C5D D3
01:00202C5E 1D              	     2M          DC.B    29+0+0,$4A,$C0
01:00202C5F 4A
01:00202C60 C0
                            	  5811:          OPC     TRAP,V,22,4E,76,NOC,0 TRAPV
01:00202C61 54524150        	     1M          DC.B    'TRAP','V'+128
01:00202C65 D6
01:00202C66 96              	     2M          DC.B    22+NOC+0,$4E,$76
01:00202C67 4E
01:00202C68 76
                            	  5812:          OPC     TRA,P,25,4E,40,0,0    TRAP
01:00202C69 545241          	     1M          DC.B    'TRA','P'+128
01:00202C6C D0
01:00202C6D 19              	     2M          DC.B    25+0+0,$4E,$40
01:00202C6E 4E
01:00202C6F 40
                            	  5813:          OPC     TS,T,13,4A,00,0,0     TST
01:00202C70 5453            	     1M          DC.B    'TS','T'+128
01:00202C72 D4
01:00202C73 0D              	     2M          DC.B    13+0+0,$4A,$00
01:00202C74 4A
01:00202C75 00
                            	  5814:          OPC     UNL,K,26,4E,58,0,0    UNLK
01:00202C76 554E4C          	     1M          DC.B    'UNL','K'+128
01:00202C79 CB
01:00202C7A 1A              	     2M          DC.B    26+0+0,$4E,$58
01:00202C7B 4E
01:00202C7C 58
                            	  5815: 
01:00202C7D 00              	  5816:          DC.B    0              PAD BYTE
                            	  5817: 
                            	  5818: TBLOPCE  DS      0
                            	  5819: 
                            	  5820: * WITHOUT LABEL FIELD
                            	  5821: * 012345678901234567890123456789012345678901234567890
                            	  5822: * AAAAAA DDDDDDDDDDDDDDDDDDDD OPCODE  OPERAND
                            	  5823: *        FDATA                FOC     FOP
                            	  5824: 
                            	  5825: * 012345678901234567890123456789012345678901234567890
                            	  5826: * AAAAAA DDDDDDDDDDDDDDDDDDDD LLLLLLLL OPCODE  OPERAND
                            	  5827: *        FDATA                FOL      FOC     FOP
                            	  5828: 
                            	  5829: * A3 = STORE POINTER
                            	  5830: * A4 = PROGRAM COUNTER
                            	  5831: * A5 = SOURCE PTR BEGINNING
                            	  5832: * A6 = SOURCE PTR END+1
                            	  5833: *
                            	  5834: OUTBSIZE EQU     80        BUFFER SIZE
                            	  5835: FDATA    EQU     10        OFFSET TO DATA
                            	  5836: FOL      EQU     31        OFFSET TO LABEL
                            	  5837: FOC      EQU     31        OFFSET TO OP-CODE (NO LABEL FIELD)
                            	  5838: FOP      EQU     39        OFFSET TO OPERAND (NO LABEL FIELD)
                            	  5839: 
01:00202C7E 4E51FFDE        	  5840: CODE68K  LINK    A1,#0-(ESKE-ESKB)
01:00202C82 2F49001E        	  5841:          MOVE.L  A1,LINK(A7)    SAVE LINKAGE
01:00202C86 224F            	  5842:          MOVE.L  A7,A1          A1 = BASE REGISTER TO DATA
                            	  5843: 
01:00202C88 1CBC0020        	  5844:          MOVE.B  #BLANK,(A6)    INSURE LAST CHAR IS SPACE
                            	  5845: 
01:00202C8C 204B            	  5846:          MOVE.L  A3,A0
01:00202C8E 704F            	  5847:          MOVEQ   #OUTBSIZE-1,D0
01:00202C90 10FC0020        	  5848: M300     MOVE.B  #BLANK,(A0)+   SPACE FILL BUFFER
01:00202C94 51C8FFFA        	  5849:          DBRA    D0,M300
01:00202C98 5588            	  5850:          SUBQ.L  #2,A0
01:00202C9A 2348001A        	  5851:          MOVE.L  A0,PTRBUFE(A1) PTR TO END OF BUFFER
                            	  5852: 
01:00202C9E 234C000E        	  5853:          MOVE.L  A4,PCOUNTER(A1)  FORMAT PC
01:00202CA2 280C            	  5854:          MOVE.L  A4,D4          D4 = P-COUNTER
01:00202CA4 200C            	  5855:          MOVE.L  A4,D0
                            	  5856: 
01:00202CA6 2F0E            	  5857:          MOVE.L  A6,-(A7)       SAVE A6
01:00202CA8 2C4B            	  5858:          MOVE.L  A3,A6
01:00202CAA 6100F11A        	  5859:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:00202CAE 2C5F            	  5860:          MOVE.L  (A7)+,A6       RESTORE A6
                            	  5861: 
01:00202CB0 7E01            	  5862:          MOVEQ   #1,D7          POSSIBLE ERROR CODE
01:00202CB2 200C            	  5863:          MOVE.L  A4,D0
01:00202CB4 E298            	  5864:          ROR.L   #1,D0
01:00202CB6 6B00013A        	  5865:          BMI     ERDONE         PC ODD ADDRESS
                            	  5866: 
01:00202CBA 7E1F            	  5867:          MOVEQ   #FOL,D7        POSSIBLE ERROR CODE
01:00202CBC 0C1D0020        	  5868:          CMPI.B  #BLANK,(A5)+
01:00202CC0 66000130        	  5869:          BNE     ERDONE         1ST CHAR NOT SPACE
                            	  5870: 
01:00202CC4 137C0002000A    	  5871:          MOVE.B  #2,TNB(A1)     INZ # OF BYTES
01:00202CCA 337C0040000C    	  5872:          MOVE.W  #$40,TLENGTH(A1)  SIZE = .W (DEFAULT)
01:00202CD0 4229000B        	  5873:          CLR.B   TLSPEC(A1)     DEFAULT (SIZE NOT SPECIFIED)
                            	  5874: 
01:00202CD4 204B            	  5875:          MOVE.L  A3,A0          A0 = STORE ADDRESS
01:00202CD6 41E8001F        	  5876:          ADD.L   #FOC,A0
                            	  5877: 
01:00202CDA 61000108        	  5878: M340     BSR     GETCHARF       GET PAST SPACES
01:00202CDE 0C000020        	  5879:          CMPI.B  #BLANK,D0
01:00202CE2 67F6            	  5880:          BEQ     M340
                            	  5881: 
01:00202CE4 538D            	  5882:          SUBQ.L  #1,A5          FORMAT OP-CODE
01:00202CE6 610000FC        	  5883: M350     BSR     GETCHARF
01:00202CEA 10C0            	  5884:          MOVE.B  D0,(A0)+
01:00202CEC 0C00002E        	  5885:          CMPI.B  #'.',D0
01:00202CF0 6628            	  5886:          BNE.S   M352
                            	  5887: 
01:00202CF2 1355000B        	  5888:          MOVE.B  (A5),TLSPEC(A1)  NOT DEFAULT
01:00202CF6 0C150057        	  5889:          CMPI.B  #'W',(A5)
01:00202CFA 671E            	  5890:          BEQ.S   M352
01:00202CFC 0C150053        	  5891:          CMPI.B  #'S',(A5)
01:00202D00 6718            	  5892:          BEQ.S   M352           .SHORT = .WORD
01:00202D02 4269000C        	  5893:          CLR.W   TLENGTH(A1)
01:00202D06 0C150042        	  5894:          CMPI.B  #'B',(A5)
01:00202D0A 670E            	  5895:          BEQ.S   M352           SIZE = .W
01:00202D0C 337C0080000C    	  5896:          MOVE.W  #$80,TLENGTH(A1)
01:00202D12 0C15004C        	  5897:          CMPI.B  #'L',(A5)
01:00202D16 660000D4        	  5898:          BNE     ERF
                            	  5899: 
01:00202D1A 0C000020        	  5900: M352     CMPI.B  #BLANK,D0
01:00202D1E 66C6            	  5901:          BNE     M350           NOT SPACE CONTINUE
                            	  5902: 
                            	  5903: * SEARCH OP-CODE TABLE
01:00202D20 41FAFC58        	  5904:          LEA     TBLOPC(PC),A0  A0 = PTR TO TABLE OF CODES
01:00202D24 244B            	  5905: M410     MOVE.L  A3,A2          A3 = START OF STORE BUFFER
01:00202D26 45EA001F        	  5906:          ADD.L   #FOC,A2        A2 = PTR TO OP-CODE JUST FORMATTED
                            	  5907: 
01:00202D2A 1018            	  5908: M415     MOVE.B  (A0)+,D0       XXXXXXDD
01:00202D2C 4880            	  5909:          EXT.W   D0             XXXXSSDD  SIGN EXTENDED
01:00202D2E 0200007F        	  5910:          ANDI.B  #$7F,D0
01:00202D32 B01A            	  5911:          CMP.B   (A2)+,D0
01:00202D34 6606            	  5912:          BNE.S   M420           NON-MATCH
01:00202D36 4A40            	  5913:          TST.W   D0
01:00202D38 6AF0            	  5914:          BPL     M415           SIGN RESET; CONTINUE
01:00202D3A 6018            	  5915:          BRA.S   M430           MATCH COMPLETE
                            	  5916: 
01:00202D3C 4A40            	  5917: M420     TST.W   D0             SEQUENCE TO NEXT CODE
01:00202D3E 6B04            	  5918:          BMI.S   M426
01:00202D40 1018            	  5919: M424     MOVE.B  (A0)+,D0
01:00202D42 6AFC            	  5920:          BPL     M424           FINISH THIS OP-CODE
01:00202D44 5688            	  5921: M426     ADDQ.L  #3,A0          ADJUST PTR TO TABLE
01:00202D46 45FAFF36        	  5922:          LEA     TBLOPCE(PC),A2
01:00202D4A B5C8            	  5923:          CMP.L   A0,A2
01:00202D4C 66D6            	  5924:          BNE     M410
                            	  5925: 
01:00202D4E 7E1F            	  5926: M428     MOVEQ   #FOC,D7        ERROR CODE
01:00202D50 600000A0        	  5927:          BRA     ERDONE
                            	  5928: 
                            	  5929: * GET GOTO INDEX
                            	  5930: * GET FIRST WORD MASK
01:00202D54 1012            	  5931: M430     MOVE.B  (A2),D0        MUST TERMINATE OP-CODE
01:00202D56 0C000020        	  5932:          CMPI.B  #BLANK,D0        WITH SPACE OR PERIOD
01:00202D5A 6706            	  5933:          BEQ.S   M432
01:00202D5C 0C00002E        	  5934:          CMPI.B  #'.',D0
01:00202D60 66EC            	  5935:          BNE     M428           ERROR
                            	  5936: M432
                            	  5937: 
01:00202D62 7000            	  5938:          CLR.L   D0
01:00202D64 1018            	  5939:          MOVE.B  (A0)+,D0       D0 =  KEYS  INDEX
01:00202D66 1200            	  5940:          MOVE.B  D0,D1          D1 =  KEYS (INDEX)
01:00202D68 0200003F        	  5941:          ANDI.B  #$3F,D0        D0 =        INDEX
01:00202D6C D080            	  5942:          ASL.L   #1,D0          INDEX * TWO
01:00202D6E 1418            	  5943:          MOVE.B  (A0)+,D2
01:00202D70 E14A            	  5944:          LSL.W   #8,D2
01:00202D72 1418            	  5945:          MOVE.B  (A0)+,D2       D2 = FIRST WORD MASK
01:00202D74 3282            	  5946:          MOVE.W  D2,(A1)        *D2,TDATA(A1)
                            	  5947: 
                            	  5948: * INSURE .S .W MATCH OP-CODE
                            	  5949: 
01:00202D76 1629000B        	  5950:          MOVE.B  TLSPEC(A1),D3  D3 = .n SPECIFIED
01:00202D7A 671A            	  5951:          BEQ.S   M4326          NOT SPECIFIED
01:00202D7C 08010006        	  5952:          BTST    #6,D1
01:00202D80 670E            	  5953:          BEQ.S   M4324          .W ALLOWED (.S NOT ALLOWED)
01:00202D82 0C030057        	  5954:          CMPI.B  #'W',D3
01:00202D86 67C6            	  5955:          BEQ     M428           .W NOT ALLOWED
01:00202D88 0C030042        	  5956:          CMPI.B  #'B',D3
01:00202D8C 67C0            	  5957:          BEQ     M428           .B NOT ALLOWED
01:00202D8E 6006            	  5958:          BRA.S   M4326
                            	  5959: 
01:00202D90 0C030053        	  5960: M4324    CMPI.B  #'S',D3
01:00202D94 67B8            	  5961:          BEQ     M428           .S NOT ALLOWED
                            	  5962: M4326
                            	  5963: 
                            	  5964: * CALCULATE GOTO ADDRESS
                            	  5965: 
01:00202D96 41FAFB96        	  5966:          LEA     TBLKEYS(PC),A0 A0 = PTR TO KEYS
01:00202D9A 30300000        	  5967:          MOVE.W  (A0,D0),D0     D0 = 16 BIT OFFSET
01:00202D9E 45FAF884        	  5968:          LEA     XBASE(PC),A2   A2 = BASE ADDRESS
01:00202DA2 D5C0            	  5969:          ADD.L   D0,A2          A2 = COMPUTED GO TO  ADDRESS
                            	  5970: 
                            	  5971: * FORMAT OPERAND IF REGUIRED
                            	  5972: 
01:00202DA4 4A01            	  5973:          TST.B   D1             LOOK AT KEY
01:00202DA6 6B20            	  5974:          BMI.S   M440           OPERAND NOT REQUIRED
                            	  5975: 
01:00202DA8 204B            	  5976:          MOVE.L  A3,A0
01:00202DAA 41E80027        	  5977:          ADD.L   #FOP,A0        STORE POINTER
01:00202DAE 23480012        	  5978:          MOVE.L  A0,PTROP(A1)   POINTER TO OPERAND (FORMATED)
01:00202DB2 6130            	  5979: M435     BSR.S   GETCHARF       D0 = CHAR
01:00202DB4 0C000020        	  5980:          CMPI.B  #BLANK,D0
01:00202DB8 67F8            	  5981:          BEQ     M435           SKIP SPACES
                            	  5982: 
01:00202DBA 10C0            	  5983: M437     MOVE.B  D0,(A0)+       MOVE REST OF SOURCE LINE
01:00202DBC 6126            	  5984:          BSR.S   GETCHARF       D0 = CHAR
01:00202DBE BDCD            	  5985:          CMP.L   A5,A6
01:00202DC0 6AF8            	  5986:          BPL     M437
01:00202DC2 2348001A        	  5987:          MOVE.L  A0,PTRBUFE(A1) POINTER TO END FORMATED SOURCE
01:00202DC6 2C48            	  5988:          MOVE.L  A0,A6          A6 = POINTER TO END OF SOURCE
                            	  5989: M440
                            	  5990: 
01:00202DC8 2A690012        	  5991:          MOVE.L  PTROP(A1),A5   A5 = PTR TO OPERAND
01:00202DCC 49E90002        	  5992:          LEA     TDATA+2(A1),A4 A4 = BASE ADDR FOR DATA STORE
01:00202DD0 7600            	  5993:          CLR.L   D3             D3 = OFFSET FOR DATA STORE
01:00202DD2 4ED2            	  5994:          JMP     (A2)           GOTO ROUTINE
                            	  5995: *                               D2 = MASK
                            	  5996: *                               D4 = P-COUNTER
                            	  5997: 
01:00202DD4 0C1D002C        	  5998: COMMA    CMPI.B  #',',(A5)+
01:00202DD8 6614            	  5999:          BNE.S   ER             NOT COMMA
01:00202DDA 4E75            	  6000:          RTS
                            	  6001: 
01:00202DDC BDCD            	  6002: GETCHAR  CMP.L   A5,A6
01:00202DDE 6B0E            	  6003:          BMI.S   ER
01:00202DE0 101D            	  6004:          MOVE.B  (A5)+,D0
01:00202DE2 4E75            	  6005:          RTS
                            	  6006: 
01:00202DE4 BDCD            	  6007: GETCHARF CMP.L   A5,A6
01:00202DE6 6B04            	  6008:          BMI.S   ERF
01:00202DE8 101D            	  6009:          MOVE.B  (A5)+,D0
01:00202DEA 4E75            	  6010:          RTS
                            	  6011: 
01:00202DEC 2A48            	  6012: ERF      MOVE.L  A0,A5
                            	  6013: 
01:00202DEE 2E0D            	  6014: ER       MOVE.L  A5,D7          D7 = ERROR FLAG
01:00202DF0 9E8B            	  6015:          SUB.L   A3,D7          ..& POSITION OF ERROR
01:00202DF2 7C00            	  6016: ERDONE   CLR.L   D6             D6 = (ZERO) BYTE COUNT
01:00202DF4 6022            	  6017:          BRA.S   CMMD35
                            	  6018: 
01:00202DF6 0C150020        	  6019: CMMD2    CMPI.B  #BLANK,(A5)
01:00202DFA 66F2            	  6020:          BNE     ER             OPERAND DID NOT END WITH SPACE
                            	  6021: 
                            	  6022: MCMMD2   DS      0              NO OPERAND SEQUENCE
01:00202DFC 3282            	  6023:          MOVE.W  D2,(A1)        *D2,TDATA(A1)
                            	  6024: 
01:00202DFE 1629000A        	  6025:          MOVE.B  TNB(A1),D3     FORMAT DATA
01:00202E02 2C03            	  6026:          MOVE.L  D3,D6          D7 = NUMBER OF BYTES
01:00202E04 45D1            	  6027:          LEA     (A1),A2        A2 = PTR TO HEX DATA  *TDATA(A1),A2
01:00202E06 2C4B            	  6028:          MOVE.L  A3,A6          D3 = NUMBER OF BYTES
01:00202E08 4DEE000A        	  6029:          ADD.L   #FDATA,A6      A6 = STORE PTR
01:00202E0C 101A            	  6030: FPR315   MOVE.B  (A2)+,D0
01:00202E0E 6100EF9A        	  6031:          BSR     PNT2HX
01:00202E12 5383            	  6032:          SUBQ.L  #1,D3
01:00202E14 66F6            	  6033:          BNE     FPR315         MORE BYTES
                            	  6034: 
01:00202E16 7E00            	  6035:          CLR.L   D7             RESET ERROR FLAG
                            	  6036: 
01:00202E18 4CD10007        	  6037: CMMD35   MOVEM.L (A1),D0-D2       D0-D2 = DATA   *TDATA(A1),D0-D2
                            	  6038: 
01:00202E1C 2C69001A        	  6039:          MOVE.L  PTRBUFE(A1),A6   A6 = POINTER TO END OF BUFFER
                            	  6040: 
01:00202E20 2869000E        	  6041:          MOVE.L  PCOUNTER(A1),A4  A4 = ORGINAL PC
                            	  6042: 
01:00202E24 2269001E        	  6043:          MOVE.L  LINK(A1),A1
01:00202E28 4E59            	  6044:          UNLK    A1
01:00202E2A 4E75            	  6045:          RTS                    RETURN TO REQUESTOR
                            	  6046: *                               A3 = POINTER TO START OF BUFFER
                            	  6047: *                               D6 = NUMBER OF BYTES ASSEMBLED
                            	  6048: *                               D7 = ERROR FLAG (POSITION)
                            	  6049: 
                            	  6050: 
                            	  6051: *  SIZE = BYTE
                            	  6052: *    DY,DX
                            	  6053: *    -(AY),-(AX)
                            	  6054: *    ....RX@.SS...RY@
                            	  6055: MABCD    DS      0              (INDEX 0) ABCD SBCD
01:00202E2C 4A29000B        	  6056:          TST.B   TLSPEC(A1)
01:00202E30 6706            	  6057:          BEQ.S   MABCD9         DEFAULT SIZE = BYTE
01:00202E32 4A69000C        	  6058:          CMPI.W  #$00,TLENGTH(A1)
01:00202E36 66B6            	  6059:          BNE     ER             NOT .B
                            	  6060: MABCD9
                            	  6061: 
01:00202E38 3E3C0011        	  6062:          MOVE.W  #$11,D7
01:00202E3C 6100F854        	  6063:          BSR     EA
                            	  6064: 
01:00202E40 6192            	  6065:          BSR     COMMA
                            	  6066: 
01:00202E42 2006            	  6067:          MOVE.L  D6,D0
01:00202E44 02400007        	  6068:          ANDI.W  #7,D0
01:00202E48 8440            	  6069:          OR.W    D0,D2
                            	  6070: 
01:00202E4A 08060005        	  6071:          BTST    #5,D6
01:00202E4E 6716            	  6072:          BEQ.S   MABCD55        D@,D@ MODE
                            	  6073: 
01:00202E50 00420008        	  6074:          ORI.W   #$0008,D2      -(A@),-(A@) MODE
                            	  6075: 
01:00202E54 3E3C0010        	  6076:          MOVE.W  #$10,D7
01:00202E58 6100F838        	  6077:          BSR     EA
                            	  6078: 
01:00202E5C 02460007        	  6079:          ANDI.W  #7,D6
01:00202E60 EE5E            	  6080:          ROR.W   #7,D6
01:00202E62 8446            	  6081:          OR.W    D6,D2
01:00202E64 6090            	  6082:          BRA     CMMD2
                            	  6083: 
01:00202E66 6100F7C2        	  6084: MABCD55  BSR     GETREGD        D@,D@
01:00202E6A EE58            	  6085:          ROR.W   #7,D0
01:00202E6C 8440            	  6086:          OR.W    D0,D2
01:00202E6E 6086            	  6087: CMMD2S10 BRA     CMMD2
                            	  6088: 
                            	  6089: 
                            	  6090: MCMP     DS      0              (INDEX 34)
01:00202E70 6100F81C        	  6091:          BSR     EAALL
01:00202E74 2806            	  6092:          MOVE.L  D6,D4          D4 = SOURCE MODE
                            	  6093: 
01:00202E76 6166            	  6094:          BSR.S   COMMAS20
                            	  6095: 
01:00202E78 0C150041        	  6096:          CMPI.B  #'A',(A5)
01:00202E7C 67000116        	  6097:          BEQ     MADDA21        DESTINATION = A@
                            	  6098: 
01:00202E80 0C04003C        	  6099:          CMPI.B  #$3C,D4
01:00202E84 6748            	  6100:          BEQ.S   MCMP56         SOURCE  ....I  #<DATA>,...
                            	  6101: 
01:00202E86 6100F79C        	  6102:          BSR     FSIZE
                            	  6103: 
01:00202E8A 3E3C0009        	  6104:          MOVE.W  #$009,D7
01:00202E8E 6100F802        	  6105:          BSR     EA             D@ + (A@)+
01:00202E92 2006            	  6106:          MOVE.L  D6,D0          MMMRRR
01:00202E94 02400038        	  6107:          ANDI.W  #$38,D0        MMM...
                            	  6108: 
01:00202E98 672C            	  6109:          BEQ.S   MCMP39         DESTINATION  D@
                            	  6110: 
01:00202E9A 0C000018        	  6111:          CMPI.B  #$18,D0
01:00202E9E 6600FF4E        	  6112:          BNE     ER
                            	  6113: 
01:00202EA2 0246000F        	  6114:          ANDI.W  #$F,D6         (AY)+,(AX)+
01:00202EA6 EE5E            	  6115:          ROR.W   #7,D6
01:00202EA8 8446            	  6116:          OR.W    D6,D2          ....AX@.........
01:00202EAA 00420100        	  6117:          ORI.W   #$0100,D2      ...1AX@.........
                            	  6118: 
01:00202EAE 2004            	  6119:          MOVE.L  D4,D0
01:00202EB0 02400038        	  6120:          ANDI.W  #$38,D0
01:00202EB4 0C400018        	  6121:          CMPI.W  #$18,D0
01:00202EB8 6600FF34        	  6122:          BNE     ER             NOT (A@)+
01:00202EBC 0244000F        	  6123:          ANDI.W  #$F,D4         ............1AY@
01:00202EC0 8444            	  6124:          OR.W    D4,D2
01:00202EC2 6000FF32        	  6125:          BRA     CMMD2
                            	  6126: 
                            	  6127: *  <EA>,D@
01:00202EC6 EE5E            	  6128: MCMP39   ROR.W   #7,D6
01:00202EC8 8446            	  6129:          OR.W    D6,D2
                            	  6130: 
01:00202ECA 8444            	  6131:          OR.W    D4,D2
01:00202ECC 600E            	  6132:          BRA.S   CMMD2S11
                            	  6133: 
01:00202ECE 343C0C00        	  6134: MCMP56   MOVE.W  #$0C00,D2      #<DATA>,<EA>      MASK = CMPI
                            	  6135: 
01:00202ED2 6100F750        	  6136:          BSR     FSIZE
                            	  6137: 
01:00202ED6 6100F792        	  6138:          BSR     EADA
01:00202EDA 8446            	  6139:          OR.W    D6,D2
01:00202EDC 6090            	  6140: CMMD2S11 BRA     CMMD2S10
                            	  6141: 
01:00202EDE 6000FEF4        	  6142: COMMAS20 BRA     COMMA
                            	  6143: 
                            	  6144: MADD     DS      0              (INDEX 1)
01:00202EE2 6100F7AA        	  6145:          BSR     EAALL
01:00202EE6 2806            	  6146:          MOVE.L  D6,D4          D4 = SOURCE MODE
                            	  6147: 
01:00202EE8 61F4            	  6148:          BSR     COMMAS20
                            	  6149: 
01:00202EEA 0C150041        	  6150:          CMPI.B  #'A',(A5)
01:00202EEE 670000A4        	  6151:          BEQ     MADDA21        DESTINATION = A@
                            	  6152: 
01:00202EF2 0C04003C        	  6153:          CMPI.B  #$3C,D4
01:00202EF6 6728            	  6154:          BEQ.S   MADD56         SOURCE  ....I  #<DATA>,...
                            	  6155: 
01:00202EF8 6100F72A        	  6156:          BSR     FSIZE
                            	  6157: 
01:00202EFC 3E3C01FF        	  6158:          MOVE.W  #$1FF,D7
01:00202F00 6100F790        	  6159:          BSR     EA             ALTERABLE + D@
01:00202F04 2006            	  6160:          MOVE.L  D6,D0          MMMRRR
01:00202F06 02400038        	  6161:          ANDI.W  #$38,D0        MMM...
01:00202F0A 6608            	  6162:          BNE.S   MADD46         DESTINATION NOT  D@
                            	  6163: 
                            	  6164: *  <EA>,D@
01:00202F0C EE5E            	  6165:          ROR.W   #7,D6
01:00202F0E 8446            	  6166:          OR.W    D6,D2
                            	  6167: 
01:00202F10 8444            	  6168:          OR.W    D4,D2
01:00202F12 60C8            	  6169:          BRA     CMMD2S11
                            	  6170: 
                            	  6171: MADD46   DS      0              D@,<EA>
01:00202F14 00420100        	  6172:          ORI.W   #$100,D2
                            	  6173: 
01:00202F18 EE5C            	  6174:          ROR.W   #7,D4
01:00202F1A 8444            	  6175:          OR.W    D4,D2          <EA> AS DESTINATION
                            	  6176: 
01:00202F1C 8446            	  6177:          OR.W    D6,D2          D@  AS SOURCE
01:00202F1E 60BC            	  6178:          BRA     CMMD2S11
                            	  6179: 
01:00202F20 2002            	  6180: MADD56   MOVE.L  D2,D0          #<DATA>,<EA>
01:00202F22 343C0600        	  6181:          MOVE.W  #$0600,D2      MASK = ADDI
                            	  6182: 
01:00202F26 0C40D000        	  6183:          CMPI.W  #$D000,D0
01:00202F2A 6704            	  6184:          BEQ.S   MADD58
01:00202F2C 343C0400        	  6185:          MOVE.W  #$400,D2       MASK = SUBI
                            	  6186: MADD58
                            	  6187: 
01:00202F30 6100F6F2        	  6188:          BSR     FSIZE
                            	  6189: 
01:00202F34 6100F734        	  6190:          BSR     EADA           DATA ALTERABLE ONLY
01:00202F38 8446            	  6191:          OR.W    D6,D2
01:00202F3A 60A0            	  6192:          BRA     CMMD2S11
                            	  6193: 
01:00202F3C 2A690012        	  6194: MADDI    MOVE.L  PTROP(A1),A5   (INDEX 3) CMPI
01:00202F40 6100F6E2        	  6195:          BSR     FSIZE
                            	  6196: 
01:00202F44 6100F736        	  6197:          BSR     EAZ
                            	  6198: 
01:00202F48 6194            	  6199:          BSR     COMMAS20
                            	  6200: 
01:00202F4A 6100F71E        	  6201:          BSR     EADA           DATA ALTERABLE ONLY
01:00202F4E 8446            	  6202:          OR.W    D6,D2
01:00202F50 608A            	  6203:          BRA     CMMD2S11
                            	  6204: 
                            	  6205: *  SIZE =  BYTE, WORD, LONG
                            	  6206: *  #<DATA>,SR
                            	  6207: *  #<DATA>,<EA>    DATA ALTERABLE ONLY
                            	  6208: MANDI    DS      0              (INDEX 28) ANDI EORI ORI
01:00202F52 6100F6D0        	  6209:          BSR     FSIZE
                            	  6210: 
01:00202F56 6100F724        	  6211:          BSR     EAZ
                            	  6212: 
01:00202F5A 6182            	  6213:          BSR     COMMAS20
                            	  6214: 
01:00202F5C 0C150053        	  6215:          CMPI.B  #'S',(A5)
01:00202F60 670A            	  6216:          BEQ.S   MANDI23
                            	  6217: 
01:00202F62 6100F706        	  6218:          BSR     EADA
01:00202F66 8446            	  6219:          OR.W    D6,D2
01:00202F68 6000FF72        	  6220:          BRA     CMMD2S11
                            	  6221: 
01:00202F6C 0C2D00520001    	  6222: MANDI23  CMPI.B  #'R',1(A5)     #<DATA>,SR
01:00202F72 6600FE7A        	  6223:          BNE     ER
01:00202F76 0C690080000C    	  6224:          CMPI.W  #$0080,TLENGTH(A1)
01:00202F7C 6700FE70        	  6225:          BEQ     ER             .L NOT ALLOWED WITH SR
01:00202F80 0042003C        	  6226:          ORI.W   #$003C,D2
01:00202F84 548D            	  6227:          ADDQ.L  #2,A5          POINTER TO END OF OPERAND
01:00202F86 6000FE6E        	  6228:          BRA     CMMD2
                            	  6229: 
                            	  6230: MADDA    DS      0              (INDEX 2)
01:00202F8A 6100F702        	  6231:          BSR     EAALL
01:00202F8E 8446            	  6232:          OR.W    D6,D2
                            	  6233: 
01:00202F90 6100FE42        	  6234:          BSR     COMMA
                            	  6235: 
01:00202F94 8446            	  6236: MADDA21  OR.W    D6,D2
01:00202F96 3029000C        	  6237:          MOVE.W  TLENGTH(A1),D0
01:00202F9A 6700FE52        	  6238:          BEQ     ER             .BYTE NOT ALLOWED
01:00202F9E E348            	  6239:          LSL.W   #1,D0          .W = 011......
01:00202FA0 004000C0        	  6240:          ORI.W   #$00C0,D0      .L = 111......
01:00202FA4 8440            	  6241:          OR.W    D0,D2
                            	  6242: 
01:00202FA6 6100F69C        	  6243:          BSR     GETREGA
01:00202FAA EE58            	  6244:          ROR.W   #7,D0
01:00202FAC 8440            	  6245:          OR.W    D0,D2
01:00202FAE 6000FE46        	  6246:          BRA     CMMD2
                            	  6247: 
                            	  6248: MADDQ    DS      0              (INDEX 4)
01:00202FB2 6100F670        	  6249:          BSR     FSIZE
                            	  6250: 
01:00202FB6 61000680        	  6251:          BSR     GETIMM
                            	  6252: 
01:00202FBA 4A80            	  6253:          TST.L   D0
01:00202FBC 6700FE30        	  6254:          BEQ     ER             DATA = ZERO
01:00202FC0 0C000009        	  6255:          CMPI.B  #9,D0
01:00202FC4 6A00FE28        	  6256:          BPL     ER             VALUE TOO BIG
01:00202FC8 02400007        	  6257:          ANDI.W  #$7,D0         MAKE 8 = 0
01:00202FCC EE58            	  6258:          ROR.W   #7,D0          SHIFT DATA TO BITS 9-11
01:00202FCE 8440            	  6259:          OR.W    D0,D2
                            	  6260: 
01:00202FD0 6100FE02        	  6261:          BSR     COMMA
                            	  6262: 
01:00202FD4 6100F6B2        	  6263:          BSR     EAA            ALTERABLE ADDRESSING
                            	  6264: 
01:00202FD8 8446            	  6265:          OR.W    D6,D2
01:00202FDA 2002            	  6266:          MOVE.L  D2,D0
01:00202FDC 024000C0        	  6267:          ANDI.W  #$C0,D0
01:00202FE0 660E            	  6268:          BNE.S   MADDQ25
                            	  6269: 
                            	  6270: * BYTE SIZE; ADDRESS REGISTER DIRECT NOT ALLOWED
01:00202FE2 2002            	  6271:          MOVE.L  D2,D0
01:00202FE4 02400038        	  6272:          ANDI.W  #$38,D0
01:00202FE8 0C000008        	  6273:          CMPI.B  #$08,D0
01:00202FEC 6700FE00        	  6274:          BEQ     ER
01:00202FF0 6000FE04        	  6275: MADDQ25  BRA     CMMD2
                            	  6276: 
                            	  6277: * SIZE = BYTE, WORD, LONG
                            	  6278: *    DY,DX
                            	  6279: *    -(AY),-(AX)
                            	  6280: *    ....RX@.SS...RY@
                            	  6281: MADDX    DS      0              (INDEX 5)
01:00202FF4 6100F62E        	  6282:          BSR     FSIZE
                            	  6283: 
01:00202FF8 3E3C0011        	  6284:          MOVE.W  #$11,D7
01:00202FFC 6100F694        	  6285:          BSR     EA
                            	  6286: 
01:00203000 6100FDD2        	  6287:          BSR     COMMA
                            	  6288: 
01:00203004 2006            	  6289:          MOVE.L  D6,D0
01:00203006 02400007        	  6290:          ANDI.W  #7,D0
01:0020300A 8440            	  6291:          OR.W    D0,D2
                            	  6292: 
01:0020300C 08060005        	  6293:          BTST    #5,D6
01:00203010 6718            	  6294:          BEQ.S   MADDX5         D@,D@ MODE
                            	  6295: 
01:00203012 00420008        	  6296:          ORI.W   #$0008,D2      -(A@),-(A@) MODE
                            	  6297: 
01:00203016 3E3C0010        	  6298:          MOVE.W  #$10,D7
01:0020301A 6100F676        	  6299:          BSR     EA
                            	  6300: 
01:0020301E 02460007        	  6301:          ANDI.W  #7,D6
01:00203022 EE5E            	  6302:          ROR.W   #7,D6
01:00203024 8446            	  6303:          OR.W    D6,D2
01:00203026 6000FDCE        	  6304:          BRA     CMMD2
                            	  6305: 
01:0020302A 6100F5FE        	  6306: MADDX5   BSR     GETREGD        D@,D@
01:0020302E EE58            	  6307:          ROR.W   #7,D0
01:00203030 8440            	  6308:          OR.W    D0,D2
01:00203032 6000FDC2        	  6309:          BRA     CMMD2
                            	  6310: 
                            	  6311: *  SIZE = BYTE, WORD, LONG
                            	  6312: *         <EA>,D@
                            	  6313: *         D@,<EA>
01:00203036 6100F5EC        	  6314: MAND     BSR     FSIZE          (INDEX 6)
                            	  6315: 
01:0020303A 0C150023        	  6316:          CMPI.B  #'#',(A5)
01:0020303E 6740            	  6317:          BEQ.S   MAND90
                            	  6318: 
01:00203040 61000082        	  6319:          BSR     A5TODEST       MOVE A5 TO DESTINATION
                            	  6320: 
01:00203044 1015            	  6321:          MOVE.B  (A5),D0        D0 = 1ST CHAR OF DESTINATION
01:00203046 2A690012        	  6322:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
01:0020304A 0C000044        	  6323:          CMPI.B  #'D',D0
01:0020304E 671A            	  6324:          BEQ.S   MAND77
                            	  6325: 
01:00203050 00420100        	  6326:          ORI.W   #$0100,D2       D@,<EA>
                            	  6327: 
01:00203054 6100F5D4        	  6328:          BSR     GETREGD
01:00203058 EE58            	  6329:          ROR.W   #7,D0
01:0020305A 8440            	  6330:          OR.W    D0,D2
                            	  6331: 
01:0020305C 6100FD76        	  6332:          BSR     COMMA
                            	  6333: 
01:00203060 6100F614        	  6334:          BSR     EAM            ALTERABLE MEMORY
01:00203064 8446            	  6335:          OR.W    D6,D2
01:00203066 6000FD8E        	  6336:          BRA     CMMD2
                            	  6337: 
01:0020306A 6100F616        	  6338: MAND77   BSR     EADADDR        <EA>,D@
01:0020306E 8446            	  6339:          OR.W    D6,D2
                            	  6340: 
01:00203070 6100FD62        	  6341:          BSR     COMMA
                            	  6342: 
01:00203074 6100F5B4        	  6343:          BSR     GETREGD
01:00203078 EE58            	  6344:          ROR.W   #7,D0
01:0020307A 8440            	  6345:          OR.W    D0,D2
01:0020307C 6000FD78        	  6346:          BRA     CMMD2
                            	  6347: 
01:00203080 0242F000        	  6348: MAND90   ANDI.W  #$F000,D2
01:00203084 0C42C000        	  6349:          CMPI.W  #$C000,D2
01:00203088 6708            	  6350:          BEQ.S   MAND97          AND
01:0020308A 343C0000        	  6351:          MOVE.W  #$0000,D2      CHANGE TO "ORI"
01:0020308E 6000FEC2        	  6352: MAND91   BRA     MANDI
01:00203092 343C0200        	  6353: MAND97   MOVE.W  #$0200,D2      CHANGE TO "ADDI"
01:00203096 60F6            	  6354:          BRA     MAND91
                            	  6355: 
01:00203098 6100F58A        	  6356: MEOR     BSR     FSIZE          (INDEX 35)
                            	  6357: 
01:0020309C 0C150023        	  6358:          CMPI.B  #'#',(A5)
01:002030A0 6716            	  6359:          BEQ.S   MEOR90
                            	  6360: 
01:002030A2 6100F586        	  6361:          BSR     GETREGD
01:002030A6 EE58            	  6362:          ROR.W   #7,D0
01:002030A8 8440            	  6363:          OR.W    D0,D2
                            	  6364: 
01:002030AA 6100FD28        	  6365:          BSR     COMMA
                            	  6366: 
01:002030AE 6100F5BA        	  6367:          BSR     EADA           DATA ALTERABLE ADDRESSING
01:002030B2 8446            	  6368:          OR.W    D6,D2
01:002030B4 6000FD40        	  6369:          BRA     CMMD2
                            	  6370: 
01:002030B8 2A690012        	  6371: MEOR90   MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
01:002030BC 343C0A00        	  6372:          MOVE.W  #$0A00,D2      CHANGE TO "EORI"
01:002030C0 6000FE90        	  6373:          BRA     MANDI
                            	  6374: 
01:002030C4 7200            	  6375: A5TODEST CLR.L   D1             MOVE A5 TO DESTINATION
01:002030C6 6100FD14        	  6376: A5300    BSR     GETCHAR
01:002030CA 0C000028        	  6377:          CMPI.B  #'(',D0
01:002030CE 6602            	  6378:          BNE.S   A5305
01:002030D0 2200            	  6379:          MOVE.L  D0,D1
01:002030D2 0C000029        	  6380: A5305    CMPI.B  #')',D0
01:002030D6 67EC            	  6381:          BEQ     A5TODEST
01:002030D8 0C00002C        	  6382:          CMPI.B  #',',D0
01:002030DC 66E8            	  6383:          BNE     A5300
01:002030DE 4A41            	  6384:          TST     D1
01:002030E0 66E4            	  6385:          BNE     A5300
01:002030E2 4E75            	  6386:          RTS
                            	  6387: 
                            	  6388: MASL     DS      0              (INDEX 7)
                            	  6389: 
                            	  6390: *         ASL     LSL     ROL     ROXL
                            	  6391: *  MASKS  E000    E008    E018    E010
                            	  6392: *         E0C0    E2C0    E6C0    E4C0   SHIFT MEMORY
                            	  6393: 
01:002030E4 6100F53E        	  6394:          BSR     FSIZE
                            	  6395: 
01:002030E8 101D            	  6396:          MOVE.B  (A5)+,D0
01:002030EA 0C000023        	  6397:          CMPI.B  #'#',D0
01:002030EE 6628            	  6398:          BNE.S   MSL200
                            	  6399: 
                            	  6400: *  #<COUNT>,D@
01:002030F0 6100F4C8        	  6401:          BSR     EV
01:002030F4 0C8000000008    	  6402:          CMPI.L  #8,D0
01:002030FA 6E00FCF2        	  6403:          BGT     ER             GREATER THAN 8
                            	  6404: 
01:002030FE 02000007        	  6405:          ANDI.B  #$7,D0         MAKE 8 INTO 0
01:00203102 EE58            	  6406: MSL150   ROR.W   #7,D0
01:00203104 0242F1FF        	  6407:          ANDI.W  #$F1FF,D2
01:00203108 8440            	  6408:          OR.W    D0,D2          COUNT/REG
                            	  6409: 
01:0020310A 6100FCC8        	  6410:          BSR     COMMA
                            	  6411: 
01:0020310E 6100F51A        	  6412:          BSR     GETREGD
01:00203112 8440            	  6413:          OR.W    D0,D2
01:00203114 6000FCE0        	  6414:          BRA     CMMD2
                            	  6415: 
                            	  6416: MSL200   DS      0              D@,D@
01:00203118 0C000044        	  6417:          CMPI.B  #'D',D0
01:0020311C 660C            	  6418:          BNE.S   MSL300
                            	  6419: 
                            	  6420: *        D@,D@
01:0020311E 00420020        	  6421:          ORI.W   #$20,D2
01:00203122 538D            	  6422:          SUBQ.L  #1,A5
01:00203124 6100F504        	  6423:          BSR     GETREGD
01:00203128 60D8            	  6424:          BRA     MSL150
                            	  6425: 
                            	  6426: MSL300   DS      0              <EA>      SHIFT MEMORY
01:0020312A 538D            	  6427:          SUBQ.L  #1,A5
01:0020312C 004200C0        	  6428:          ORI.W   #$00C0,D2      SIZE = MEMORY
                            	  6429: 
01:00203130 0242FFC0        	  6430:          ANDI.W  #$FFC0,D2      REMOVE "SHIFT MEMORY" BITS
                            	  6431: 
01:00203134 0C690040000C    	  6432:          CMPI.W  #$0040,TLENGTH(A1)
01:0020313A 6658            	  6433:          BNE.S   ER2            NOT .WORD
                            	  6434: 
01:0020313C 6100F538        	  6435:          BSR     EAM
01:00203140 8446            	  6436:          OR.W    D6,D2
01:00203142 6000FCB2        	  6437:          BRA     CMMD2
                            	  6438: 
01:00203146 61000332        	  6439: MSCC     BSR     SIZEBYTE       (INDEX 29) NBCD SCC TAS
                            	  6440: 
01:0020314A 6100F51E        	  6441:          BSR     EADA           DATA ALTERABLE ONLY
01:0020314E 8446            	  6442:          OR.W    D6,D2
01:00203150 6000FCA4        	  6443:          BRA     CMMD2
                            	  6444: 
                            	  6445: MBCHG    DS      0              (9)
01:00203154 0C150023        	  6446:          CMPI.B  #'#',(A5)
01:00203158 6648            	  6447:          BNE.S   MB200
                            	  6448: 
01:0020315A 343C0840        	  6449:          MOVE.W  #$0840,D2      NEW OP-CODE MASK
                            	  6450: 
01:0020315E 528D            	  6451: MB100    ADDQ.L  #1,A5
01:00203160 6100F458        	  6452:          BSR     EV             EVALUATE EXPRESSION
01:00203164 0C8000000021    	  6453:          CMPI.L  #33,D0
01:0020316A 6E28            	  6454:          BGT.S   ER2            (MODULO 32)
01:0020316C 33400002        	  6455:          MOVE.W  D0,TDATA+2(A1)
01:00203170 5483            	  6456:          ADDQ.L  #2,D3          STORE POINTER
                            	  6457: 
01:00203172 5429000A        	  6458:          ADDQ.B  #2,TNB(A1)
                            	  6459: 
01:00203176 6100FC5C        	  6460: MB105    BSR     COMMA
                            	  6461: 
01:0020317A 6100F4EE        	  6462:          BSR     EADA           DESTINATION
01:0020317E 8446            	  6463:          OR.W    D6,D2
                            	  6464: 
01:00203180 4A29000B        	  6465:          TST.B   TLSPEC(A1)     ..
01:00203184 6718            	  6466:          BEQ.S   MB185          DEFAULT
                            	  6467: 
01:00203186 02460038        	  6468:          ANDI.W  #$0038,D6
01:0020318A 660C            	  6469:          BNE.S   MB145          DESTINATION <EA> WAS NOT D@
                            	  6470: 
01:0020318C 0C690080000C    	  6471:          CMPI.W  #$80,TLENGTH(A1)  DESTINATION <EA> WAS D@
01:00203192 670A            	  6472:          BEQ.S   MB185          LENGTH IS .L
01:00203194 6000FC58        	  6473: ER2      BRA     ER
                            	  6474: 
01:00203198 4A69000C        	  6475: MB145    TST.W   TLENGTH(A1)
01:0020319C 66F6            	  6476:          BNE     ER2            NOT BYTE LENGTH
                            	  6477: 
01:0020319E 6000FC56        	  6478: MB185    BRA     CMMD2
                            	  6479: 
01:002031A2 6100F486        	  6480: MB200    BSR     GETREGD        DYNAMIC
01:002031A6 EE58            	  6481:          ROR.W   #7,D0
01:002031A8 8440            	  6482:          OR.W    D0,D2
                            	  6483: 
01:002031AA 60CA            	  6484:          BRA     MB105
                            	  6485: 
01:002031AC 0C150023        	  6486: MBSET    CMPI.B  #'#',(A5)      (INDEX 11) BCLR BSET
01:002031B0 66F0            	  6487:          BNE     MB200
                            	  6488: 
01:002031B2 343C08C0        	  6489:          MOVE.W  #$08C0,D2
01:002031B6 60A6            	  6490:          BRA     MB100
                            	  6491: 
01:002031B8 0C150023        	  6492: MBCLR    CMPI.B  #'#',(A5)      (INDEX 30)
01:002031BC 66E4            	  6493:          BNE     MB200
                            	  6494: 
01:002031BE 343C0880        	  6495:          MOVE.W  #$0880,D2
01:002031C2 609A            	  6496:          BRA     MB100
                            	  6497: 
01:002031C4 0C150023        	  6498: MBTST    CMPI.B  #'#',(A5)      (INDEX 31)
01:002031C8 66D8            	  6499:          BNE     MB200
                            	  6500: 
01:002031CA 343C0800        	  6501:          MOVE.W  #$0800,D2
01:002031CE 608E            	  6502:          BRA     MB100
                            	  6503: 
                            	  6504: MDBCC    DS      0              (INDEX 8)
01:002031D0 6100F458        	  6505:          BSR     GETREGD
01:002031D4 8440            	  6506:          OR.W    D0,D2
                            	  6507: 
01:002031D6 6100FBFC        	  6508:          BSR     COMMA
01:002031DA 613C            	  6509:          BSR.S   EVSR
01:002031DC 601A            	  6510:          BRA.S   MBRA23
                            	  6511: 
                            	  6512: *  SIZE   .S  =  .W   (DEFAULT)
                            	  6513: *         .L  =  .L
                            	  6514: MBRA     DS      0              (INDEX 10)
01:002031DE 6138            	  6515:          BSR.S   EVSR
                            	  6516: 
01:002031E0 0C690080000C    	  6517:          CMPI.W  #$0080,TLENGTH(A1)
01:002031E6 6710            	  6518:          BEQ.S   MBRA23         FORCED LONG
                            	  6519: 
01:002031E8 6100F72E        	  6520:          BSR     EA8BITS        -128 TO +127
01:002031EC 660A            	  6521:          BNE.S   MBRA23         NOT 8 BIT VALUE
                            	  6522: 
01:002031EE 8405            	  6523:          OR.B    D5,D2
01:002031F0 6000FC04        	  6524:          BRA     CMMD2          .SHORT
                            	  6525: 
01:002031F4 6000FBF8        	  6526: EVER     BRA     ER             ERROR HANDLER
                            	  6527: 
01:002031F8 4A29000B        	  6528: MBRA23   TST.B   TLSPEC(A1)
01:002031FC 6708            	  6529:          BEQ.S   MBRA27
01:002031FE 0C690040000C    	  6530:          CMPI.W  #$0040,TLENGTH(A1)
01:00203204 67EE            	  6531:          BEQ     EVER           .S SPECIFIED
                            	  6532: MBRA27
                            	  6533: 
01:00203206 2A04            	  6534:          MOVE.L  D4,D5          RESTORE D5
01:00203208 6100F6FA        	  6535:          BSR     EA16BITS       -32K TO +32K
01:0020320C 33450002        	  6536:          MOVE.W  D5,TDATA+2(A1)
01:00203210 5429000A        	  6537:          ADDQ.B  #2,TNB(A1)
01:00203214 6000FBE0        	  6538:          BRA     CMMD2
                            	  6539: 
01:00203218 6100F3A0        	  6540: EVSR     BSR     EV
01:0020321C 0C150020        	  6541:          CMPI.B  #BLANK,(A5)
01:00203220 66D2            	  6542:          BNE     EVER           DID NOT TERMINATE WITH SPACE
                            	  6543: 
01:00203222 2A00            	  6544:          MOVE.L  D0,D5
01:00203224 E280            	  6545:          ASR.L   #1,D0
01:00203226 65CC            	  6546:          BCS     EVER           ODD VALUE
01:00203228 2829000E        	  6547:          MOVE.L  PCOUNTER(A1),D4
01:0020322C 5484            	  6548:          ADDQ.L  #2,D4          D4 = PC + 2
01:0020322E 9A84            	  6549:          SUB.L   D4,D5
01:00203230 67C2            	  6550:          BEQ     EVER           ZERO; SPECIAL CASE ERROR
01:00203232 2805            	  6551:          MOVE.L  D5,D4
01:00203234 4E75            	  6552:          RTS
                            	  6553: 
                            	  6554: MCHK     DS      0              (INDEX 12) CHK DIV MUL
01:00203236 61000236        	  6555:          BSR     SIZEWORD
                            	  6556: 
01:0020323A 6100F446        	  6557:          BSR     EADADDR        DATA ADDRESSING ONLY
01:0020323E 8446            	  6558:          OR.W    D6,D2
                            	  6559: 
01:00203240 6100FB92        	  6560:          BSR     COMMA
                            	  6561: 
01:00203244 6100F3E4        	  6562:          BSR     GETREGD
01:00203248 EE58            	  6563:          ROR.W   #7,D0
01:0020324A 8440            	  6564:          OR.W    D0,D2
                            	  6565: 
01:0020324C 6000FBA8        	  6566:          BRA     CMMD2
                            	  6567: 
                            	  6568: MCLR     DS      0              (INDEX 13)
01:00203250 6100F3D2        	  6569:          BSR     FSIZE
                            	  6570: 
01:00203254 6100F414        	  6571:          BSR     EADA           DATA ALTERABLE ONLY
01:00203258 8446            	  6572:          OR.W    D6,D2
01:0020325A 6000FB9A        	  6573:          BRA     CMMD2
                            	  6574: 
                            	  6575: * SIZE = BYTE, WORD, LONG
                            	  6576: MCMPM    DS      0              (INDEX 14)
01:0020325E 6100F3C4        	  6577:          BSR     FSIZE
                            	  6578: 
01:00203262 3E3C0008        	  6579:          MOVE.W  #$0008,D7
01:00203266 6100F42A        	  6580:          BSR     EA             -(A@)   ONLY
01:0020326A 02460007        	  6581:          ANDI.W  #7,D6
01:0020326E 8446            	  6582:          OR.W    D6,D2
                            	  6583: 
01:00203270 6100FB62        	  6584:          BSR     COMMA
                            	  6585: 
01:00203274 3E3C0008        	  6586:          MOVE.W  #$0008,D7
01:00203278 6100F418        	  6587:          BSR     EA
01:0020327C 02460007        	  6588:          ANDI.W  #7,D6
01:00203280 EE5E            	  6589:          ROR.W   #7,D6
01:00203282 8446            	  6590:          OR.W    D6,D2
01:00203284 6000FB70        	  6591:          BRA     CMMD2
                            	  6592: 
                            	  6593: MEXG     DS      0              (INDEX 16)
01:00203288 610001D4        	  6594:          BSR     SIZELONG
                            	  6595: 
01:0020328C 6100F3C4        	  6596:          BSR     GETREGAD
01:00203290 2800            	  6597:          MOVE.L  D0,D4          D4 = REG NUMBER
01:00203292 2A01            	  6598:          MOVE.L  D1,D5          D5 = REG TYPE
                            	  6599: 
01:00203294 6100FB3E        	  6600:          BSR     COMMA          TEST FOR COMMA
                            	  6601: 
01:00203298 6100F3B8        	  6602:          BSR     GETREGAD
                            	  6603: 
01:0020329C BA81            	  6604:          CMP.L   D1,D5
01:0020329E 6714            	  6605:          BEQ.S   MEXG35         BOTH REGS THE SAME
                            	  6606: 
                            	  6607: *  DX,AY  OR  AY,DX
01:002032A0 00420088        	  6608:          ORI.W   #$88,D2        MODE
01:002032A4 4A01            	  6609:          TST.B   D1
01:002032A6 6602            	  6610:          BNE.S   MEXG25
                            	  6611: 
01:002032A8 C144            	  6612:          EXG     D0,D4          SWAP SOURCE & DESTINATION
                            	  6613: 
01:002032AA 8440            	  6614: MEXG25   OR.W    D0,D2          .......MMMMMYYY
01:002032AC EE5C            	  6615:          ROR.W   #7,D4
01:002032AE 8444            	  6616:          OR.W    D4,D2          ....XXXMMMMMYYY
01:002032B0 6000FB44        	  6617:          BRA     CMMD2
                            	  6618: 
01:002032B4 00420040        	  6619: MEXG35   ORI.W   #$0040,D2      OP-MODE
01:002032B8 4A01            	  6620:          TST.B   D1
01:002032BA 67EE            	  6621:          BEQ     MEXG25         DX,DY
                            	  6622: 
01:002032BC 00420048        	  6623:          ORI.W   #$0048,D2      AX,AY
01:002032C0 60E8            	  6624:          BRA     MEXG25
                            	  6625: 
                            	  6626: 
                            	  6627: MEXT     DS      0              (INDEX 17)
01:002032C2 4A69000C        	  6628:          TST.W   TLENGTH(A1)
01:002032C6 6700FB26        	  6629:          BEQ     ER             BYTE SIZE NOT ALLOWED
                            	  6630: 
01:002032CA 6100F358        	  6631:          BSR     FSIZE          .W = ........10......
01:002032CE 06420040        	  6632:          ADDI.W  #$0040,D2      .L = ........11......
                            	  6633: 
01:002032D2 6100F356        	  6634:          BSR     GETREGD
01:002032D6 8440            	  6635:          OR.W    D0,D2
01:002032D8 6000FB1C        	  6636:          BRA     CMMD2
                            	  6637: 
                            	  6638: MMOVEM   DS      0              (INDEX 27)
01:002032DC 3029000C        	  6639:          MOVE.W  TLENGTH(A1),D0 SIZE BITS  76 TO 6
01:002032E0 6700FB0C        	  6640:          BEQ     ER             BYTE       00  ERROR
01:002032E4 E248            	  6641:          LSR.W   #1,D0          WORD       01    0
01:002032E6 02400040        	  6642:          ANDI.W  #$0040,D0      LONG       10    1
01:002032EA 8440            	  6643:          OR.W    D0,D2
                            	  6644: 
01:002032EC 5429000A        	  6645:          ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
01:002032F0 5483            	  6646:          ADDQ.L  #2,D3          FORCE STORE PTR PAST MASK
                            	  6647: 
01:002032F2 0C150041        	  6648:          CMPI.B  #'A',(A5)
01:002032F6 671E            	  6649:          BEQ.S   MMM44
01:002032F8 0C150044        	  6650:          CMPI.B  #'D',(A5)
01:002032FC 6718            	  6651:          BEQ.S   MMM44
                            	  6652: 
                            	  6653: *    <EA>,<REGISTER LIST>       MEMORY TO REGISTER
01:002032FE 00420400        	  6654:          ORI.W   #$0400,D2      DIRECTION BIT
                            	  6655: 
01:00203302 3E3C07EC        	  6656:          MOVE.W  #$7EC,D7       MODES ALLOWED
01:00203306 6100F38A        	  6657:          BSR     EA
01:0020330A 8446            	  6658:          OR.W    D6,D2
                            	  6659: 
01:0020330C 6100FAC6        	  6660:          BSR     COMMA
                            	  6661: 
01:00203310 612A            	  6662:          BSR.S   MMM48
01:00203312 6000FAE2        	  6663:          BRA     CMMD2
                            	  6664: 
                            	  6665: 
                            	  6666: *   <REGISTER LIST>,<EA>        REGISTER TO MEMORY
                            	  6667: MMM44    DS      0
                            	  6668: 
                            	  6669: * EVALUATE DESTINATION FIRST
01:00203316 6100FAC4        	  6670: MMM46    BSR     GETCHAR
01:0020331A 0C00002C        	  6671:          CMPI.B  #',',D0        FIND COMMA
01:0020331E 66F6            	  6672:          BNE     MMM46
                            	  6673: 
01:00203320 3E3C01F4        	  6674:          MOVE.W  #$1F4,D7       MODES ALLOWED
01:00203324 6100F36C        	  6675:          BSR     EA
01:00203328 8446            	  6676:          OR.W    D6,D2
01:0020332A 234D0016        	  6677:          MOVE.L  A5,PENDOP(A1)  END OF OPERAND
01:0020332E 2A690012        	  6678:          MOVE.L  PTROP(A1),A5
01:00203332 6108            	  6679:          BSR.S   MMM48          EVALUATE REGISTERS
01:00203334 2A690016        	  6680:          MOVE.L  PENDOP(A1),A5  POINTER TO END OF OPERAND
01:00203338 6000FABC        	  6681:          BRA     CMMD2
                            	  6682: 
                            	  6683: *        D6 = CORRESPONDENCE MASK
                            	  6684: *        D4 = CONTROL  $FF '-BLANK/'
01:0020333C 7C00            	  6685: MMM48    CLR.L   D6             MASK
01:0020333E 78FF            	  6686:          MOVEQ   #-1,D4         CONTROL = $FF
                            	  6687: 
01:00203340 6100FA9A        	  6688: RL111    BSR     GETCHAR
01:00203344 0C00002C        	  6689:          CMPI.B  #',',D0
01:00203348 6706            	  6690:          BEQ.S   RL114          DONE; FOUND COMMA
01:0020334A 0C000020        	  6691:          CMPI.B  #BLANK,D0
01:0020334E 6602            	  6692:          BNE.S   RL115          NOT SPACE
01:00203350 4E75            	  6693: RL114    RTS     DONE
                            	  6694: 
01:00203352 0C00002F        	  6695: RL115    CMPI.B  #'/',D0
01:00203356 6614            	  6696:          BNE.S   RL444
                            	  6697: 
01:00203358 4A04            	  6698:          TST.B   D4             CONTROL
01:0020335A 6B00FA92        	  6699:          BMI     ER
01:0020335E 2800            	  6700:          MOVE.L  D0,D4          CONTROL = '/'
01:00203360 6100F2F0        	  6701: RL333    BSR     GETREGAD
01:00203364 8200            	  6702:          OR.B    D0,D1          D1 = BIT POSITION
01:00203366 1A01            	  6703:          MOVE.B  D1,D5          D5 = LAST REGISTER ENTERED
01:00203368 6146            	  6704:          BSR.S   SETBIT
01:0020336A 60D4            	  6705:          BRA     RL111
                            	  6706: 
01:0020336C 0C00002D        	  6707: RL444    CMPI.B  #'-',D0
01:00203370 6630            	  6708:          BNE.S   RL666
                            	  6709: 
01:00203372 0C04002F        	  6710:          CMPI.B  #'/',D4        CONTROL
01:00203376 6600FA76        	  6711:          BNE     ER
01:0020337A 2800            	  6712:          MOVE.L  D0,D4          CONTROL = '-'
01:0020337C 6100F2D4        	  6713:          BSR     GETREGAD
01:00203380 8200            	  6714:          OR.B    D0,D1
01:00203382 2E01            	  6715:          MOVE.L  D1,D7          D7 = NOW REGISTER
01:00203384 1005            	  6716:          MOVE.B  D5,D0          D5 = LAST REG
01:00203386 B300            	  6717:          EOR.B   D1,D0
01:00203388 02000038        	  6718:          ANDI.B  #$38,D0
01:0020338C 6600FA60        	  6719:          BNE     ER             NOT MATCED SET
01:00203390 BA01            	  6720:          CMP.B   D1,D5
01:00203392 6A00FA5A        	  6721:          BPL     ER
                            	  6722: 
01:00203396 5285            	  6723: RL555    ADDQ.L  #1,D5
01:00203398 2205            	  6724:          MOVE.L  D5,D1
01:0020339A 6114            	  6725:          BSR.S   SETBIT
01:0020339C BA07            	  6726:          CMP.B   D7,D5
01:0020339E 6BF6            	  6727:          BMI     RL555
01:002033A0 609E            	  6728:          BRA     RL111
                            	  6729: 
01:002033A2 4A04            	  6730: RL666    TST.B   D4
01:002033A4 6A00FA48        	  6731:          BPL     ER
01:002033A8 183C002F        	  6732:          MOVE.B  #'/',D4        CONTROL = '/'
01:002033AC 538D            	  6733:          SUBQ.L  #1,A5
01:002033AE 60B0            	  6734:          BRA     RL333
                            	  6735: 
01:002033B0 41FA001A        	  6736: SETBIT   LEA     MTBL(PC),A0    SET BIT IN CORRESPONDENCE MASK
01:002033B4 2002            	  6737:          MOVE.L  D2,D0
01:002033B6 02400038        	  6738:          ANDI.W  #$38,D0
01:002033BA 0C400020        	  6739:          CMPI.W  #$20,D0
01:002033BE 6604            	  6740:          BNE.S   RL30           NOT PREDECREMENT
01:002033C0 12301000        	  6741:          MOVE.B  (A0,D1),D1     D1 = BIT  (FOR SURE)
01:002033C4 03C6            	  6742: RL30     BSET    D1,D6
                            	  6743: 
01:002033C6 33460002        	  6744:          MOVE.W  D6,TDATA+2(A1) SAVE CORRESPONDENCE MASK
01:002033CA 4E75            	  6745:          RTS
                            	  6746: 
01:002033CC 0F              	  6747: MTBL     DC.B    15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
01:002033CD 0E
01:002033CE 0D
01:002033CF 0C
01:002033D0 0B
01:002033D1 0A
01:002033D2 09
01:002033D3 08
01:002033D4 07
01:002033D5 06
01:002033D6 05
01:002033D7 04
01:002033D8 03
01:002033D9 02
01:002033DA 01
01:002033DB 00
                            	  6748: 
                            	  6749: 
                            	  6750: 
                            	  6751: 
                            	  6752: *   D@,<DATA>(A@)
                            	  6753: *   <DATA>(A@),D@
                            	  6754: *         (A@),D@            FORCED TO 0(A@),D0
                            	  6755: *         D@,(A@)            FORCED TO D0,0(A@)
                            	  6756: *
                            	  6757: *  SIZE = WORD, LONG
                            	  6758: MMOVEP   DS      0              (INDEX 33)
01:002033DC 3029000C        	  6759:          MOVE.W  TLENGTH(A1),D0
01:002033E0 6700FA0C        	  6760:          BEQ     ER             .BYTE NOT ALLOWED
01:002033E4 E248            	  6761:          LSR.W   #1,D0
01:002033E6 02400040        	  6762:          ANDI.W  #$0040,D0
01:002033EA 8440            	  6763:          OR.W    D0,D2          SIZE
                            	  6764: 
01:002033EC 3E3C0025        	  6765:          MOVE.W  #$25,D7
01:002033F0 6100F2A0        	  6766:          BSR     EA             D6 = MODE
                            	  6767: 
01:002033F4 6100F9DE        	  6768:          BSR     COMMA
                            	  6769: 
01:002033F8 2006            	  6770:          MOVE.L  D6,D0
01:002033FA 02400038        	  6771:          ANDI.W  #$38,D0
01:002033FE 4A00            	  6772:          CMPI.B  #$0,D0
01:00203400 670A            	  6773:          BEQ.S   MMP344         D@,<DATA>(A@)
                            	  6774: 
                            	  6775: *    <DATA>(A@),D@
01:00203402 6100F226        	  6776:          BSR     GETREGD
01:00203406 EE58            	  6777:          ROR.W   #7,D0
01:00203408 8440            	  6778:          OR.W    D0,D2          D@
01:0020340A 6010            	  6779:          BRA.S   MMP348
                            	  6780: 
01:0020340C 00420080        	  6781: MMP344   ORI.W   #$0080,D2      REGISTER TO MEMORY
                            	  6782: 
01:00203410 EE5E            	  6783:          ROR.W   #7,D6
01:00203412 8446            	  6784:          OR.W    D6,D2          D@
                            	  6785: 
01:00203414 3E3C0024        	  6786:          MOVE.W  #$24,D7
01:00203418 6100F278        	  6787:          BSR     EA
01:0020341C 2006            	  6788: MMP348   MOVE.L  D6,D0
01:0020341E 02460007        	  6789:          ANDI.W  #7,D6
01:00203422 8446            	  6790:          OR.W    D6,D2          A@
                            	  6791: 
01:00203424 02400038        	  6792:          ANDI.W  #$38,D0
01:00203428 0C000010        	  6793:          CMPI.B  #$10,D0
01:0020342C 660A            	  6794:          BNE.S   MMP368         <DATA>(A@)
                            	  6795: 
01:0020342E 42690002        	  6796:          CLR.W   TDATA+2(A1)    <DATA> FORCED TO ZERO;  "(A@)"
01:00203432 5429000A        	  6797:          ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
01:00203436 5483            	  6798:          ADDQ.L  #2,D3          STORE POINTER
01:00203438 6000F9BC        	  6799: MMP368   BRA     CMMD2
                            	  6800: 
                            	  6801: MMOVEQ   DS      0              (INDEX 34)
01:0020343C 610001FA        	  6802:          BSR     GETIMM
01:00203440 2A00            	  6803:          MOVE.L  D0,D5
                            	  6804: 
01:00203442 6100F4D4        	  6805:          BSR     EA8BITS        -128 TO +127
01:00203446 6600F9A6        	  6806:          BNE     ER
01:0020344A 8405            	  6807:          OR.B    D5,D2          D5 = VALUE
                            	  6808: 
01:0020344C 6100F986        	  6809:          BSR     COMMA
                            	  6810: 
01:00203450 6100F1D8        	  6811:          BSR     GETREGD        D@
01:00203454 EE58            	  6812:          ROR.W   #7,D0
                            	  6813: 
01:00203456 8440            	  6814: MMQ20    OR.W    D0,D2
01:00203458 6104            	  6815:          BSR.S   SIZELONG
01:0020345A 6000F99A        	  6816:          BRA     CMMD2
                            	  6817: 
01:0020345E 4A29000B        	  6818: SIZELONG TST.B   TLSPEC(A1)     MUST BE .LONG
01:00203462 6708            	  6819:          BEQ.S   SI201          DEFAULT SIZE OK
01:00203464 0C690080000C    	  6820:          CMPI.W  #$0080,TLENGTH(A1)
01:0020346A 660A            	  6821:          BNE.S   ER10           NOT .LONG
01:0020346C 4E75            	  6822: SI201    RTS
                            	  6823: 
01:0020346E 0C690040000C    	  6824: SIZEWORD CMPI.W  #$0040,TLENGTH(A1)  MUST BE .WORD
01:00203474 67F6            	  6825:          BEQ     SI201          [RTS]
01:00203476 6000F976        	  6826: ER10     BRA     ER
                            	  6827: 
01:0020347A 4A29000B        	  6828: SIZEBYTE TST.B   TLSPEC(A1)
01:0020347E 6706            	  6829:          BEQ.S   SI222          DEFAULT SIZE OK
01:00203480 4A69000C        	  6830:          TST.W   TLENGTH(A1)
01:00203484 66F0            	  6831:          BNE     ER10
01:00203486 4E75            	  6832: SI222    RTS
                            	  6833: 
                            	  6834: MMOVE    DS      0              (INDEX 21)
01:00203488 0C150053        	  6835:          CMPI.B  #'S',(A5)
01:0020348C 661C            	  6836:          BNE.S   MMM40
01:0020348E 343C40C0        	  6837:          MOVE.W  #$40C0,D2      SR,<EA>
01:00203492 528D            	  6838:          ADDQ.L  #1,A5
01:00203494 0C1D0052        	  6839:          CMPI.B  #'R',(A5)+
01:00203498 66DC            	  6840:          BNE     ER10
                            	  6841: 
01:0020349A 6100F938        	  6842:          BSR     COMMA
                            	  6843: 
01:0020349E 6100F1CA        	  6844:          BSR     EADA           DATA ALTERABLE ONLY (DESTINATION)
                            	  6845: 
01:002034A2 8446            	  6846: MM315    OR.W    D6,D2
01:002034A4 61C8            	  6847:          BSR     SIZEWORD
01:002034A6 6000F94E        	  6848:          BRA     CMMD2
                            	  6849: 
01:002034AA 0C150055        	  6850: MMM40    CMPI.B  #'U',(A5)
01:002034AE 661C            	  6851:          BNE.S   MMM50
01:002034B0 528D            	  6852:          ADDQ.L  #1,A5
01:002034B2 0C1D0053        	  6853:          CMPI.B  #'S',(A5)+
01:002034B6 66BE            	  6854:          BNE     ER10
01:002034B8 0C1D0050        	  6855:          CMPI.B  #'P',(A5)+
01:002034BC 66B8            	  6856:          BNE     ER10
                            	  6857: 
01:002034BE 6100F914        	  6858:          BSR     COMMA
                            	  6859: 
01:002034C2 343C4E68        	  6860:          MOVE.W  #$4E68,D2      USP,A@
01:002034C6 6100F17C        	  6861:          BSR     GETREGA
01:002034CA 608A            	  6862:          BRA     MMQ20
                            	  6863: 
                            	  6864: * GET EXCEPTIONS FROM DESTINATION
                            	  6865: MMM50    DS      0
                            	  6866: 
01:002034CC 6100FBF6        	  6867:          BSR     A5TODEST       MOVE A5 TO DESTINATION
                            	  6868: 
01:002034D0 101D            	  6869:          MOVE.B  (A5)+,D0
01:002034D2 0C000043        	  6870:          CMPI.B  #'C',D0
01:002034D6 6622            	  6871:          BNE.S   MMM60
01:002034D8 0C1D0043        	  6872:          CMPI.B  #'C',(A5)+
01:002034DC 6698            	  6873:          BNE     ER10
01:002034DE 0C1D0052        	  6874:          CMPI.B  #'R',(A5)+
01:002034E2 6692            	  6875:          BNE     ER10
01:002034E4 343C44C0        	  6876:          MOVE.W  #$44C0,D2      <EA>,CCR
                            	  6877: 
01:002034E8 234D0016        	  6878: MM508    MOVE.L  A5,PENDOP(A1)  SAVE POINTER
01:002034EC 2A690012        	  6879:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
                            	  6880: 
01:002034F0 6100F190        	  6881:          BSR     EADADDR        DATA ADDRESSING ONLY (SOURCE)
01:002034F4 2A690016        	  6882:          MOVE.L  PENDOP(A1),A5
01:002034F8 60A8            	  6883:          BRA     MM315
                            	  6884: 
01:002034FA 0C000053        	  6885: MMM60    CMPI.B  #'S',D0
01:002034FE 660E            	  6886:          BNE.S   MM70
01:00203500 343C46C0        	  6887:          MOVE.W  #$46C0,D2      <EA>,SR
01:00203504 0C1D0052        	  6888:          CMPI.B  #'R',(A5)+
01:00203508 6600F8E4        	  6889:          BNE     ER
01:0020350C 60DA            	  6890:          BRA     MM508
                            	  6891: 
01:0020350E 0C000055        	  6892: MM70     CMPI.B  #'U',D0
01:00203512 6628            	  6893:          BNE.S   MM80
01:00203514 343C4E60        	  6894:          MOVE.W  #$4E60,D2      A@,USP
01:00203518 0C1D0053        	  6895:          CMPI.B  #'S',(A5)+
01:0020351C 6600F8D0        	  6896:          BNE     ER
01:00203520 0C1D0050        	  6897:          CMPI.B  #'P',(A5)+
01:00203524 6600F8C8        	  6898:          BNE     ER
                            	  6899: 
01:00203528 234D0016        	  6900:          MOVE.L  A5,PENDOP(A1)
01:0020352C 2A690012        	  6901:          MOVE.L  PTROP(A1),A5
01:00203530 6100F112        	  6902:          BSR     GETREGA
01:00203534 2A690016        	  6903:          MOVE.L  PENDOP(A1),A5  RESTORE A5
01:00203538 6000FF1C        	  6904:          BRA     MMQ20
                            	  6905: 
01:0020353C 2A690012        	  6906: MM80     MOVE.L  PTROP(A1),A5   A5 = POINTER TO SOURCE FIELD
01:00203540 6100F0E2        	  6907:          BSR     FSIZE          GET SIZE (BITS  7 - 6)
01:00203544 ED4A            	  6908:          LSL.W   #6,D2          ADJUST TO(BITS 13-12)
01:00203546 0802000D        	  6909:          BTST    #13,D2
01:0020354A 6608            	  6910:          BNE.S   MM804          .L 10 TO 10
01:0020354C 06421000        	  6911:          ADDI.W  #$1000,D2      .W 01 TO 11
01:00203550 00421000        	  6912:          ORI.W   #$1000,D2      .B 00 TO 01
01:00203554 6100F138        	  6913: MM804    BSR     EAALL          SOURCE; ALL MODES ALLOWED
01:00203558 8446            	  6914:          OR.W    D6,D2
                            	  6915: 
                            	  6916: * IF BYTE SIZE; "ADDRESS REGISTER DIRECT" NOT ALLOWED
                            	  6917: 
01:0020355A 2002            	  6918:          MOVE.L  D2,D0
01:0020355C 02403000        	  6919:          ANDI.W  #$3000,D0
01:00203560 0C401000        	  6920:          CMPI.W  #$1000,D0
01:00203564 660C            	  6921:          BNE.S   MM806          NOT .B SIZE
01:00203566 02060038        	  6922:          ANDI.B  #$38,D6
01:0020356A 0C060008        	  6923:          CMPI.B  #$08,D6
01:0020356E 6700F87E        	  6924:          BEQ     ER
                            	  6925: MM806    DS      0
                            	  6926: 
01:00203572 6100F860        	  6927:          BSR     COMMA
                            	  6928: 
01:00203576 3E3C01FF        	  6929:          MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
01:0020357A 6100F116        	  6930:          BSR     EA
                            	  6931: 
01:0020357E 2006            	  6932:          MOVE.L  D6,D0          DESTINATION
01:00203580 02400038        	  6933:          ANDI.W  #$0038,D0
01:00203584 0C400008        	  6934:          CMPI.W  #$0008,D0
01:00203588 6712            	  6935:          BEQ.S   MMOVEA1        A@ MAKE MOVEA
                            	  6936: 
                            	  6937: * POSITION REGISTER AND MODE OF DESTINATION
                            	  6938: 
01:0020358A E69E            	  6939: MM825    ROR.L   #3,D6          RRR............. .............MMM
01:0020358C E65E            	  6940:          ROR.W   #3,D6                           MMM.............
01:0020358E 4846            	  6941:          SWAP    D6             MMM............. RRR.............
01:00203590 E75E            	  6942:          ROL.W   #3,D6                           .............RRR
01:00203592 E39E            	  6943:          ROL.L   #1,D6          MM.............. ............RRRM
01:00203594 E19E            	  6944:          ROL.L   #8,D6          ................ ....RRRMMM......
01:00203596 8446            	  6945:          OR.W    D6,D2
01:00203598 6000F85C        	  6946:          BRA     CMMD2
                            	  6947: 
01:0020359C 7600            	  6948: MMOVEA1  CLR.L   D3
01:0020359E 137C0002000A    	  6949:          MOVE.B  #2,TNB(A1)
                            	  6950: 
                            	  6951: MMOVEA   DS      0              (INDEX 32)
01:002035A4 2A690012        	  6952:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
                            	  6953: 
01:002035A8 3429000C        	  6954:          MOVE.W  TLENGTH(A1),D2 D0 = SIZE
01:002035AC 6700F840        	  6955:          BEQ     ER             .BYTE NOT ALLOWED
                            	  6956: 
01:002035B0 ED4A            	  6957:          LSL.W   #6,D2          .SIZE
01:002035B2 0802000C        	  6958:          BTST    #12,D2
01:002035B6 6704            	  6959:          BEQ.S   MMA225         .L = ..10
01:002035B8 00423000        	  6960:          ORI.W   #$3000,D2      .W = ..11
                            	  6961: MMA225
                            	  6962: 
01:002035BC 6100F0D0        	  6963:          BSR     EAALL          ALL MODES ALLOWED
01:002035C0 8446            	  6964:          OR.W    D6,D2
                            	  6965: 
01:002035C2 6100F810        	  6966:          BSR     COMMA
                            	  6967: 
01:002035C6 3E3C0002        	  6968:          MOVE.W  #$0002,D7      A@ ONLY
01:002035CA 6100F0C6        	  6969:          BSR     EA
01:002035CE 60BA            	  6970:          BRA     MM825
                            	  6971: 
                            	  6972: 
                            	  6973: MJMP     DS      0              (INDEX 18)
01:002035D0 4A29000B        	  6974:          TST.B   TLSPEC(A1)
01:002035D4 671C            	  6975:          BEQ.S   MJMP32         DEFAULT (ALLOW EITHER .S OR .L)
01:002035D6 3029000C        	  6976:          MOVE.W  TLENGTH(A1),D0
01:002035DA 6700F812        	  6977:          BEQ     ER             .B NOT ALLOWED
01:002035DE 3E3C06E4        	  6978:          MOVE.W  #$6E4,D7       D7 = MODES ALLOWED
01:002035E2 0C400040        	  6979:          CMPI.W  #$40,D0
01:002035E6 6704            	  6980:          BEQ.S   MJMP22         .S SPECIFIED (.W ACCEPTED)
01:002035E8 3E3C8764        	  6981:          MOVE.W  #$8764,D7      MODE FOR .L
01:002035EC 6100F0A4        	  6982: MJMP22   BSR     EA
01:002035F0 6004            	  6983:          BRA.S   MJMP42
                            	  6984: 
01:002035F2 6100F07C        	  6985: MJMP32   BSR     EAC            CONTROL ADDRESSING ONLY
01:002035F6 8446            	  6986: MJMP42   OR.W    D6,D2
01:002035F8 6000F7FC        	  6987:          BRA     CMMD2
                            	  6988: 
                            	  6989: * SIZE = LONG
                            	  6990: MLEA     DS      0              (INDEX 19)
01:002035FC 6100FE60        	  6991:          BSR     SIZELONG
                            	  6992: 
01:00203600 6100F06E        	  6993:          BSR     EAC            CONTROL ADDRESSING ONLY
01:00203604 8446            	  6994:          OR.W    D6,D2
                            	  6995: 
01:00203606 6100F7CC        	  6996:          BSR     COMMA
                            	  6997: 
01:0020360A 6100F038        	  6998:          BSR     GETREGA
01:0020360E EE58            	  6999:          ROR.W   #7,D0
01:00203610 8440            	  7000:          OR.W    D0,D2
01:00203612 6000F7E2        	  7001:          BRA     CMMD2
                            	  7002: 
                            	  7003: 
                            	  7004: * SIZE = LONG
                            	  7005: MPEA     DS      0              (INDEX 36)
01:00203616 6100FE46        	  7006:          BSR     SIZELONG
                            	  7007: 
01:0020361A 6100F054        	  7008:          BSR     EAC            CONTROL ADDRESSING ONLY
01:0020361E 8446            	  7009:          OR.W    D6,D2
01:00203620 6000F7D4        	  7010:          BRA     CMMD2
                            	  7011: 
                            	  7012: MSWAP    DS      0              (INDEX 24)
                            	  7013: * SIZE WORD
01:00203624 0C690040000C    	  7014:          CMPI.W  #$0040,TLENGTH(A1)
01:0020362A 6600F7C2        	  7015:          BNE     ER             NOT .W
                            	  7016: 
01:0020362E 6100EFFA        	  7017:          BSR     GETREGD        D@ ONLY
01:00203632 8440            	  7018:          OR.W    D0,D2
01:00203634 6000F7C0        	  7019:          BRA     CMMD2
                            	  7020: 
01:00203638 0C1D0023        	  7021: GETIMM   CMPI.B  #'#',(A5)+
01:0020363C 6600F7B0        	  7022:          BNE     ER
                            	  7023: 
01:00203640 6100EF78        	  7024:          BSR     EV             EVALUATE EXPRESSION
01:00203644 4E75            	  7025:          RTS                    D0 = VALUE
                            	  7026: 
01:00203646 6100EFFC        	  7027: MLINK    BSR     GETREGA        (INDEX 20)
01:0020364A 8440            	  7028:          OR.W    D0,D2
                            	  7029: 
01:0020364C 6100F786        	  7030:          BSR     COMMA
                            	  7031: 
01:00203650 61E6            	  7032:          BSR     GETIMM
01:00203652 2A00            	  7033:          MOVE.L  D0,D5
01:00203654 6100F2AE        	  7034:          BSR     EA16BITS       -32K TO +32K
01:00203658 33400002        	  7035:          MOVE.W  D0,TDATA+2(A1)
                            	  7036: 
01:0020365C 5429000A        	  7037:          ADDQ.B  #2,TNB(A1)
01:00203660 6000F794        	  7038:          BRA     CMMD2
                            	  7039: 
                            	  7040: MSTOP    DS      0              (INDEX 23)
                            	  7041: * UNSIZED
01:00203664 61D2            	  7042:          BSR     GETIMM
01:00203666 0C8000010000    	  7043:          CMPI.L  #$00010000,D0
01:0020366C 6400F780        	  7044:          BCC     ER
01:00203670 33400002        	  7045:          MOVE.W  D0,TDATA+2(A1)
01:00203674 5429000A        	  7046:          ADDQ.B  #2,TNB(A1)
01:00203678 6000F77C        	  7047:          BRA     CMMD2
                            	  7048: 
                            	  7049: MTRAP    DS      0              (INDEX 25)
01:0020367C 61BA            	  7050:          BSR     GETIMM
01:0020367E 0C8000000010    	  7051:          CMPI.L  #16,D0
01:00203684 6400F768        	  7052:          BCC     ER
01:00203688 8440            	  7053:          OR.W    D0,D2
01:0020368A 6000F76A        	  7054:          BRA     CMMD2
                            	  7055: 
                            	  7056: MUNLK    DS      0              (INDEX 26)
                            	  7057: * UNSIZED
01:0020368E 6100EFB4        	  7058:          BSR     GETREGA
01:00203692 8440            	  7059:          OR.W    D0,D2
01:00203694 6000F760        	  7060:          BRA     CMMD2
                            	  7061: 
                            	  7062: MDC      DS      0              (INDEX 37) .W ONLY ALLOWED
01:00203698 6100EF20        	  7063:          BSR     EV
01:0020369C 2A00            	  7064:          MOVE.L  D0,D5
01:0020369E 6100F25A        	  7065:          BSR     EA16BIT        ONLY .W ALLOWED     -32K TO +64K
01:002036A2 3405            	  7066:          MOVE.W  D5,D2
01:002036A4 6000F750        	  7067:          BRA     CMMD2
                            	  7068: 
                            	  7069: 
                            	  7070: 
                            	  7071: 
                            	  7072: *-------------------------------------------------------------------------
                            	  7073: * File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
                            	  7074: 
                            	  7075: *        CALLING SEQUENCE:
                            	  7076: *   D0,D1,D2 = CODE TO BE DISASSEMBLED
                            	  7077: *   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
                            	  7078: *   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
                            	  7079: *        JSR       DCODE68K
                            	  7080: 
                            	  7081: *        RETURN:
                            	  7082: *   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
                            	  7083: *   A5 = POINTER TO LINE AS DISASSEMBLED
                            	  7084: *   A6 = POINTER TO END OF LINE
                            	  7085: *
                            	  7086: * 01234567890123456789012345678901234567890123456789
                            	  7087: * AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
                            	  7088: 
                            	  7089: *FDATA   EQU     10             DATA FIELD
                            	  7090: *FOC     EQU     31             OP-CODE FIELD
                            	  7091: *FOP     EQU     39             OPERAND FIELD
                            	  7092: 
                            	  7093: * CAUSES ORGIN MODULO 4
                            	  7094: LONG     MACRO
                            	  7095:          DS      0
                            	  7096:          DS.B    (*-X)&2
                            	  7097:          ENDM
                            	  7098: 
                            	  7099: 
                            	  7100: X        DS      0              BASE ADDRESS THIS MODULE
                            	  7101:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7102: 
                            	  7103: *  MOVEM REGISTERS TO EA
                            	  7104: *
                            	  7105: *        01001D001S......
                            	  7106: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7107: *        .........0......       WORD
                            	  7108: *        .........1......       LONG
                            	  7109: *        .....0..........       REGISTER TO MEMORY
                            	  7110: *        .....1..........       MEMORY TO REGISTER
                            	  7111: *
                            	  7112: 
                            	  7113: IMOVEMFR DS      0
01:002036A8 6100071E        	  7114:          BSR     MOVEMS         SIZE
                            	  7115: 
01:002036AC 7C38            	  7116:          MOVEQ   #$0038,D6
01:002036AE CC54            	  7117:          AND.W   (A4),D6
01:002036B0 0C460020        	  7118:          CMPI.W  #$0020,D6
01:002036B4 6706            	  7119:          BEQ.S   IM7788         PREDECREMENT MODE
                            	  7120: 
01:002036B6 7C01            	  7121:          MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
01:002036B8 7200            	  7122:          MOVEQ   #0,D1          D1 = BIT POSITION
01:002036BA 6004            	  7123:          BRA.S   IM7799
                            	  7124: 
01:002036BC 7CFF            	  7125: IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
01:002036BE 720F            	  7126:          MOVEQ   #15,D1         D1 = BIT POSITION
01:002036C0 6100071A        	  7127: IM7799   BSR     MOVEMR         BUILD MASK WORD
                            	  7128: 
01:002036C4 1CFC002C        	  7129:          MOVE.B  #',',(A6)+     STORE COMMA
                            	  7130: 
01:002036C8 5483            	  7131:          ADDQ.L  #2,D3
01:002036CA 3814            	  7132:          MOVE.W  (A4),D4
01:002036CC 3E3C01F4        	  7133:          MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
01:002036D0 61000534        	  7134:          BSR     EEA
01:002036D4 601C            	  7135:          BRA.S   CS16           COMMON
                            	  7136: 
                            	  7137:          LONG
                            	     1M          DS      0
01:002036D6 00              	     2M          DS.B    (*-X)&2
01:002036D7 *
                            	  7138: * MOVEM  EA  TO REGISTERS
                            	  7139: *
01:002036D8 610006EE        	  7140: IMOVEMTR BSR     MOVEMS         SIZE
01:002036DC 5483            	  7141:          ADDQ.L  #2,D3
01:002036DE 3E3C07EC        	  7142:          MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
01:002036E2 61000522        	  7143:          BSR     EEA
                            	  7144: 
01:002036E6 1CFC002C        	  7145:          MOVE.B  #',',(A6)+     STORE COMMA
                            	  7146: 
01:002036EA 7C01            	  7147:          MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
01:002036EC 7200            	  7148:          MOVEQ   #0,D1          D1 = BIT POSITION
01:002036EE 610006EC        	  7149:          BSR     MOVEMR
                            	  7150: 
01:002036F2 606C            	  7151: CS16     BRA.S   CS15           COMMON
                            	  7152: 
                            	  7153: 
                            	  7154:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7155: ISTOP    DS      0
01:002036F4 302C0002        	  7156:          MOVE.W  2(A4),D0
01:002036F8 1CFC0023        	  7157:          MOVE.B  #'#',(A6)+     IMMEDIATE
01:002036FC 1CFC0024        	  7158:          MOVE.B  #'$',(A6)+     HEX
01:00203700 6100E6A0        	  7159:          BSR     PNT4HX         VALUE
01:00203704 600007EA        	  7160:          BRA     COMMON4
                            	  7161: 
                            	  7162:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7163: IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
01:00203708 61000472        	  7164:          BSR     FORMSIZE
01:0020370C 5483            	  7165:          ADDQ.L  #2,D3          SIZE = 4
01:0020370E 1CFC0023        	  7166:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7167: 
01:00203712 7000            	  7168:          CLR.L   D0
01:00203714 302C0002        	  7169:          MOVE.W  2(A4),D0       D0 = EXTENSION WORD
01:00203718 3214            	  7170:          MOVE.W  (A4),D1
01:0020371A EC49            	  7171:          LSR.W   #6,D1
01:0020371C 02410003        	  7172:          ANDI.W  #3,D1
01:00203720 6746            	  7173:          BEQ.S   IMMED65        .BYTE
                            	  7174: 
01:00203722 0C010001        	  7175:          CMPI.B  #1,D1
01:00203726 6750            	  7176:          BEQ.S   IMMED75        .WORD
                            	  7177: 
01:00203728 5483            	  7178:          ADDQ.L  #2,D3          .LONG    SIZE = 6
01:0020372A 202C0002        	  7179:          MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
                            	  7180: 
01:0020372E 6100DC24        	  7181: IMMED45  BSR     HEX2DEC        DECIMAL
                            	  7182: 
01:00203732 1CC5            	  7183:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7184: 
01:00203734 3014            	  7185:          MOVE    (A4),D0
01:00203736 0240003F        	  7186:          ANDI.W  #$003F,D0
01:0020373A 0C40003C        	  7187:          CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
01:0020373E 6622            	  7188:          BNE.S   IMMED55        NOT FOUND
                            	  7189: 
01:00203740 3014            	  7190:          MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
01:00203742 02404000        	  7191:          ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
01:00203746 660007D2        	  7192:          BNE     FERROR         0600   0400  0C00
                            	  7193: 
01:0020374A 3214            	  7194:          MOVE.W  (A4),D1
01:0020374C 024100C0        	  7195:          ANDI.W  #$00C0,D1
01:00203750 0C410080        	  7196:          CMPI.W  #$0080,D1
01:00203754 670007C4        	  7197:          BEQ     FERROR         .LONG NOT ALLOWED
                            	  7198: 
01:00203758 1CFC0053        	  7199:          MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
01:0020375C 1CFC0052        	  7200:          MOVE.B  #'R',(A6)+
01:00203760 603E            	  7201: CS15     BRA.S   CS14           COMMON
                            	  7202: 
01:00203762 610004A2        	  7203: IMMED55  BSR     EEA
01:00203766 6038            	  7204:          BRA.S   CS14           COMMON
                            	  7205: 
01:00203768 2200            	  7206: IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
01:0020376A E049            	  7207:          LSR.W   #8,D1          D1 = 00000000XXXXXXXX
01:0020376C 670A            	  7208:          BEQ.S   IMMED75
01:0020376E 2200            	  7209:          MOVE.L  D0,D1
01:00203770 EE41            	  7210:          ASR.W   #7,D1
01:00203772 5241            	  7211:          ADDQ.W  #1,D1          CHECK FOR NEGATIVE
01:00203774 660007A4        	  7212:          BNE     FERROR
                            	  7213: 
01:00203778 48C0            	  7214: IMMED75  EXT.L   D0
01:0020377A 60B2            	  7215:          BRA     IMMED45
                            	  7216: 
                            	  7217: *  BIT   5432109876543210
                            	  7218: *        ....RRRMMM......       DESTINATION REGISTER MODE
                            	  7219: *        ..........MMMRRR       SOURCE MODE REGISTER
                            	  7220: *        0001............       .BYTE
                            	  7221: *        0011............       .WORD
                            	  7222: *        0010............       .LONG
                            	  7223: *
                            	  7224: * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
                            	  7225:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7226: IMOVE    DS      0
01:0020377C 600003A2        	  7227:          BRA     IMOVEA1
                            	  7228: 
                            	  7229:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7230: ILINK    DS      0
01:00203780 615E            	  7231:          BSR.S   FORMREGA
                            	  7232: 
01:00203782 1CC5            	  7233:          MOVE.B  D5,(A6)+       COMMA SERARATOR
                            	  7234: 
01:00203784 1CFC0023        	  7235:          MOVE.B  #'#',(A6)+
01:00203788 302C0002        	  7236:          MOVE.W  2(A4),D0
01:0020378C 48C0            	  7237:          EXT.L   D0
01:0020378E 6100DBC4        	  7238:          BSR     HEX2DEC        DECIMAL DISPLACEMENT
01:00203792 6000075C        	  7239:          BRA     COMMON4
                            	  7240: 
                            	  7241:          LONG
                            	     1M          DS      0
01:00203796 00              	     2M          DS.B    (*-X)&2
01:00203797 *
                            	  7242: FORM1    DS      0              CLR  NEG  NEGX  NOT TST
01:00203798 610003E2        	  7243:          BSR     FORMSIZE
                            	  7244: 
                            	  7245: 
                            	  7246: *                               NBCD TAS
01:0020379C 61000468        	  7247: FORM1A   BSR     EEA            DATA ALTERABLE ONLY
01:002037A0 606E            	  7248: CS14     BRA.S   CS13           COMMON
                            	  7249: 
                            	  7250:          LONG
                            	     1M          DS      0
01:002037A2 00              	     2M          DS.B    (*-X)&2
01:002037A3 *
                            	  7251: FORM3    DS      0              EXT  SWAP
01:002037A4 614A            	  7252:          BSR.S   FORMREGD
01:002037A6 6068            	  7253:          BRA.S   CS13           COMMON
                            	  7254: 
                            	  7255:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7256: FORM4    DS      0              TRAP
01:002037A8 1CFC0023        	  7257:          MOVE.B  #'#',(A6)+
01:002037AC 3014            	  7258:          MOVE.W  (A4),D0
01:002037AE 02800000000F    	  7259:          ANDI.L  #$0F,D0
01:002037B4 6100DB9E        	  7260:          BSR     HEX2DEC        DECIMAL
01:002037B8 6056            	  7261:          BRA.S   CS13           COMMON
                            	  7262: 
                            	  7263:          LONG
                            	     1M          DS      0
01:002037BA 00              	     2M          DS.B    (*-X)&2
01:002037BB *
                            	  7264: FORM5    DS      0              UNLNK
01:002037BC 6122            	  7265:          BSR.S   FORMREGA
01:002037BE 6050            	  7266:          BRA.S   CS13           COMMON
                            	  7267: 
                            	  7268: *  BIT   5432109876543210
                            	  7269: *        ....RRR.........       ADDRESS REGISTER
                            	  7270: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7271: *
                            	  7272:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7273: FORM6A   DS      0              LEA
01:002037C0 3E3C07E4        	  7274:          MOVE.W  #$7E4,D7       CONTROL ADDRESSING
01:002037C4 6154            	  7275:          BSR.S   EEA10
                            	  7276: 
01:002037C6 1CC5            	  7277:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7278: 
01:002037C8 3814            	  7279:          MOVE.W  (A4),D4
01:002037CA EF5C            	  7280:          ROL.W   #7,D4
01:002037CC 6112            	  7281:          BSR.S   FORMREGA
01:002037CE 6040            	  7282:          BRA.S   CS13           COMMON
                            	  7283: 
                            	  7284: *  BIT   5432109876543210
                            	  7285: *        ....DDD.........       DATA REGISTER
                            	  7286: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7287: *
                            	  7288:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7289: FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
01:002037D0 3E3C0FFD        	  7290:          MOVE.W  #$FFD,D7       DATA ADDRESSING
01:002037D4 6144            	  7291:          BSR.S   EEA10
                            	  7292: 
01:002037D6 1CC5            	  7293:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7294: 
01:002037D8 3814            	  7295:          MOVE.W  (A4),D4
01:002037DA EF5C            	  7296:          ROL.W   #7,D4
01:002037DC 6112            	  7297:          BSR.S   FORMREGD
01:002037DE 6030            	  7298:          BRA.S   CS13           COMMON
                            	  7299: 
01:002037E0 1CFC0041        	  7300: FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
01:002037E4 02040007        	  7301: FORMREG5 ANDI.B  #$07,D4
01:002037E8 00040030        	  7302:          ORI.B   #'0',D4
01:002037EC 1CC4            	  7303:          MOVE.B  D4,(A6)+
01:002037EE 4E75            	  7304:          RTS
                            	  7305: 
01:002037F0 1CFC0044        	  7306: FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
01:002037F4 60EE            	  7307:          BRA     FORMREG5
                            	  7308: 
                            	  7309: *  BIT   5432109876543210
                            	  7310: *        ....DDD......DDD       DATA REGISTERS
                            	  7311: *
                            	  7312:          LONG
                            	     1M          DS      0
01:002037F6 00              	     2M          DS.B    (*-X)&2
01:002037F7 *
                            	  7313: FORM7    DS      0              EXG
01:002037F8 EF5C            	  7314:          ROL.W   #7,D4
01:002037FA 61F4            	  7315:          BSR     FORMREGD
                            	  7316: 
01:002037FC 1CC5            	  7317:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7318: 
01:002037FE 3814            	  7319:          MOVE.W  (A4),D4
01:00203800 61EE            	  7320:          BSR     FORMREGD
01:00203802 600C            	  7321:          BRA.S   CS13           COMMON
                            	  7322: 
                            	  7323: *  BIT   5432109876543210
                            	  7324: *        ....AAA......AAA       ADDRESS REGISTERS
                            	  7325: *
                            	  7326:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7327: FORM8    DS      0              EXG
01:00203804 EF5C            	  7328:          ROL.W   #7,D4
01:00203806 61D8            	  7329:          BSR     FORMREGA
                            	  7330: 
01:00203808 1CFC002C        	  7331: FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
                            	  7332: 
01:0020380C 3814            	  7333:          MOVE.W  (A4),D4
01:0020380E 61D0            	  7334:          BSR     FORMREGA
01:00203810 60000080        	  7335: CS13     BRA     CS12           COMMON
                            	  7336: 
                            	  7337: *  BIT   5432109876543210
                            	  7338: *        ....DDD.........       DATA REGISTER
                            	  7339: *        .............AAA       ADDRESS REGISTER
                            	  7340: *
                            	  7341:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7342: FORM9    DS      0              EXG
01:00203814 EF5C            	  7343:          ROL.W   #7,D4
01:00203816 61D8            	  7344:          BSR     FORMREGD       DATA REGISTER
01:00203818 60EE            	  7345:          BRA     FORM815
                            	  7346: 
01:0020381A 600003EA        	  7347: EEA10    BRA     EEA
                            	  7348: 
                            	  7349: *  BIT   5432109876543210
                            	  7350: *        ..........AAAAAA         EFFECTIVE ADDRESS
                            	  7351: *        .......MMM......         OP-MODE
                            	  7352: *        ....RRR.........         D-REGISTER
                            	  7353: *        .......011......         WORD  EA,A@
                            	  7354: *        .......111......         LONG  EA,A@
                            	  7355: *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
                            	  7356: *        .......0........         EA,D@
                            	  7357: *        .......1........         D@,EA
                            	  7358: *        ........00......         BYTE
                            	  7359: *        ........01......         WORD
                            	  7360: *        ........10......         LONG
                            	  7361: *
                            	  7362:          LONG
                            	     1M          DS      0
01:0020381E 00              	     2M          DS.B    (*-X)&2
01:0020381F *
                            	  7363: *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
                            	  7364: FORM10EX DS      0              ADD  CMP  SUB
01:00203820 3E3C0FFF        	  7365:          MOVE.W  #$FFF,D7       ALL MODES ALLOWED
01:00203824 2004            	  7366:          MOVE.L  D4,D0
01:00203826 024001C0        	  7367:          ANDI.W  #$01C0,D0
01:0020382A 673A            	  7368:          BEQ.S   FORM103        .......000......
01:0020382C 0C4001C0        	  7369:          CMPI.W  #$01C0,D0
01:00203830 6710            	  7370:          BEQ.S   FORM10E3       .......111......
01:00203832 0C4000C0        	  7371:          CMPI.W  #$00C0,D0
01:00203836 661E            	  7372:          BNE.S   FORM10E6
                            	  7373: 
01:00203838 1AFC002E        	  7374:          MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
01:0020383C 1AFC0057        	  7375:          MOVE.B  #'W',(A5)+
01:00203840 6008            	  7376:          BRA.S   FORM10E4
                            	  7377: 
01:00203842 1AFC002E        	  7378: FORM10E3 MOVE.B  #'.',(A5)+
01:00203846 1AFC004C        	  7379:          MOVE.B  #'L',(A5)+
                            	  7380: 
01:0020384A 61CE            	  7381: FORM10E4 BSR     EEA10
                            	  7382: 
01:0020384C 1CC5            	  7383:          MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
                            	  7384: 
01:0020384E 3814            	  7385:          MOVE.W  (A4),D4
01:00203850 EF5C            	  7386:          ROL.W   #7,D4
01:00203852 618C            	  7387:          BSR     FORMREGA       <EA>,A@
01:00203854 603C            	  7388:          BRA.S   CS12           COMMON
                            	  7389: 
01:00203856 08140000        	  7390: FORM10E6 BTST.B  #0,(A4)
01:0020385A 6620            	  7391:          BNE.S   FORM105        .......1........    D@,<EA>
01:0020385C 600C            	  7392:          BRA.S   FORM104        .......0........    <EA>,D@
                            	  7393: 
                            	  7394: *  BIT   5432109876543210
                            	  7395: *        ..........AAAAAA       EFFECTIVE ADDRESS
                            	  7396: *        .......MMM......       OP-MODE
                            	  7397: *        ....RRR.........       D-REGISTER
                            	  7398: *        .......0........       EA,D@
                            	  7399: *        .......1........       D@,EA
                            	  7400: *        ........00......       BYTE
                            	  7401: *        ........01......       WORD
                            	  7402: *        ........10......       LONG
                            	  7403:          LONG
                            	     1M          DS      0
01:0020385E 00              	     2M          DS.B    (*-X)&2
01:0020385F *
                            	  7404: FORM10   DS      0              AND  EOR  OR
01:00203860 08140000        	  7405:          BTST.B  #0,(A4)
01:00203864 6616            	  7406:          BNE.S   FORM105
                            	  7407: 
01:00203866 3E3C0FFD        	  7408: FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:0020386A 61000310        	  7409: FORM104  BSR     FORMSIZE
01:0020386E 61AA            	  7410:          BSR     EEA10          <EA>,D@
                            	  7411: 
01:00203870 1CC5            	  7412:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7413: 
01:00203872 1814            	  7414:          MOVE.B  (A4),D4
01:00203874 E20C            	  7415:          LSR.B   #1,D4
01:00203876 6100FF78        	  7416:          BSR     FORMREGD
01:0020387A 6016            	  7417:          BRA.S   CS12           COMMON
                            	  7418: 
01:0020387C 610002FE        	  7419: FORM105  BSR     FORMSIZE       D@,<EA>
01:00203880 1814            	  7420:          MOVE.B  (A4),D4
01:00203882 E20C            	  7421:          LSR.B   #1,D4
01:00203884 6100FF6A        	  7422:          BSR     FORMREGD
                            	  7423: 
01:00203888 1CC5            	  7424:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7425: 
01:0020388A 3814            	  7426:          MOVE.W  (A4),D4
01:0020388C 3E3C01FD        	  7427:          MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
01:00203890 6188            	  7428:          BSR     EEA10
01:00203892 6000065E        	  7429: CS12     BRA     COMMON
                            	  7430: 
                            	  7431:          LONG
                            	     1M          DS      0
01:00203896 00              	     2M          DS.B    (*-X)&2
01:00203897 *
                            	  7432: *                               PEA     (JMP  JSR)
01:00203898 3E3C07E4        	  7433: FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
01:0020389C 6100FF7C        	  7434:          BSR     EEA10
01:002038A0 60F0            	  7435:          BRA     CS12           COMMON
                            	  7436: 
                            	  7437:          LONG
                            	     1M          DS      0
01:002038A2 00              	     2M          DS.B    (*-X)&2
01:002038A3 *
                            	  7438: *                               JMP  JSR
01:002038A4 2004            	  7439: FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
01:002038A6 0240003F        	  7440:          ANDI.W  #$3F,D0
01:002038AA 0C400038        	  7441:          CMPI.W  #$38,D0
01:002038AE 6608            	  7442:          BNE.S   FORM112        NOT .S
01:002038B0 1AFC002E        	  7443:          MOVE.B  #'.',(A5)+     PERIOD
01:002038B4 1AFC0053        	  7444:          MOVE.B  #'S',(A5)+     S
01:002038B8 0C400039        	  7445: FORM112  CMPI.W  #$39,D0
01:002038BC 6608            	  7446:          BNE.S   FORM114
01:002038BE 1AFC002E        	  7447:          MOVE.B  #'.',(A5)+     PERIOD
01:002038C2 1AFC004C        	  7448:          MOVE.B  #'L',(A5)+     L
01:002038C6 60D0            	  7449: FORM114  BRA     FORM11
                            	  7450: 
                            	  7451: *  BIT   5432109876543210
                            	  7452: *        ....XXX.....0...       DATA DESTINATION REGISTER
                            	  7453: *        ....XXX.....1...       ADDRESS REGISTER
                            	  7454: *        ....XXX.00......       BYTE
                            	  7455: *        ........01......       WORD
                            	  7456: *        ........10......       LONG
                            	  7457: *        ............0...       DATA REGISTER TO DATA REGISTER
                            	  7458: *        ............1...       MEMORY TO MEMORY
                            	  7459: *        ............0XXX       DATA SOURCE REGISTER
                            	  7460: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	  7461: *
                            	  7462:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7463: FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
01:002038C8 610002B2        	  7464:          BSR     FORMSIZE
                            	  7465: 
01:002038CC 08040003        	  7466:          BTST    #3,D4
01:002038D0 6610            	  7467:          BNE.S   FORM125
                            	  7468: 
01:002038D2 6100FF1C        	  7469:          BSR     FORMREGD       D@,D@;   FORMAT SOURCE
                            	  7470: 
01:002038D6 1CC5            	  7471:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7472: 
01:002038D8 1814            	  7473:          MOVE.B  (A4),D4
01:002038DA E20C            	  7474:          LSR.B   #1,D4
01:002038DC 6100FF12        	  7475:          BSR     FORMREGD       FORMAT DESTINATION
01:002038E0 6046            	  7476:          BRA.S   CS11           COMMON
                            	  7477: 
01:002038E2 1CFC002D        	  7478: FORM125  MOVE.B  #'-',(A6)+     -
01:002038E6 1CFC0028        	  7479:          MOVE.B  #'(',(A6)+     (
01:002038EA 6100FEF4        	  7480:          BSR     FORMREGA       A@    SOURCE
                            	  7481: 
01:002038EE 203C282D2C29    	  7482:          MOVE.L  #'(-,)',D0     ),-(
01:002038F4 6152            	  7483:          BSR.S   SCHR           STORE CHARS
                            	  7484: 
01:002038F6 1814            	  7485:          MOVE.B  (A4),D4
01:002038F8 E20C            	  7486:          LSR.B   #1,D4
01:002038FA 6100FEE4        	  7487:          BSR     FORMREGA       A@   DESTINATION
01:002038FE 1CFC0029        	  7488:          MOVE.B  #')',(A6)+
01:00203902 6024            	  7489:          BRA.S   CS11           COMMON
                            	  7490: 
                            	  7491: *  BIT   5432109876543210
                            	  7492: *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
                            	  7493: *        ....XXX.00......       BYTE
                            	  7494: *        ........01......       WORD
                            	  7495: *        ........10......       LONG
                            	  7496: *        ............1...       MEMORY TO MEMORY
                            	  7497: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	  7498: *
                            	  7499:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7500: FORM12A  DS      0              CMPM
01:00203904 61000276        	  7501:          BSR     FORMSIZE
                            	  7502: 
01:00203908 1CFC0028        	  7503:          MOVE.B  #'(',(A6)+     (
01:0020390C 6100FED2        	  7504:          BSR     FORMREGA       A@
                            	  7505: 
01:00203910 203C282C2B29    	  7506:          MOVE.L  #'(,+)',D0     )+,(
01:00203916 6130            	  7507:          BSR.S   SCHR           STORE CHARS
                            	  7508: 
01:00203918 1814            	  7509:          MOVE.B  (A4),D4
01:0020391A E20C            	  7510:          LSR.B   #1,D4
01:0020391C 6100FEC2        	  7511:          BSR     FORMREGA       A@
01:00203920 1CFC0029        	  7512:          MOVE.B  #')',(A6)+
01:00203924 1CFC002B        	  7513:          MOVE.B  #'+',(A6)+
01:00203928 600005C8        	  7514: CS11     BRA     COMMON
                            	  7515: 
                            	  7516:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:0020392C 6000021E        	  7517: IQUICK   BRA     IQUICKA        ADDQ  SUBQ
                            	  7518: 
                            	  7519: *  BIT   5432109876543210
                            	  7520: *        0111...0........       FIXED
                            	  7521: *        ....RRR.........       DATA REGISTER
                            	  7522: *        ........DDDDDDDD       SIGN EXTENDED DATA
                            	  7523: *
                            	  7524:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7525: IMOVEQ   DS      0
01:00203930 1CFC0023        	  7526:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7527: 
01:00203934 3014            	  7528:          MOVE.W  (A4),D0
01:00203936 4880            	  7529:          EXT.W   D0
01:00203938 48C0            	  7530:          EXT.L   D0
01:0020393A 6100DA18        	  7531:          BSR     HEX2DEC        DECIMAL
                            	  7532: 
01:0020393E 1CC5            	  7533:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7534: 
01:00203940 EF5C            	  7535:          ROL.W   #7,D4
01:00203942 6100FEAC        	  7536:          BSR     FORMREGD
01:00203946 60E0            	  7537:          BRA     CS11           COMMON
                            	  7538: 
01:00203948 1CC0            	  7539: SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
01:0020394A E088            	  7540:          LSR.L   #8,D0
01:0020394C 66FA            	  7541:          BNE     SCHR           MORE TO OUTPUT
01:0020394E 4E75            	  7542:          RTS
                            	  7543: 
                            	  7544: * MOVE FROM SR  (STATUS REGISTER)
                            	  7545: *
                            	  7546:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:00203950 203C002C5253    	  7547: IMVFSR   MOVE.L  #',RS'+0,D0   SR,
                            	  7548: 
01:00203956 61F0            	  7549:          BSR     SCHR
01:00203958 610002AC        	  7550:          BSR     EEA            DATA ALTERABLE
01:0020395C 60CA            	  7551:          BRA     CS11           COMMON
                            	  7552: 
                            	  7553: * MOVE FROM USP (USER STACK POINTER)
                            	  7554: *
                            	  7555:          LONG
                            	     1M          DS      0
01:0020395E 00              	     2M          DS.B    (*-X)&2
01:0020395F *
01:00203960 203C2C505355    	  7556: IMVFUSP  MOVE.L  #',PSU',D0     USP,
01:00203966 61E0            	  7557:          BSR     SCHR
01:00203968 6100FE76        	  7558:          BSR     FORMREGA
01:0020396C 60BA            	  7559:          BRA     CS11           COMMON
                            	  7560: 
                            	  7561: * MOVE TO SR (STATUS REGISTER)
                            	  7562: *
                            	  7563:          LONG
                            	     1M          DS      0
01:0020396E 00              	     2M          DS.B    (*-X)&2
01:0020396F *
01:00203970 3E3C0FFD        	  7564: IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
01:00203974 61000290        	  7565:          BSR     EEA
01:00203978 203C0052532C    	  7566:          MOVE.L  #'RS,'+0,D0   ,SR
01:0020397E 61C8            	  7567: IMVT44   BSR     SCHR
01:00203980 60A6            	  7568:          BRA     CS11           COMMON
                            	  7569: 
                            	  7570: * MOVE TO USP (USER STACK POINTER)
                            	  7571: *
                            	  7572:          LONG
                            	     1M          DS      0
01:00203982 00              	     2M          DS.B    (*-X)&2
01:00203983 *
01:00203984 6100FE5A        	  7573: IMVTUSP  BSR     FORMREGA
01:00203988 203C5053552C    	  7574:          MOVE.L  #'PSU,',D0     ,USP
01:0020398E 60EE            	  7575:          BRA     IMVT44
                            	  7576: 
                            	  7577: *  MOVE TO CCR (CONDITION CODE REGISTER)
                            	  7578: *
                            	  7579:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:00203990 3E3C0FFD        	  7580: IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:00203994 61000270        	  7581:          BSR     EEA
01:00203998 203C5243432C    	  7582:          MOVE.L  #'RCC,',D0     ,CCR
01:0020399E 60DE            	  7583:          BRA     IMVT44
                            	  7584: 
                            	  7585: *  BIT   5432109876543210
                            	  7586: *        0000...1..001...       FIXED
                            	  7587: *        ....XXX.........       DATA REGISTER
                            	  7588: *        ........0.......       MEMORY TO REGISTER
                            	  7589: *        ........1.......       REGISTER TO MEMORY
                            	  7590: *        .........0......       WORD
                            	  7591: *        .........1......       LONG
                            	  7592: *        .............XXX       ADDRESS REGISTER
                            	  7593: *
                            	  7594:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7595: IMOVEP   DS      0
01:002039A0 1AFC002E        	  7596:          MOVE.B  #'.',(A5)+     D@,#(A@)
01:002039A4 303C4C57        	  7597:          MOVE.W  #'LW',D0
01:002039A8 08040006        	  7598:          BTST    #6,D4
01:002039AC 6702            	  7599:          BEQ.S   IMOVEP11       USE "W"
01:002039AE E048            	  7600:          LSR.W   #8,D0          USE "L"
01:002039B0 1AC0            	  7601: IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
                            	  7602: 
01:002039B2 1814            	  7603:          MOVE.B  (A4),D4
01:002039B4 E20C            	  7604:          LSR.B   #1,D4
                            	  7605: 
01:002039B6 082C00070001    	  7606:          BTST.B  #7,1(A4)
01:002039BC 670E            	  7607:          BEQ.S   IMOVEP35
                            	  7608: 
01:002039BE 6100FE30        	  7609:          BSR     FORMREGD       D@,$HHHH(A@)
                            	  7610: 
01:002039C2 1CC5            	  7611:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7612: 
01:002039C4 3814            	  7613:          MOVE.W  (A4),D4
01:002039C6 6112            	  7614:          BSR.S   IMOVEP66
01:002039C8 60000526        	  7615: CS20     BRA     COMMON4
                            	  7616: 
01:002039CC 610C            	  7617: IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
                            	  7618: 
01:002039CE 1CC5            	  7619:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7620: 
01:002039D0 1814            	  7621:          MOVE.B  (A4),D4
01:002039D2 E20C            	  7622:          LSR.B   #1,D4
01:002039D4 6100FE1A        	  7623:          BSR     FORMREGD
01:002039D8 60EE            	  7624:          BRA     CS20           COMMON4
                            	  7625: 
01:002039DA 1CFC0024        	  7626: IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
01:002039DE 302C0002        	  7627:          MOVE.W  2(A4),D0
01:002039E2 6100E3BE        	  7628:          BSR     PNT4HX
                            	  7629: 
01:002039E6 1CFC0028        	  7630:          MOVE.B  #'(',(A6)+
                            	  7631: 
01:002039EA 3814            	  7632:          MOVE.W  (A4),D4
01:002039EC 6100FDF2        	  7633:          BSR     FORMREGA
01:002039F0 1CFC0029        	  7634:          MOVE.B  #')',(A6)+
01:002039F4 4E75            	  7635:          RTS
                            	  7636: 
                            	  7637:          LONG
                            	     1M          DS      0
01:002039F6 00              	     2M          DS.B    (*-X)&2
01:002039F7 *
01:002039F8 600004F8        	  7638: SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
                            	  7639: 
                            	  7640:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:002039FC 610000EA        	  7641: ISCC     BSR     ICCCC          GET REST OF OP-CODE
01:00203A00 61000204        	  7642:          BSR     EEA            DATA ALTERABLE
01:00203A04 60F2            	  7643:          BRA     SCOMMON
                            	  7644: 
                            	  7645: 
                            	  7646:          LONG
                            	     1M          DS      0
01:00203A06 00              	     2M          DS.B    (*-X)&2
01:00203A07 *
                            	  7647: IDBCC    DS      0              DB--
01:00203A08 3814            	  7648:          MOVE.W  (A4),D4
01:00203A0A 6100FDE4        	  7649:          BSR     FORMREGD
                            	  7650: 
01:00203A0E 1CC5            	  7651:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
01:00203A10 1CFC0024        	  7652:          MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
                            	  7653: 
01:00203A14 610000D2        	  7654:          BSR     ICCCC
01:00203A18 602E            	  7655:          BRA.S   ICC55
                            	  7656: 
                            	  7657: *  BIT   5432109876543210
                            	  7658: *        0110............       FIXED
                            	  7659: *        ....CCCC........       CONDITION
                            	  7660: *        ........DDDDDDD0       DISPLACEMENT
                            	  7661: *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
                            	  7662: *
                            	  7663:          LONG
                            	     1M          DS      0
01:00203A1A 00              	     2M          DS.B    (*-X)&2
01:00203A1B *
                            	  7664: ICC      DS      0              B--
01:00203A1C 610000CA        	  7665:          BSR     ICCCC
                            	  7666: 
01:00203A20 1CFC0024        	  7667: IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
                            	  7668: 
01:00203A24 4A04            	  7669:          TST.B   D4
01:00203A26 6720            	  7670:          BEQ.S   ICC55          16 BIT DISPLACEMENT
                            	  7671: 
01:00203A28 1AFC002E        	  7672:          MOVE.B  #'.',(A5)+
01:00203A2C 1AFC0053        	  7673:          MOVE.B  #'S',(A5)+
01:00203A30 4884            	  7674:          EXT.W   D4             8 BIT DISPLACEMENT
                            	  7675: 
01:00203A32 48C4            	  7676: ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
01:00203A34 D8A9FFFC        	  7677:          ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
01:00203A38 5484            	  7678:          ADDQ.L  #2,D4          + TWO
01:00203A3A 2004            	  7679:          MOVE.L  D4,D0
                            	  7680: 
01:00203A3C E284            	  7681:          ASR.L   #1,D4
01:00203A3E 650004DA        	  7682:          BCS     FERROR         ODD BOUNDRY DISPLACEMENT
                            	  7683: 
01:00203A42 6100E358        	  7684:          BSR     PNT6HX
01:00203A46 60B0            	  7685:          BRA     SCOMMON
                            	  7686: 
01:00203A48 5483            	  7687: ICC55    ADDQ.L  #2,D3          SIZE
01:00203A4A 382C0002        	  7688:          MOVE.W  2(A4),D4
01:00203A4E 1AFC002E        	  7689:          MOVE.B  #'.',(A5)+
01:00203A52 1AFC004C        	  7690:          MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
01:00203A56 60DA            	  7691:          BRA     ICC35
                            	  7692: 
                            	  7693:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7694: *                               BCHG  BCLR  BSET  BTST
                            	  7695: ISETD    DS      0              DYNAMIC BIT
01:00203A58 EF5C            	  7696:          ROL.W   #7,D4
01:00203A5A 6100FD94        	  7697:          BSR     FORMREGD       DATA REGISTER
                            	  7698: 
01:00203A5E 1CC5            	  7699: ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7700: 
01:00203A60 3814            	  7701:          MOVE.W  (A4),D4
01:00203A62 610001A2        	  7702:          BSR     EEA            DATA ALTERABLE
01:00203A66 6090            	  7703: CS18     BRA     SCOMMON
                            	  7704: 
                            	  7705:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7706: *                            BCHG  BCLR  BSET  BTST
                            	  7707: *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
                            	  7708: *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
                            	  7709: *
                            	  7710: ISETS    DS      0              STATIC BIT
01:00203A68 5483            	  7711:          ADDQ.L  #2,D3     SIZE
01:00203A6A 1CFC0023        	  7712:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7713: 
01:00203A6E 7000            	  7714:          CLR.L   D0
01:00203A70 302C0002        	  7715:          MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
01:00203A74 2200            	  7716:          MOVE.L  D0,D1
01:00203A76 EA89            	  7717:          LSR.L   #5,D1
01:00203A78 660004A0        	  7718:          BNE     FERROR
01:00203A7C 6100D8D6        	  7719:          BSR     HEX2DEC        DECIMAL
                            	  7720: 
01:00203A80 60DC            	  7721:          BRA     ISETD12
                            	  7722: 
                            	  7723: *   BIT  5432109876543210
                            	  7724: *        ....XXX.........       IMMEDIATE COUNT/REGISTER
                            	  7725: *        .......0........       RIGHT SHIFT
                            	  7726: *        .......1........       LEFT SHIFT
                            	  7727: *        ........00......       BYTE
                            	  7728: *        ........01......       WORD
                            	  7729: *        ........10......       LONG
                            	  7730: *        ....0...11......       WORD (MEMORY)
                            	  7731: *        ....0...11AAAAAA       EFFECTIVE ADDRESS
                            	  7732: *        ..........0.....       SHIFT IMMEDIATE COUNT
                            	  7733: *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
                            	  7734: *
                            	  7735:          LONG
                            	     1M          DS      0
01:00203A82 00              	     2M          DS.B    (*-X)&2
01:00203A83 *
                            	  7736: ISHIFT   DS      0              AS-  LS-  RO-  ROX-
01:00203A84 303C4C52        	  7737:          MOVE.W  #'LR',D0
01:00203A88 08040008        	  7738:          BTST    #8,D4          DIRECTION BIT
01:00203A8C 6702            	  7739:          BEQ.S   ISHIFT13       RIGHT
01:00203A8E E048            	  7740:          LSR.W   #8,D0          LEFT
01:00203A90 1AC0            	  7741: ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
                            	  7742: 
01:00203A92 3014            	  7743:          MOVE.W  (A4),D0
01:00203A94 024000C0        	  7744:          ANDI.W  #$00C0,D0
01:00203A98 0C4000C0        	  7745:          CMPI.W  #$00C0,D0
01:00203A9C 6730            	  7746:          BEQ.S   ISHIFTM1       MEMORY SHIFT
                            	  7747: 
01:00203A9E 610000DC        	  7748:          BSR     FORMSIZE
                            	  7749: 
01:00203AA2 EF5C            	  7750:          ROL.W   #7,D4
01:00203AA4 0804000C        	  7751:          BTST    #12,D4         I/R BIT
01:00203AA8 6616            	  7752:          BNE.S   ISHIFT33       COUNT IN REGISTER
                            	  7753: 
01:00203AAA 02040007        	  7754:          ANDI.B  #$07,D4        IMMEDIATE COUNT
01:00203AAE 6604            	  7755:          BNE.S   ISHIFT23
01:00203AB0 00040008        	  7756:          ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
01:00203AB4 00040030        	  7757: ISHIFT23 ORI.B   #'0',D4
01:00203AB8 1CFC0023        	  7758:          MOVE.B  #'#',(A6)+
01:00203ABC 1CC4            	  7759:          MOVE.B  D4,(A6)+
01:00203ABE 6004            	  7760:          BRA.S   ISHIFT44
                            	  7761: 
01:00203AC0 6100FD2E        	  7762: ISHIFT33 BSR     FORMREGD
                            	  7763: 
01:00203AC4 1CC5            	  7764: ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7765: 
01:00203AC6 3814            	  7766:          MOVE.W  (A4),D4
01:00203AC8 6100FD26        	  7767:          BSR     FORMREGD
01:00203ACC 6098            	  7768: CS17     BRA     CS18           COMMON
                            	  7769: 
01:00203ACE 1AFC002E        	  7770: ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
01:00203AD2 1AFC0057        	  7771:          MOVE.B  #'W',(A5)+     .WORD
                            	  7772: 
01:00203AD6 0804000B        	  7773:          BTST    #11,D4
01:00203ADA 6600043E        	  7774:          BNE     FERROR         BIT 11 MUST BE ZERO
                            	  7775: 
01:00203ADE 3E3C01FC        	  7776:          MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
01:00203AE2 61000122        	  7777:          BSR     EEA
01:00203AE6 60E4            	  7778:          BRA     CS17           COMMON
                            	  7779: 
01:00203AE8 700F            	  7780: ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
01:00203AEA C014            	  7781:          AND.B   (A4),D0        D0 = CCC
01:00203AEC E388            	  7782:          LSL.L   #1,D0          D0 = CCC*2
                            	  7783: 
01:00203AEE 323B0010        	  7784:          MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
01:00203AF2 1AC1            	  7785:          MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
01:00203AF4 E049            	  7786:          LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
01:00203AF6 0C010020        	  7787:          CMPI.B  #BLANK,D1          TO THE BUFFER.
01:00203AFA 6702            	  7788:          BEQ.S   ICCCC9
01:00203AFC 1AC1            	  7789:          MOVE.B  D1,(A5)+
01:00203AFE 4E75            	  7790: ICCCC9   RTS
                            	  7791: 
01:00203B00 2054            	  7792: BRTBL    DC.B    ' T'      ; 'T '  BRA ACCEPTED
01:00203B02 2046            	  7793:          DC.B    ' F'      ; 'F '
01:00203B04 4948            	  7794:          DC.B    'IH'      ; 'HI'
01:00203B06 534C            	  7795:          DC.B    'SL'      ; 'LS'
01:00203B08 4343            	  7796:          DC.B    'CC'      ; 'CC'
01:00203B0A 5343            	  7797:          DC.B    'SC'      ; 'CS'
01:00203B0C 454E            	  7798:          DC.B    'EN'      ; 'NE'
01:00203B0E 5145            	  7799:          DC.B    'QE'      ; 'EQ'
01:00203B10 4356            	  7800:          DC.B    'CV'      ; 'VC'
01:00203B12 5356            	  7801:          DC.B    'SV'      ; 'VS'
01:00203B14 4C50            	  7802:          DC.B    'LP'      ; 'PL'
01:00203B16 494D            	  7803:          DC.B    'IM'      ; 'MI'
01:00203B18 4547            	  7804:          DC.B    'EG'      ; 'GE'
01:00203B1A 544C            	  7805:          DC.B    'TL'      ; 'LT'
01:00203B1C 5447            	  7806:          DC.B    'TG'      ; 'GT'
01:00203B1E 454C            	  7807:          DC.B    'EL'      ; 'LE'
                            	  7808: 
                            	  7809: *   BIT  5432109876543210
                            	  7810: *        ....RRRMMM......    DESTINATION REGISTER MODE
                            	  7811: *        ..........MMMRRR    SOURCE MODE REGISTER
                            	  7812: *
                            	  7813: * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
                            	  7814: *
                            	  7815: IMOVEA1  DS      0
01:00203B20 3E3C0FFF        	  7816:          MOVE.W  #$FFF,D7       ALL MODES
01:00203B24 610000E0        	  7817:          BSR     EEA
                            	  7818: 
01:00203B28 1CC5            	  7819:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7820: 
01:00203B2A 3814            	  7821:          MOVE.W  (A4),D4        ....RRRMMM......
01:00203B2C E24C            	  7822:          LSR.W   #1,D4          .....RRRMMM.....
01:00203B2E EA0C            	  7823:          LSR.B   #5,D4          .....RRR.....MMM
01:00203B30 E05C            	  7824:          ROR.W   #8,D4          .....MMM.....RRR
01:00203B32 EB0C            	  7825:          LSL.B   #5,D4          .....MMMRRR.....
01:00203B34 EA4C            	  7826:          LSR.W   #5,D4          ..........MMMRRR
                            	  7827: 
                            	  7828: * IF .BYTE DESTINATION A@ NOT ALLOWED
01:00203B36 3E3C01FF        	  7829:          MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
01:00203B3A 1014            	  7830:          MOVE.B  (A4),D0
01:00203B3C 0C000001        	  7831:          CMPI.B  #$01,D0
01:00203B40 6604            	  7832:          BNE.S   IMOVE19        NOT BYTE SIZE
                            	  7833: 
01:00203B42 3E3C01FD        	  7834:          MOVE.W  #$1FD,D7       DATA ALTERABLE
                            	  7835: IMOVE19
                            	  7836: 
01:00203B46 610000BE        	  7837:          BSR     EEA
01:00203B4A 602C            	  7838:          BRA.S   CS19           COMMON
                            	  7839: 
                            	  7840: *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
                            	  7841: IQUICKA  DS      0              ADDQ  SUBQ
01:00203B4C 612E            	  7842:          BSR.S   FORMSIZE
                            	  7843: 
01:00203B4E 1CFC0023        	  7844:          MOVE.B  #'#',(A6)+
01:00203B52 EF5C            	  7845:          ROL.W   #7,D4
01:00203B54 02040007        	  7846:          ANDI.B  #7,D4
01:00203B58 6604            	  7847:          BNE.S   IQUICK21
01:00203B5A 00040008        	  7848:          ORI.B   #8,D4          MAKE ZERO INTO EIGHT
01:00203B5E 00040030        	  7849: IQUICK21 ORI.B   #'0',D4        MAKE ASCII
01:00203B62 1CC4            	  7850:          MOVE.B  D4,(A6)+
                            	  7851: 
01:00203B64 1CC5            	  7852:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7853: 
01:00203B66 3814            	  7854:          MOVE.W  (A4),D4
                            	  7855: 
01:00203B68 3014            	  7856:          MOVE.W  (A4),D0
01:00203B6A 024000C0        	  7857:          ANDI.W  #$00C0,D0
01:00203B6E 6704            	  7858:          BEQ.S   IQUICK31       DATA ALTERABLE
01:00203B70 3E3C01FF        	  7859:          MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
01:00203B74 61000090        	  7860: IQUICK31 BSR     EEA
01:00203B78 60000378        	  7861: CS19     BRA     COMMON
                            	  7862: 
                            	  7863: *  BIT   5432109876543210
                            	  7864: *        ........00......       BYTE
                            	  7865: *        ........01......       WORD
                            	  7866: *        ........10......       LONG
                            	  7867: *        ........11......       ERROR
                            	  7868: *
                            	  7869: FORMSIZE DS      0
01:00203B7C 3414            	  7870:          MOVE.W  (A4),D2
01:00203B7E 1AFC002E        	  7871:          MOVE.B  #'.',(A5)+     STORE PERIOD
01:00203B82 EC4A            	  7872:          LSR.W   #6,D2
01:00203B84 02420003        	  7873:          ANDI.W  #$03,D2
01:00203B88 6606            	  7874:          BNE.S   FORM91
01:00203B8A 1AFC0042        	  7875:          MOVE.B  #'B',(A5)+     STORE "B"
01:00203B8E 6016            	  7876:          BRA.S   FORM95
                            	  7877: 
01:00203B90 103C0057        	  7878: FORM91   MOVE.B  #'W',D0
01:00203B94 0C020001        	  7879:          CMPI.B  #1,D2
01:00203B98 670A            	  7880:          BEQ.S   FORM93
01:00203B9A 103C004C        	  7881:          MOVE.B  #'L',D0
01:00203B9E 0C020002        	  7882:          CMPI.B  #2,D2
01:00203BA2 665E            	  7883:          BNE.S   FE10           FERROR
01:00203BA4 1AC0            	  7884: FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
01:00203BA6 4E75            	  7885: FORM95   RTS
                            	  7886: 
01:00203BA8 6100FC46        	  7887: EA000    BSR     FORMREGD
01:00203BAC 08070000        	  7888:          BTST    #0,D7
01:00203BB0 6750            	  7889:          BEQ.S   FE10           FERROR
01:00203BB2 4E75            	  7890:          RTS
                            	  7891: 
01:00203BB4 6100FC2A        	  7892: EA001    BSR     FORMREGA
01:00203BB8 08070001        	  7893:          BTST    #1,D7
01:00203BBC 6744            	  7894:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BBE 4E75            	  7895:          RTS
                            	  7896: 
01:00203BC0 1CFC0028        	  7897: EA010    MOVE.B  #'(',(A6)+
01:00203BC4 6100FC1A        	  7898:          BSR     FORMREGA
01:00203BC8 1CFC0029        	  7899:          MOVE.B  #')',(A6)+
01:00203BCC 08070002        	  7900:          BTST    #2,D7
01:00203BD0 6730            	  7901:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BD2 4E75            	  7902:          RTS
                            	  7903: 
01:00203BD4 1CFC0028        	  7904: EA011    MOVE.B  #'(',(A6)+
01:00203BD8 6100FC06        	  7905:          BSR     FORMREGA
01:00203BDC 1CFC0029        	  7906:          MOVE.B  #')',(A6)+
01:00203BE0 1CFC002B        	  7907:          MOVE.B  #'+',(A6)+
01:00203BE4 08070003        	  7908:          BTST    #3,D7
01:00203BE8 6718            	  7909:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BEA 4E75            	  7910: EA011RTS RTS
                            	  7911: 
01:00203BEC 1CFC002D        	  7912: EA100    MOVE.B  #'-',(A6)+
01:00203BF0 1CFC0028        	  7913:          MOVE.B  #'(',(A6)+
01:00203BF4 6100FBEA        	  7914:          BSR     FORMREGA
01:00203BF8 1CFC0029        	  7915:          MOVE.B  #')',(A6)+
01:00203BFC 08070004        	  7916:          BTST    #4,D7
01:00203C00 66E8            	  7917:          BNE     EA011RTS
01:00203C02 60000316        	  7918: FE10     BRA     FERROR         THIS MODE NOT ALLOWED
                            	  7919: 
                            	  7920: *  ENTER       A4 = POINTER TO FIRST WORD
                            	  7921: *              D3 = OFFSET TO EXTENSION
                            	  7922: *              D4 = VALUE TO PROCESS
                            	  7923: *              D7 = MODES ALLOWED MASK
                            	  7924: *
                            	  7925: EEA      DS      0
01:00203C06 2004            	  7926:          MOVE.L  D4,D0
01:00203C08 E648            	  7927:          LSR.W   #3,D0
01:00203C0A 02400007        	  7928:          ANDI.W  #$7,D0
01:00203C0E 6798            	  7929:          BEQ     EA000
                            	  7930: 
01:00203C10 0C000001        	  7931:          CMPI.B  #1,D0
01:00203C14 679E            	  7932:          BEQ     EA001
                            	  7933: 
01:00203C16 0C000002        	  7934:          CMPI.B  #2,D0
01:00203C1A 67A4            	  7935:          BEQ     EA010
                            	  7936: 
01:00203C1C 0C000003        	  7937:          CMPI.B  #3,D0
01:00203C20 67B2            	  7938:          BEQ     EA011
                            	  7939: 
01:00203C22 0C000004        	  7940:          CMPI.B  #4,D0
01:00203C26 67C4            	  7941:          BEQ     EA100
                            	  7942: 
01:00203C28 0C000005        	  7943:          CMPI.B  #5,D0
01:00203C2C 6760            	  7944:          BEQ.S   EA101
                            	  7945: 
01:00203C2E 0C000007        	  7946:          CMPI.B  #7,D0
01:00203C32 6770            	  7947:          BEQ.S   EA111
                            	  7948: 
                            	  7949: *    EXTENSION WORD
                            	  7950: *   BIT  5432109876543210
                            	  7951: *        0...............    DATA REGISTER
                            	  7952: *        1...............    ADDRESS REGISTER
                            	  7953: *        .RRR............    REGISTER
                            	  7954: *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
                            	  7955: *        ....1...........    LONG VALUE IN INDEX REGISTER
                            	  7956: *        .....000........
                            	  7957: *        ........DDDDDDDD    DISPLACEMENT INTEGER
                            	  7958: *
                            	  7959: * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
                            	  7960: 
01:00203C34 08070006        	  7961:          BTST    #6,D7
01:00203C38 67C8            	  7962:          BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
                            	  7963: 
01:00203C3A 32343000        	  7964:          MOVE.W  (A4,D3),D1
01:00203C3E 02410700        	  7965:          ANDI.W  #$0700,D1
01:00203C42 66BE            	  7966:          BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
                            	  7967: 
01:00203C44 30343000        	  7968:          MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
01:00203C48 4880            	  7969:          EXT.W   D0
01:00203C4A 48C0            	  7970:          EXT.L   D0
01:00203C4C 6100D706        	  7971:          BSR     HEX2DEC        DECIMAL
01:00203C50 1CFC0028        	  7972:          MOVE.B  #'(',(A6)+     (
                            	  7973: 
01:00203C54 6100FB8A        	  7974:          BSR     FORMREGA       XX(A@
                            	  7975: 
01:00203C58 1CFC002C        	  7976:          MOVE.B  #',',(A6)+     XX(A@,
                            	  7977: 
01:00203C5C 18343000        	  7978:          MOVE.B  (A4,D3),D4
01:00203C60 E804            	  7979:          ASR.B   #4,D4
01:00203C62 6A06            	  7980:          BPL.S   EA1105
01:00203C64 6100FB7A        	  7981:          BSR     FORMREGA
01:00203C68 6004            	  7982:          BRA.S   EA1107
                            	  7983: 
01:00203C6A 6100FB84        	  7984: EA1105   BSR     FORMREGD
01:00203C6E 1CFC002E        	  7985: EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
                            	  7986: 
01:00203C72 38343000        	  7987:          MOVE.W  (A4,D3),D4     D4 = R@
01:00203C76 103C0057        	  7988:          MOVE.B  #'W',D0        ..........W
01:00203C7A 0804000B        	  7989:          BTST    #11,D4
01:00203C7E 6704            	  7990:          BEQ.S   EA1109
01:00203C80 103C004C        	  7991:          MOVE.B  #'L',D0        ..........L
01:00203C84 1CC0            	  7992: EA1109   MOVE.B  D0,(A6)+
01:00203C86 1CFC0029        	  7993:          MOVE.B  #')',(A6)+     ...........)
01:00203C8A 5483            	  7994:          ADDQ.L  #2,D3
01:00203C8C 4E75            	  7995:          RTS
                            	  7996: 
                            	  7997: * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
                            	  7998: *
01:00203C8E 08070005        	  7999: EA101    BTST    #5,D7          101000;   DIS(A@)
01:00203C92 6756            	  8000:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8001: 
01:00203C94 30343000        	  8002:          MOVE.W  (A4,D3),D0
01:00203C98 48C0            	  8003:          EXT.L   D0
01:00203C9A 6100D6B8        	  8004:          BSR     HEX2DEC        DECIMAL
01:00203C9E 5483            	  8005:          ADDQ.L  #2,D3          SIZE
01:00203CA0 6000FF1E        	  8006:          BRA     EA010
                            	  8007: 
                            	  8008: *  111000        ABSOLUTE SHORT
                            	  8009: *  111001        ABSOLUTE LONG
                            	  8010: *  111010        PROGRAM COUNTER WITH DISPLACEMENT
                            	  8011: *  111011        PROGRAM COUNTER WITH INDEX
                            	  8012: *  111100        IMMEDIATE OR STATUS REG
                            	  8013: *
                            	  8014: EA111
01:00203CA4 02440007        	  8015:          ANDI.W  #7,D4
01:00203CA8 6618            	  8016:          BNE.S   EA1112
                            	  8017: 
01:00203CAA 08070007        	  8018:          BTST    #7,D7
01:00203CAE 673A            	  8019:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8020: 
01:00203CB0 30343000        	  8021:          MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
01:00203CB4 48C0            	  8022:          EXT.L   D0
01:00203CB6 1CFC0024        	  8023:          MOVE.B  #'$',(A6)+
01:00203CBA 6100E0D8        	  8024:          BSR     PNT8HX         SIGN EXTENDED VALUE
01:00203CBE 5483            	  8025:          ADDQ.L  #2,D3          SIZE + 2
01:00203CC0 4E75            	  8026:          RTS
                            	  8027: 
01:00203CC2 0C040001        	  8028: EA1112   CMPI.B  #1,D4
01:00203CC6 6616            	  8029:          BNE.S   EA1113
                            	  8030: 
01:00203CC8 08070008        	  8031:          BTST    #8,D7
01:00203CCC 671C            	  8032:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8033: 
01:00203CCE 1CFC0024        	  8034:          MOVE.B  #'$',(A6)+     HEX
01:00203CD2 20343000        	  8035:          MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
01:00203CD6 6100E0BC        	  8036:          BSR     PNT8HX
                            	  8037: *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
                            	  8038: *-       MOVE.B  #'L',(A6)+     IE   .L
01:00203CDA 5883            	  8039:          ADDQ.L  #4,D3
01:00203CDC 4E75            	  8040:          RTS
                            	  8041: 
01:00203CDE 0C040002        	  8042: EA1113   CMPI.B  #2,D4
01:00203CE2 662C            	  8043:          BNE.S   EA1114
                            	  8044: 
01:00203CE4 08070009        	  8045:          BTST    #9,D7
01:00203CE8 6604            	  8046:          BNE.S   EA1113A
01:00203CEA 6000022E        	  8047: FE11     BRA     FERROR         THIS MODE NOT ALLOWED
                            	  8048: EA1113A
                            	  8049: 
01:00203CEE 30343000        	  8050:          MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
01:00203CF2 48C0            	  8051:          EXT.L   D0
01:00203CF4 D0A9FFFC        	  8052:          ADD.L   HISPC(A1),D0
01:00203CF8 5480            	  8053:          ADDQ.L  #2,D0
01:00203CFA 1CFC0024        	  8054:          MOVE.B  #'$',(A6)+     HEX "$"
01:00203CFE 6100E094        	  8055:          BSR     PNT8HX         DESTINATION
01:00203D02 203C29435028    	  8056:          MOVE.L  #')CP(',D0     (PC)
01:00203D08 6100FC3E        	  8057:          BSR     SCHR           STORE WORD
01:00203D0C 5483            	  8058:          ADDQ.L  #2,D3          SIZE
01:00203D0E 4E75            	  8059:          RTS
                            	  8060: 
01:00203D10 0C040003        	  8061: EA1114   CMPI.B  #3,D4
01:00203D14 6664            	  8062:          BNE.S   EA1115
                            	  8063: 
                            	  8064: * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
                            	  8065: *
                            	  8066: *        5432109876543210       SECOND WORD
                            	  8067: *        0...............       DATA REGISTER
                            	  8068: *        1...............       ADDRESS REGISTER
                            	  8069: *        .XXX............       REGISTER
                            	  8070: *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
                            	  8071: *                               ..IN INDEX REGISTER
                            	  8072: *        ....1...........       LONG VALUE IN INDEX REGISTER
                            	  8073: *        .....000........
                            	  8074: *        ........XXXXXXXX       DISPLACEMENT INTEGER
                            	  8075: *
01:00203D16 0807000A        	  8076:          BTST    #10,D7
01:00203D1A 67CE            	  8077:          BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
                            	  8078: 
01:00203D1C 32343000        	  8079:          MOVE.W  (A4,D3),D1
01:00203D20 02410700        	  8080:          ANDI.W  #$0700,D1
01:00203D24 66C4            	  8081:          BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
                            	  8082: 
01:00203D26 10343001        	  8083:          MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
01:00203D2A 4880            	  8084:          EXT.W   D0
01:00203D2C 48C0            	  8085:          EXT.L   D0
01:00203D2E D0A9FFFC        	  8086:          ADD.L   HISPC(A1),D0
01:00203D32 5480            	  8087:          ADDQ.L  #2,D0
01:00203D34 1CFC0024        	  8088:          MOVE.B  #'$',(A6)+     HEX "$"
01:00203D38 6100E05A        	  8089:          BSR     PNT8HX         DESTINATION
                            	  8090: 
01:00203D3C 203C2C435028    	  8091:          MOVE.L  #',CP(',D0
01:00203D42 6100FC04        	  8092:          BSR     SCHR           DES(PC,
                            	  8093: 
01:00203D46 38343000        	  8094:          MOVE.W  (A4,D3),D4
01:00203D4A E95C            	  8095:          ROL.W   #4,D4
01:00203D4C 08040003        	  8096:          BTST    #3,D4
01:00203D50 6706            	  8097:          BEQ.S   EAF25
01:00203D52 6100FA8C        	  8098:          BSR     FORMREGA
01:00203D56 6004            	  8099:          BRA.S   EAF27
01:00203D58 6100FA96        	  8100: EAF25    BSR     FORMREGD       DES(PC,R@
                            	  8101: EAF27
                            	  8102: 
01:00203D5C 1CFC002E        	  8103:          MOVE.B  #'.',(A6)+     DES(PC,R@.
                            	  8104: 
01:00203D60 38343000        	  8105:          MOVE.W  (A4,D3),D4
01:00203D64 303C4C57        	  8106:          MOVE.W  #'LW',D0
01:00203D68 0804000B        	  8107:          BTST    #11,D4
01:00203D6C 6702            	  8108:          BEQ.S   EAF35
01:00203D6E E048            	  8109:          LSR.W   #8,D0
01:00203D70 1CC0            	  8110: EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
                            	  8111: 
01:00203D72 1CFC0029        	  8112:          MOVE.B  #')',(A6)+     DES(PC,R@.X)
01:00203D76 5483            	  8113:          ADDQ.L  #2,D3
01:00203D78 4E75            	  8114:          RTS
                            	  8115: 
                            	  8116: *   BIT  5432109876543210
                            	  8117: *        ..........111100       FIRST WORD;  #<IMMEDIATE>
                            	  8118: *
01:00203D7A 0C040004        	  8119: EA1115   CMPI.B  #4,D4
01:00203D7E 6600FF6A        	  8120:          BNE     FE11           FERROR
                            	  8121: 
01:00203D82 0807000B        	  8122:          BTST    #11,D7
01:00203D86 6700FF62        	  8123:          BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8124: 
01:00203D8A 1CFC0023        	  8125:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  8126: 
01:00203D8E 122DFFFF        	  8127:          MOVE.B  -1(A5),D1
01:00203D92 0C01004C        	  8128:          CMPI.B  #'L',D1
01:00203D96 6724            	  8129:          BEQ.S   EA11155        LONG
                            	  8130: 
01:00203D98 30343000        	  8131:          MOVE.W  (A4,D3),D0
                            	  8132: 
01:00203D9C 0C010042        	  8133:          CMPI.B  #'B',D1
01:00203DA0 6610            	  8134:          BNE.S   EA11153        .WORD
                            	  8135: 
                            	  8136: * BYTE SIZE; DATA ALLOWED
                            	  8137: *  0000 0000 XXXX XXXX
                            	  8138: *  1111 1111 1XXX XXXX
01:00203DA2 2200            	  8139:          MOVE.L  D0,D1
01:00203DA4 E049            	  8140:          LSR.W   #8,D1
01:00203DA6 670A            	  8141:          BEQ.S   EA11153
01:00203DA8 2200            	  8142:          MOVE.L  D0,D1
01:00203DAA EE41            	  8143:          ASR.W   #7,D1
01:00203DAC 5241            	  8144:          ADDQ.W  #1,D1
01:00203DAE 6600FF3A        	  8145:          BNE     FE11           FERROR
                            	  8146: 
01:00203DB2 48C0            	  8147: EA11153  EXT.L   D0
01:00203DB4 6100D59E        	  8148:          BSR     HEX2DEC
01:00203DB8 5483            	  8149:          ADDQ.L  #2,D3
01:00203DBA 4E75            	  8150:          RTS
                            	  8151: 
01:00203DBC 20343000        	  8152: EA11155  MOVE.L  (A4,D3),D0
01:00203DC0 6100D592        	  8153:          BSR     HEX2DEC
01:00203DC4 5883            	  8154:          ADDQ.L  #4,D3          SIZE
01:00203DC6 4E75            	  8155:          RTS
                            	  8156: 
01:00203DC8 1AFC002E        	  8157: MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
01:00203DCC 303C4C57        	  8158:          MOVE.W  #'LW',D0
01:00203DD0 08040006        	  8159:          BTST    #6,D4
01:00203DD4 6702            	  8160:          BEQ.S   MOVEMS2
01:00203DD6 E048            	  8161:          LSR.W   #8,D0
01:00203DD8 1AC0            	  8162: MOVEMS2  MOVE.B  D0,(A5)+       SIZE
01:00203DDA 4E75            	  8163:          RTS
                            	  8164: 
                            	  8165: * MOVEM - REGISTER EXPANSION
                            	  8166: *
                            	  8167: MOVEMR   DS      0
01:00203DDC 342C0002        	  8168:          MOVE.W  2(A4),D2       D2 = SECOND WORD
01:00203DE0 7020            	  8169:          MOVEQ   #$20,D0        D0 = SPACE
01:00203DE2 7E2F            	  8170:          MOVEQ   #$2F,D7        D7 = /
01:00203DE4 538E            	  8171:          SUBQ.L  #1,A6          ADJUST STORE POINTER
01:00203DE6 7A30            	  8172:          MOVEQ   #$30,D5        D5 = REGISTER #
01:00203DE8 383C4144        	  8173:          MOVE.W  #'AD',D4       D4 = REG CLASS
                            	  8174: 
01:00203DEC 0302            	  8175: MOVEMR11 BTST    D1,D2
01:00203DEE 6730            	  8176:          BEQ.S   MOVEMR77       BIT RESET
                            	  8177: 
01:00203DF0 B016            	  8178:          CMP.B   (A6),D0        BIT SET
01:00203DF2 6612            	  8179:          BNE.S   MOVEMR44       NOT SPACE
                            	  8180: 
01:00203DF4 1D440001        	  8181: MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
01:00203DF8 1D450002        	  8182:          MOVE.B  D5,2(A6)       REG #
01:00203DFC 1D7C002D0003    	  8183:          MOVE.B  #'-',3(A6)     -
01:00203E02 568E            	  8184:          ADDQ.L  #3,A6
01:00203E04 602E            	  8185:          BRA.S   MOVEMR88
                            	  8186: 
01:00203E06 0C16002C        	  8187: MOVEMR44 CMPI.B  #',',(A6)
01:00203E0A 67E8            	  8188:          BEQ     MOVEMR33       COMMA SEPARATOR
                            	  8189: 
01:00203E0C BE16            	  8190:          CMP.B   (A6),D7        / SEPARATOR
01:00203E0E 67E4            	  8191:          BEQ     MOVEMR33
                            	  8192: 
01:00203E10 1D440001        	  8193:          MOVE.B  D4,1(A6)       REG TYPE
01:00203E14 1D450002        	  8194:          MOVE.B  D5,2(A6)       REG #
01:00203E18 1D7C002D0003    	  8195:          MOVE.B  #'-',3(A6)     - SEPARATOR
01:00203E1E 6014            	  8196:          BRA.S   MOVEMR88
                            	  8197: 
01:00203E20 0C16002C        	  8198: MOVEMR77 CMPI.B  #',',(A6)
01:00203E24 670E            	  8199:          BEQ.S   MOVEMR88       COMMA
                            	  8200: 
01:00203E26 B016            	  8201:          CMP.B   (A6),D0
01:00203E28 670A            	  8202:          BEQ.S   MOVEMR88       SPACE
01:00203E2A B02E0001        	  8203:          CMP.B   1(A6),D0
01:00203E2E 6702            	  8204:          BEQ.S   MOVEMR79       SPACE
01:00203E30 568E            	  8205:          ADDQ.L  #3,A6
01:00203E32 1C87            	  8206: MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
                            	  8207: 
01:00203E34 5285            	  8208: MOVEMR88 ADDQ.L  #1,D5
01:00203E36 D286            	  8209:          ADD.L   D6,D1          D1 = BIT POSITION
01:00203E38 0C050038        	  8210:          CMPI.B  #'8',D5
01:00203E3C 66AE            	  8211:          BNE     MOVEMR11
                            	  8212: 
01:00203E3E B016            	  8213:          CMP.B   (A6),D0        SPACE
01:00203E40 670A            	  8214:          BEQ.S   MOVEMR94
                            	  8215: 
01:00203E42 B02E0001        	  8216:          CMP.B   1(A6),D0       SPACE
01:00203E46 6704            	  8217:          BEQ.S   MOVEMR94
01:00203E48 568E            	  8218:          ADDQ.L  #3,A6
01:00203E4A 1C87            	  8219:          MOVE.B  D7,(A6)        /   SEPARATOR
                            	  8220: 
01:00203E4C 1A3C0030        	  8221: MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
01:00203E50 E04C            	  8222:          LSR.W   #8,D4          CHANGE REG TYPE
01:00203E52 6698            	  8223:          BNE     MOVEMR11       MORE
                            	  8224: 
01:00203E54 1C80            	  8225:          MOVE.B  D0,(A6)        SPACE
01:00203E56 4E75            	  8226:          RTS
                            	  8227: 
                            	  8228: DCODE68K DS      0
01:00203E58 4E51FFF0        	  8229:          LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
01:00203E5C 48E91007FFF0    	  8230:          MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
01:00203E62 49E9FFF0        	  8231:          LEA     DDATA(A1),A4        POINTS TO THE CODE.
                            	  8232: 
01:00203E66 264D            	  8233:          MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
01:00203E68 7050            	  8234:          MOVEQ   #BUFSIZE,D0
01:00203E6A 2C4B            	  8235:          MOVE.L  A3,A6
01:00203E6C 1CFC0020        	  8236: DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
01:00203E70 5380            	  8237:          SUBQ.L  #1,D0
01:00203E72 66F8            	  8238:          BNE     DEC311
                            	  8239: 
01:00203E74 2C4B            	  8240:          MOVE.L  A3,A6          FORMAT ADDRESS
01:00203E76 2029FFFC        	  8241:          MOVE.L  HISPC(A1),D0
01:00203E7A 6100DF4A        	  8242:          BSR     FRELADDR
                            	  8243: 
                            	  8244: * CHECK FOR KNOWN ILLEGAL CODES
01:00203E7E 3014            	  8245:          MOVE.W  (A4),D0
                            	  8246: 
01:00203E80 4BFA00C2        	  8247:          LEA     KI(PC),A5
01:00203E84 2C4D            	  8248:          MOVE.L  A5,A6
01:00203E86 548E            	  8249:          ADD.L   #KIEND-KI,A6
01:00203E88 B05D            	  8250: DEC404   CMP.W   (A5)+,D0
01:00203E8A 671A            	  8251:          BEQ.S   FE12           FERROR;  ILLEGAL CODE
01:00203E8C BBCE            	  8252:          CMP.L   A6,A5
01:00203E8E 66F8            	  8253:          BNE     DEC404
                            	  8254: 
                            	  8255: * LOOK FOR MATCH OF OP-CODE
                            	  8256: *
01:00203E90 4BFA00B4        	  8257:          LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
01:00203E94 4DFA02BA        	  8258:          LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
01:00203E98 3014            	  8259: DEC411   MOVE.W  (A4),D0        FIRST WORD
01:00203E9A C05D            	  8260:          AND.W   (A5)+,D0       MASK
01:00203E9C B05D            	  8261:          CMP.W   (A5)+,D0
01:00203E9E 6708            	  8262:          BEQ.S   DEC425         FOUND MATCH
01:00203EA0 548D            	  8263:          ADDQ.L  #2,A5          UPDATE POINTER
01:00203EA2 BBCE            	  8264:          CMP.L   A6,A5
01:00203EA4 66F2            	  8265:          BNE     DEC411         MORE TABLE
01:00203EA6 6072            	  8266: FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
                            	  8267: 
01:00203EA8 7C00            	  8268: DEC425   CLR.L   D6
01:00203EAA 1C1D            	  8269:          MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
01:00203EAC E58E            	  8270:          LSL.L   #2,D6
                            	  8271: 
01:00203EAE 7E00            	  8272:          CLR.L   D7
01:00203EB0 1E1D            	  8273:          MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
                            	  8274: 
                            	  8275: * MOVE OP-CODE TO BUFFER
                            	  8276: *
01:00203EB2 41FA029C        	  8277:          LEA     OPCTBL(PC),A0
01:00203EB6 4A47            	  8278: DEC510   TST     D7
01:00203EB8 6708            	  8279:          BEQ.S   DEC530         AT INDEX
01:00203EBA 4A18            	  8280: DEC515   TST.B   (A0)+
01:00203EBC 6AFC            	  8281:          BPL     DEC515         MOVE THROUGH FIELD
01:00203EBE 5387            	  8282:          SUBQ.L  #1,D7
01:00203EC0 60F4            	  8283:          BRA     DEC510
                            	  8284: 
01:00203EC2 701F            	  8285: DEC530   MOVEQ   #FOC,D0
01:00203EC4 4BF30000        	  8286:          LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
01:00203EC8 1018            	  8287: DEC535   MOVE.B  (A0)+,D0
01:00203ECA 08800007        	  8288:          BCLR    #7,D0
01:00203ECE 6604            	  8289:          BNE.S   DEC537         END OF MOVE
01:00203ED0 1AC0            	  8290:          MOVE.B  D0,(A5)+
01:00203ED2 60F4            	  8291:          BRA     DEC535
01:00203ED4 1AC0            	  8292: DEC537   MOVE.B  D0,(A5)+
                            	  8293: 
                            	  8294: * CALCULATE GOTO AND GO
                            	  8295: *
01:00203ED6 7602            	  8296:          MOVEQ   #2,D3          D3= SIZE
01:00203ED8 41FAF7CE        	  8297:          LEA     X(PC),A0
01:00203EDC D1C6            	  8298:          ADD.L   D6,A0
                            	  8299: 
01:00203EDE 7027            	  8300:          MOVEQ   #FOP,D0
01:00203EE0 4DF30000        	  8301:          LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
                            	  8302: 
01:00203EE4 3814            	  8303:          MOVE.W  (A4),D4        D4 = FIRST WORD
                            	  8304: 
01:00203EE6 1A3C002C        	  8305:          MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
                            	  8306: 
01:00203EEA 3E3C01FD        	  8307:          MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
                            	  8308: 
01:00203EEE 4ED0            	  8309:          JMP     (A0)
                            	  8310: *
                            	  8311: *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
                            	  8312: *  A5 = POINTER STORE OP-CODE
                            	  8313: *  A6 = POINTER STORE OPERAND
                            	  8314: *  D3 = SIZE = 2 BYTES
                            	  8315: *  D4 = FIRST WORD
                            	  8316: *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
                            	  8317: 
01:00203EF0 5483            	  8318: COMMON4  ADDQ.L  #2,D3          SIZE = 4
                            	  8319: 
01:00203EF2 2C03            	  8320: COMMON   MOVE.L  D3,D6          D6 = SIZE
01:00203EF4 1CFC0020        	  8321:          MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
                            	  8322: 
01:00203EF8 2A4E            	  8323:          MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
01:00203EFA 700A            	  8324:          MOVEQ   #FDATA,D0
01:00203EFC 4DF30000        	  8325:          LEA.L   (A3,D0),A6
                            	  8326: 
01:00203F00 301C            	  8327: COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
01:00203F02 54A9FFFC        	  8328:          ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
01:00203F06 6100DE9A        	  8329:          BSR     PNT4HX         FORMAT DATA. (A6)+
01:00203F0A 5503            	  8330:          SUBQ.B  #2,D3
01:00203F0C 66F2            	  8331:          BNE     COMMON35
                            	  8332: 
01:00203F0E 2C4D            	  8333:          MOVE.L  A5,A6          A6 = RESTORE END POINTER
                            	  8334: 
01:00203F10 2A4B            	  8335:          MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
                            	  8336: 
01:00203F12 2869FFFC        	  8337:          MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
01:00203F16 4E59            	  8338:          UNLK    A1               TO A4 AND UNDO FRAME.
                            	  8339: 
01:00203F18 4E75            	  8340:          RTS
                            	  8341: 
                            	  8342: 
                            	  8343: FERROR   DS      0
                            	  8344: * ILLEGAL INSTRUCTION
                            	  8345: *
01:00203F1A 701F            	  8346:          MOVEQ   #FOC,D0
01:00203F1C 4DF30000        	  8347:          LEA.L   (A3,D0),A6
01:00203F20 4BFA0018        	  8348:          LEA     MSG111(PC),A5
01:00203F24 101D            	  8349: FERROR35 MOVE.B  (A5)+,D0
01:00203F26 0C000004        	  8350:          CMPI.B  #EOT,D0
01:00203F2A 6704            	  8351:          BEQ.S   FERROR39
01:00203F2C 1CC0            	  8352:          MOVE.B  D0,(A6)+
01:00203F2E 60F4            	  8353:          BRA     FERROR35
                            	  8354: FERROR39 DS      0
                            	  8355: 
01:00203F30 3014            	  8356:          MOVE.W  (A4),D0
01:00203F32 6100DE6E        	  8357:          BSR     PNT4HX
                            	  8358: 
01:00203F36 7602            	  8359:          MOVEQ   #2,D3          SIZE
                            	  8360: 
01:00203F38 60B8            	  8361:          BRA     COMMON
                            	  8362: 
01:00203F3A 44432E5720202020	  8363: MSG111   DC.B    'DC.W    $',EOT
01:00203F42 24
01:00203F43 04
                            	  8364: 
                            	  8365: 
                            	  8366: 
01:00203F44 4AFB            	  8367: KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
                            	  8368: KIEND    DS      0
                            	  8369: 
                            	  8370: 
                            	  8371: *  \1   MASK
                            	  8372: *  \2   OP-CODE PATTERN
                            	  8373: *  \3   GOTO OFFSET
                            	  8374: *  \4   INDEX TO OP-CODE
                            	  8375: C68      MACRO
                            	  8376:          DC.W    $\1
                            	  8377:          DC.W    $\2
                            	  8378:          DC.B    (\3-X)>>2
                            	  8379:          DC.B    \4
                            	  8380:          ENDM
                            	  8381: 
                            	  8382: TBL      DS      0
                            	  8383:          C68     FEC0,E6C0,ISHIFT,56           RO
01:00203F46 FEC0            	     1M          DC.W    $FEC0
01:00203F48 E6C0            	     2M          DC.W    $E6C0
01:00203F4A F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F4B 38              	     4M          DC.B    56
                            	  8384:          C68     FEC0,E4C0,ISHIFT,57           ROX
01:00203F4C FEC0            	     1M          DC.W    $FEC0
01:00203F4E E4C0            	     2M          DC.W    $E4C0
01:00203F50 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F51 39              	     4M          DC.B    57
                            	  8385:          C68     FEC0,E2C0,ISHIFT,55           LS
01:00203F52 FEC0            	     1M          DC.W    $FEC0
01:00203F54 E2C0            	     2M          DC.W    $E2C0
01:00203F56 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F57 37              	     4M          DC.B    55
                            	  8386:          C68     FEC0,E0C0,ISHIFT,54           AS
01:00203F58 FEC0            	     1M          DC.W    $FEC0
01:00203F5A E0C0            	     2M          DC.W    $E0C0
01:00203F5C F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F5D 36              	     4M          DC.B    54
                            	  8387:          C68     F018,E018,ISHIFT,56           RO
01:00203F5E F018            	     1M          DC.W    $F018
01:00203F60 E018            	     2M          DC.W    $E018
01:00203F62 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F63 38              	     4M          DC.B    56
                            	  8388:          C68     F018,E010,ISHIFT,57           ROX
01:00203F64 F018            	     1M          DC.W    $F018
01:00203F66 E010            	     2M          DC.W    $E010
01:00203F68 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F69 39              	     4M          DC.B    57
                            	  8389:          C68     F018,E008,ISHIFT,55           LS
01:00203F6A F018            	     1M          DC.W    $F018
01:00203F6C E008            	     2M          DC.W    $E008
01:00203F6E F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F6F 37              	     4M          DC.B    55
                            	  8390:          C68     F018,E000,ISHIFT,54           AS
01:00203F70 F018            	     1M          DC.W    $F018
01:00203F72 E000            	     2M          DC.W    $E000
01:00203F74 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F75 36              	     4M          DC.B    54
                            	  8391:          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
01:00203F76 F0C0            	     1M          DC.W    $F0C0
01:00203F78 D0C0            	     2M          DC.W    $D0C0
01:00203F7A 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203F7B 04              	     4M          DC.B    4
                            	  8392:          C68     F130,D100,FORM12,53           ADDX
01:00203F7C F130            	     1M          DC.W    $F130
01:00203F7E D100            	     2M          DC.W    $D100
01:00203F80 88              	     3M          DC.B    (FORM12-X)>>2
01:00203F81 35              	     4M          DC.B    53
                            	  8393:          C68     F000,D000,FORM10EX,4            ADD
01:00203F82 F000            	     1M          DC.W    $F000
01:00203F84 D000            	     2M          DC.W    $D000
01:00203F86 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203F87 04              	     4M          DC.B    4
                            	  8394:          C68     F1F8,C188,FORM9,50            EXG
01:00203F88 F1F8            	     1M          DC.W    $F1F8
01:00203F8A C188            	     2M          DC.W    $C188
01:00203F8C 5B              	     3M          DC.B    (FORM9-X)>>2
01:00203F8D 32              	     4M          DC.B    50
                            	  8395:          C68     F1F8,C148,FORM8,50            EXG
01:00203F8E F1F8            	     1M          DC.W    $F1F8
01:00203F90 C148            	     2M          DC.W    $C148
01:00203F92 57              	     3M          DC.B    (FORM8-X)>>2
01:00203F93 32              	     4M          DC.B    50
                            	  8396:          C68     F1F8,C140,FORM7,50            EXG
01:00203F94 F1F8            	     1M          DC.W    $F1F8
01:00203F96 C140            	     2M          DC.W    $C140
01:00203F98 54              	     3M          DC.B    (FORM7-X)>>2
01:00203F99 32              	     4M          DC.B    50
                            	  8397:          C68     F1F0,C100,FORM12,49           ABCD
01:00203F9A F1F0            	     1M          DC.W    $F1F0
01:00203F9C C100            	     2M          DC.W    $C100
01:00203F9E 88              	     3M          DC.B    (FORM12-X)>>2
01:00203F9F 31              	     4M          DC.B    49
                            	  8398:          C68     F1C0,C1C0,FORM6D,48           MULS
01:00203FA0 F1C0            	     1M          DC.W    $F1C0
01:00203FA2 C1C0            	     2M          DC.W    $C1C0
01:00203FA4 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FA5 30              	     4M          DC.B    48
                            	  8399:          C68     F1C0,C0C0,FORM6D,47           MULU
01:00203FA6 F1C0            	     1M          DC.W    $F1C0
01:00203FA8 C0C0            	     2M          DC.W    $C0C0
01:00203FAA 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FAB 2F              	     4M          DC.B    47
                            	  8400:          C68     F000,C000,FORM10,2            AND
01:00203FAC F000            	     1M          DC.W    $F000
01:00203FAE C000            	     2M          DC.W    $C000
01:00203FB0 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FB1 02              	     4M          DC.B    2
                            	  8401:          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
01:00203FB2 F0C0            	     1M          DC.W    $F0C0
01:00203FB4 B0C0            	     2M          DC.W    $B0C0
01:00203FB6 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FB7 06              	     4M          DC.B    6
                            	  8402:          C68     F138,B108,FORM12A,46           CMPM
01:00203FB8 F138            	     1M          DC.W    $F138
01:00203FBA B108            	     2M          DC.W    $B108
01:00203FBC 97              	     3M          DC.B    (FORM12A-X)>>2
01:00203FBD 2E              	     4M          DC.B    46
                            	  8403:          C68     F100,B100,FORM10,5            EOR
01:00203FBE F100            	     1M          DC.W    $F100
01:00203FC0 B100            	     2M          DC.W    $B100
01:00203FC2 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FC3 05              	     4M          DC.B    5
                            	  8404:          C68     F000,B000,FORM10EX,6            CMP
01:00203FC4 F000            	     1M          DC.W    $F000
01:00203FC6 B000            	     2M          DC.W    $B000
01:00203FC8 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FC9 06              	     4M          DC.B    6
                            	  8405:          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
01:00203FCA F0C0            	     1M          DC.W    $F0C0
01:00203FCC 90C0            	     2M          DC.W    $90C0
01:00203FCE 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FCF 2C              	     4M          DC.B    44
                            	  8406:          C68     F130,9100,FORM12,45           SUBX
01:00203FD0 F130            	     1M          DC.W    $F130
01:00203FD2 9100            	     2M          DC.W    $9100
01:00203FD4 88              	     3M          DC.B    (FORM12-X)>>2
01:00203FD5 2D              	     4M          DC.B    45
                            	  8407:          C68     F000,9000,FORM10EX,44           SUB
01:00203FD6 F000            	     1M          DC.W    $F000
01:00203FD8 9000            	     2M          DC.W    $9000
01:00203FDA 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FDB 2C              	     4M          DC.B    44
                            	  8408:          C68     F1F0,8100,FORM12,43           SBCD
01:00203FDC F1F0            	     1M          DC.W    $F1F0
01:00203FDE 8100            	     2M          DC.W    $8100
01:00203FE0 88              	     3M          DC.B    (FORM12-X)>>2
01:00203FE1 2B              	     4M          DC.B    43
                            	  8409:          C68     F1C0,81C0,FORM6D,42           DIVS
01:00203FE2 F1C0            	     1M          DC.W    $F1C0
01:00203FE4 81C0            	     2M          DC.W    $81C0
01:00203FE6 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FE7 2A              	     4M          DC.B    42
                            	  8410:          C68     F1C0,80C0,FORM6D,41           DIVU
01:00203FE8 F1C0            	     1M          DC.W    $F1C0
01:00203FEA 80C0            	     2M          DC.W    $80C0
01:00203FEC 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FED 29              	     4M          DC.B    41
                            	  8411:          C68     F000,8000,FORM10,40           OR
01:00203FEE F000            	     1M          DC.W    $F000
01:00203FF0 8000            	     2M          DC.W    $8000
01:00203FF2 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FF3 28              	     4M          DC.B    40
                            	  8412:          C68     F100,7000,IMOVEQ,39           MOVEQ
01:00203FF4 F100            	     1M          DC.W    $F100
01:00203FF6 7000            	     2M          DC.W    $7000
01:00203FF8 A2              	     3M          DC.B    (IMOVEQ-X)>>2
01:00203FF9 27              	     4M          DC.B    39
                            	  8413:          C68     FF00,6100,IBSR,51             BSR
01:00203FFA FF00            	     1M          DC.W    $FF00
01:00203FFC 6100            	     2M          DC.W    $6100
01:00203FFE DE              	     3M          DC.B    (IBSR-X)>>2
01:00203FFF 33              	     4M          DC.B    51
                            	  8414:          C68     FF00,6000,IBSR,65             BRA
01:00204000 FF00            	     1M          DC.W    $FF00
01:00204002 6000            	     2M          DC.W    $6000
01:00204004 DE              	     3M          DC.B    (IBSR-X)>>2
01:00204005 41              	     4M          DC.B    65
                            	  8415:          C68     F000,6000,ICC,38              B
01:00204006 F000            	     1M          DC.W    $F000
01:00204008 6000            	     2M          DC.W    $6000
01:0020400A DD              	     3M          DC.B    (ICC-X)>>2
01:0020400B 26              	     4M          DC.B    38
                            	  8416:          C68     F0F8,50C8,IDBCC,37              DB
01:0020400C F0F8            	     1M          DC.W    $F0F8
01:0020400E 50C8            	     2M          DC.W    $50C8
01:00204010 D8              	     3M          DC.B    (IDBCC-X)>>2
01:00204011 25              	     4M          DC.B    37
                            	  8417:          C68     F0C0,50C0,ISCC,36             S
01:00204012 F0C0            	     1M          DC.W    $F0C0
01:00204014 50C0            	     2M          DC.W    $50C0
01:00204016 D5              	     3M          DC.B    (ISCC-X)>>2
01:00204017 24              	     4M          DC.B    36
                            	  8418:          C68     F100,5100,IQUICK,35           SUBQ
01:00204018 F100            	     1M          DC.W    $F100
01:0020401A 5100            	     2M          DC.W    $5100
01:0020401C A1              	     3M          DC.B    (IQUICK-X)>>2
01:0020401D 23              	     4M          DC.B    35
                            	  8419:          C68     F100,5000,IQUICK,34           ADDQ
01:0020401E F100            	     1M          DC.W    $F100
01:00204020 5000            	     2M          DC.W    $5000
01:00204022 A1              	     3M          DC.B    (IQUICK-X)>>2
01:00204023 22              	     4M          DC.B    34
                            	  8420:          C68     F1C0,41C0,FORM6A,33           LEA
01:00204024 F1C0            	     1M          DC.W    $F1C0
01:00204026 41C0            	     2M          DC.W    $41C0
01:00204028 46              	     3M          DC.B    (FORM6A-X)>>2
01:00204029 21              	     4M          DC.B    33
                            	  8421:          C68     F1C0,4180,FORM6D,32           CHK
01:0020402A F1C0            	     1M          DC.W    $F1C0
01:0020402C 4180            	     2M          DC.W    $4180
01:0020402E 4A              	     3M          DC.B    (FORM6D-X)>>2
01:0020402F 20              	     4M          DC.B    32
                            	  8422:          C68     FFC0,4EC0,FORM11SL,31         JMP
01:00204030 FFC0            	     1M          DC.W    $FFC0
01:00204032 4EC0            	     2M          DC.W    $4EC0
01:00204034 7F              	     3M          DC.B    (FORM11SL-X)>>2
01:00204035 1F              	     4M          DC.B    31
                            	  8423:          C68     FFC0,4E80,FORM11SL,30         JSR
01:00204036 FFC0            	     1M          DC.W    $FFC0
01:00204038 4E80            	     2M          DC.W    $4E80
01:0020403A 7F              	     3M          DC.B    (FORM11SL-X)>>2
01:0020403B 1E              	     4M          DC.B    30
                            	  8424:          C68     FFFF,4E77,SCOMMON,29           RTR
01:0020403C FFFF            	     1M          DC.W    $FFFF
01:0020403E 4E77            	     2M          DC.W    $4E77
01:00204040 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204041 1D              	     4M          DC.B    29
                            	  8425:          C68     FFFF,4E76,SCOMMON,28           TRAPV
01:00204042 FFFF            	     1M          DC.W    $FFFF
01:00204044 4E76            	     2M          DC.W    $4E76
01:00204046 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204047 1C              	     4M          DC.B    28
                            	  8426:          C68     FFFF,4E75,SCOMMON,27           RTS
01:00204048 FFFF            	     1M          DC.W    $FFFF
01:0020404A 4E75            	     2M          DC.W    $4E75
01:0020404C D4              	     3M          DC.B    (SCOMMON-X)>>2
01:0020404D 1B              	     4M          DC.B    27
                            	  8427:          C68     FFFF,4E73,SCOMMON,26           RTE
01:0020404E FFFF            	     1M          DC.W    $FFFF
01:00204050 4E73            	     2M          DC.W    $4E73
01:00204052 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204053 1A              	     4M          DC.B    26
                            	  8428:          C68     FFFF,4E72,ISTOP,25             STOP
01:00204054 FFFF            	     1M          DC.W    $FFFF
01:00204056 4E72            	     2M          DC.W    $4E72
01:00204058 13              	     3M          DC.B    (ISTOP-X)>>2
01:00204059 19              	     4M          DC.B    25
                            	  8429:          C68     FFFF,4E71,SCOMMON,24           NOP
01:0020405A FFFF            	     1M          DC.W    $FFFF
01:0020405C 4E71            	     2M          DC.W    $4E71
01:0020405E D4              	     3M          DC.B    (SCOMMON-X)>>2
01:0020405F 18              	     4M          DC.B    24
                            	  8430:          C68     FFFF,4E70,SCOMMON,23           RESET
01:00204060 FFFF            	     1M          DC.W    $FFFF
01:00204062 4E70            	     2M          DC.W    $4E70
01:00204064 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204065 17              	     4M          DC.B    23
                            	  8431:          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
01:00204066 FFF8            	     1M          DC.W    $FFF8
01:00204068 4E68            	     2M          DC.W    $4E68
01:0020406A AE              	     3M          DC.B    (IMVFUSP-X)>>2
01:0020406B 3C              	     4M          DC.B    60
                            	  8432:          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
01:0020406C FFF8            	     1M          DC.W    $FFF8
01:0020406E 4E60            	     2M          DC.W    $4E60
01:00204070 B7              	     3M          DC.B    (IMVTUSP-X)>>2
01:00204071 3C              	     4M          DC.B    60
                            	  8433:          C68     FFF8,4E58,FORM5,22            UNLINK
01:00204072 FFF8            	     1M          DC.W    $FFF8
01:00204074 4E58            	     2M          DC.W    $4E58
01:00204076 45              	     3M          DC.B    (FORM5-X)>>2
01:00204077 16              	     4M          DC.B    22
                            	  8434:          C68     FFF8,4E50,ILINK,21            LINK
01:00204078 FFF8            	     1M          DC.W    $FFF8
01:0020407A 4E50            	     2M          DC.W    $4E50
01:0020407C 36              	     3M          DC.B    (ILINK-X)>>2
01:0020407D 15              	     4M          DC.B    21
                            	  8435:          C68     FFF0,4E40,FORM4,20            TRAP
01:0020407E FFF0            	     1M          DC.W    $FFF0
01:00204080 4E40            	     2M          DC.W    $4E40
01:00204082 40              	     3M          DC.B    (FORM4-X)>>2
01:00204083 14              	     4M          DC.B    20
                            	  8436:          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
01:00204084 FF80            	     1M          DC.W    $FF80
01:00204086 4C80            	     2M          DC.W    $4C80
01:00204088 0C              	     3M          DC.B    (IMOVEMTR-X)>>2
01:00204089 0F              	     4M          DC.B    15
                            	  8437:          C68     FFC0,4AC0,FORM1A,19           TAS
01:0020408A FFC0            	     1M          DC.W    $FFC0
01:0020408C 4AC0            	     2M          DC.W    $4AC0
01:0020408E 3D              	     3M          DC.B    (FORM1A-X)>>2
01:0020408F 13              	     4M          DC.B    19
                            	  8438:          C68     FF00,4A00,FORM1,18            TST
01:00204090 FF00            	     1M          DC.W    $FF00
01:00204092 4A00            	     2M          DC.W    $4A00
01:00204094 3C              	     3M          DC.B    (FORM1-X)>>2
01:00204095 12              	     4M          DC.B    18
                            	  8439:          C68     FFF8,48C0,FORM3,17            EXT.L
01:00204096 FFF8            	     1M          DC.W    $FFF8
01:00204098 48C0            	     2M          DC.W    $48C0
01:0020409A 3F              	     3M          DC.B    (FORM3-X)>>2
01:0020409B 11              	     4M          DC.B    17
                            	  8440:          C68     FFF8,4880,FORM3,16            EXT.W
01:0020409C FFF8            	     1M          DC.W    $FFF8
01:0020409E 4880            	     2M          DC.W    $4880
01:002040A0 3F              	     3M          DC.B    (FORM3-X)>>2
01:002040A1 10              	     4M          DC.B    16
                            	  8441:          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
01:002040A2 FF80            	     1M          DC.W    $FF80
01:002040A4 4880            	     2M          DC.W    $4880
01:002040A6 00              	     3M          DC.B    (IMOVEMFR-X)>>2
01:002040A7 0F              	     4M          DC.B    15
                            	  8442:          C68     FFF8,4840,FORM3,14            SWAP
01:002040A8 FFF8            	     1M          DC.W    $FFF8
01:002040AA 4840            	     2M          DC.W    $4840
01:002040AC 3F              	     3M          DC.B    (FORM3-X)>>2
01:002040AD 0E              	     4M          DC.B    14
                            	  8443:          C68     FFC0,4840,FORM11,13           PEA
01:002040AE FFC0            	     1M          DC.W    $FFC0
01:002040B0 4840            	     2M          DC.W    $4840
01:002040B2 7C              	     3M          DC.B    (FORM11-X)>>2
01:002040B3 0D              	     4M          DC.B    13
                            	  8444:          C68     FFC0,4800,FORM1A,12           NBCD
01:002040B4 FFC0            	     1M          DC.W    $FFC0
01:002040B6 4800            	     2M          DC.W    $4800
01:002040B8 3D              	     3M          DC.B    (FORM1A-X)>>2
01:002040B9 0C              	     4M          DC.B    12
                            	  8445:          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
01:002040BA FFC0            	     1M          DC.W    $FFC0
01:002040BC 46C0            	     2M          DC.W    $46C0
01:002040BE B2              	     3M          DC.B    (IMVTSR-X)>>2
01:002040BF 3B              	     4M          DC.B    59
                            	  8446:          C68     FF00,4600,FORM1,11            NOT
01:002040C0 FF00            	     1M          DC.W    $FF00
01:002040C2 4600            	     2M          DC.W    $4600
01:002040C4 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040C5 0B              	     4M          DC.B    11
                            	  8447:          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
01:002040C6 FFC0            	     1M          DC.W    $FFC0
01:002040C8 44C0            	     2M          DC.W    $44C0
01:002040CA BA              	     3M          DC.B    (IMVTCCR-X)>>2
01:002040CB 3B              	     4M          DC.B    59
                            	  8448:          C68     FF00,4400,FORM1,10            NEG
01:002040CC FF00            	     1M          DC.W    $FF00
01:002040CE 4400            	     2M          DC.W    $4400
01:002040D0 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040D1 0A              	     4M          DC.B    10
                            	  8449:          C68     FF00,4200,FORM1,9             CLR
01:002040D2 FF00            	     1M          DC.W    $FF00
01:002040D4 4200            	     2M          DC.W    $4200
01:002040D6 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040D7 09              	     4M          DC.B    9
                            	  8450:          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
01:002040D8 FFC0            	     1M          DC.W    $FFC0
01:002040DA 40C0            	     2M          DC.W    $40C0
01:002040DC AA              	     3M          DC.B    (IMVFSR-X)>>2
01:002040DD 3B              	     4M          DC.B    59
                            	  8451:          C68     FF00,4000,FORM1,8             NEGX
01:002040DE FF00            	     1M          DC.W    $FF00
01:002040E0 4000            	     2M          DC.W    $4000
01:002040E2 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040E3 08              	     4M          DC.B    8
                            	  8452:          C68     F000,3000,IMOVE,59            MOVE.W
01:002040E4 F000            	     1M          DC.W    $F000
01:002040E6 3000            	     2M          DC.W    $3000
01:002040E8 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040E9 3B              	     4M          DC.B    59
                            	  8453:          C68     F000,2000,IMOVE,60            MOVE.L
01:002040EA F000            	     1M          DC.W    $F000
01:002040EC 2000            	     2M          DC.W    $2000
01:002040EE 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040EF 3C              	     4M          DC.B    60
                            	  8454:          C68     F000,1000,IMOVE,58            MOVE.B
01:002040F0 F000            	     1M          DC.W    $F000
01:002040F2 1000            	     2M          DC.W    $1000
01:002040F4 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040F5 3A              	     4M          DC.B    58
                            	  8455:          C68     FF00,0C00,IMMED,6             CMP       #
01:002040F6 FF00            	     1M          DC.W    $FF00
01:002040F8 0C00            	     2M          DC.W    $0C00
01:002040FA 18              	     3M          DC.B    (IMMED-X)>>2
01:002040FB 06              	     4M          DC.B    6
                            	  8456:          C68     FF00,0A00,IMMED,5             EOR       #
01:002040FC FF00            	     1M          DC.W    $FF00
01:002040FE 0A00            	     2M          DC.W    $0A00
01:00204100 18              	     3M          DC.B    (IMMED-X)>>2
01:00204101 05              	     4M          DC.B    5
                            	  8457:          C68     FF00,0600,IMMED,4             ADD       #
01:00204102 FF00            	     1M          DC.W    $FF00
01:00204104 0600            	     2M          DC.W    $0600
01:00204106 18              	     3M          DC.B    (IMMED-X)>>2
01:00204107 04              	     4M          DC.B    4
                            	  8458:          C68     FF00,0400,IMMED,3             SUB       #
01:00204108 FF00            	     1M          DC.W    $FF00
01:0020410A 0400            	     2M          DC.W    $0400
01:0020410C 18              	     3M          DC.B    (IMMED-X)>>2
01:0020410D 03              	     4M          DC.B    3
                            	  8459:          C68     FF00,0200,IMMED,2             AND       #
01:0020410E FF00            	     1M          DC.W    $FF00
01:00204110 0200            	     2M          DC.W    $0200
01:00204112 18              	     3M          DC.B    (IMMED-X)>>2
01:00204113 02              	     4M          DC.B    2
                            	  8460:          C68     FF00,0000,IMMED,1             OR        #
01:00204114 FF00            	     1M          DC.W    $FF00
01:00204116 0000            	     2M          DC.W    $0000
01:00204118 18              	     3M          DC.B    (IMMED-X)>>2
01:00204119 01              	     4M          DC.B    1
                            	  8461:          C68     F138,0108,IMOVEP,0            MOVEP
01:0020411A F138            	     1M          DC.W    $F138
01:0020411C 0108            	     2M          DC.W    $0108
01:0020411E BE              	     3M          DC.B    (IMOVEP-X)>>2
01:0020411F 00              	     4M          DC.B    0
                            	  8462:          C68     FFC0,08C0,ISETS,64            BSET
01:00204120 FFC0            	     1M          DC.W    $FFC0
01:00204122 08C0            	     2M          DC.W    $08C0
01:00204124 F0              	     3M          DC.B    (ISETS-X)>>2
01:00204125 40              	     4M          DC.B    64
                            	  8463:          C68     FFC0,0880,ISETS,63            BCLR
01:00204126 FFC0            	     1M          DC.W    $FFC0
01:00204128 0880            	     2M          DC.W    $0880
01:0020412A F0              	     3M          DC.B    (ISETS-X)>>2
01:0020412B 3F              	     4M          DC.B    63
                            	  8464:          C68     FFC0,0840,ISETS,62            BCHG
01:0020412C FFC0            	     1M          DC.W    $FFC0
01:0020412E 0840            	     2M          DC.W    $0840
01:00204130 F0              	     3M          DC.B    (ISETS-X)>>2
01:00204131 3E              	     4M          DC.B    62
                            	  8465:          C68     FFC0,0800,ISETS,61            BTST
01:00204132 FFC0            	     1M          DC.W    $FFC0
01:00204134 0800            	     2M          DC.W    $0800
01:00204136 F0              	     3M          DC.B    (ISETS-X)>>2
01:00204137 3D              	     4M          DC.B    61
                            	  8466:          C68     F1C0,01C0,ISETD,64            BSET
01:00204138 F1C0            	     1M          DC.W    $F1C0
01:0020413A 01C0            	     2M          DC.W    $01C0
01:0020413C EC              	     3M          DC.B    (ISETD-X)>>2
01:0020413D 40              	     4M          DC.B    64
                            	  8467:          C68     F1C0,0180,ISETD,63            BCLR
01:0020413E F1C0            	     1M          DC.W    $F1C0
01:00204140 0180            	     2M          DC.W    $0180
01:00204142 EC              	     3M          DC.B    (ISETD-X)>>2
01:00204143 3F              	     4M          DC.B    63
                            	  8468:          C68     F1C0,0140,ISETD,62            BCHG
01:00204144 F1C0            	     1M          DC.W    $F1C0
01:00204146 0140            	     2M          DC.W    $0140
01:00204148 EC              	     3M          DC.B    (ISETD-X)>>2
01:00204149 3E              	     4M          DC.B    62
                            	  8469:          C68     F1C0,0100,ISETD,61            BTST
01:0020414A F1C0            	     1M          DC.W    $F1C0
01:0020414C 0100            	     2M          DC.W    $0100
01:0020414E EC              	     3M          DC.B    (ISETD-X)>>2
01:0020414F 3D              	     4M          DC.B    61
                            	  8470: TBLE     DS      0
                            	  8471: 
                            	  8472: N68      MACRO
                            	  8473:          DC.B    '\1',128+'\2'        \1\2
                            	  8474:          ENDM
                            	  8475: 
                            	  8476: OPCTBL   DS      0
                            	  8477:          N68     MOVE,P    0
01:00204150 4D4F5645        	     1M          DC.B    'MOVE',128+'P'        MOVEP
01:00204154 D0
                            	  8478:          N68     O,R       1
01:00204155 4F              	     1M          DC.B    'O',128+'R'        OR
01:00204156 D2
                            	  8479:          N68     AN,D      2
01:00204157 414E            	     1M          DC.B    'AN',128+'D'        AND
01:00204159 C4
                            	  8480:          N68     SU,B      3
01:0020415A 5355            	     1M          DC.B    'SU',128+'B'        SUB
01:0020415C C2
                            	  8481:          N68     AD,D      4
01:0020415D 4144            	     1M          DC.B    'AD',128+'D'        ADD
01:0020415F C4
                            	  8482:          N68     EO,R      5
01:00204160 454F            	     1M          DC.B    'EO',128+'R'        EOR
01:00204162 D2
                            	  8483:          N68     CM,P      6
01:00204163 434D            	     1M          DC.B    'CM',128+'P'        CMP
01:00204165 D0
                            	  8484:          N68     MOV,E     7
01:00204166 4D4F56          	     1M          DC.B    'MOV',128+'E'        MOVE
01:00204169 C5
                            	  8485:          N68     NEG,X     8
01:0020416A 4E4547          	     1M          DC.B    'NEG',128+'X'        NEGX
01:0020416D D8
                            	  8486:          N68     CL,R      9
01:0020416E 434C            	     1M          DC.B    'CL',128+'R'        CLR
01:00204170 D2
                            	  8487:          N68     NE,G      10
01:00204171 4E45            	     1M          DC.B    'NE',128+'G'        NEG
01:00204173 C7
                            	  8488:          N68     NO,T      11
01:00204174 4E4F            	     1M          DC.B    'NO',128+'T'        NOT
01:00204176 D4
                            	  8489:          N68     NBC,D     12
01:00204177 4E4243          	     1M          DC.B    'NBC',128+'D'        NBCD
01:0020417A C4
                            	  8490:          N68     PEA.,L    13
01:0020417B 5045412E        	     1M          DC.B    'PEA.',128+'L'        PEA.L
01:0020417F CC
                            	  8491:          N68     SWAP.,W   14
01:00204180 535741502E      	     1M          DC.B    'SWAP.',128+'W'        SWAP.W
01:00204185 D7
                            	  8492:          N68     MOVE,M    15
01:00204186 4D4F5645        	     1M          DC.B    'MOVE',128+'M'        MOVEM
01:0020418A CD
                            	  8493:          N68     EXT.,W    16
01:0020418B 4558542E        	     1M          DC.B    'EXT.',128+'W'        EXT.W
01:0020418F D7
                            	  8494:          N68     EXT.,L    17
01:00204190 4558542E        	     1M          DC.B    'EXT.',128+'L'        EXT.L
01:00204194 CC
                            	  8495:          N68     TS,T      18
01:00204195 5453            	     1M          DC.B    'TS',128+'T'        TST
01:00204197 D4
                            	  8496:          N68     TAS.,B    19
01:00204198 5441532E        	     1M          DC.B    'TAS.',128+'B'        TAS.B
01:0020419C C2
                            	  8497:          N68     TRA,P     20
01:0020419D 545241          	     1M          DC.B    'TRA',128+'P'        TRAP
01:002041A0 D0
                            	  8498:          N68     LIN,K     21
01:002041A1 4C494E          	     1M          DC.B    'LIN',128+'K'        LINK
01:002041A4 CB
                            	  8499:          N68     UNL,K     22
01:002041A5 554E4C          	     1M          DC.B    'UNL',128+'K'        UNLK
01:002041A8 CB
                            	  8500:          N68     RESE,T    23
01:002041A9 52455345        	     1M          DC.B    'RESE',128+'T'        RESET
01:002041AD D4
                            	  8501:          N68     NO,P      24
01:002041AE 4E4F            	     1M          DC.B    'NO',128+'P'        NOP
01:002041B0 D0
                            	  8502:          N68     STO,P     25
01:002041B1 53544F          	     1M          DC.B    'STO',128+'P'        STOP
01:002041B4 D0
                            	  8503:          N68     RT,E      26
01:002041B5 5254            	     1M          DC.B    'RT',128+'E'        RTE
01:002041B7 C5
                            	  8504:          N68     RT,S      27
01:002041B8 5254            	     1M          DC.B    'RT',128+'S'        RTS
01:002041BA D3
                            	  8505:          N68     TRAP,V    28
01:002041BB 54524150        	     1M          DC.B    'TRAP',128+'V'        TRAPV
01:002041BF D6
                            	  8506:          N68     RT,R      29
01:002041C0 5254            	     1M          DC.B    'RT',128+'R'        RTR
01:002041C2 D2
                            	  8507:          N68     JS,R      30
01:002041C3 4A53            	     1M          DC.B    'JS',128+'R'        JSR
01:002041C5 D2
                            	  8508:          N68     JM,P      31
01:002041C6 4A4D            	     1M          DC.B    'JM',128+'P'        JMP
01:002041C8 D0
                            	  8509:          N68     CHK.,W    32
01:002041C9 43484B2E        	     1M          DC.B    'CHK.',128+'W'        CHK.W
01:002041CD D7
                            	  8510:          N68     LEA.,L    33
01:002041CE 4C45412E        	     1M          DC.B    'LEA.',128+'L'        LEA.L
01:002041D2 CC
                            	  8511:          N68     ADD,Q     34
01:002041D3 414444          	     1M          DC.B    'ADD',128+'Q'        ADDQ
01:002041D6 D1
                            	  8512:          N68     SUB,Q     35
01:002041D7 535542          	     1M          DC.B    'SUB',128+'Q'        SUBQ
01:002041DA D1
01:002041DB D3              	  8513:          DC.B    128+'S'   36
                            	  8514:          N68     D,B       37
01:002041DC 44              	     1M          DC.B    'D',128+'B'        DB
01:002041DD C2
01:002041DE C2              	  8515:          DC.B    128+'B'   38
                            	  8516:          N68     MOVEQ.,L  .....39
01:002041DF 4D4F5645512E    	     1M          DC.B    'MOVEQ.',128+'L'        MOVEQ.L
01:002041E5 CC
                            	  8517:          N68     O,R       40
01:002041E6 4F              	     1M          DC.B    'O',128+'R'        OR
01:002041E7 D2
                            	  8518:          N68     DIVU.,W   41
01:002041E8 444956552E      	     1M          DC.B    'DIVU.',128+'W'        DIVU.W
01:002041ED D7
                            	  8519:          N68     DIVS.,W   42
01:002041EE 444956532E      	     1M          DC.B    'DIVS.',128+'W'        DIVS.W
01:002041F3 D7
                            	  8520:          N68     SBC,D     43
01:002041F4 534243          	     1M          DC.B    'SBC',128+'D'        SBCD
01:002041F7 C4
                            	  8521:          N68     SU,B      44
01:002041F8 5355            	     1M          DC.B    'SU',128+'B'        SUB
01:002041FA C2
                            	  8522:          N68     SUB,X     45
01:002041FB 535542          	     1M          DC.B    'SUB',128+'X'        SUBX
01:002041FE D8
                            	  8523:          N68     CMP,M     46
01:002041FF 434D50          	     1M          DC.B    'CMP',128+'M'        CMPM
01:00204202 CD
                            	  8524:          N68     MULU.,W   47
01:00204203 4D554C552E      	     1M          DC.B    'MULU.',128+'W'        MULU.W
01:00204208 D7
                            	  8525:          N68     MULS.,W   48
01:00204209 4D554C532E      	     1M          DC.B    'MULS.',128+'W'        MULS.W
01:0020420E D7
                            	  8526:          N68     ABC,D    49
01:0020420F 414243          	     1M          DC.B    'ABC',128+'D'        ABCD
01:00204212 C4
                            	  8527:          N68     EX,G      50
01:00204213 4558            	     1M          DC.B    'EX',128+'G'        EXG
01:00204215 C7
                            	  8528:          N68     BS,R      .....51
01:00204216 4253            	     1M          DC.B    'BS',128+'R'        BSR
01:00204218 D2
                            	  8529:          N68     NUL,L     .....52
01:00204219 4E554C          	     1M          DC.B    'NUL',128+'L'        NULL
01:0020421C CC
                            	  8530:          N68     ADD,X     53
01:0020421D 414444          	     1M          DC.B    'ADD',128+'X'        ADDX
01:00204220 D8
                            	  8531:          N68     A,S       54
01:00204221 41              	     1M          DC.B    'A',128+'S'        AS
01:00204222 D3
                            	  8532:          N68     L,S       55
01:00204223 4C              	     1M          DC.B    'L',128+'S'        LS
01:00204224 D3
                            	  8533:          N68     R,O       56
01:00204225 52              	     1M          DC.B    'R',128+'O'        RO
01:00204226 CF
                            	  8534:          N68     RO,X      57
01:00204227 524F            	     1M          DC.B    'RO',128+'X'        ROX
01:00204229 D8
                            	  8535:          N68     MOVE.,B   58
01:0020422A 4D4F56452E      	     1M          DC.B    'MOVE.',128+'B'        MOVE.B
01:0020422F C2
                            	  8536:          N68     MOVE.,W   59
01:00204230 4D4F56452E      	     1M          DC.B    'MOVE.',128+'W'        MOVE.W
01:00204235 D7
                            	  8537:          N68     MOVE.,L   60
01:00204236 4D4F56452E      	     1M          DC.B    'MOVE.',128+'L'        MOVE.L
01:0020423B CC
                            	  8538:          N68     BTS,T     61
01:0020423C 425453          	     1M          DC.B    'BTS',128+'T'        BTST
01:0020423F D4
                            	  8539:          N68     BCH,G     62
01:00204240 424348          	     1M          DC.B    'BCH',128+'G'        BCHG
01:00204243 C7
                            	  8540:          N68     BCL,R     63
01:00204244 42434C          	     1M          DC.B    'BCL',128+'R'        BCLR
01:00204247 D2
                            	  8541:          N68     BSE,T     64
01:00204248 425345          	     1M          DC.B    'BSE',128+'T'        BSET
01:0020424B D4
                            	  8542:          N68     BR,A      65
01:0020424C 4252            	     1M          DC.B    'BR',128+'A'        BRA
01:0020424E C1
                            	  8543: 
01:0020424F 00              	  8544:          DC.B    0              PAD BYTE
                            	  8545: 
                            	  8546: 
                            	  8547: 
                            	  8548: *-------------------------------------------------------------------------
                            	  8549: * File TRAP14    Trap 14 handler of "TUTOR"                       06/25/82
                            	  8550: 
                            	  8551: *        CALLING SEQUENCE
                            	  8552: *                  D7 = XXXXXXFF   WHERE "FF" IF FUNCTION NUMBER
                            	  8553: *                  TRAP      #14
                            	  8554: 
                            	  8555: TRAP14
01:00204250 48E74160        	  8556:          MOVEM.L D1/D7/A1-A2,-(A7)
                            	  8557: 
01:00204254 22780656        	  8558:          MOVE.L  CTLINK,A1
01:00204258 1211            	  8559: T100     MOVE.B  (A1),D1        D1 = FUNCTION FROM TABLE
01:0020425A 0C0100FF        	  8560:          CMPI.B  #$FF,D1
01:0020425E 6740            	  8561:          BEQ.S   T500           END OF TABLE
                            	  8562: 
01:00204260 0C0100FE        	  8563:          CMPI.B  #$FE,D1
01:00204264 6774            	  8564:          BEQ.S   T600           LINK IN LIST
                            	  8565: 
01:00204266 B207            	  8566:          CMP.B   D7,D1
01:00204268 6704            	  8567:          BEQ.S   T400           FOUND MATCH
                            	  8568: 
01:0020426A 5889            	  8569:          ADDQ.L  #4,A1
01:0020426C 60EA            	  8570:          BRA     T100
                            	  8571: 
01:0020426E 2211            	  8572: T400     MOVE.L  (A1),D1        FFAAAAAA
01:00204270 E181            	  8573:          ASL.L   #8,D1          AAAAAA..
01:00204272 E089            	  8574:          LSR.L   #8,D1          00AAAAAA  GO TO ADDRESS
                            	  8575: 
01:00204274 082F00050010    	  8576:          BTST.B  #5,16(A7)
01:0020427A 6710            	  8577:          BEQ.S   T450           CALL FROM USER MODE
                            	  8578: 
                            	  8579: *  CALL FROM SUPERVISOR MODE
                            	  8580: * STACK (WORDS)
                            	  8581: *   +0   D1 HIGH
                            	  8582: *   +2   D1 LOW
                            	  8583: *   +4   D7 HIGH
                            	  8584: *   +6   D7 LOW
                            	  8585: *   +8   A1 HIGH
                            	  8586: *   +10  A1 LOW
                            	  8587: *   +12  A2 HIGH              STATUS REG
                            	  8588: *   +14  A2 LOW               GOTO HIGH
                            	  8589: *   +16  STATUS REG           GOTO LOW
                            	  8590: *   +18  RETURN HIGH        RETURN HIGH
                            	  8591: *   +20  RETURN LOW         RETURN LOW
                            	  8592: *
01:0020427C 2F6F0010000C    	  8593:          MOVE.L  16(A7),12(A7)  SR
01:00204282 2F41000E        	  8594:          MOVE.L  D1,14(A7)      GOTO ADDRESS
01:00204286 4CDF0282        	  8595:          MOVEM.L (A7)+,D1/D7/A1 RESTORE REGISTERS
01:0020428A 4E73            	  8596:          RTE                    GOTO (AND TRIM STACK)
                            	  8597: 
                            	  8598: * STACK (WORDS)
                            	  8599: *   +0   D1 HIGH
                            	  8600: *   +2   D1 LOW
                            	  8601: *   +4   D7 HIGH
                            	  8602: *   +6   D7 LOW
                            	  8603: *   +8   A1 HIGH
                            	  8604: *   +10  A1 LOW
                            	  8605: *   +12  A2 HIGH                                 (USER STACK)
                            	  8606: *   +14  A2 LOW
                            	  8607: *   +16  STATUS REG         STATUS REG
                            	  8608: *   +18  RETURN HIGH        GOTO HIGH            RETURN HIGH
                            	  8609: *   +20  RETURN LOW         GOTO LOW             RETURN LOW
                            	  8610: *
                            	  8611: * CALL FROM USER MODE
01:0020428C 2E2F0012        	  8612: T450     MOVE.L  18(A7),D7      RETURN PC
01:00204290 2F410012        	  8613:          MOVE.L  D1,18(A7)      GOTO ADDRESS
01:00204294 4E69            	  8614:          MOVE.L  USP,A1         POINTER TO USER STACK
01:00204296 2307            	  8615:          MOVE.L  D7,-(A1)       RETURN PC TO USER STACK
01:00204298 4E61            	  8616:          MOVE.L  A1,USP         UPDATED USER STACK POINTER
01:0020429A 4CDF0682        	  8617:          MOVEM.L (A7)+,D1/D7/A1/A2
01:0020429E 4E73            	  8618:          RTE
                            	  8619: 
01:002042A0 4CDF0682        	  8620: T500     MOVEM.L (A7)+,D1/D7/A1/A2
                            	  8621:          SAVEREGS
01:002042A4 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002042A8 4FFA000A        	     2M          LEA     SV_000392(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002042AC 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002042B0 6000CDD2        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000392     DS      0
01:002042B4 4BFA0012        	  8622:          LEA     MSGT14(PC),A5
01:002042B8 6100C230        	  8623:          BSR     FIXDATA
01:002042BC 6100DD24        	  8624:          BSR     OUT1CR
01:002042C0 6100CA3A        	  8625:          BSR     TDISPLY
01:002042C4 6000C368        	  8626:          BRA     MACSBUG
                            	  8627: 
01:002042C8 554E444546494E45	  8628: MSGT14   DC.B    'UNDEFINED TRAP 14',EOT
01:002042D0 4420545241502031
01:002042D8 34
01:002042D9 04
                            	  8629: 
                            	  8630: 
                            	  8631: 
                            	  8632: 
                            	  8633: 
01:002042DA 2251            	  8634: T600     MOVE.L  (A1),A1
01:002042DC 6000FF7A        	  8635:          BRA     T100
                            	  8636: 
                            	  8637: T700     DS      0              253 APPEND NEW TABLE
01:002042E0 2208            	  8638:          MOVE.L  A0,D1          ..AAAAAA
01:002042E2 20780656        	  8639:          MOVE.L  CTLINK,A0      A0 = LINK TO BE RETURNED
01:002042E6 E199            	  8640:          ROL.L   #8,D1          AAAAAA..
01:002042E8 123C00FE        	  8641:          MOVE.B  #$FE,D1        AAAAAAFE
01:002042EC E099            	  8642:          ROR.L   #8,D1          FEAAAAAA
01:002042EE 21C10656        	  8643:          MOVE.L  D1,CTLINK
01:002042F2 4E75            	  8644:          RTS
                            	  8645: 
                            	  8646: 
                            	  8647: *  CREATE ENTRY TO FUNCTION/ADDRESS TABLE
                            	  8648: *    FFAAAAAA
                            	  8649: *    FF......      FUNCTION NUMBER
                            	  8650: *    ..AAAAAA      ADDRESS OF FUNCTION
                            	  8651: 
                            	  8652: FADDR    MACRO   \1,\2
                            	  8653:          DC.L    (\1<<24)+\2
                            	  8654:          ENDM
                            	  8655: 
                            	  8656: 
                            	  8657: CT       FADDR   253,T700       APPEND NEW TABLE
01:002042F4 FD2042E0        	     1M          DC.L    (253<<24)+T700
                            	  8658:          FADDR   252,FIXDADD    APPEND DATA (A5) TO BUFFER (A6)+
01:002042F8 FC2004EE        	     1M          DC.L    (252<<24)+FIXDADD
                            	  8659:          FADDR   251,FIXBUF     SET A5 & A6 AS POINTERS TO BUFFER
01:002042FC FB202088        	     1M          DC.L    (251<<24)+FIXBUF
                            	  8660:          FADDR   250,FIXDATA    MOVE DATA (A5) TO BUFFER; A5=BUFFER A6
01:00204300 FA2004EA        	     1M          DC.L    (250<<24)+FIXDATA
                            	  8661:          FADDR   249,FIXDCRLF
01:00204304 F92004FE        	     1M          DC.L    (249<<24)+FIXDCRLF
                            	  8662:          FADDR   248,F100       OUTPUT CHAR PORT1  D0=CHAR
01:00204308 F8204368        	     1M          DC.L    (248<<24)+F100
                            	  8663:          FADDR   247,F110       INPUT CHAR PORT1  D0=CHAR
01:0020430C F7204370        	     1M          DC.L    (247<<24)+F110
                            	  8664:          FADDR   244,CHRPRINT   OUTPUT CHAR PORT3 D0=CHAR
01:00204310 F420216C        	     1M          DC.L    (244<<24)+CHRPRINT
                            	  8665:          FADDR   243,OUTPUT     OUTPUT STRING PORT1 (A5) (A6)
01:00204314 F3201FFC        	     1M          DC.L    (243<<24)+OUTPUT
                            	  8666:          FADDR   242,OUTPUT21   OUTPUT STRING PORT2 (A5) (A6)
01:00204318 F220201C        	     1M          DC.L    (242<<24)+OUTPUT21
                            	  8667:          FADDR   241,PORTIN1    INPUT STRING PORT1  (A5) (A6)
01:0020431C F1202090        	     1M          DC.L    (241<<24)+PORTIN1
                            	  8668:          FADDR   240,PORTIN20   INPUT STRING PORT2  (A5) (A6)
01:00204320 F02023C6        	     1M          DC.L    (240<<24)+PORTIN20
                            	  8669:          FADDR   239,TAPEOUT    OUTPUT STRING TO PORT4 (A5) (A6)
01:00204324 EF20228E        	     1M          DC.L    (239<<24)+TAPEOUT
                            	  8670:          FADDR   238,TAPEIN     INPUT STRING FROM PORT4 (A5) (A6)
01:00204328 EE20248E        	     1M          DC.L    (238<<24)+TAPEIN
                            	  8671:          FADDR   237,PRCRLF     OUTPUT STRING TO PORT3 (A5) (A6)
01:0020432C ED202158        	     1M          DC.L    (237<<24)+PRCRLF
                            	  8672:          FADDR   236,HEX2DEC    CONVERT HEX D0 TO DECIMAL (A6)+
01:00204330 EC201354        	     1M          DC.L    (236<<24)+HEX2DEC
                            	  8673:          FADDR   235,GETHEX     GET HEX CHAR INTO D0 FROM (A5)+
01:00204334 EB201F98        	     1M          DC.L    (235<<24)+GETHEX
                            	  8674:          FADDR   234,PUTHEX     FORMAT HEX CHAR FROM D0 TO (A6)+
01:00204338 EA201DB2        	     1M          DC.L    (234<<24)+PUTHEX
                            	  8675:          FADDR   233,PNT2HX     FORMAT 2 HEX CHAR FROM D0 TO (A6)+
01:0020433C E9201DAA        	     1M          DC.L    (233<<24)+PNT2HX
                            	  8676:          FADDR   232,PNT4HX     FORMAT 4 HEX CHAR FROM D0 TO (A6)+
01:00204340 E8201DA2        	     1M          DC.L    (232<<24)+PNT4HX
                            	  8677:          FADDR   231,PNT6HX     FORMAT 6 HEX CHAR FROM D0 TO (A6)+
01:00204344 E7201D9C        	     1M          DC.L    (231<<24)+PNT6HX
                            	  8678:          FADDR   230,PNT8HX     FORMAT 8 HEX CHAR FROM D0 TO (A6)+
01:00204348 E6201D94        	     1M          DC.L    (230<<24)+PNT8HX
                            	  8679:          FADDR   229,START      RESTART TUTOR INITIALIZE EVERYTHING
01:0020434C E520053A        	     1M          DC.L    (229<<24)+START
                            	  8680:          FADDR   228,MACSBUG    GOTO TUTOR;   PRINT PROMPT
01:00204350 E420062E        	     1M          DC.L    (228<<24)+MACSBUG
                            	  8681:          FADDR   227,F120       OUTPUT STRING,CR,LF PORT1 (A5) (A6)
01:00204354 E3204378        	     1M          DC.L    (227<<24)+F120
                            	  8682:          FADDR   226,GETNUMA    GET HEX NUMBER (A5)+ INTO D0
01:00204358 E2201EE8        	     1M          DC.L    (226<<24)+GETNUMA
                            	  8683:          FADDR   225,GETNUMD    GET DECIMAL NUMBER (A5)+ INTO D0
01:0020435C E1201EE0        	     1M          DC.L    (225<<24)+GETNUMD
                            	  8684:          FADDR   224,PORTIN1N   INPUT STRING PORT1 (NO AUTO LF)
01:00204360 E02020A2        	     1M          DC.L    (224<<24)+PORTIN1N
                            	  8685: 
                            	  8686:          FADDR   255,$FFFFFF    END KEY
01:00204364 FFFFFFFF        	     1M          DC.L    (255<<24)+$FFFFFF
                            	  8687: 
01:00204368 6100DCFA        	  8688: F100     BSR     GETSER1        A0 = PORT1 ADDRESS
01:0020436C 6000DE9E        	  8689:          BRA     OUTCH
                            	  8690: 
01:00204370 6100DCF2        	  8691: F110     BSR     GETSER1        A0 = PORT1 ADDRESS
01:00204374 6000E022        	  8692:          BRA     INCHNE
                            	  8693: 
01:00204378 6100DC82        	  8694: F120     BSR     OUTPUT         OUTPUT STRING,CR,LF PORT1 (A5) (A6)
01:0020437C 700D            	  8695:          MOVEQ   #CR,D0
01:0020437E 61E8            	  8696:          BSR     F100           OUTPUT CHAR
01:00204380 700A            	  8697:          MOVEQ   #LF,D0
01:00204382 61E4            	  8698:          BSR     F100           OUTPUT CHAR
01:00204384 4E75            	  8699:          RTS
                            	  8700: 
                            	  8701: 
01:00204386 00              	  8702:          DCB.B   $54,0          PAD BYTES
01:00204387 *
                            	  8703: 
                            	  8704: 
                            	  8705: *-------------------------------------------------------------------------
                            	  8706: * File YROM      Version/checksum/identification                  07/29/82
                            	  8707: 
                            	  8708: VERSION  EQU     4         BINARY FOR VERSION 1.3
                            	  8709: *                3         .                  1.2; CKSUM= $44,$DB
                            	  8710: *                2         .                  1.1; CKSUM= $66,$C1
                            	  8711: *                1         .                  1.0
                            	  8712: 
01:002043DA 04              	  8713:          DC.B    VERSION,VERSION
01:002043DB 04
01:002043DC 2E              	  8714:          DC.B    $2E,$BA        CHECKSUM
01:002043DD BA
01:002043DE 11              	  8715:          DC.B    $11,$10        SOCKET I. D.
01:002043DF 10
                            	  8716: LAST     DS.W    0              LAST ADDRESS+1
                            	  8717: 
                            	  8718:          END     START
                            	  8719: 


Symbols by name:
A3OUT                            A:00200EF6
A5300                            A:002030C6
A5305                            A:002030D2
A5TODEST                         A:002030C4
ABORT335                         A:00201D38
ABORTB                           A:00201D10
ABORTE                           A:00201D54
ADDRESS                          E:FFFFFFC0
ADDRMSG                          A:00200432
ALTSER1                          A:00000624
ALTSER2                          A:00000628
AV11                             A:0000002C
AV12                             A:00000030
AV2                              A:00000008
AV24                             A:00000060
AV3                              A:0000000C
AV31                             A:0000007C
AV4                              A:00000010
AV46                             A:000000B8
AV47                             A:000000BC
AV48                             A:000000C0
AV8                              A:00000020
AV9                              A:00000024
BCMD0                            A:00200A4E
BCMD00                           A:00200A5C
BCMD01                           A:00200A32
BCMD3                            A:00200A6A
BCMD33                           A:00200A70
BCMD5                            A:00200A88
BCMD55                           A:00200A90
BCMD6                            A:00200A82
BCMD7                            A:00200A9A
BCMD77                           A:00200AA2
BCMD8                            A:00200AA8
BCMD81                           A:00200AC8
BCMD9                            A:00200ACC
BEGHRAM                          A:0000044C
BELL                             E:00000007
BERRD                            A:000004CA
BERRMSG                          A:00200428
BFCMD                            A:002008DC
BFCMD11                          A:0020091C
BKPOINT                          E:00004AFB
BKSPACE                          A:002020F2
BLANK                            E:00000020
BLANKIT                          A:00202104
BM112                            A:0020096A
BM122                            A:00200972
BM132                            A:00200976
BM142                            A:0020097C
BMCMD                            A:0020092E
BPADD                            A:00000470
BPCNT                            A:00000494
BPDATA                           A:000004B8
BPSTATUS                         A:000004E0
BPTILL                           A:00000490
BRCMD                            A:00200A4A
BREAK                            A:00202270
BREAK1                           A:0020225A
BREAK2                           A:00202256
BREAK79                          A:00202276
BRTBL                            A:00203B00
BS101                            A:00200B7A
BS200                            A:00200B86
BS213                            A:00200BB8
BS215                            A:00200BBC
BS219                            A:00200BC0
BS225                            A:00200BD2
BS311                            A:00200BE4
BS313                            A:00200BE8
BS323                            A:00200C08
BS325                            A:00200C0E
BS355                            A:00200C36
BS365                            A:00200C40
BS4CTLH                          A:00202100
BS91                             A:00200B40
BS97                             A:00200B6A
BSCMD                            A:00200B10
BTCMD                            A:00200C4A
BUFFER                           A:00000540
BUFFSIZE                         E:00000080
BUFSIZE                          E:00000050
CC                               E:FFFFFFBC
CHARSAVE                         A:00202132
CHKBP                            A:002011DC
CHKBP1                           A:0020120A
CHKBP11                          A:00201216
CHKBP2                           A:00201220
CHKBP3                           A:0020122C
CHKBP4                           A:00201230
CHKBRK                           A:00202244
CHKCHKS                          A:002013C0
CHKCR                            A:00202142
CHKCTLD                          A:00202116
CHKCTLH                          A:002020E6
CHRPRINT                         A:0020216C
CKADDR                           A:00201E8A
CKADR39                          A:00201E92
CKADR99                          A:00201EA6
CKWADR                           A:00201E84
CMMD2                            A:00202DF6
CMMD2S10                         A:00202E6E
CMMD2S11                         A:00202EDC
CMMD35                           A:00202E18
CODE68K                          A:00202C7E
COMMA                            A:00202DD4
COMMAS20                         A:00202EDE
COMMON                           A:00203EF2
COMMON35                         A:00203F00
COMMON4                          A:00203EF0
CR                               E:0000000D
CRPADS                           A:0000061A
CRTPNT                           A:00000652
CS11                             A:00203928
CS12                             A:00203892
CS13                             A:00203810
CS14                             A:002037A0
CS15                             A:00203760
CS16                             A:002036F2
CS17                             A:00203ACC
CS18                             A:00203A66
CS19                             A:00203B78
CS20                             A:002039C8
CT                               A:002042F4
CTLD                             E:00000004
CTLH                             E:00000008
CTLINK                           A:00000656
CTLW                             E:00000017
CTLW9                            A:00202242
CTLWH                            A:00202238
CTLX                             E:00000018
DCCMD                            A:00200C9C
DCODE68K                         A:00203E58
DDATA                            E:FFFFFFF0
DEC311                           A:00203E6C
DEC404                           A:00203E88
DEC411                           A:00203E98
DEC425                           A:00203EA8
DEC510                           A:00203EB6
DEC515                           A:00203EBA
DEC530                           A:00203EC2
DEC535                           A:00203EC8
DEC537                           A:00203ED4
DECODE1                          A:00200680
DECODE10                         A:00200696
DECODE2                          A:002006A0
DECODE21                         A:002006AA
DECODE3                          A:002006D0
DECODE4                          A:002006AE
DECODE41                         A:002006BC
DECODE6                          A:00200670
DEL                              E:0000007F
DELAYC1                          E:00001000
DFCMD                            A:00200CFA
DUCMD                            A:00200E18
DUMPTEMP                         A:000005C0
EA                               A:00202692
EA000                            A:00203BA8
EA001                            A:00203BB4
EA010                            A:00203BC0
EA011                            A:00203BD4
EA011RTS                         A:00203BEA
EA0633                           A:002026C0
EA0634                           A:002026C4
EA0635                           A:002026D0
EA0637                           A:002026D8
EA10                             A:002026E4
EA100                            A:00203BEC
EA101                            A:00203C8E
EA11                             A:00202710
EA1105                           A:00203C6A
EA1107                           A:00203C6E
EA1109                           A:00203C84
EA111                            A:00203CA4
EA1112                           A:00203CC2
EA1113                           A:00203CDE
EA1113A                          A:00203CEE
EA1114                           A:00203D10
EA1115                           A:00203D7A
EA11153                          A:00203DB2
EA11155                          A:00203DBC
EA16BIT                          A:002028FA
EA16BITC                         A:00202908
EA16BITS                         A:00202904
EA21                             A:00202728
EA31                             A:0020273C
EA34                             A:00202772
EA35                             A:00202774
EA41                             A:00202782
EA4102                           A:00202796
EA4105                           A:0020279C
EA4120                           A:002027D8
EA4127                           A:002027B2
EA4135                           A:002027C2
EA5115                           A:0020281E
EA5116                           A:00202822
EA5118                           A:00202862
EA5119                           A:00202868
EA5119E                          A:00202872
EA61                             A:00202874
EA71                             A:002028A6
EA7113                           A:002028E8
EA7115                           A:002028EE
EA8BIT                           A:00202910
EA8BITC                          A:0020291C
EA8BITS                          A:00202918
EAA                              A:00202688
EAALL                            A:0020268E
EAC                              A:00202670
EADA                             A:0020266A
EADADDR                          A:00202682
EAF25                            A:00203D58
EAF27                            A:00203D5C
EAF35                            A:00203D70
EAM                              A:00202676
EAS                              A:0020291E
EASEX                            A:0020292C
EAZ                              A:0020267C
ECHOPT1                          A:000004E2
EEA                              A:00203C06
EEA10                            A:0020381A
ENDHRAM                          A:0000065A
ENDS0                            A:00200E8A
EOHLOOP                          A:002012C6
EOT                              E:00000004
ER                               A:00202DEE
ER1                              A:00202666
ER10                             A:00203476
ER2                              A:00203194
ER3                              A:0020277E
ER4                              A:002028A2
ERDONE                           A:00202DF2
ERF                              A:00202DEC
ERROR                            A:002004A8
ESKB                             E:00000000
ESKE                             E:00000022
EV                               A:002025BA
EV15                             A:002025C2
EV21                             A:002025BE
EV39                             A:002025D8
EVECT                            A:002008D8
EVECT2                           A:00201D70
EVECT4                           A:00201D34
EVECT5                           A:002007F2
EVECT6                           A:00200838
EVECT7                           A:00200888
EVECTL                           A:00201D5C
EVER                             A:002031F4
EVSR                             A:00203218
F100                             A:00204368
F110                             A:00204370
F120                             A:00204378
FAULTAC2                         A:00202352
FAULTAC3                         A:00202366
FAULTAC4                         A:0020233A
FAULTSER                         A:00202330
FDATA                            E:0000000A
FE10                             A:00203C02
FE11                             A:00203CEA
FE12                             A:00203EA6
FERROR                           A:00203F1A
FERROR35                         A:00203F24
FERROR39                         A:00203F30
FIRST                            A:00200000
FIXBP                            A:00200A3A
FIXBUF                           A:00202088
FIXD2                            A:002004F8
FIXDADD                          A:002004EE
FIXDATA                          A:002004EA
FIXDCRLF                         A:002004FE
FLAG                             S:00000000
FNEXTF                           A:00201E66
FNEXTF1                          A:00201E64
FNEXTF7                          A:00201E80
FOC                              E:0000001F
FOL                              E:0000001F
FOP                              E:00000027
FORM1                            A:00203798
FORM10                           A:00203860
FORM103                          A:00203866
FORM104                          A:0020386A
FORM105                          A:0020387C
FORM10E3                         A:00203842
FORM10E4                         A:0020384A
FORM10E6                         A:00203856
FORM10EX                         A:00203820
FORM11                           A:00203898
FORM112                          A:002038B8
FORM114                          A:002038C6
FORM11SL                         A:002038A4
FORM12                           A:002038C8
FORM125                          A:002038E2
FORM12A                          A:00203904
FORM1A                           A:0020379C
FORM3                            A:002037A4
FORM4                            A:002037A8
FORM5                            A:002037BC
FORM6A                           A:002037C0
FORM6D                           A:002037D0
FORM7                            A:002037F8
FORM8                            A:00203804
FORM815                          A:00203808
FORM9                            A:00203814
FORM91                           A:00203B90
FORM93                           A:00203BA4
FORM95                           A:00203BA6
FORMREG5                         A:002037E4
FORMREGA                         A:002037E0
FORMREGD                         A:002037F0
FORMSIZE                         A:00203B7C
FPR315                           A:00202E0C
FREL10                           A:00201DD2
FREL15                           A:00201DE4
FREL20                           A:00201DFC
FREL25                           A:00201E0E
FREL30                           A:00201E18
FRELADDR                         A:00201DC6
FSIZE                            A:00202624
GAE                              A:00201002
GAP111                           A:00200F4E
GAP111S                          A:00200FB8
GAP113                           A:00200F56
GAP118                           A:00200FB0
GAP119                           A:00200FB2
GAP121                           A:00200FBA
GAP131                           A:00200FC6
GAP135                           A:00200FD2
GAP141                           A:00200FDA
GAP161                           A:00201006
GAP163                           A:0020101C
GAP165                           A:00201026
GAP171                           A:0020102C
GAP181                           A:00201048
GAP191                           A:0020104E
GAP197                           A:00201060
GAP199                           A:00201062
GASRGN                           A:00201068
GCMD                             A:00200A1C
GDCMD                            A:00200A2A
GET41                            A:00202632
GETA                             A:00200F32
GETCHAR                          A:00202DDC
GETCHARF                         A:00202DE4
GETCHR                           A:002014F6
GETDECNU                         A:00201EEC
GETEXP                           A:00201EBA
GETEXP15                         A:00201EC2
GETEXP21                         A:00201EBE
GETEXP39                         A:00201ED8
GETF305                          A:002025EC
GETF308                          A:00202600
GETF311                          A:00202600
GETF312                          A:00202610
GETF313                          A:00202614
GETF314                          A:00202616
GETF325                          A:0020261C
GETF333                          A:00202622
GETFIELD                         A:002025E0
GETHEX                           A:00201F98
GETHEXC                          A:002014FE
GETHEXNU                         A:00201EF4
GETIMM                           A:00203638
GETN20                           A:00201EFA
GETN30                           A:00201F04
GETN40                           A:00201F10
GETN50                           A:00201F1A
GETN55                           A:00201F22
GETN57                           A:00201F26
GETN60                           A:00201F2A
GETN65                           A:00201F34
GETN70                           A:00201F3E
GETN75                           A:00201F48
GETN77                           A:00201F62
GETN80                           A:00201F7C
GETN85                           A:00201F80
GETN90                           A:00201F82
GETN95                           A:00201F86
GETNDATA                         A:00201F8C
GETNUMA                          A:00201EE8
GETNUMD                          A:00201EE0
GETNUMD9                         A:00201EE2
GETREGA                          A:00202644
GETREGAD                         A:00202652
GETREGD                          A:0020262A
GETSER1                          A:00202064
GETSER2                          A:00202076
GOCMD                            A:00200A1C
GOCMD1                           A:00200A1E
GOCMD1A                          A:00200A12
GOSET1                           A:002009FE
GT21                             A:002009EC
GTCMD                            A:002009D0
GTHX2                            A:00201FB2
HECMD                            A:0020127A
HELP4                            A:00201292
HELP6                            A:002012DA
HELP81                           A:002012C8
HELP85                           A:002012D8
HEX2DEC                          A:00201354
HISPC                            E:FFFFFFFC
HX2DC                            A:00201364
HX2DC0                           A:00201368
HX2DC1                           A:00201370
HX2DC2                           A:0020138A
HX2DC22                          A:0020138C
HX2DC3                           A:00201396
HX2DC4                           A:0020139E
HX2DC5                           A:002013A6
HX2DC57                          A:002013AE
HX2DC6                           A:002013B2
IBSR                             A:00203A20
ICC                              A:00203A1C
ICC35                            A:00203A32
ICC55                            A:00203A48
ICCCC                            A:00203AE8
ICCCC9                           A:00203AFE
IDBCC                            A:00203A08
ILINK                            A:00203780
IM7788                           A:002036BC
IM7799                           A:002036C0
IMMED                            A:00203708
IMMED45                          A:0020372E
IMMED55                          A:00203762
IMMED65                          A:00203768
IMMED75                          A:00203778
IMOVE                            A:0020377C
IMOVE19                          A:00203B46
IMOVEA1                          A:00203B20
IMOVEMFR                         A:002036A8
IMOVEMTR                         A:002036D8
IMOVEP                           A:002039A0
IMOVEP11                         A:002039B0
IMOVEP35                         A:002039CC
IMOVEP66                         A:002039DA
IMOVEQ                           A:00203930
IMVFSR                           A:00203950
IMVFUSP                          A:00203960
IMVT44                           A:0020397E
IMVTCCR                          A:00203990
IMVTSR                           A:00203970
IMVTUSP                          A:00203984
INCHNE                           A:00202398
INFROM                           A:00000620
INIT                             A:00200410
INIT0                            A:00200510
INITAC3                          A:00202376
INITHRAM                         A:00200404
INITSER                          A:0020236C
INITVECT                         A:00200508
INITVMSG                         A:00200776
INPORT1                          A:0000062C
INPORT2                          A:00000634
INPORT3                          A:0000063C
INPORT4                          A:00000644
IQUICK                           A:0020392C
IQUICK21                         A:00203B5E
IQUICK31                         A:00203B74
IQUICKA                          A:00203B4C
ISCC                             A:002039FC
ISETD                            A:00203A58
ISETD12                          A:00203A5E
ISETS                            A:00203A68
ISHIFT                           A:00203A84
ISHIFT13                         A:00203A90
ISHIFT23                         A:00203AB4
ISHIFT33                         A:00203AC0
ISHIFT44                         A:00203AC4
ISHIFTM1                         A:00203ACE
ISTOP                            A:002036F4
KI                               A:00203F44
KIEND                            A:00203F46
LAST                             A:002043E0
LDATA                            E:FFFFFFC4
LERR1                            A:002021D4
LF                               E:0000000A
LINK                             E:0000001E
LIST                             A:0020215C
LIST1                            A:00202166
LIST2                            A:00202170
LIST24                           A:00202198
LIST25                           A:0020219C
LIST3                            A:002021B0
LIST5                            A:002021E8
LOCMD                            A:002013BE
LOCVARSZ                         E:00000010
LTIME                            S:000320C8
M300                             A:00202C90
M340                             A:00202CDA
M350                             A:00202CE6
M352                             A:00202D1A
M410                             A:00202D24
M415                             A:00202D2A
M420                             A:00202D3C
M424                             A:00202D40
M426                             A:00202D44
M428                             A:00202D4E
M430                             A:00202D54
M432                             A:00202D62
M4324                            A:00202D90
M4326                            A:00202D96
M435                             A:00202DB2
M437                             A:00202DBA
M440                             A:00202DC8
MABCD                            A:00202E2C
MABCD55                          A:00202E66
MABCD9                           A:00202E38
MACSBUG                          A:0020062E
MACSBUG1                         A:0020065C
MADD                             A:00202EE2
MADD46                           A:00202F14
MADD56                           A:00202F20
MADD58                           A:00202F30
MADDA                            A:00202F8A
MADDA21                          A:00202F94
MADDI                            A:00202F3C
MADDQ                            A:00202FB2
MADDQ25                          A:00202FF0
MADDX                            A:00202FF4
MADDX5                           A:0020302A
MAND                             A:00203036
MAND77                           A:0020306A
MAND90                           A:00203080
MAND91                           A:0020308E
MAND97                           A:00203092
MANDI                            A:00202F52
MANDI23                          A:00202F6C
MASL                             A:002030E4
MB100                            A:0020315E
MB105                            A:00203176
MB145                            A:00203198
MB185                            A:0020319E
MB200                            A:002031A2
MBCHG                            A:00203154
MBCLR                            A:002031B8
MBRA                             A:002031DE
MBRA23                           A:002031F8
MBRA27                           A:00203206
MBSET                            A:002031AC
MBTST                            A:002031C4
MCHK                             A:00203236
MCLR                             A:00203250
MCMD                             A:0020170A
MCMMD2                           A:00202DFC
MCMP                             A:00202E70
MCMP39                           A:00202EC6
MCMP56                           A:00202ECE
MCMPM                            A:0020325E
MD1CON                           A:0000064C
MDBCC                            A:002031D0
MDC                              A:00203698
MDCMD                            A:0020155C
MEMSIZE                          A:0000046C
MEOR                             A:00203098
MEOR90                           A:002030B8
MEXG                             A:00203288
MEXG25                           A:002032AA
MEXG35                           A:002032B4
MEXT                             A:002032C2
MJMP                             A:002035D0
MJMP22                           A:002035EC
MJMP32                           A:002035F2
MJMP42                           A:002035F6
MLEA                             A:002035FC
MLINK                            A:00203646
MM045                            A:0020173A
MM05                             A:0020171C
MM054                            A:0020174E
MM056                            A:0020175A
MM058                            A:00201768
MM060                            A:00201776
MM064                            A:0020177C
MM065                            A:00201782
MM10                             A:00201786
MM11                             A:00201796
MM12                             A:002017BA
MM14                             A:002017C4
MM16                             A:002017CE
MM18                             A:002017D6
MM22                             A:00201824
MM24                             A:00201832
MM26                             A:00201840
MM315                            A:002034A2
MM40                             A:0020184C
MM50                             A:00201870
MM508                            A:002034E8
MM60                             A:00201876
MM70                             A:0020350E
MM80                             A:0020353C
MM804                            A:00203554
MM806                            A:00203572
MM825                            A:0020358A
MM90                             A:0020187C
MM905                            A:00201888
MM95                             A:00201880
MMA225                           A:002035BC
MMCMD                            A:0020170A
MMDI                             A:00201672
MMDI22                           A:0020167C
MMDI23                           A:0020167E
MMDI26                           A:002016BC
MMDI27                           A:002016C6
MMDI29                           A:002016DC
MMDI30                           A:002016EE
MMDI31                           A:00201692
MMDI34                           A:002016A4
MMDI44                           A:002016F2
MMM40                            A:002034AA
MMM44                            A:00203316
MMM46                            A:00203316
MMM48                            A:0020333C
MMM50                            A:002034CC
MMM60                            A:002034FA
MMOVE                            A:00203488
MMOVEA                           A:002035A4
MMOVEA1                          A:0020359C
MMOVEM                           A:002032DC
MMOVEP                           A:002033DC
MMOVEQ                           A:0020343C
MMP344                           A:0020340C
MMP348                           A:0020341C
MMP368                           A:00203438
MMQ20                            A:00203456
MORES0                           A:00200E7A
MORESP                           A:00200E90
MOVEMR                           A:00203DDC
MOVEMR11                         A:00203DEC
MOVEMR33                         A:00203DF4
MOVEMR44                         A:00203E06
MOVEMR77                         A:00203E20
MOVEMR79                         A:00203E32
MOVEMR88                         A:00203E34
MOVEMR94                         A:00203E4C
MOVEMS                           A:00203DC8
MOVEMS2                          A:00203DD8
MPEA                             A:00203616
MSCC                             A:00203146
MSCMD                            A:0020188E
MSG                              A:002004A0
MSG001                           A:002006F6
MSG002                           A:002012E2
MSG003                           A:00201BE2
MSG004                           A:00201BED
MSG005                           A:00201BF8
MSG006                           A:00201CFA
MSG007                           A:002021F6
MSG008                           A:00200482
MSG008E                          A:00200489
MSG009                           A:00201240
MSG010                           A:00201D86
MSG011                           A:00201FCC
MSG012                           A:00201D40
MSG013                           A:00202282
MSG014                           A:00201254
MSG017                           A:00201934
MSG018                           A:00201EA8
MSG019                           A:002004D8
MSG020                           A:00201262
MSG021                           A:00200490
MSG030                           A:0020241E
MSG031                           A:00201C03
MSG111                           A:00203F3A
MSGBR                            A:00200AD6
MSGEOT                           A:0020048F
MSGLOAD1                         A:00201522
MSGLOAD2                         A:0020152B
MSGT14                           A:002042C8
MSL150                           A:00203102
MSL200                           A:00203118
MSL300                           A:0020312A
MSTOP                            A:00203664
MSWAP                            A:00203624
MTBL                             A:002033CC
MTCLR                            A:00201C3A
MTRAP                            A:0020367C
MTSETUP                          A:0020194A
MTSTOR0                          A:00201C52
MTSTOR1                          A:00201C42
MUNLK                            A:0020368E
NOAUTOLF                         A:00202152
NOBR0                            A:00200AE2
NOBR1                            A:00200AE6
NOBR3                            A:00200AFC
NOBR4                            A:00200B08
NOBRCMD                          A:00200A30
NOC                              E:00000080
NOCMD                            A:002006EA
NOPACMD                          A:002025B0
NOTCHR                           A:0020162E
NULLPADS                         A:00000618
NUMCON0                          A:00200C9C
NUMCON1                          A:00200CC0
NUMCON2                          A:00200CCC
NUMCON3                          A:00200CE4
NW                               E:00000040
NXTBP                            A:002015FC
NXTBP3                           A:00201610
NXTCHR                           A:0020161C
OFCMD                            A:00201AB0
OFFSET                           A:0000044C
OPCTBL                           A:00204150
OPTIONS                          A:000004E6
OUT1CR                           A:00201FE2
OUT1CR0                          A:00201FFC
OUT1CRX                          A:00201FF6
OUTBSIZE                         E:00000050
OUTCH                            A:0020220C
OUTCH1                           A:00202034
OUTCH2                           A:00202054
OUTCH21                          A:00202226
OUTCH3                           A:0020205A
OUTCHRTS                         A:00202062
OUTP2                            A:00202024
OUTP3                            A:0020202E
OUTPORT1                         A:00000630
OUTPORT2                         A:00000638
OUTPORT3                         A:00000640
OUTPORT4                         A:00000648
OUTPUT                           A:00201FFC
OUTPUT2                          A:00202006
OUTPUT20                         A:0020201C
OUTPUT21                         A:0020201C
OUTPUT2X                         A:00202016
OUTTO                            A:0000061C
P2CMD0                           A:00201C76
P2CMD01                          A:00201CA2
P2CMD2                           A:00201CC0
P2CMD4                           A:00201CEA
P2CMD6                           A:00201CF6
P2PHY                            A:002004BC
P2PHY2                           A:002004CE
P2READY                          A:00202426
PACMD                            A:002025AC
PBDATA                           S:00000003
PCOUNTER                         E:0000000E
PDATA                            S:00000001
PDI1                             S:000F0000
PDIPORT                          A:0000064E
PENDOP                           E:00000016
PER3                             A:002019AE
PER4                             A:0020198C
PERCMD                           A:00201982
PFCH                             A:00201BB8
PFCH2                            A:00201BC4
PFCH4                            A:00201BE0
PFCMD                            A:00201B2C
PFCMD1                           A:00201B8E
PFPT                             A:00201B76
PITCDDR                          S:000F0009
PITPCDR                          S:000F0019
PITTCR                           S:000F0021
PNCA3                            A:00200ED6
PNMSG011                         A:00201FBA
PNT2HX                           A:00201DAA
PNT4HX                           A:00201DA2
PNT6HX                           A:00201D9C
PNT8HX                           A:00201D94
PNTCLS                           A:00201AD2
PNTCLS1                          A:00201AD8
PNTCLS2                          A:00201AEA
PNTCLSA                          A:00201AC4
PNTCLSB                          A:00201ACC
PNTCLSD                          A:00201ABA
PNTREG                           A:00201AF6
PNTREG1                          A:00201B1E
PNTSREC                          A:00200F10
PNTSRECX                         A:00200F0A
PNTSRTS                          A:00200F30
PNTZ0                            A:00201E30
PNTZ1                            A:00201E32
PNTZ2                            A:00201E3A
PNTZ3                            A:00201E50
PNTZ4                            A:00201E46
PNTZ8                            A:00201E56
PNTZ81                           A:00201E5E
PNTZ9                            A:00201E62
PNTZHX                           A:00201E20
PORT2100                         A:002023DA
PORT2120                         A:002023E2
PORT2130                         A:002023E4
PORT2140                         A:002023F0
PORT2150                         A:00202402
PORT2250                         A:0020240A
PORT2260                         A:00202410
PORT2300                         A:00202416
PORTIN1                          A:00202090
PORTIN10                         A:002020B0
PORTIN1N                         A:002020A2
PORTIN1V                         A:002020B4
PORTIN1W                         A:002020B6
PORTIN1X                         A:0020209C
PORTIN2                          A:002023B4
PORTIN20                         A:002023C6
PORTIN2X                         A:002023C0
PPHY                             A:002004B4
PRCRLF                           A:00202158
PRINT3                           A:002015E2
PRINT5                           A:002015A0
PRINT7                           A:002015BC
PRINT8                           A:00201572
PRINT9                           A:00201648
PRINTDI                          A:00201590
PRINTDI5                         A:002015C0
PRINTMB                          A:00201584
PRINTR                           A:00201A92
PRINTR2                          A:00201AAA
PSTATUS                          S:0000000B
PTRBUFE                          E:0000001A
PTROP                            E:00000012
PUM11                            A:00200E4A
PUM13                            A:00200E52
PUNCH5                           A:00200E44
PUTADR                           A:002015EA
PUTCHR                           A:00201632
PUTHEX                           A:00201DB2
RAMERR                           A:00201C5E
RAMTEST                          A:00201C0E
RAM_START                        E:00000000
READ0                            A:00201410
READ00                           A:00201424
READ005                          A:0020142A
READ01                           A:002013C6
READ021                          A:002013DE
READ03                           A:002013CC
READ08                           A:00201402
READ09                           A:00201406
READ100                          A:00201474
READ120                          A:0020148A
READ130                          A:0020149A
READ135                          A:002014A6
READ400                          A:002014AA
READ410                          A:002014B2
READ420                          A:002014BE
READ430                          A:002014C8
READ440                          A:002014CE
READBUF                          A:002020BA
READCKSM                         A:002014D6
READHEX                          A:002014E8
READHEX4                         A:0020153A
READHEX6                         A:00201534
READS1                           A:002013F6
READS2                           A:00201460
READS202                         A:00201468
READS8                           A:00201546
READS800                         A:00201548
READS9                           A:00201556
REGA7                            A:00000444
REGNAMES                         A:00200CF0
REGPC                            A:00000400
REGS                             A:00000408
REGSR                            A:00000404
REGTBL                           E:002019BA
REGUS                            A:00000448
RES                              A:0020243C
RES140                           A:0020244E
RES150                           A:0020246E
RES190                           A:00202470
RES194                           A:0020247C
RES195                           A:00202488
RESET                            E:00000003
RETURN                           A:00202074
RETURN5                          A:00201A90
RHEX2                            A:00201514
RHEX3                            A:00201516
RL111                            A:00203340
RL114                            A:00203350
RL115                            A:00203352
RL30                             A:002033C4
RL333                            A:00203360
RL444                            A:0020336C
RL555                            A:00203396
RL666                            A:002033A2
S2REC                            A:00200EBE
SAVE                             A:00201084
SAVEAV4                          A:000004D2
SAVHEX                           A:00201DC2
SCAN                             A:00201A82
SCAN2                            A:00201A84
SCANP4                           A:0020256C
SCANP5                           A:00202580
SCANP6                           A:002025A8
SCANP7                           A:002025A6
SCANP8                           A:00202594
SCANPORT                         A:00202548
SCHR                             A:00203948
SCOMMON                          A:002039F8
SCREEN1                          A:00000610
SCREEN2                          A:00000614
SEMACS                           A:00201A44
SER1                             S:003C0008
SER2                             S:003C0008
SETA                             A:002019EA
SETA7                            A:002019FC
SETBIT                           A:002033B0
SETCRTPR                         A:002025B2
SETD                             A:002019E4
SETM1                            A:002018A0
SETM3                            A:002018C8
SETM5                            A:002018E2
SETM6                            A:002018E4
SETM7                            A:00201906
SETME                            A:002018FA
SETO                             A:00201AB0
SETPC                            A:002019F0
SETR                             A:00201A1E
SETR0                            A:00201A26
SETR4                            A:00201A48
SETR5                            A:00201A4E
SETRN                            A:00201A12
SETSR                            A:002019F6
SETSR1                           A:00201A52
SETSR15                          A:00201A80
SETSS                            A:00201A06
SETUS                            A:00201A0C
SI201                            A:0020346C
SI222                            A:00203486
SIZEBYTE                         A:0020347A
SIZELONG                         A:0020345E
SIZEWORD                         A:0020346E
SOLIST                           A:00200704
SSA7                             A:0000053C
START                            A:0020053A
START11                          A:00200560
START1S                          A:0020051A
STARTIMR                         A:00202504
STIME                            S:0000A028
SV_000003                        A:00200452
SV_000043                        A:002010C4
SV_000045                        A:002011F0
SV_000046                        A:00201D24
SV_000047                        A:00201D6C
SV_000392                        A:002042B4
SWAP                             A:002011A4
SWAP1                            A:002011B2
SWAP99                           A:002011D2
SWAPEND                          A:002011DA
SWAPIN                           A:0020117E
SWAPIN1                          A:002011BA
SWAPOUT                          A:00201194
SWAPOUT1                         A:002011CA
SYNTAX                           A:002004AE
SYSTACK                          A:00000786
T100                             A:00204258
T400                             A:0020426E
T44                              A:00200D98
T448                             A:00200DA4
T449                             A:00200DAC
T450                             A:0020428C
T500                             A:002042A0
T600                             A:002042DA
T700                             A:002042E0
TAPEIN                           A:0020248E
TAPEIN10                         A:002024A6
TAPEIN11                         A:002024AA
TAPEIN12                         A:002024B0
TAPEIN20                         A:002024BC
TAPEIN21                         A:002024BE
TAPEIN30                         A:002024C4
TAPEIN31                         A:002024C8
TAPEIN32                         A:002024E2
TAPEIN40                         A:002024E4
TAPEIN41                         A:002024FA
TAPEIN50                         A:0020252C
TAPEIN51                         A:0020252E
TAPEIN52                         A:0020253C
TAPEIN53                         A:00202518
TAPENULS                         A:00000654
TAPEO                            A:002022D2
TAPEO1                           A:002022D8
TAPEO2                           A:002022F0
TAPEOUT                          A:0020228E
TAPEOUT1                         A:002022AE
TAPEOUT2                         A:002022B6
TAPEOUT4                         A:002022CC
TAPEOUT5                         A:002022BE
TBL                              A:00203F46
TBLE                             A:00204150
TBLKEYS                          A:0020292E
TBLOPC                           A:0020297A
TBLOPCE                          A:00202C7E
TCMD                             A:00200980
TCMD15                           A:00200996
TCMDHOT                          A:00200994
TD07                             A:00200D06
TD09                             A:00200D18
TD1                              A:00200D24
TD25                             A:00200D58
TD27                             A:00200D50
TD39                             A:00200D7C
TD4                              A:00200D7E
TD9                              A:00200DB0
TDATA                            E:00000000
TDCC                             A:00200DB8
TDCC9                            A:00200E08
TDCC91                           A:00200E14
TDISPLY                          A:00200CFC
TEMP                             A:000004D6
TIMERTS1                         A:0020232E
TIMERTST                         A:0020231A
TISOK                            A:0020110A
TLENGTH                          E:0000000C
TLSPEC                           E:0000000B
TMCHARS                          E:000004EA
TMCMD                            A:00201C62
TNB                              E:0000000A
TRACE                            A:002010B2
TRACE01                          A:00201114
TRACE03                          A:00201130
TRACE08                          A:00201128
TRACE16                          A:002010DE
TRACE2                           A:002009BE
TRACE39                          A:0020113E
TRACECNT                         A:000004DA
TRACEON                          A:000004DE
TRAP14                           A:00204250
TRCMD                            A:00200980
TTCMD                            A:0020099C
UNSTACK                          A:00201154
UNTRACE                          A:00201146
V2                               A:00200400
VECMD                            A:002013B8
VECT                             A:0020079A
VECT10                           A:002007D6
VECT11                           A:002007E0
VECT24                           A:002007EA
VECT25                           A:002007F4
VECT26                           A:002007FE
VECT27                           A:00200808
VECT28                           A:00200812
VECT29                           A:0020081C
VECT30                           A:00200826
VECT31                           A:00200830
VECT32                           A:0020083A
VECT33                           A:00200844
VECT34                           A:0020084E
VECT35                           A:00200858
VECT36                           A:00200862
VECT37                           A:0020086C
VECT38                           A:00200876
VECT39                           A:00200880
VECT40                           A:0020088A
VECT41                           A:00200894
VECT42                           A:0020089E
VECT43                           A:002008A8
VECT44                           A:002008B2
VECT45                           A:002008BC
VECT46                           A:002008C6
VECT47                           A:002008D0
VECT5                            A:002007A4
VECT6                            A:002007AE
VECT7                            A:002007B8
VECT8                            A:002007C2
VECT9                            A:002007CC
VECTBE                           A:0020043A
VECTI                            A:00200780
VECTI2                           A:0020078E
VERSION                          E:00000004
WALK0                            A:00201C14
WALK1                            A:00201C22
WALK3                            A:00201C12
WHAT                             A:00200496
WHAT93                           A:0020049A
X                                A:002036A8
XBASE                            A:00202624
XONOFF                           E:000004E6

Symbols by value:
FFFFFFBC CC
FFFFFFC0 ADDRESS
FFFFFFC4 LDATA
FFFFFFF0 DDATA
FFFFFFFC HISPC
00000000 ESKB
00000000 FLAG
00000000 RAM_START
00000000 TDATA
00000001 PDATA
00000003 RESET
00000003 PBDATA
00000004 EOT
00000004 CTLD
00000004 VERSION
00000007 BELL
00000008 AV2
00000008 CTLH
0000000A TNB
0000000A LF
0000000A FDATA
0000000B PSTATUS
0000000B TLSPEC
0000000C AV3
0000000C TLENGTH
0000000D CR
0000000E PCOUNTER
00000010 AV4
00000010 LOCVARSZ
00000012 PTROP
00000016 PENDOP
00000017 CTLW
00000018 CTLX
0000001A PTRBUFE
0000001E LINK
0000001F FOL
0000001F FOC
00000020 BLANK
00000020 AV8
00000022 ESKE
00000024 AV9
00000027 FOP
0000002C AV11
00000030 AV12
00000040 NW
00000050 BUFSIZE
00000050 OUTBSIZE
00000060 AV24
0000007C AV31
0000007F DEL
00000080 NOC
00000080 BUFFSIZE
000000B8 AV46
000000BC AV47
000000C0 AV48
00000400 REGPC
00000404 REGSR
00000408 REGS
00000444 REGA7
00000448 REGUS
0000044C BEGHRAM
0000044C OFFSET
0000046C MEMSIZE
00000470 BPADD
00000490 BPTILL
00000494 BPCNT
000004B8 BPDATA
000004CA BERRD
000004D2 SAVEAV4
000004D6 TEMP
000004DA TRACECNT
000004DE TRACEON
000004E0 BPSTATUS
000004E2 ECHOPT1
000004E6 XONOFF
000004E6 OPTIONS
000004EA TMCHARS
0000053C SSA7
00000540 BUFFER
000005C0 DUMPTEMP
00000610 SCREEN1
00000614 SCREEN2
00000618 NULLPADS
0000061A CRPADS
0000061C OUTTO
00000620 INFROM
00000624 ALTSER1
00000628 ALTSER2
0000062C INPORT1
00000630 OUTPORT1
00000634 INPORT2
00000638 OUTPORT2
0000063C INPORT3
00000640 OUTPORT3
00000644 INPORT4
00000648 OUTPORT4
0000064C MD1CON
0000064E PDIPORT
00000652 CRTPNT
00000654 TAPENULS
00000656 CTLINK
0000065A ENDHRAM
00000786 SYSTACK
00001000 DELAYC1
00004AFB BKPOINT
0000A028 STIME
000320C8 LTIME
000F0000 PDI1
000F0009 PITCDDR
000F0019 PITPCDR
000F0021 PITTCR
00200000 FIRST
00200400 V2
00200404 INITHRAM
00200410 INIT
00200428 BERRMSG
00200432 ADDRMSG
0020043A VECTBE
00200452 SV_000003
00200482 MSG008
00200489 MSG008E
0020048F MSGEOT
00200490 MSG021
00200496 WHAT
0020049A WHAT93
002004A0 MSG
002004A8 ERROR
002004AE SYNTAX
002004B4 PPHY
002004BC P2PHY
002004CE P2PHY2
002004D8 MSG019
002004EA FIXDATA
002004EE FIXDADD
002004F8 FIXD2
002004FE FIXDCRLF
00200508 INITVECT
00200510 INIT0
0020051A START1S
0020053A START
00200560 START11
0020062E MACSBUG
0020065C MACSBUG1
00200670 DECODE6
00200680 DECODE1
00200696 DECODE10
002006A0 DECODE2
002006AA DECODE21
002006AE DECODE4
002006BC DECODE41
002006D0 DECODE3
002006EA NOCMD
002006F6 MSG001
00200704 SOLIST
00200776 INITVMSG
00200780 VECTI
0020078E VECTI2
0020079A VECT
002007A4 VECT5
002007AE VECT6
002007B8 VECT7
002007C2 VECT8
002007CC VECT9
002007D6 VECT10
002007E0 VECT11
002007EA VECT24
002007F2 EVECT5
002007F4 VECT25
002007FE VECT26
00200808 VECT27
00200812 VECT28
0020081C VECT29
00200826 VECT30
00200830 VECT31
00200838 EVECT6
0020083A VECT32
00200844 VECT33
0020084E VECT34
00200858 VECT35
00200862 VECT36
0020086C VECT37
00200876 VECT38
00200880 VECT39
00200888 EVECT7
0020088A VECT40
00200894 VECT41
0020089E VECT42
002008A8 VECT43
002008B2 VECT44
002008BC VECT45
002008C6 VECT46
002008D0 VECT47
002008D8 EVECT
002008DC BFCMD
0020091C BFCMD11
0020092E BMCMD
0020096A BM112
00200972 BM122
00200976 BM132
0020097C BM142
00200980 TCMD
00200980 TRCMD
00200994 TCMDHOT
00200996 TCMD15
0020099C TTCMD
002009BE TRACE2
002009D0 GTCMD
002009EC GT21
002009FE GOSET1
00200A12 GOCMD1A
00200A1C GOCMD
00200A1C GCMD
00200A1E GOCMD1
00200A2A GDCMD
00200A30 NOBRCMD
00200A32 BCMD01
00200A3A FIXBP
00200A4A BRCMD
00200A4E BCMD0
00200A5C BCMD00
00200A6A BCMD3
00200A70 BCMD33
00200A82 BCMD6
00200A88 BCMD5
00200A90 BCMD55
00200A9A BCMD7
00200AA2 BCMD77
00200AA8 BCMD8
00200AC8 BCMD81
00200ACC BCMD9
00200AD6 MSGBR
00200AE2 NOBR0
00200AE6 NOBR1
00200AFC NOBR3
00200B08 NOBR4
00200B10 BSCMD
00200B40 BS91
00200B6A BS97
00200B7A BS101
00200B86 BS200
00200BB8 BS213
00200BBC BS215
00200BC0 BS219
00200BD2 BS225
00200BE4 BS311
00200BE8 BS313
00200C08 BS323
00200C0E BS325
00200C36 BS355
00200C40 BS365
00200C4A BTCMD
00200C9C DCCMD
00200C9C NUMCON0
00200CC0 NUMCON1
00200CCC NUMCON2
00200CE4 NUMCON3
00200CF0 REGNAMES
00200CFA DFCMD
00200CFC TDISPLY
00200D06 TD07
00200D18 TD09
00200D24 TD1
00200D50 TD27
00200D58 TD25
00200D7C TD39
00200D7E TD4
00200D98 T44
00200DA4 T448
00200DAC T449
00200DB0 TD9
00200DB8 TDCC
00200E08 TDCC9
00200E14 TDCC91
00200E18 DUCMD
00200E44 PUNCH5
00200E4A PUM11
00200E52 PUM13
00200E7A MORES0
00200E8A ENDS0
00200E90 MORESP
00200EBE S2REC
00200ED6 PNCA3
00200EF6 A3OUT
00200F0A PNTSRECX
00200F10 PNTSREC
00200F30 PNTSRTS
00200F32 GETA
00200F4E GAP111
00200F56 GAP113
00200FB0 GAP118
00200FB2 GAP119
00200FB8 GAP111S
00200FBA GAP121
00200FC6 GAP131
00200FD2 GAP135
00200FDA GAP141
00201002 GAE
00201006 GAP161
0020101C GAP163
00201026 GAP165
0020102C GAP171
00201048 GAP181
0020104E GAP191
00201060 GAP197
00201062 GAP199
00201068 GASRGN
00201084 SAVE
002010B2 TRACE
002010C4 SV_000043
002010DE TRACE16
0020110A TISOK
00201114 TRACE01
00201128 TRACE08
00201130 TRACE03
0020113E TRACE39
00201146 UNTRACE
00201154 UNSTACK
0020117E SWAPIN
00201194 SWAPOUT
002011A4 SWAP
002011B2 SWAP1
002011BA SWAPIN1
002011CA SWAPOUT1
002011D2 SWAP99
002011DA SWAPEND
002011DC CHKBP
002011F0 SV_000045
0020120A CHKBP1
00201216 CHKBP11
00201220 CHKBP2
0020122C CHKBP3
00201230 CHKBP4
00201240 MSG009
00201254 MSG014
00201262 MSG020
0020127A HECMD
00201292 HELP4
002012C6 EOHLOOP
002012C8 HELP81
002012D8 HELP85
002012DA HELP6
002012E2 MSG002
00201354 HEX2DEC
00201364 HX2DC
00201368 HX2DC0
00201370 HX2DC1
0020138A HX2DC2
0020138C HX2DC22
00201396 HX2DC3
0020139E HX2DC4
002013A6 HX2DC5
002013AE HX2DC57
002013B2 HX2DC6
002013B8 VECMD
002013BE LOCMD
002013C0 CHKCHKS
002013C6 READ01
002013CC READ03
002013DE READ021
002013F6 READS1
00201402 READ08
00201406 READ09
00201410 READ0
00201424 READ00
0020142A READ005
00201460 READS2
00201468 READS202
00201474 READ100
0020148A READ120
0020149A READ130
002014A6 READ135
002014AA READ400
002014B2 READ410
002014BE READ420
002014C8 READ430
002014CE READ440
002014D6 READCKSM
002014E8 READHEX
002014F6 GETCHR
002014FE GETHEXC
00201514 RHEX2
00201516 RHEX3
00201522 MSGLOAD1
0020152B MSGLOAD2
00201534 READHEX6
0020153A READHEX4
00201546 READS8
00201548 READS800
00201556 READS9
0020155C MDCMD
00201572 PRINT8
00201584 PRINTMB
00201590 PRINTDI
002015A0 PRINT5
002015BC PRINT7
002015C0 PRINTDI5
002015E2 PRINT3
002015EA PUTADR
002015FC NXTBP
00201610 NXTBP3
0020161C NXTCHR
0020162E NOTCHR
00201632 PUTCHR
00201648 PRINT9
00201672 MMDI
0020167C MMDI22
0020167E MMDI23
00201692 MMDI31
002016A4 MMDI34
002016BC MMDI26
002016C6 MMDI27
002016DC MMDI29
002016EE MMDI30
002016F2 MMDI44
0020170A MMCMD
0020170A MCMD
0020171C MM05
0020173A MM045
0020174E MM054
0020175A MM056
00201768 MM058
00201776 MM060
0020177C MM064
00201782 MM065
00201786 MM10
00201796 MM11
002017BA MM12
002017C4 MM14
002017CE MM16
002017D6 MM18
00201824 MM22
00201832 MM24
00201840 MM26
0020184C MM40
00201870 MM50
00201876 MM60
0020187C MM90
00201880 MM95
00201888 MM905
0020188E MSCMD
002018A0 SETM1
002018C8 SETM3
002018E2 SETM5
002018E4 SETM6
002018FA SETME
00201906 SETM7
00201934 MSG017
0020194A MTSETUP
00201982 PERCMD
0020198C PER4
002019AE PER3
002019BA REGTBL
002019E4 SETD
002019EA SETA
002019F0 SETPC
002019F6 SETSR
002019FC SETA7
00201A06 SETSS
00201A0C SETUS
00201A12 SETRN
00201A1E SETR
00201A26 SETR0
00201A44 SEMACS
00201A48 SETR4
00201A4E SETR5
00201A52 SETSR1
00201A80 SETSR15
00201A82 SCAN
00201A84 SCAN2
00201A90 RETURN5
00201A92 PRINTR
00201AAA PRINTR2
00201AB0 SETO
00201AB0 OFCMD
00201ABA PNTCLSD
00201AC4 PNTCLSA
00201ACC PNTCLSB
00201AD2 PNTCLS
00201AD8 PNTCLS1
00201AEA PNTCLS2
00201AF6 PNTREG
00201B1E PNTREG1
00201B2C PFCMD
00201B76 PFPT
00201B8E PFCMD1
00201BB8 PFCH
00201BC4 PFCH2
00201BE0 PFCH4
00201BE2 MSG003
00201BED MSG004
00201BF8 MSG005
00201C03 MSG031
00201C0E RAMTEST
00201C12 WALK3
00201C14 WALK0
00201C22 WALK1
00201C3A MTCLR
00201C42 MTSTOR1
00201C52 MTSTOR0
00201C5E RAMERR
00201C62 TMCMD
00201C76 P2CMD0
00201CA2 P2CMD01
00201CC0 P2CMD2
00201CEA P2CMD4
00201CF6 P2CMD6
00201CFA MSG006
00201D10 ABORTB
00201D24 SV_000046
00201D34 EVECT4
00201D38 ABORT335
00201D40 MSG012
00201D54 ABORTE
00201D5C EVECTL
00201D6C SV_000047
00201D70 EVECT2
00201D86 MSG010
00201D94 PNT8HX
00201D9C PNT6HX
00201DA2 PNT4HX
00201DAA PNT2HX
00201DB2 PUTHEX
00201DC2 SAVHEX
00201DC6 FRELADDR
00201DD2 FREL10
00201DE4 FREL15
00201DFC FREL20
00201E0E FREL25
00201E18 FREL30
00201E20 PNTZHX
00201E30 PNTZ0
00201E32 PNTZ1
00201E3A PNTZ2
00201E46 PNTZ4
00201E50 PNTZ3
00201E56 PNTZ8
00201E5E PNTZ81
00201E62 PNTZ9
00201E64 FNEXTF1
00201E66 FNEXTF
00201E80 FNEXTF7
00201E84 CKWADR
00201E8A CKADDR
00201E92 CKADR39
00201EA6 CKADR99
00201EA8 MSG018
00201EBA GETEXP
00201EBE GETEXP21
00201EC2 GETEXP15
00201ED8 GETEXP39
00201EE0 GETNUMD
00201EE2 GETNUMD9
00201EE8 GETNUMA
00201EEC GETDECNU
00201EF4 GETHEXNU
00201EFA GETN20
00201F04 GETN30
00201F10 GETN40
00201F1A GETN50
00201F22 GETN55
00201F26 GETN57
00201F2A GETN60
00201F34 GETN65
00201F3E GETN70
00201F48 GETN75
00201F62 GETN77
00201F7C GETN80
00201F80 GETN85
00201F82 GETN90
00201F86 GETN95
00201F8C GETNDATA
00201F98 GETHEX
00201FB2 GTHX2
00201FBA PNMSG011
00201FCC MSG011
00201FE2 OUT1CR
00201FF6 OUT1CRX
00201FFC OUTPUT
00201FFC OUT1CR0
00202006 OUTPUT2
00202016 OUTPUT2X
0020201C OUTPUT21
0020201C OUTPUT20
00202024 OUTP2
0020202E OUTP3
00202034 OUTCH1
00202054 OUTCH2
0020205A OUTCH3
00202062 OUTCHRTS
00202064 GETSER1
00202074 RETURN
00202076 GETSER2
00202088 FIXBUF
00202090 PORTIN1
0020209C PORTIN1X
002020A2 PORTIN1N
002020B0 PORTIN10
002020B4 PORTIN1V
002020B6 PORTIN1W
002020BA READBUF
002020E6 CHKCTLH
002020F2 BKSPACE
00202100 BS4CTLH
00202104 BLANKIT
00202116 CHKCTLD
00202132 CHARSAVE
00202142 CHKCR
00202152 NOAUTOLF
00202158 PRCRLF
0020215C LIST
00202166 LIST1
0020216C CHRPRINT
00202170 LIST2
00202198 LIST24
0020219C LIST25
002021B0 LIST3
002021D4 LERR1
002021E8 LIST5
002021F6 MSG007
0020220C OUTCH
00202226 OUTCH21
00202238 CTLWH
00202242 CTLW9
00202244 CHKBRK
00202256 BREAK2
0020225A BREAK1
00202270 BREAK
00202276 BREAK79
00202282 MSG013
0020228E TAPEOUT
002022AE TAPEOUT1
002022B6 TAPEOUT2
002022BE TAPEOUT5
002022CC TAPEOUT4
002022D2 TAPEO
002022D8 TAPEO1
002022F0 TAPEO2
0020231A TIMERTST
0020232E TIMERTS1
00202330 FAULTSER
0020233A FAULTAC4
00202352 FAULTAC2
00202366 FAULTAC3
0020236C INITSER
00202376 INITAC3
00202398 INCHNE
002023B4 PORTIN2
002023C0 PORTIN2X
002023C6 PORTIN20
002023DA PORT2100
002023E2 PORT2120
002023E4 PORT2130
002023F0 PORT2140
00202402 PORT2150
0020240A PORT2250
00202410 PORT2260
00202416 PORT2300
0020241E MSG030
00202426 P2READY
0020243C RES
0020244E RES140
0020246E RES150
00202470 RES190
0020247C RES194
00202488 RES195
0020248E TAPEIN
002024A6 TAPEIN10
002024AA TAPEIN11
002024B0 TAPEIN12
002024BC TAPEIN20
002024BE TAPEIN21
002024C4 TAPEIN30
002024C8 TAPEIN31
002024E2 TAPEIN32
002024E4 TAPEIN40
002024FA TAPEIN41
00202504 STARTIMR
00202518 TAPEIN53
0020252C TAPEIN50
0020252E TAPEIN51
0020253C TAPEIN52
00202548 SCANPORT
0020256C SCANP4
00202580 SCANP5
00202594 SCANP8
002025A6 SCANP7
002025A8 SCANP6
002025AC PACMD
002025B0 NOPACMD
002025B2 SETCRTPR
002025BA EV
002025BE EV21
002025C2 EV15
002025D8 EV39
002025E0 GETFIELD
002025EC GETF305
00202600 GETF311
00202600 GETF308
00202610 GETF312
00202614 GETF313
00202616 GETF314
0020261C GETF325
00202622 GETF333
00202624 FSIZE
00202624 XBASE
0020262A GETREGD
00202632 GET41
00202644 GETREGA
00202652 GETREGAD
00202666 ER1
0020266A EADA
00202670 EAC
00202676 EAM
0020267C EAZ
00202682 EADADDR
00202688 EAA
0020268E EAALL
00202692 EA
002026C0 EA0633
002026C4 EA0634
002026D0 EA0635
002026D8 EA0637
002026E4 EA10
00202710 EA11
00202728 EA21
0020273C EA31
00202772 EA34
00202774 EA35
0020277E ER3
00202782 EA41
00202796 EA4102
0020279C EA4105
002027B2 EA4127
002027C2 EA4135
002027D8 EA4120
0020281E EA5115
00202822 EA5116
00202862 EA5118
00202868 EA5119
00202872 EA5119E
00202874 EA61
002028A2 ER4
002028A6 EA71
002028E8 EA7113
002028EE EA7115
002028FA EA16BIT
00202904 EA16BITS
00202908 EA16BITC
00202910 EA8BIT
00202918 EA8BITS
0020291C EA8BITC
0020291E EAS
0020292C EASEX
0020292E TBLKEYS
0020297A TBLOPC
00202C7E TBLOPCE
00202C7E CODE68K
00202C90 M300
00202CDA M340
00202CE6 M350
00202D1A M352
00202D24 M410
00202D2A M415
00202D3C M420
00202D40 M424
00202D44 M426
00202D4E M428
00202D54 M430
00202D62 M432
00202D90 M4324
00202D96 M4326
00202DB2 M435
00202DBA M437
00202DC8 M440
00202DD4 COMMA
00202DDC GETCHAR
00202DE4 GETCHARF
00202DEC ERF
00202DEE ER
00202DF2 ERDONE
00202DF6 CMMD2
00202DFC MCMMD2
00202E0C FPR315
00202E18 CMMD35
00202E2C MABCD
00202E38 MABCD9
00202E66 MABCD55
00202E6E CMMD2S10
00202E70 MCMP
00202EC6 MCMP39
00202ECE MCMP56
00202EDC CMMD2S11
00202EDE COMMAS20
00202EE2 MADD
00202F14 MADD46
00202F20 MADD56
00202F30 MADD58
00202F3C MADDI
00202F52 MANDI
00202F6C MANDI23
00202F8A MADDA
00202F94 MADDA21
00202FB2 MADDQ
00202FF0 MADDQ25
00202FF4 MADDX
0020302A MADDX5
00203036 MAND
0020306A MAND77
00203080 MAND90
0020308E MAND91
00203092 MAND97
00203098 MEOR
002030B8 MEOR90
002030C4 A5TODEST
002030C6 A5300
002030D2 A5305
002030E4 MASL
00203102 MSL150
00203118 MSL200
0020312A MSL300
00203146 MSCC
00203154 MBCHG
0020315E MB100
00203176 MB105
00203194 ER2
00203198 MB145
0020319E MB185
002031A2 MB200
002031AC MBSET
002031B8 MBCLR
002031C4 MBTST
002031D0 MDBCC
002031DE MBRA
002031F4 EVER
002031F8 MBRA23
00203206 MBRA27
00203218 EVSR
00203236 MCHK
00203250 MCLR
0020325E MCMPM
00203288 MEXG
002032AA MEXG25
002032B4 MEXG35
002032C2 MEXT
002032DC MMOVEM
00203316 MMM46
00203316 MMM44
0020333C MMM48
00203340 RL111
00203350 RL114
00203352 RL115
00203360 RL333
0020336C RL444
00203396 RL555
002033A2 RL666
002033B0 SETBIT
002033C4 RL30
002033CC MTBL
002033DC MMOVEP
0020340C MMP344
0020341C MMP348
00203438 MMP368
0020343C MMOVEQ
00203456 MMQ20
0020345E SIZELONG
0020346C SI201
0020346E SIZEWORD
00203476 ER10
0020347A SIZEBYTE
00203486 SI222
00203488 MMOVE
002034A2 MM315
002034AA MMM40
002034CC MMM50
002034E8 MM508
002034FA MMM60
0020350E MM70
0020353C MM80
00203554 MM804
00203572 MM806
0020358A MM825
0020359C MMOVEA1
002035A4 MMOVEA
002035BC MMA225
002035D0 MJMP
002035EC MJMP22
002035F2 MJMP32
002035F6 MJMP42
002035FC MLEA
00203616 MPEA
00203624 MSWAP
00203638 GETIMM
00203646 MLINK
00203664 MSTOP
0020367C MTRAP
0020368E MUNLK
00203698 MDC
002036A8 X
002036A8 IMOVEMFR
002036BC IM7788
002036C0 IM7799
002036D8 IMOVEMTR
002036F2 CS16
002036F4 ISTOP
00203708 IMMED
0020372E IMMED45
00203760 CS15
00203762 IMMED55
00203768 IMMED65
00203778 IMMED75
0020377C IMOVE
00203780 ILINK
00203798 FORM1
0020379C FORM1A
002037A0 CS14
002037A4 FORM3
002037A8 FORM4
002037BC FORM5
002037C0 FORM6A
002037D0 FORM6D
002037E0 FORMREGA
002037E4 FORMREG5
002037F0 FORMREGD
002037F8 FORM7
00203804 FORM8
00203808 FORM815
00203810 CS13
00203814 FORM9
0020381A EEA10
00203820 FORM10EX
00203842 FORM10E3
0020384A FORM10E4
00203856 FORM10E6
00203860 FORM10
00203866 FORM103
0020386A FORM104
0020387C FORM105
00203892 CS12
00203898 FORM11
002038A4 FORM11SL
002038B8 FORM112
002038C6 FORM114
002038C8 FORM12
002038E2 FORM125
00203904 FORM12A
00203928 CS11
0020392C IQUICK
00203930 IMOVEQ
00203948 SCHR
00203950 IMVFSR
00203960 IMVFUSP
00203970 IMVTSR
0020397E IMVT44
00203984 IMVTUSP
00203990 IMVTCCR
002039A0 IMOVEP
002039B0 IMOVEP11
002039C8 CS20
002039CC IMOVEP35
002039DA IMOVEP66
002039F8 SCOMMON
002039FC ISCC
00203A08 IDBCC
00203A1C ICC
00203A20 IBSR
00203A32 ICC35
00203A48 ICC55
00203A58 ISETD
00203A5E ISETD12
00203A66 CS18
00203A68 ISETS
00203A84 ISHIFT
00203A90 ISHIFT13
00203AB4 ISHIFT23
00203AC0 ISHIFT33
00203AC4 ISHIFT44
00203ACC CS17
00203ACE ISHIFTM1
00203AE8 ICCCC
00203AFE ICCCC9
00203B00 BRTBL
00203B20 IMOVEA1
00203B46 IMOVE19
00203B4C IQUICKA
00203B5E IQUICK21
00203B74 IQUICK31
00203B78 CS19
00203B7C FORMSIZE
00203B90 FORM91
00203BA4 FORM93
00203BA6 FORM95
00203BA8 EA000
00203BB4 EA001
00203BC0 EA010
00203BD4 EA011
00203BEA EA011RTS
00203BEC EA100
00203C02 FE10
00203C06 EEA
00203C6A EA1105
00203C6E EA1107
00203C84 EA1109
00203C8E EA101
00203CA4 EA111
00203CC2 EA1112
00203CDE EA1113
00203CEA FE11
00203CEE EA1113A
00203D10 EA1114
00203D58 EAF25
00203D5C EAF27
00203D70 EAF35
00203D7A EA1115
00203DB2 EA11153
00203DBC EA11155
00203DC8 MOVEMS
00203DD8 MOVEMS2
00203DDC MOVEMR
00203DEC MOVEMR11
00203DF4 MOVEMR33
00203E06 MOVEMR44
00203E20 MOVEMR77
00203E32 MOVEMR79
00203E34 MOVEMR88
00203E4C MOVEMR94
00203E58 DCODE68K
00203E6C DEC311
00203E88 DEC404
00203E98 DEC411
00203EA6 FE12
00203EA8 DEC425
00203EB6 DEC510
00203EBA DEC515
00203EC2 DEC530
00203EC8 DEC535
00203ED4 DEC537
00203EF0 COMMON4
00203EF2 COMMON
00203F00 COMMON35
00203F1A FERROR
00203F24 FERROR35
00203F30 FERROR39
00203F3A MSG111
00203F44 KI
00203F46 TBL
00203F46 KIEND
00204150 OPCTBL
00204150 TBLE
00204250 TRAP14
00204258 T100
0020426E T400
0020428C T450
002042A0 T500
002042B4 SV_000392
002042C8 MSGT14
002042DA T600
002042E0 T700
002042F4 CT
00204368 F100
00204370 F110
00204378 F120
002043E0 LAST
003C0008 SER2
003C0008 SER1
