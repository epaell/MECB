Sections:
00: "seg0" (0-804)
01: "seg200000" (200000-2043D8)


Source: "src/TUTOR13.X68"
                            	     1: * THIS VERSION MODIFIED FOR TEESSIDE X68K PC-2.2 CROSS ASSEMBLER
                            	     2: *     ftp://nyquist.ee.ualberta.ca/pub/motorola/m68k/x68k.zip
                            	     3: *
                            	     4: *     CHANGES FROM ORIGINAL MOTOROLA SOURCE:
                            	     5: *         MANY "MOVE.L" CHANGED TO "MOVEQ"
                            	     6: *             SIMILAR CHANGES ON A FEW OTHER COMMANDS WHERE
                            	     7: *             X68K DOES NOT AUTOMATICALLY MOTOROLA-IZE.
                            	     8: *         X68K HANDLES CHARACTER CONSTANTS DIFFERENTLY
                            	     9: *             DC.W  '1'    -->  $3100  (GOOD)
                            	    10: *             DC.W  '1'+0  -->  $0031  (WHAT!)
                            	    11: *     ONE DIFFERENCE REMAINS IN A "DON'T CARE" BYTE
                            	    12: *         $008FE0 1A3C00FF  MOVE.B  #-1,D5
                            	    13: *                     ^^ $00 INSTEAD OF $FF
                            	    14: * SUBSEQUENTLY MODIFIED FOR USE ON DIGICOOL THING MECB 68008 (EMULATED)
                            	    15: 
                            	    16: *=======================================================================*
                            	    17: * MOTOROLA EDUCATION COMPUTER BOARD ROM PROGRAM "TUTOR"  REVISION # 1.3 *
                            	    18: *=======================================================================*
                            	    19: 
                            	    20: * MACROS
                            	    21: 
                            	    22: 
                            	    23: ADDR2MEM MACRO
                            	    24:          PEA     \1(PC)         MOVE ADDRESS TO MEMORY; POSITION
                            	    25:          MOVE.L  (A7)+,\2       INDEPENDANT = TO "MOVE.L #\1,\2"
                            	    26:          ENDM
                            	    27: 
                            	    28: 
                            	    29: SAVEREGS MACRO
                            	    30:          MOVE.L  A7,REGA7       SAVE STACK POINTER
                            	    31:          LEA     SV\@(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
                            	    32:          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
                            	    33:          BRA     SAVE           BSR WITHOUT USING STACK
                            	    34: SV\@     DS      0
                            	    35:          ENDM
                            	    36: 
                            	    37: 
                            	    38: 
                            	    39: 
                            	    40: *-------------------------------------------------------------------------
                            	    41: 
                            	    42: RAM_START EQU   $000000
                            	    43: 
                            	    44: * EQUATES (in alphabetical order)
                            	    45: 
                            	    46: BELL     EQU     $07
                            	    47: BLANK    EQU     $20
                            	    48: BKPOINT  EQU     $4AFB
                            	    49: BUFFSIZE EQU     $80
                            	    50: BUFSIZE  EQU     80
                            	    51: CR       EQU     $0D
                            	    52: CTLD     EQU     $04
                            	    53: CTLH     EQU     $08
                            	    54: CTLW     EQU     $17
                            	    55: CTLX     EQU     $18
                            	    56: DEL      EQU     $7F
                            	    57: DELAYC1  EQU     $1000
                            	    58: EOT      EQU     $04
                            	    59: LF       EQU     $0A
                            	    60: LOCVARSZ EQU     16
                            	    61: RESET    EQU     $03            MASTER RESET FOR ACIA
                            	    62: 
                            	    63: 
                            	    64: 
                            	    65: *-------------------------------------------------------------------------
                            	    66: * File ARAM      DATA VARIABLES                                   05/10/82
                            	    67: 
                            	    68: ****************************************************************
                            	    69: *  N O T E:  Ram locations:   starting at zero                 *
                            	    70: ****************************************************************
                            	    71: 
                            	    72:          ORG     RAM_START
                            	    73: 
                            	    74: *                               DEC HEX  DESCRIPTION
00:00000000 00000000        	    75:          DS.L    1              0   $00  AREA OVERLAID BY ROM SR
00:00000004 00000000        	    76:          DS.L    1              1   $01  AND PC
                            	    77: 
                            	    78: 
00:00000008 00000000        	    79: AV2      DS.L    1              2   $02  BUS ERROR            "BUS "
00:0000000C 00000000        	    80: AV3      DS.L    1              3   $03  ADDRESS ERROR        "ADDR"
00:00000010 00000000        	    81: AV4      DS.L    1              4   $04  ILL INSTRUCTION      "OPCO"
00:00000014 00000000        	    82:          DS.L    1              5   $05  DIVIDE BY ZERO       "DIV0"
00:00000018 00000000        	    83:          DS.L    1              6   $06  CHECK TRAP           "CHCK"
00:0000001C 00000000        	    84:          DS.L    1              7   $07  TRAP V               "TP V"
00:00000020 00000000        	    85: AV8      DS.L    1              8   $08  PRIVILEDGE VIOLATION "PRIV"
00:00000024 00000000        	    86: AV9      DS.L    1              9   $09  TRACE
00:00000028 00000000        	    87:          DS.L    1              10  $0A  1010 LINE EMULATION  "1010"
00:0000002C 00000000        	    88: AV11     DS.L    1              11  $0B  1111 LINE EMULATION  "1111"
00:00000030 00000000        	    89: AV12     DS.L    1              12  $0C  USED AS TEMPORARY STORAGE FOR VECTOR MSGS.
00:00000034 00000000        	    90:          DS.L    1              13  $0D  NOT USED
00:00000038 00000000        	    91:          DS.L    1              14  $0E
00:0000003C 00000000        	    92:          DS.L    1              15  $0F
00:00000040 00000000        	    93:          DS.L    1              16  $10
00:00000044 00000000        	    94:          DS.L    1              17  $11
00:00000048 00000000        	    95:          DS.L    1              18  $12
00:0000004C 00000000        	    96:          DS.L    1              19  $13
00:00000050 00000000        	    97:          DS.L    1              20  $14
00:00000054 00000000        	    98:          DS.L    1              21  $15
00:00000058 00000000        	    99:          DS.L    1              22  $16
00:0000005C 00000000        	   100:          DS.L    1              23  $17
00:00000060 00000000        	   101: AV24     DS.L    1              24  $18   0  AUTO VECTORS     "SPUR"
00:00000064 00000000        	   102:          DS.L    1              25  $19   1                   "AV#1"
00:00000068 00000000        	   103:          DS.L    1              26  $1A   2                   "AV#2"   TEST BUTTON
00:0000006C 00000000        	   104:          DS.L    1              27  $1B   3                   "AV#3"
00:00000070 00000000        	   105:          DS.L    1              28  $1C   4                   "AV#4"
00:00000074 00000000        	   106:          DS.L    1              29  $1D   5                   "AV#5"
00:00000078 00000000        	   107:          DS.L    1              30  $1E   6                   "AV#6"
00:0000007C 00000000        	   108: AV31     DS.L    1              31  $1F   7                   "AV#7   [ABORT BUTTON]
00:00000080 00000000        	   109:          DS.L    1              32  $20   TRAP  0             "UT 0"
00:00000084 00000000        	   110:          DS.L    1              33  $21   TRAP  1             "UT 1"
00:00000088 00000000        	   111:          DS.L    1              34  $22   TRAP  2             "UT 2"
00:0000008C 00000000        	   112:          DS.L    1              35  $23   TRAP  3             "UT 3"
00:00000090 00000000        	   113:          DS.L    1              36  $24   TRAP  4             "UT 4"
00:00000094 00000000        	   114:          DS.L    1              37  $25   TRAP  5             "UT 5"
00:00000098 00000000        	   115:          DS.L    1              38  $26   TRAP  6             "UT 6"
00:0000009C 00000000        	   116:          DS.L    1              39  $27   TRAP  7             "UT 7"
00:000000A0 00000000        	   117:          DS.L    1              40  $28   TRAP  8             "UT 8"
00:000000A4 00000000        	   118:          DS.L    1              41  $29   TRAP  9             "UT 9"
00:000000A8 00000000        	   119:          DS.L    1              42  $2A   TRAP 10             "UT A"
00:000000AC 00000000        	   120:          DS.L    1              43  $2B   TRAP 11             "UT B"
00:000000B0 00000000        	   121:          DS.L    1              44  $2C   TRAP 12             "UT C"
00:000000B4 00000000        	   122:          DS.L    1              45  $2D   TRAP 13             "UT D"
00:000000B8 00000000        	   123: AV46     DS.L    1              46  $2E   TRAP 14             "UT E"
00:000000BC 00000000        	   124: AV47     DS.L    1              47  $2F   TRAP 15             "UT F"
00:000000C0 00000000        	   125: AV48     DS.L    1              48  $30
00:000000C4 00000000        	   126:          DS.L    1              49  $31
00:000000C8 00000000        	   127:          DS.L    1              50  $32
00:000000CC 00000000        	   128:          DS.L    1              51  $33
00:000000D0 00000000        	   129:          DS.L    1              52  $34
00:000000D4 00000000        	   130:          DS.L    1              53  $35
00:000000D8 00000000        	   131:          DS.L    1              54  $36
00:000000DC 00000000        	   132:          DS.L    1              55  $37
00:000000E0 00000000        	   133:          DS.L    1              56  $38
00:000000E4 00000000        	   134:          DS.L    1              57  $39
00:000000E8 00000000        	   135:          DS.L    1              58  $3A
00:000000EC 00000000        	   136:          DS.L    1              59  $3B
00:000000F0 00000000        	   137:          DS.L    1              60  $3C
00:000000F4 00000000        	   138:          DS.L    1              61  $3D
00:000000F8 00000000        	   139:          DS.L    1              62  $3E
00:000000FC 00000000        	   140:          DS.L    1              63  $3F
00:00000100 00000000        	   141:          DS.L    1              64  $40
00:00000104 00000000        	   142:          DS.L    1              65  $41
00:00000108 00000000        	   143:          DS.L    1              66  $42
00:0000010C 00000000        	   144:          DS.L    1              67  $43
00:00000110 00000000        	   145:          DS.L    1              68  $44
00:00000114 00000000        	   146:          DS.L    1              69  $45
00:00000118 00000000        	   147:          DS.L    1              70  $46
00:0000011C 00000000        	   148:          DS.L    1              71  $47
00:00000120 00000000        	   149:          DS.L    1              72  $48
00:00000124 00000000        	   150:          DS.L    1              73  $49
00:00000128 00000000        	   151:          DS.L    1              74  $4A
00:0000012C 00000000        	   152:          DS.L    1              75  $4B
00:00000130 00000000        	   153:          DS.L    1              76  $4C
00:00000134 00000000        	   154:          DS.L    1              77  $4D
00:00000138 00000000        	   155:          DS.L    1              78  $4E
00:0000013C 00000000        	   156:          DS.L    1              79  $4F
00:00000140 00000000        	   157:          DS.L    1              80  $50
00:00000144 00000000        	   158:          DS.L    1              81  $51
00:00000148 00000000        	   159:          DS.L    1              82  $52
00:0000014C 00000000        	   160:          DS.L    1              83  $53
00:00000150 00000000        	   161:          DS.L    1              84  $54
00:00000154 00000000        	   162:          DS.L    1              85  $55
00:00000158 00000000        	   163:          DS.L    1              86  $56
00:0000015C 00000000        	   164:          DS.L    1              87  $57
00:00000160 00000000        	   165:          DS.L    1              88  $58
00:00000164 00000000        	   166:          DS.L    1              89  $59
00:00000168 00000000        	   167:          DS.L    1              90  $5A
00:0000016C 00000000        	   168:          DS.L    1              91  $5B
00:00000170 00000000        	   169:          DS.L    1              92  $5C
00:00000174 00000000        	   170:          DS.L    1              93  $5D
00:00000178 00000000        	   171:          DS.L    1              94  $5E
00:0000017C 00000000        	   172:          DS.L    1              95  $5F
00:00000180 00000000        	   173:          DS.L    1              96  $60
00:00000184 00000000        	   174:          DS.L    1              97  $61
00:00000188 00000000        	   175:          DS.L    1              98  $62
00:0000018C 00000000        	   176:          DS.L    1              99  $63
00:00000190 00000000        	   177:          DS.L    1              100  $64
00:00000194 00000000        	   178:          DS.L    1              101  $65
00:00000198 00000000        	   179:          DS.L    1              102  $66
00:0000019C 00000000        	   180:          DS.L    1              103  $67
00:000001A0 00000000        	   181:          DS.L    1              104  $68
00:000001A4 00000000        	   182:          DS.L    1              105  $69
00:000001A8 00000000        	   183:          DS.L    1              106  $6A
00:000001AC 00000000        	   184:          DS.L    1              107  $6B
00:000001B0 00000000        	   185:          DS.L    1              108  $6C
00:000001B4 00000000        	   186:          DS.L    1              109  $6D
00:000001B8 00000000        	   187:          DS.L    1              110  $6E
00:000001BC 00000000        	   188:          DS.L    1              111  $6F
00:000001C0 00000000        	   189:          DS.L    1              112  $70
00:000001C4 00000000        	   190:          DS.L    1              113  $71
00:000001C8 00000000        	   191:          DS.L    1              114  $72
00:000001CC 00000000        	   192:          DS.L    1              115  $73
00:000001D0 00000000        	   193:          DS.L    1              116  $74
00:000001D4 00000000        	   194:          DS.L    1              117  $75
00:000001D8 00000000        	   195:          DS.L    1              118  $76
00:000001DC 00000000        	   196:          DS.L    1              119  $77
00:000001E0 00000000        	   197:          DS.L    1              120  $78
00:000001E4 00000000        	   198:          DS.L    1              121  $79
00:000001E8 00000000        	   199:          DS.L    1              122  $7A
00:000001EC 00000000        	   200:          DS.L    1              123  $7B
00:000001F0 00000000        	   201:          DS.L    1              124  $7C
00:000001F4 00000000        	   202:          DS.L    1              125  $7D
00:000001F8 00000000        	   203:          DS.L    1              126  $7E
00:000001FC 00000000        	   204:          DS.L    1              127  $7F
00:00000200 00000000        	   205:          DS.L    1              128  $80
00:00000204 00000000        	   206:          DS.L    1              129  $81
00:00000208 00000000        	   207:          DS.L    1              130  $82
00:0000020C 00000000        	   208:          DS.L    1              131  $83
00:00000210 00000000        	   209:          DS.L    1              132  $84
00:00000214 00000000        	   210:          DS.L    1              133  $85
00:00000218 00000000        	   211:          DS.L    1              134  $86
00:0000021C 00000000        	   212:          DS.L    1              135  $87
00:00000220 00000000        	   213:          DS.L    1              136  $88
00:00000224 00000000        	   214:          DS.L    1              137  $89
00:00000228 00000000        	   215:          DS.L    1              138  $8A
00:0000022C 00000000        	   216:          DS.L    1              139  $8B
00:00000230 00000000        	   217:          DS.L    1              140  $8C
00:00000234 00000000        	   218:          DS.L    1              141  $8D
00:00000238 00000000        	   219:          DS.L    1              142  $8E
00:0000023C 00000000        	   220:          DS.L    1              143  $8F
00:00000240 00000000        	   221:          DS.L    1              144  $90
00:00000244 00000000        	   222:          DS.L    1              145  $91
00:00000248 00000000        	   223:          DS.L    1              146  $92
00:0000024C 00000000        	   224:          DS.L    1              147  $93
00:00000250 00000000        	   225:          DS.L    1              148  $94
00:00000254 00000000        	   226:          DS.L    1              149  $95
00:00000258 00000000        	   227:          DS.L    1              150  $96
00:0000025C 00000000        	   228:          DS.L    1              151  $97
00:00000260 00000000        	   229:          DS.L    1              152  $98
00:00000264 00000000        	   230:          DS.L    1              153  $99
00:00000268 00000000        	   231:          DS.L    1              154  $9A
00:0000026C 00000000        	   232:          DS.L    1              155  $9B
00:00000270 00000000        	   233:          DS.L    1              156  $9C
00:00000274 00000000        	   234:          DS.L    1              157  $9D
00:00000278 00000000        	   235:          DS.L    1              158  $9E
00:0000027C 00000000        	   236:          DS.L    1              159  $9F
00:00000280 00000000        	   237:          DS.L    1              160  $A0
00:00000284 00000000        	   238:          DS.L    1              161  $A1
00:00000288 00000000        	   239:          DS.L    1              162  $A2
00:0000028C 00000000        	   240:          DS.L    1              163  $A3
00:00000290 00000000        	   241:          DS.L    1              164  $A4
00:00000294 00000000        	   242:          DS.L    1              165  $A5
00:00000298 00000000        	   243:          DS.L    1              166  $A6
00:0000029C 00000000        	   244:          DS.L    1              167  $A7
00:000002A0 00000000        	   245:          DS.L    1              168  $A8
00:000002A4 00000000        	   246:          DS.L    1              169  $A9
00:000002A8 00000000        	   247:          DS.L    1              170  $AA
00:000002AC 00000000        	   248:          DS.L    1              171  $AB
00:000002B0 00000000        	   249:          DS.L    1              172  $AC
00:000002B4 00000000        	   250:          DS.L    1              173  $AD
00:000002B8 00000000        	   251:          DS.L    1              174  $AE
00:000002BC 00000000        	   252:          DS.L    1              175  $AF
00:000002C0 00000000        	   253:          DS.L    1              176  $B0
00:000002C4 00000000        	   254:          DS.L    1              177  $B1
00:000002C8 00000000        	   255:          DS.L    1              178  $B2
00:000002CC 00000000        	   256:          DS.L    1              179  $B3
00:000002D0 00000000        	   257:          DS.L    1              180  $B4
00:000002D4 00000000        	   258:          DS.L    1              181  $B5
00:000002D8 00000000        	   259:          DS.L    1              182  $B6
00:000002DC 00000000        	   260:          DS.L    1              183  $B7
00:000002E0 00000000        	   261:          DS.L    1              184  $B8
00:000002E4 00000000        	   262:          DS.L    1              185  $B9
00:000002E8 00000000        	   263:          DS.L    1              186  $BA
00:000002EC 00000000        	   264:          DS.L    1              187  $BB
00:000002F0 00000000        	   265:          DS.L    1              188  $BC
00:000002F4 00000000        	   266:          DS.L    1              189  $BD
00:000002F8 00000000        	   267:          DS.L    1              190  $BE
00:000002FC 00000000        	   268:          DS.L    1              191  $BF
00:00000300 00000000        	   269:          DS.L    1              192  $C0
00:00000304 00000000        	   270:          DS.L    1              193  $C1
00:00000308 00000000        	   271:          DS.L    1              194  $C2
00:0000030C 00000000        	   272:          DS.L    1              195  $C3
00:00000310 00000000        	   273:          DS.L    1              196  $C4
00:00000314 00000000        	   274:          DS.L    1              197  $C5
00:00000318 00000000        	   275:          DS.L    1              198  $C6
00:0000031C 00000000        	   276:          DS.L    1              199  $C7
00:00000320 00000000        	   277:          DS.L    1              200  $C8
00:00000324 00000000        	   278:          DS.L    1              201  $C9
00:00000328 00000000        	   279:          DS.L    1              202  $CA
00:0000032C 00000000        	   280:          DS.L    1              203  $CB
00:00000330 00000000        	   281:          DS.L    1              204  $CC
00:00000334 00000000        	   282:          DS.L    1              205  $CD
00:00000338 00000000        	   283:          DS.L    1              206  $CE
00:0000033C 00000000        	   284:          DS.L    1              207  $CF
00:00000340 00000000        	   285:          DS.L    1              208  $D0
00:00000344 00000000        	   286:          DS.L    1              209  $D1
00:00000348 00000000        	   287:          DS.L    1              210  $D2
00:0000034C 00000000        	   288:          DS.L    1              211  $D3
00:00000350 00000000        	   289:          DS.L    1              212  $D4
00:00000354 00000000        	   290:          DS.L    1              213  $D5
00:00000358 00000000        	   291:          DS.L    1              214  $D6
00:0000035C 00000000        	   292:          DS.L    1              215  $D7
00:00000360 00000000        	   293:          DS.L    1              216  $D8
00:00000364 00000000        	   294:          DS.L    1              217  $D9
00:00000368 00000000        	   295:          DS.L    1              218  $DA
00:0000036C 00000000        	   296:          DS.L    1              219  $DB
00:00000370 00000000        	   297:          DS.L    1              220  $DC
00:00000374 00000000        	   298:          DS.L    1              221  $DD
00:00000378 00000000        	   299:          DS.L    1              222  $DE
00:0000037C 00000000        	   300:          DS.L    1              223  $DF
00:00000380 00000000        	   301:          DS.L    1              224  $E0
00:00000384 00000000        	   302:          DS.L    1              225  $E1
00:00000388 00000000        	   303:          DS.L    1              226  $E2
00:0000038C 00000000        	   304:          DS.L    1              227  $E3
00:00000390 00000000        	   305:          DS.L    1              228  $E4
00:00000394 00000000        	   306:          DS.L    1              229  $E5
00:00000398 00000000        	   307:          DS.L    1              230  $E6
00:0000039C 00000000        	   308:          DS.L    1              231  $E7
00:000003A0 00000000        	   309:          DS.L    1              232  $E8
00:000003A4 00000000        	   310:          DS.L    1              233  $E9
00:000003A8 00000000        	   311:          DS.L    1              234  $EA
00:000003AC 00000000        	   312:          DS.L    1              235  $EB
00:000003B0 00000000        	   313:          DS.L    1              236  $EC
00:000003B4 00000000        	   314:          DS.L    1              237  $ED
00:000003B8 00000000        	   315:          DS.L    1              238  $EE
00:000003BC 00000000        	   316:          DS.L    1              239  $EF
00:000003C0 00000000        	   317:          DS.L    1              240  $F0
00:000003C4 00000000        	   318:          DS.L    1              241  $F1
00:000003C8 00000000        	   319:          DS.L    1              242  $F2
00:000003CC 00000000        	   320:          DS.L    1              243  $F3
00:000003D0 00000000        	   321:          DS.L    1              244  $F4
00:000003D4 00000000        	   322:          DS.L    1              245  $F5
00:000003D8 00000000        	   323:          DS.L    1              246  $F6
00:000003DC 00000000        	   324:          DS.L    1              247  $F7
00:000003E0 00000000        	   325:          DS.L    1              248  $F8
00:000003E4 00000000        	   326:          DS.L    1              249  $F9
00:000003E8 00000000        	   327:          DS.L    1              250  $FA
00:000003EC 00000000        	   328:          DS.L    1              251  $FB
00:000003F0 00000000        	   329:          DS.L    1              252  $FC
00:000003F4 00000000        	   330:          DS.L    1              253  $FD            3RD
00:000003F8 00000000        	   331:          DS.L    1              254  $FE            2ND
00:000003FC 00000000        	   332:          DS.L    1              255  $FF VECTOR FOR 1ST IPC DISK CONTROLLER
                            	   333: 
                            	   334: 
                            	   335: *  PSEUDO REGISTERS
                            	   336: 
00:00000400 00000000        	   337: REGPC    DS.L    1              USERS PROGRAM COUNTER
00:00000404 00000000        	   338: REGSR    DS.L    1              USERS CONDITION CODES
00:00000408 00000000        	   339: REGS     DS.L    8              D REGISTERS
00:0000040C *
00:00000428 00000000        	   340:          DS.L    7              A0 THROUGH A6 REGISTERS
00:0000042C *
00:00000444 00000000        	   341: REGA7    DS.L    1              A7 REGISTER
00:00000448 00000000        	   342: REGUS    DS.L    1              USER STACK
                            	   343: 
                            	   344: 
                            	   345: 
                            	   346: ****************************************************************
                            	   347: *              WORKING STORAGE                                 *
                            	   348: *  NOTE: SUBROUTINE "INITHRAM" ZEROES RAM...                   *
                            	   349: *        FROM "BEGHRAM" THROUGH "ENDHRAM" WHEN IT IS EXECUTED  *
                            	   350: ****************************************************************
                            	   351: 
                            	   352: BEGHRAM  DS      0              INITIALIZE STARTS HERE
                            	   353: 
00:0000044C 00000000        	   354: OFFSET   DS.L    8              ASSUMED OFFSETS (VIA "R@" FORMAT)
00:00000450 *
00:0000046C 00000000        	   355: MEMSIZE  DS.L    1              MEMORY SIZE IN BYTES
00:00000470 00000000        	   356: BPADD    DS.L    8              BREAKPOINT ADDRESSES
00:00000474 *
00:00000490 00000000        	   357: BPTILL   DS.L    1              TEMPORARY BREAKPOINT
00:00000494 00000000        	   358: BPCNT    DS.L    9              BREAKPOINT COUNTS
00:00000498 *
00:000004B8 0000            	   359: BPDATA   DS.W    9              HOLD USER WORDS REPLACED BY TRAP IN SET BP
00:000004BA *
00:000004CA 00000000        	   360: BERRD    DS.L    2              SPECIAL DATA FOR BUS AND ADDR ERROR EXCEPTIONS
00:000004CE *
00:000004D2 00000000        	   361: SAVEAV4  DS.L    1              HOLDS USER'S AV4 VECTOR (WE USE FOR BP)
00:000004D6 00000000        	   362: TEMP     DS.L    1              TEMP
00:000004DA 00000000        	   363: TRACECNT DS.L    1              TRACE COUNTER (-1=TRACE 1 & RUN)
00:000004DE 0000            	   364: TRACEON  DS.W    1              FLAG FOR TRACE ON
00:000004E0 0000            	   365: BPSTATUS DS.W    1              1=PB ARE IN  0=ARE OUT OF MEMORY
00:000004E2 00000000        	   366: ECHOPT1  DS.L    1              ECHO FLAG TO PORT ONE
                            	   367: 
                            	   368: 
                            	   369: 
                            	   370: * THE FOLLOWING MUST REMAIN AS IS
                            	   371: *  User documentation DEPENDS upon it!
                            	   372: *
                            	   373: OPTIONS  DS.W    0              FORCE WORD BOUNDRY
00:000004E6 00              	   374:          DS.B    1              X-ON CHARACTER
00:000004E7 00              	   375:          DS.B    1              X-OFF CHARACTER
00:000004E8 00              	   376:          DS.B    1              NO NO-AUTO LINEFEED
00:000004E9 00              	   377:          DS.B    1              SHORT FORM REGISTER DISPLAY
00:000004EA 00              	   378:          DS.B    1              TM  trailing character
00:000004EB 00              	   379:          DS.B    1              TM  exit character
                            	   380: 
                            	   381: XONOFF   EQU     OPTIONS
                            	   382: TMCHARS  EQU     OPTIONS+4
                            	   383: 
                            	   384: * END of as is section
                            	   385: 
                            	   386: 
                            	   387: 
                            	   388: ***************************
                            	   389: * TARGET SUPERVISOR STACK *
                            	   390: ***************************
                            	   391: 
00:000004EC 00000000        	   392:          DS.L    20
00:000004F0 *
00:0000053C 00000000        	   393: SSA7     DS.L    1
                            	   394: 
                            	   395: 
                            	   396: 
                            	   397: **************
                            	   398: * I/O BUFFER *
                            	   399: **************
                            	   400: 
00:00000540 00              	   401: BUFFER   DS.B    BUFFSIZE
00:00000541 *
                            	   402: 
00:000005C0 00              	   403: DUMPTEMP DS.B    80             HEADER TEMP BUFFER
00:000005C1 *
                            	   404: 
00:00000610 00000000        	   405: SCREEN1  DS.L    1              PRINT THIS BEFORE TRACE DISPLAY
00:00000614 00000000        	   406: SCREEN2  DS.L    1              PRINT THIS AFTER TRACE DISPLAY
                            	   407: 
00:00000618 00              	   408: NULLPADS DS.B    2              CHARACTER NULL PADS
00:00000619 *
00:0000061A 00              	   409: CRPADS   DS.B    2              CARRIAGE RETURN NULL PADS
00:0000061B *
                            	   410: 
00:0000061C 00000000        	   411: OUTTO    DS.L    1              HOLDS ADDRESS OF OUTPUT ROUTINE
00:00000620 00000000        	   412: INFROM   DS.L    1              HOLDS ADDRESS OF INPUT ROUTINE
00:00000624 00000000        	   413: ALTSER1  DS.L    1              ALTERNATE SERIAL PORT#1
00:00000628 00000000        	   414: ALTSER2  DS.L    1              ALTERNATE SERIAL PORT#2
00:0000062C 00000000        	   415: INPORT1  DS.L    1              INPUT ROUTINE ADDRESS
00:00000630 00000000        	   416: OUTPORT1 DS.L    1              ADDRESS FOR OUPUT ROUTINE
00:00000634 00000000        	   417: INPORT2  DS.L    1              ADDRESS FOR INPUT ROUTINE
00:00000638 00000000        	   418: OUTPORT2 DS.L    1              FOR OUTPURT ROUTINE
00:0000063C 00000000        	   419: INPORT3  DS.L    1              THIS MIGHT BE FOR TAPE
00:00000640 00000000        	   420: OUTPORT3 DS.L    1              THIS MIGHT BE FOR PRINTER
00:00000644 00000000        	   421: INPORT4  DS.L    1              CASSETTE
00:00000648 00000000        	   422: OUTPORT4 DS.L    1              CASSETTE
00:0000064C 0000            	   423: MD1CON   DS.W    1              ACIA PROFILE (PORT1/PORT2)
00:0000064E 00000000        	   424: PDIPORT  DS.L    1              PDIPORT ADDRESS
00:00000652 0000            	   425: CRTPNT   DS.W    1              OUTPUT TO PRINTER AND CRT
00:00000654 00              	   426: TAPENULS DS.B    1              NULLS FOR CASSETTE
                            	   427: 
00:00000655 00              	   428:          DS.B    1              PAD BYTE
                            	   429: 
00:00000656 00000000        	   430: CTLINK   DS.L    1              POINTER TO FIRST TABLE
                            	   431: 
                            	   432: 
                            	   433: 
                            	   434: ENDHRAM  DS.W    0              MUST START ON WORD BOUNDRY
                            	   435: 
                            	   436: 
                            	   437: 
                            	   438: *********************
                            	   439: * SYSTEM STACK AREA *
                            	   440: *********************
                            	   441: 
                            	   442:          DS.W    0              FORCE ON WORD BOUNDRY
00:0000065A 00              	   443:          DS.B    300            ROOM FOR STACK
00:0000065B *
00:00000786 0000            	   444: SYSTACK  DS.W    1              START OF STACK (ADDRESS DECREASES)
00:00000788 00              	   445:          DS.B    4              STRETCHED STACK (USED BY 'SAVE')
00:00000789 *
                            	   446: 
00:0000078C 00              	   447:          DS.B    120            EXTENDED AREA USED IF DISASSEMBLER
00:0000078D *
                            	   448: 
                            	   449:          DS.B    0              LAST LOW MEMORY LOCATION USED + 1
                            	   450: 
                            	   451: 
                            	   452: *-------------------------------------------------------------------------
                            	   453: 
                            	   454: *CODE68K
                            	   455: *                               OFFSET  0
                            	   456: ESKB     EQU     $00000000      DS      0
                            	   457: TDATA    EQU     $00000000      DS.B    10
                            	   458: TNB      EQU     $0000000A      DS.B    1
                            	   459: TLSPEC   EQU     $0000000B      DS.B    1
                            	   460: TLENGTH  EQU     $0000000C      DS.W    1
                            	   461: PCOUNTER EQU     $0000000E      DS.L    1
                            	   462: PTROP    EQU     $00000012      DS.L    1              POINTER TO OPERAND
                            	   463: PENDOP   EQU     $00000016      DS.L    1              POINTER END OF OPERAND
                            	   464: PTRBUFE  EQU     $0000001A      DS.L    1              POINTER TO END OF FORMATED SOURCE
                            	   465: LINK     EQU     $0000001E      DS.L    1              SAVE FOR UNLINK
                            	   466: ESKE     EQU     $00000022      DS.B    0
                            	   467: 
                            	   468: 
                            	   469: *DCODE68K
                            	   470: *                               OFFSET  -LOCVARSZ
                            	   471: DDATA    EQU     $FFFFFFF0      DS.L    3
                            	   472: HISPC    EQU     $FFFFFFFC      DS.L    1
                            	   473: 
                            	   474: 
                            	   475: *LOAD
                            	   476: *                               OFFSET  -((BUFFSIZE/2)+4)
                            	   477: CC       EQU     $FFFFFFBC      DS.L    1              CC (BYTE COUNT)
                            	   478: ADDRESS  EQU     $FFFFFFC0      DS.L    1              ADDRESS + OFFSET
                            	   479: LDATA    EQU     $FFFFFFC4      DS.B    1
                            	   480: 
                            	   481: 
                            	   482: 
                            	   483: 
                            	   484: *-------------------------------------------------------------------------
                            	   485: * File B         Init Vectors+Ram                                 05/29/82
                            	   486: 
                            	   487:          ORG     $200000
                            	   488: 
01:00200000 00000444        	   489: FIRST    DC.L    REGA7              ; 0   $00  SR
01:00200004 0020053A        	   490:          DC.L    START              ; 1   $01  RESET
01:00200008 00200428        	   491:          DC.L    BERRMSG            ; 2   $02  BUS ERROR            "BUS "
01:0020000C 00200432        	   492:          DC.L    ADDRMSG            ; 3   $03  ADDRESS ERROR        "ADDR"
01:00200010 002011D4        	   493:          DC.L    CHKBP              ; 4   $04  ILL INSTRUCTION      "OPCO"
01:00200014 0020079C        	   494:          DC.L    VECT5              ; 5   $05  DIVIDE BY ZERO       "DIV0"
01:00200018 002007A6        	   495:          DC.L    VECT6              ; 6   $06  CHECK TRAP           "CHCK"
01:0020001C 002007B0        	   496:          DC.L    VECT7              ; 7   $07  TRAP V               "TP V"
01:00200020 002007BA        	   497:          DC.L    VECT8              ; 8   $08  PRIVILEDGE VIOLATION "PRIV"
01:00200024 002010AA        	   498:          DC.L    TRACE              ; 9   $09  TRACE
01:00200028 002007CE        	   499:          DC.L    VECT10             ; 10  $0A  1010 LINE EMULATION  "1010"
01:0020002C 002007D8        	   500:          DC.L    VECT11             ; 11  $0B  1111 LINE EMULATION  "1111"
01:00200030 00000000        	   501:          DS.L    1              12  $0C  UNASSIGNED
01:00200034 00000000        	   502:          DS.L    1              13  $0D  UNASSIGNED
01:00200038 00000000        	   503:          DS.L    1              14  $0E  UNASSIGNED
01:0020003C 00000000        	   504:          DS.L    1              15  $0F  UNINITIALIZED INTERRUPT VECTOR
01:00200040 00000000        	   505:          DS.L    1              16  $10  UNASSIGNED
01:00200044 00000000        	   506:          DS.L    1              17  $11  UNASSIGNED
01:00200048 00000000        	   507:          DS.L    1              18  $12  UNASSIGNED
01:0020004C 00000000        	   508:          DS.L    1              19  $13  UNASSIGNED
01:00200050 00000000        	   509:          DS.L    1              20  $14  UNASSIGNED
01:00200054 00000000        	   510:          DS.L    1              21  $15  UNASSIGNED
01:00200058 00000000        	   511:          DS.L    1              22  $16  UNASSIGNED
01:0020005C 00000000        	   512:          DS.L    1              23  $17  UNASSIGNED
01:00200060 002007E2        	   513:          DC.L    VECT24         24  $18  SPURIOUS INTERRUPT
01:00200064 002007EC        	   514:          DC.L    VECT25         25  $19  LEVEL 1 INTERRUPT
01:00200068 002007F6        	   515:          DC.L    VECT26         26  $1A  LEVEL 2 INTERRUPT
01:0020006C 00200800        	   516:          DC.L    VECT27         27  $1B  LEVEL 3 INTERRUPT
01:00200070 0020080A        	   517:          DC.L    VECT28         28  $1C  LEVEL 4 INTERRUPT
01:00200074 00200814        	   518:          DC.L    VECT29         29  $1D  LEVEL 5 INTERRUPT
01:00200078 0020081E        	   519:          DC.L    VECT30         30  $1E  LEVEL 6 INTERRUPT
01:0020007C 00201D08        	   520:          DC.L    ABORTB         31  $1F  LEVEL 7 INTERRUPT
01:00200080 00200832        	   521:          DC.L    VECT32         32  $20   TRAP  0
01:00200084 0020083C        	   522:          DC.L    VECT33         33  $21   TRAP  1
01:00200088 00200846        	   523:          DC.L    VECT34         34  $22   TRAP  2
01:0020008C 00200850        	   524:          DC.L    VECT35         35  $23   TRAP  3
01:00200090 0020085A        	   525:          DC.L    VECT36         36  $24   TRAP  4
01:00200094 00200864        	   526:          DC.L    VECT37         37  $25   TRAP  5
01:00200098 0020086E        	   527:          DC.L    VECT38         38  $26   TRAP  6
01:0020009C 00200878        	   528:          DC.L    VECT39         39  $27   TRAP  7
01:002000A0 00200882        	   529:          DC.L    VECT40         40  $28   TRAP  8
01:002000A4 0020088C        	   530:          DC.L    VECT41         41  $29   TRAP  9
01:002000A8 00200896        	   531:          DC.L    VECT42         42  $2A   TRAP 10
01:002000AC 002008A0        	   532:          DC.L    VECT43         43  $2B   TRAP 11
01:002000B0 002008AA        	   533:          DC.L    VECT44         44  $2C   TRAP 12
01:002000B4 002008B4        	   534:          DC.L    VECT45         45  $2D   TRAP 13
01:002000B8 00204248        	   535:          DC.L    TRAP14         46  $2E   TRAP 14
01:002000BC 002008C8        	   536:          DC.L    VECT47         47  $2F   TRAP 15
01:002000C0 00000000        	   537:          DS.L    1              48  $30   UNASSIGNED
01:002000C4 00000000        	   538:          DS.L    1              49  $31   UNASSIGNED
01:002000C8 00000000        	   539:          DS.L    1              50  $32   UNASSIGNED
01:002000CC 00000000        	   540:          DS.L    1              51  $33   UNASSIGNED
01:002000D0 00000000        	   541:          DS.L    1              52  $34   UNASSIGNED
01:002000D4 00000000        	   542:          DS.L    1              53  $35   UNASSIGNED
01:002000D8 00000000        	   543:          DS.L    1              54  $36   UNASSIGNED
01:002000DC 00000000        	   544:          DS.L    1              55  $37   UNASSIGNED
01:002000E0 00000000        	   545:          DS.L    1              56  $38   UNASSIGNED
01:002000E4 00000000        	   546:          DS.L    1              57  $39   UNASSIGNED
01:002000E8 00000000        	   547:          DS.L    1              58  $3A   UNASSIGNED
01:002000EC 00000000        	   548:          DS.L    1              59  $3B   UNASSIGNED
01:002000F0 00000000        	   549:          DS.L    1              60  $3C   UNASSIGNED
01:002000F4 00000000        	   550:          DS.L    1              61  $3D   UNASSIGNED
01:002000F8 00000000        	   551:          DS.L    1              62  $3E   UNASSIGNED
01:002000FC 00000000        	   552:          DS.L    1              63  $3F   UNASSIGNED
01:00200100 00000000        	   553:          DS.L    1              64  $40   USER INTERRUPT
01:00200104 00000000        	   554:          DS.L    1              65  $41   USER INTERRUPT
01:00200108 00000000        	   555:          DS.L    1              66  $42   USER INTERRUPT
01:0020010C 00000000        	   556:          DS.L    1              67  $43   USER INTERRUPT
01:00200110 00000000        	   557:          DS.L    1              68  $44   USER INTERRUPT
01:00200114 00000000        	   558:          DS.L    1              69  $45   USER INTERRUPT
01:00200118 00000000        	   559:          DS.L    1              70  $46   USER INTERRUPT
01:0020011C 00000000        	   560:          DS.L    1              71  $47   USER INTERRUPT
01:00200120 00000000        	   561:          DS.L    1              72  $48   USER INTERRUPT
01:00200124 00000000        	   562:          DS.L    1              73  $49   USER INTERRUPT
01:00200128 00000000        	   563:          DS.L    1              74  $4A   USER INTERRUPT
01:0020012C 00000000        	   564:          DS.L    1              75  $4B   USER INTERRUPT
01:00200130 00000000        	   565:          DS.L    1              76  $4C   USER INTERRUPT
01:00200134 00000000        	   566:          DS.L    1              77  $4D   USER INTERRUPT
01:00200138 00000000        	   567:          DS.L    1              78  $4E   USER INTERRUPT
01:0020013C 00000000        	   568:          DS.L    1              79  $4F   USER INTERRUPT
01:00200140 00000000        	   569:          DS.L    1              80  $50   USER INTERRUPT
01:00200144 00000000        	   570:          DS.L    1              81  $51   USER INTERRUPT
01:00200148 00000000        	   571:          DS.L    1              82  $52   USER INTERRUPT
01:0020014C 00000000        	   572:          DS.L    1              83  $53   USER INTERRUPT
01:00200150 00000000        	   573:          DS.L    1              84  $54   USER INTERRUPT
01:00200154 00000000        	   574:          DS.L    1              85  $55   USER INTERRUPT
01:00200158 00000000        	   575:          DS.L    1              86  $56   USER INTERRUPT
01:0020015C 00000000        	   576:          DS.L    1              87  $57   USER INTERRUPT
01:00200160 00000000        	   577:          DS.L    1              88  $58   USER INTERRUPT
01:00200164 00000000        	   578:          DS.L    1              89  $59   USER INTERRUPT
01:00200168 00000000        	   579:          DS.L    1              90  $5A   USER INTERRUPT
01:0020016C 00000000        	   580:          DS.L    1              91  $5B   USER INTERRUPT
01:00200170 00000000        	   581:          DS.L    1              92  $5C   USER INTERRUPT
01:00200174 00000000        	   582:          DS.L    1              93  $5D   USER INTERRUPT
01:00200178 00000000        	   583:          DS.L    1              94  $5E   USER INTERRUPT
01:0020017C 00000000        	   584:          DS.L    1              95  $5F   USER INTERRUPT
01:00200180 00000000        	   585:          DS.L    1              96  $60   USER INTERRUPT
01:00200184 00000000        	   586:          DS.L    1              97  $61   USER INTERRUPT
01:00200188 00000000        	   587:          DS.L    1              98  $62   USER INTERRUPT
01:0020018C 00000000        	   588:          DS.L    1              99  $63   USER INTERRUPT
01:00200190 00000000        	   589:          DS.L    1              100  $64  USER INTERRUPT
01:00200194 00000000        	   590:          DS.L    1              101  $65  USER INTERRUPT
01:00200198 00000000        	   591:          DS.L    1              102  $66  USER INTERRUPT
01:0020019C 00000000        	   592:          DS.L    1              103  $67  USER INTERRUPT
01:002001A0 00000000        	   593:          DS.L    1              104  $68  USER INTERRUPT
01:002001A4 00000000        	   594:          DS.L    1              105  $69  USER INTERRUPT
01:002001A8 00000000        	   595:          DS.L    1              106  $6A  USER INTERRUPT
01:002001AC 00000000        	   596:          DS.L    1              107  $6B  USER INTERRUPT
01:002001B0 00000000        	   597:          DS.L    1              108  $6C  USER INTERRUPT
01:002001B4 00000000        	   598:          DS.L    1              109  $6D  USER INTERRUPT
01:002001B8 00000000        	   599:          DS.L    1              110  $6E  USER INTERRUPT
01:002001BC 00000000        	   600:          DS.L    1              111  $6F  USER INTERRUPT
01:002001C0 00000000        	   601:          DS.L    1              112  $70  USER INTERRUPT
01:002001C4 00000000        	   602:          DS.L    1              113  $71  USER INTERRUPT
01:002001C8 00000000        	   603:          DS.L    1              114  $72  USER INTERRUPT
01:002001CC 00000000        	   604:          DS.L    1              115  $73  USER INTERRUPT
01:002001D0 00000000        	   605:          DS.L    1              116  $74  USER INTERRUPT
01:002001D4 00000000        	   606:          DS.L    1              117  $75  USER INTERRUPT
01:002001D8 00000000        	   607:          DS.L    1              118  $76  USER INTERRUPT
01:002001DC 00000000        	   608:          DS.L    1              119  $77  USER INTERRUPT
01:002001E0 00000000        	   609:          DS.L    1              120  $78  USER INTERRUPT
01:002001E4 00000000        	   610:          DS.L    1              121  $79  USER INTERRUPT
01:002001E8 00000000        	   611:          DS.L    1              122  $7A  USER INTERRUPT
01:002001EC 00000000        	   612:          DS.L    1              123  $7B  USER INTERRUPT
01:002001F0 00000000        	   613:          DS.L    1              124  $7C  USER INTERRUPT
01:002001F4 00000000        	   614:          DS.L    1              125  $7D  USER INTERRUPT
01:002001F8 00000000        	   615:          DS.L    1              126  $7E  USER INTERRUPT
01:002001FC 00000000        	   616:          DS.L    1              127  $7F  USER INTERRUPT
01:00200200 00000000        	   617:          DS.L    1              128  $80  USER INTERRUPT
01:00200204 00000000        	   618:          DS.L    1              129  $81  USER INTERRUPT
01:00200208 00000000        	   619:          DS.L    1              130  $82  USER INTERRUPT
01:0020020C 00000000        	   620:          DS.L    1              131  $83  USER INTERRUPT
01:00200210 00000000        	   621:          DS.L    1              132  $84  USER INTERRUPT
01:00200214 00000000        	   622:          DS.L    1              133  $85  USER INTERRUPT
01:00200218 00000000        	   623:          DS.L    1              134  $86  USER INTERRUPT
01:0020021C 00000000        	   624:          DS.L    1              135  $87  USER INTERRUPT
01:00200220 00000000        	   625:          DS.L    1              136  $88  USER INTERRUPT
01:00200224 00000000        	   626:          DS.L    1              137  $89  USER INTERRUPT
01:00200228 00000000        	   627:          DS.L    1              138  $8A  USER INTERRUPT
01:0020022C 00000000        	   628:          DS.L    1              139  $8B  USER INTERRUPT
01:00200230 00000000        	   629:          DS.L    1              140  $8C  USER INTERRUPT
01:00200234 00000000        	   630:          DS.L    1              141  $8D  USER INTERRUPT
01:00200238 00000000        	   631:          DS.L    1              142  $8E  USER INTERRUPT
01:0020023C 00000000        	   632:          DS.L    1              143  $8F  USER INTERRUPT
01:00200240 00000000        	   633:          DS.L    1              144  $90  USER INTERRUPT
01:00200244 00000000        	   634:          DS.L    1              145  $91  USER INTERRUPT
01:00200248 00000000        	   635:          DS.L    1              146  $92  USER INTERRUPT
01:0020024C 00000000        	   636:          DS.L    1              147  $93  USER INTERRUPT
01:00200250 00000000        	   637:          DS.L    1              148  $94  USER INTERRUPT
01:00200254 00000000        	   638:          DS.L    1              149  $95  USER INTERRUPT
01:00200258 00000000        	   639:          DS.L    1              150  $96  USER INTERRUPT
01:0020025C 00000000        	   640:          DS.L    1              151  $97  USER INTERRUPT
01:00200260 00000000        	   641:          DS.L    1              152  $98  USER INTERRUPT
01:00200264 00000000        	   642:          DS.L    1              153  $99  USER INTERRUPT
01:00200268 00000000        	   643:          DS.L    1              154  $9A  USER INTERRUPT
01:0020026C 00000000        	   644:          DS.L    1              155  $9B  USER INTERRUPT
01:00200270 00000000        	   645:          DS.L    1              156  $9C  USER INTERRUPT
01:00200274 00000000        	   646:          DS.L    1              157  $9D  USER INTERRUPT
01:00200278 00000000        	   647:          DS.L    1              158  $9E  USER INTERRUPT
01:0020027C 00000000        	   648:          DS.L    1              159  $9F  USER INTERRUPT
01:00200280 00000000        	   649:          DS.L    1              160  $A0  USER INTERRUPT
01:00200284 00000000        	   650:          DS.L    1              161  $A1  USER INTERRUPT
01:00200288 00000000        	   651:          DS.L    1              162  $A2  USER INTERRUPT
01:0020028C 00000000        	   652:          DS.L    1              163  $A3  USER INTERRUPT
01:00200290 00000000        	   653:          DS.L    1              164  $A4  USER INTERRUPT
01:00200294 00000000        	   654:          DS.L    1              165  $A5  USER INTERRUPT
01:00200298 00000000        	   655:          DS.L    1              166  $A6  USER INTERRUPT
01:0020029C 00000000        	   656:          DS.L    1              167  $A7  USER INTERRUPT
01:002002A0 00000000        	   657:          DS.L    1              168  $A8  USER INTERRUPT
01:002002A4 00000000        	   658:          DS.L    1              169  $A9  USER INTERRUPT
01:002002A8 00000000        	   659:          DS.L    1              170  $AA  USER INTERRUPT
01:002002AC 00000000        	   660:          DS.L    1              171  $AB  USER INTERRUPT
01:002002B0 00000000        	   661:          DS.L    1              172  $AC  USER INTERRUPT
01:002002B4 00000000        	   662:          DS.L    1              173  $AD  USER INTERRUPT
01:002002B8 00000000        	   663:          DS.L    1              174  $AE  USER INTERRUPT
01:002002BC 00000000        	   664:          DS.L    1              175  $AF  USER INTERRUPT
01:002002C0 00000000        	   665:          DS.L    1              176  $B0  USER INTERRUPT
01:002002C4 00000000        	   666:          DS.L    1              177  $B1  USER INTERRUPT
01:002002C8 00000000        	   667:          DS.L    1              178  $B2  USER INTERRUPT
01:002002CC 00000000        	   668:          DS.L    1              179  $B3  USER INTERRUPT
01:002002D0 00000000        	   669:          DS.L    1              180  $B4  USER INTERRUPT
01:002002D4 00000000        	   670:          DS.L    1              181  $B5  USER INTERRUPT
01:002002D8 00000000        	   671:          DS.L    1              182  $B6  USER INTERRUPT
01:002002DC 00000000        	   672:          DS.L    1              183  $B7  USER INTERRUPT
01:002002E0 00000000        	   673:          DS.L    1              184  $B8  USER INTERRUPT
01:002002E4 00000000        	   674:          DS.L    1              185  $B9  USER INTERRUPT
01:002002E8 00000000        	   675:          DS.L    1              186  $BA  USER INTERRUPT
01:002002EC 00000000        	   676:          DS.L    1              187  $BB  USER INTERRUPT
01:002002F0 00000000        	   677:          DS.L    1              188  $BC  USER INTERRUPT
01:002002F4 00000000        	   678:          DS.L    1              189  $BD  USER INTERRUPT
01:002002F8 00000000        	   679:          DS.L    1              190  $BE  USER INTERRUPT
01:002002FC 00000000        	   680:          DS.L    1              191  $BF  USER INTERRUPT
01:00200300 00000000        	   681:          DS.L    1              192  $C0  USER INTERRUPT
01:00200304 00000000        	   682:          DS.L    1              193  $C1  USER INTERRUPT
01:00200308 00000000        	   683:          DS.L    1              194  $C2  USER INTERRUPT
01:0020030C 00000000        	   684:          DS.L    1              195  $C3  USER INTERRUPT
01:00200310 00000000        	   685:          DS.L    1              196  $C4  USER INTERRUPT
01:00200314 00000000        	   686:          DS.L    1              197  $C5  USER INTERRUPT
01:00200318 00000000        	   687:          DS.L    1              198  $C6  USER INTERRUPT
01:0020031C 00000000        	   688:          DS.L    1              199  $C7  USER INTERRUPT
01:00200320 00000000        	   689:          DS.L    1              200  $C8  USER INTERRUPT
01:00200324 00000000        	   690:          DS.L    1              201  $C9  USER INTERRUPT
01:00200328 00000000        	   691:          DS.L    1              202  $CA  USER INTERRUPT
01:0020032C 00000000        	   692:          DS.L    1              203  $CB  USER INTERRUPT
01:00200330 00000000        	   693:          DS.L    1              204  $CC  USER INTERRUPT
01:00200334 00000000        	   694:          DS.L    1              205  $CD  USER INTERRUPT
01:00200338 00000000        	   695:          DS.L    1              206  $CE  USER INTERRUPT
01:0020033C 00000000        	   696:          DS.L    1              207  $CF  USER INTERRUPT
01:00200340 00000000        	   697:          DS.L    1              208  $D0  USER INTERRUPT
01:00200344 00000000        	   698:          DS.L    1              209  $D1  USER INTERRUPT
01:00200348 00000000        	   699:          DS.L    1              210  $D2  USER INTERRUPT
01:0020034C 00000000        	   700:          DS.L    1              211  $D3  USER INTERRUPT
01:00200350 00000000        	   701:          DS.L    1              212  $D4  USER INTERRUPT
01:00200354 00000000        	   702:          DS.L    1              213  $D5  USER INTERRUPT
01:00200358 00000000        	   703:          DS.L    1              214  $D6  USER INTERRUPT
01:0020035C 00000000        	   704:          DS.L    1              215  $D7  USER INTERRUPT
01:00200360 00000000        	   705:          DS.L    1              216  $D8  USER INTERRUPT
01:00200364 00000000        	   706:          DS.L    1              217  $D9  USER INTERRUPT
01:00200368 00000000        	   707:          DS.L    1              218  $DA  USER INTERRUPT
01:0020036C 00000000        	   708:          DS.L    1              219  $DB  USER INTERRUPT
01:00200370 00000000        	   709:          DS.L    1              220  $DC  USER INTERRUPT
01:00200374 00000000        	   710:          DS.L    1              221  $DD  USER INTERRUPT
01:00200378 00000000        	   711:          DS.L    1              222  $DE  USER INTERRUPT
01:0020037C 00000000        	   712:          DS.L    1              223  $DF  USER INTERRUPT
01:00200380 00000000        	   713:          DS.L    1              224  $E0  USER INTERRUPT
01:00200384 00000000        	   714:          DS.L    1              225  $E1  USER INTERRUPT
01:00200388 00000000        	   715:          DS.L    1              226  $E2  USER INTERRUPT
01:0020038C 00000000        	   716:          DS.L    1              227  $E3  USER INTERRUPT
01:00200390 00000000        	   717:          DS.L    1              228  $E4  USER INTERRUPT
01:00200394 00000000        	   718:          DS.L    1              229  $E5  USER INTERRUPT
01:00200398 00000000        	   719:          DS.L    1              230  $E6  USER INTERRUPT
01:0020039C 00000000        	   720:          DS.L    1              231  $E7  USER INTERRUPT
01:002003A0 00000000        	   721:          DS.L    1              232  $E8  USER INTERRUPT
01:002003A4 00000000        	   722:          DS.L    1              233  $E9  USER INTERRUPT
01:002003A8 00000000        	   723:          DS.L    1              234  $EA  USER INTERRUPT
01:002003AC 00000000        	   724:          DS.L    1              235  $EB  USER INTERRUPT
01:002003B0 00000000        	   725:          DS.L    1              236  $EC  USER INTERRUPT
01:002003B4 00000000        	   726:          DS.L    1              237  $ED  USER INTERRUPT
01:002003B8 00000000        	   727:          DS.L    1              238  $EE  USER INTERRUPT
01:002003BC 00000000        	   728:          DS.L    1              239  $EF  USER INTERRUPT
01:002003C0 00000000        	   729:          DS.L    1              240  $F0  USER INTERRUPT
01:002003C4 00000000        	   730:          DS.L    1              241  $F1  USER INTERRUPT
01:002003C8 00000000        	   731:          DS.L    1              242  $F2  USER INTERRUPT
01:002003CC 00000000        	   732:          DS.L    1              243  $F3  USER INTERRUPT
01:002003D0 00000000        	   733:          DS.L    1              244  $F4  USER INTERRUPT
01:002003D4 00000000        	   734:          DS.L    1              245  $F5  USER INTERRUPT
01:002003D8 00000000        	   735:          DS.L    1              246  $F6  USER INTERRUPT
01:002003DC 00000000        	   736:          DS.L    1              247  $F7  USER INTERRUPT
01:002003E0 00000000        	   737:          DS.L    1              248  $F8  USER INTERRUPT
01:002003E4 00000000        	   738:          DS.L    1              249  $F9  USER INTERRUPT
01:002003E8 00000000        	   739:          DS.L    1              250  $FA  USER INTERRUPT
01:002003EC 00000000        	   740:          DS.L    1              251  $FB  USER INTERRUPT
01:002003F0 00000000        	   741:          DS.L    1              252  $FC  USER INTERRUPT
01:002003F4 00000000        	   742:          DS.L    1              253  $FD  USER INTERRUPT
01:002003F8 00000000        	   743:          DS.L    1              254  $FE  USER INTERRUPT
01:002003FC 00000000        	   744:          DS.L    1              255  $FF  USER INTERRUPT
                            	   745: 
01:00200400 60000CA8        	   746: V2       BRA     TRACE
                            	   747: 
                            	   748: 
                            	   749: **********************************
                            	   750: * INITIALIZE HIGH RAM SUBROUTINE *
                            	   751: **********************************
                            	   752: 
01:00200404 41F8044C        	   753: INITHRAM LEA     BEGHRAM,A0     START OF WORK RAM (PAST REGISTERS)
01:00200408 203C0000020E    	   754:          MOVE.L  #(ENDHRAM-BEGHRAM),D0  BYTES TO ZERO
01:0020040E 7200            	   755:          CLR.L   D1
01:00200410 10C1            	   756: INIT     MOVE.B  D1,(A0)+       ZERO MEMORY
01:00200412 5380            	   757:          SUBQ.L  #1,D0
01:00200414 66FA            	   758:          BNE     INIT
                            	   759: 
                            	   760:          ADDR2MEM BERRMSG,AV2   POINT AT BUS TRAP ERROR MESSAGE ROUTINE
01:00200416 487A0010        	     1M          PEA     BERRMSG(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020041A 21DF0008        	     2M          MOVE.L  (A7)+,AV2       INDEPENDANT = TO "MOVE.L #BERRMSG,AV2"
                            	   761: 
                            	   762:          ADDR2MEM ADDRMSG,AV3   POINT AT ADDRESS TRAP ERROR MESSAGE ROUTINE
01:0020041E 487A0012        	     1M          PEA     ADDRMSG(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200422 21DF000C        	     2M          MOVE.L  (A7)+,AV3       INDEPENDANT = TO "MOVE.L #ADDRMSG,AV3"
                            	   763: 
01:00200426 4E75            	   764:          RTS
                            	   765: 
                            	   766: 
                            	   767: ****************************************************
                            	   768: * SPECIAL HANDLING FOR BUS ERROR AND ADDRESS ERROR *
                            	   769: ****************************************************
                            	   770: 
01:00200428 21FC425553200030	   771: BERRMSG  MOVE.L  #'BUS ',$30
                            	   772: 
01:00200430 6008            	   773:          BRA.S   VECTBE
                            	   774: 
01:00200432 21FC414444520030	   775: ADDRMSG  MOVE.L  #'ADDR',$30
                            	   776: 
                            	   777: 
01:0020043A 21DF04CA        	   778: VECTBE   MOVE.L  (A7)+,BERRD
01:0020043E 21DF04CE        	   779:          MOVE.L  (A7)+,BERRD+4
                            	   780: 
                            	   781:          SAVEREGS
01:00200442 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00200446 4FFA000A        	     2M          LEA     SV_000003(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:0020044A 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:0020044E 60000C2C        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000003     DS      0
01:00200452 61001C2C        	   782:          BSR     FIXBUF
01:00200456 3CFC0D0A        	   783:          MOVE.W  #$D0A,(A6)+
01:0020045A 303804CA        	   784:          MOVE.W  BERRD,D0
01:0020045E 6100193A        	   785:          BSR     PNT4HX         FORMAT FUNCTION CODE
                            	   786: 
01:00200462 1CFC0020        	   787:          MOVE.B  #BLANK,(A6)+   SPACE
01:00200466 203804CC        	   788:          MOVE.L  BERRD+2,D0
01:0020046A 61001920        	   789:          BSR     PNT8HX         FORMAT ACCESS ADDRESS
                            	   790: 
01:0020046E 1CFC0020        	   791:          MOVE.B  #BLANK,(A6)+   SPACE
01:00200472 303804D0        	   792:          MOVE.W  BERRD+6,D0
01:00200476 61001922        	   793:          BSR     PNT4HX         FORMAT INSTRUCTION REGISTER
                            	   794: 
01:0020047A 61001B78        	   795:          BSR     OUTPUT
01:0020047E 600018E8        	   796:          BRA     EVECT2         GO DISPLAY REGISTERS & PROMPT
                            	   797: 
01:00200482 53594E54415820  	   798: MSG008   DC.B    'SYNTAX '
                            	   799: 
01:00200489 4552524F5220    	   800: MSG008E  DC.B    'ERROR '
                            	   801: 
01:0020048F 04              	   802: MSGEOT   DC.B    EOT
                            	   803: 
01:00200490 57484154        	   804: MSG021   DC.B    'WHAT',EOT
01:00200494 04
                            	   805: 
01:00200495 00              	   806:          DC.B    0              PAD BYTE
                            	   807: 
                            	   808: 
                            	   809: * PRINT WHAT
                            	   810: 
01:00200496 4BFAFFF8        	   811: WHAT     LEA     MSG021(PC),A5  PRINT 'WHAT' AND ENTER MACSBUG
01:0020049A 614E            	   812: WHAT93   BSR.S   FIXDATA
01:0020049C 427804DE        	   813:          CLR.W   TRACEON
01:002004A0 61001B38        	   814: MSG      BSR     OUT1CR
01:002004A4 60000180        	   815:          BRA     MACSBUG
                            	   816: 
                            	   817: 
                            	   818: * PRINT ERROR
                            	   819: 
01:002004A8 4BFAFFDF        	   820: ERROR    LEA     MSG008E(PC),A5
01:002004AC 60EC            	   821:          BRA     WHAT93
                            	   822: 
01:002004AE 4BFAFFD2        	   823: SYNTAX   LEA     MSG008(PC),A5  'SYNTAX ERROR'
01:002004B2 60E6            	   824:          BRA     WHAT93
                            	   825: 
                            	   826: * FORMAT PHYSICAL ADDRESS FROM (D0)
01:002004B4 4BFA0022        	   827: PPHY     LEA     MSG019(PC),A5
01:002004B8 6130            	   828:          BSR.S   FIXDATA
01:002004BA 6012            	   829:          BRA.S   P2PHY2
                            	   830: 
                            	   831: * FORMAT TWO PHYSICAL ADDRESSES FROM (A0) & (A1)
01:002004BC 4BFA001A        	   832: P2PHY    LEA     MSG019(PC),A5  'PHYSICAL ADDRESS='
01:002004C0 6128            	   833:          BSR.S   FIXDATA
01:002004C2 2008            	   834:          MOVE.L  A0,D0
01:002004C4 610018C6        	   835:          BSR     PNT8HX         FORMAT ADDR1
01:002004C8 1CFC0020        	   836:          MOVE.B  #BLANK,(A6)+   SPACE FOR FORMATING
01:002004CC 2009            	   837:          MOVE.L  A1,D0
01:002004CE 610018BC        	   838: P2PHY2   BSR     PNT8HX         FORMAT ADDR2
01:002004D2 61001B06        	   839:          BSR     OUT1CR         DISPLAY IT
01:002004D6 4E75            	   840:          RTS
                            	   841: 
01:002004D8 504859534943414C	   842: MSG019   DC.B    'PHYSICAL ADDRESS=',EOT
01:002004E0 2041444452455353
01:002004E8 3D
01:002004E9 04
                            	   843: 
                            	   844: 
                            	   845: 
                            	   846: 
                            	   847: 
                            	   848: *************************************************************
                            	   849: * -FIXDATA- SUBROUTINE...  MOVES MESSAGE POINTED TO BY (A5) *
                            	   850: *                          INTO "BUFFER". EOT, ($04), ENDS  *
                            	   851: *                          THE MOVE. AT COMPLETION (A5) IS  *
                            	   852: *                          POINTING AT THE BEGINNING, (A6)  *
                            	   853: *                          POINTS AT END.                   *
                            	   854: *************************************************************
                            	   855: 
01:002004EA 4DF80540        	   856: FIXDATA  LEA     BUFFER,A6
01:002004EE 0C150004        	   857: FIXDADD  CMPI.B  #EOT,(A5)
01:002004F2 6704            	   858:          BEQ.S   FIXD2
01:002004F4 1CDD            	   859:          MOVE.B  (A5)+,(A6)+
01:002004F6 60F6            	   860:          BRA     FIXDADD
01:002004F8 4BF80540        	   861: FIXD2    LEA     BUFFER,A5
01:002004FC 4E75            	   862:          RTS
                            	   863: 
                            	   864: 
                            	   865: ************************************************************
                            	   866: * -FIXDCRLF- SUBROUTINE INSERTS A CARRIAGE RETURN AND LINE *
                            	   867: *                       FEED IN FRONT OF THE TEXT, THEN    *
                            	   868: *                       USES THE REMAINING PORTION OF THE  *
                            	   869: *                       FIXDATA.                           *
                            	   870: ************************************************************
                            	   871: 
01:002004FE 4DF80540        	   872: FIXDCRLF LEA     BUFFER,A6
01:00200502 3CFC0D0A        	   873:          MOVE.W  #$0D0A,(A6)+   CR,LF
01:00200506 60E6            	   874:          BRA     FIXDADD
                            	   875: 
                            	   876: 
                            	   877: 
                            	   878: 
                            	   879: *-------------------------------------------------------------------------
                            	   880: * File E         VERSAbug entry point                             01/08/81
                            	   881: 
                            	   882: **********************
                            	   883: * INITIALIZE VECTORS *
                            	   884: **********************
                            	   885: *                               Set most vectors to point at "????" routine
01:00200508 41F80008        	   886: INITVECT LEA     8,A0           Skip (Restart) STACK & ADDRESS vectors
01:0020050C 43FA183E        	   887:          LEA     ABORTE(PC),A1  A1 = "Default" TRAP ERROR routine address
                            	   888: 
01:00200510 20C9            	   889: INIT0    MOVE.L  A1,(A0)+       INITIALIZE VECTOR
01:00200512 B0FC0400        	   890:          CMPA.L  #$400,A0       Done?
01:00200516 6BF8            	   891:          BMI.S   INIT0          *
01:00200518 4E75            	   892:          RTS
                            	   893: 
                            	   894: 
                            	   895: * SPECIAL ENTRY THAT DOES NOT CHANGE VECTORS
                            	   896: 
01:0020051A 48B800010406    	   897: START1S  MOVEM.W D0,REGSR+2     Assure good parity.
01:00200520 40F80406        	   898:          MOVE.W  SR,REGSR+2     SAVE TARGET'S STATUS REGISTER
01:00200524 21CF0444        	   899:          MOVE.L  A7,REGA7       SAVE TARGET'S STACK
01:00200528 21D70400        	   900:          MOVE.L  (A7),REGPC     .PROGRAM COUNTER
01:0020052C 4FF80444        	   901:          LEA     REGA7,A7
01:00200530 48E7FFFE        	   902:          MOVEM.L D0-D7/A0-A6,-(A7) .REGISTERS
01:00200534 4FF80786        	   903:          LEA     SYSTACK,A7
01:00200538 601E            	   904:          BRA     START11
                            	   905: 
                            	   906: 
                            	   907: ************************
                            	   908: *    INITIALIZATION    *
                            	   909: ************************
                            	   910: 
                            	   911: * SAVE PROCESSOR REGISTERS (EXCEPT A7 & PC)
                            	   912: 
01:0020053A 48B800010406    	   913: START    MOVEM.W D0,REGSR+2     Assure good parity
01:00200540 40F80406        	   914:          MOVE.W  SR,REGSR+2     SAVE STATUS REGISTER
01:00200544 48E7FFFE        	   915:          MOVEM.L D0-D7/A0-A6,-(A7)
                            	   916: 
01:00200548 4FF80786        	   917:          LEA     SYSTACK,A7     SET UP STACK
01:0020054C 21CF0444        	   918:          MOVE.L  A7,REGA7
                            	   919: 
01:00200550 7200            	   920:          CLR.L   D1
01:00200552 21C10400        	   921:          MOVE.L  D1,REGPC       PC = 000000
                            	   922: 
01:00200556 61B0            	   923:          BSR     INITVECT
                            	   924: 
                            	   925: 
01:00200558 46FC2700        	   926: START11  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
                            	   927: 
01:0020055C 4E68            	   928:          MOVE.L  USP,A0
01:0020055E 21C80448        	   929:          MOVE.L  A0,REGUS       USER STACK
                            	   930: 
01:00200562 6100FEA0        	   931:          BSR     INITHRAM       ZERO (INITIALIZE) HIGH RAM
                            	   932: 
                            	   933: 
                            	   934: * VECTMSG.SA
01:00200566 61000206        	   935:          BSR     INITVMSG
                            	   936: 
                            	   937: 
                            	   938: * H.SA
                            	   939:          ADDR2MEM CHKBP,AV4     ILLEGAL INSTRUCTION
01:0020056A 487A0C68        	     1M          PEA     CHKBP(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020056E 21DF0010        	     2M          MOVE.L  (A7)+,AV4       INDEPENDANT = TO "MOVE.L #CHKBP,AV4"
                            	   940: 
                            	   941: 
                            	   942: * TM.SA
01:00200572 31FC180104EA    	   943:          MOVE.W  #$1801,TMCHARS CNTLX,CNTL/A
                            	   944: 
                            	   945: 
                            	   946: * W.SA
                            	   947:          ADDR2MEM  ABORTB,AV31  ABORT
01:00200578 487A178E        	     1M          PEA     ABORTB(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020057C 21DF007C        	     2M          MOVE.L  (A7)+,AV31       INDEPENDANT = TO "MOVE.L #ABORTB,AV31"
                            	   948: 
                            	   949: 
                            	   950: * Y.SA
                            	   951:          ADDR2MEM  OUT1CR0,OUTPORT1 INITIALIZE I/O ROUTINES
01:00200580 487A1A72        	     1M          PEA     OUT1CR0(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200584 21DF0630        	     2M          MOVE.L  (A7)+,OUTPORT1       INDEPENDANT = TO "MOVE.L #OUT1CR0,OUTPORT1"
                            	   952:          ADDR2MEM  OUTPUT20,OUTPORT2
01:00200588 487A1A8A        	     1M          PEA     OUTPUT20(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020058C 21DF0638        	     2M          MOVE.L  (A7)+,OUTPORT2       INDEPENDANT = TO "MOVE.L #OUTPUT20,OUTPORT2"
                            	   953:          ADDR2MEM  PRCRLF,OUTPORT3     PRINTER DRIVER
01:00200590 487A1BBE        	     1M          PEA     PRCRLF(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00200594 21DF0640        	     2M          MOVE.L  (A7)+,OUTPORT3       INDEPENDANT = TO "MOVE.L #PRCRLF,OUTPORT3"
                            	   954:          ADDR2MEM  TAPEOUT,OUTPORT4    CASSETTE
01:00200598 487A1CEC        	     1M          PEA     TAPEOUT(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020059C 21DF0648        	     2M          MOVE.L  (A7)+,OUTPORT4       INDEPENDANT = TO "MOVE.L #TAPEOUT,OUTPORT4"
                            	   955:          ADDR2MEM  PORTIN10,INPORT1
01:002005A0 487A1B06        	     1M          PEA     PORTIN10(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005A4 21DF062C        	     2M          MOVE.L  (A7)+,INPORT1       INDEPENDANT = TO "MOVE.L #PORTIN10,INPORT1"
                            	   956:          ADDR2MEM  PORTIN20,INPORT2
01:002005A8 487A1E14        	     1M          PEA     PORTIN20(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005AC 21DF0634        	     2M          MOVE.L  (A7)+,INPORT2       INDEPENDANT = TO "MOVE.L #PORTIN20,INPORT2"
                            	   957:          ADDR2MEM  PORTIN10,INPORT3
01:002005B0 487A1AF6        	     1M          PEA     PORTIN10(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005B4 21DF063C        	     2M          MOVE.L  (A7)+,INPORT3       INDEPENDANT = TO "MOVE.L #PORTIN10,INPORT3"
                            	   958:          ADDR2MEM  TAPEIN,INPORT4      CASSETTE
01:002005B8 487A1ECC        	     1M          PEA     TAPEIN(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:002005BC 21DF0644        	     2M          MOVE.L  (A7)+,INPORT4       INDEPENDANT = TO "MOVE.L #TAPEIN,INPORT4"
                            	   959: 
01:002005C0 11FC00080654    	   960:          MOVE.B  #8,TAPENULS    NULLS FOR CASSETTE
01:002005C6 21FC000F0000064E	   961:          MOVE.L  #PDI1,PDIPORT  PRINTER
                            	   962: 
                            	   963: 
                            	   964: *        INITIALIZE MC68230 PI/T
01:002005CE 207C000F0000    	   965:          MOVE.L  #PDI1,A0       BASE ADDRESS OF PI/T
01:002005D4 203C0000FF00    	   966:          MOVE.L  #$0000FF00,D0
01:002005DA 01C80001        	   967:          MOVEP.L D0,1(A0)
                            	   968: 
                            	   969: *        SELECT MODE 0
                            	   970: *        IRQ'S INACTIVATED
                            	   971: *        PORT A--ALL BITS OUTPUTS
                            	   972: *        PORT B--ALL BITS INPUTS
                            	   973: 
01:002005DE 117C0060000D    	   974:          MOVE.B  #$60,13(A0)    SUBMODE 01 FOR PORT A; INTERLOCKED HANDS
01:002005E4 117C00A0000F    	   975:          MOVE.B  #$A0,15(A0)    SUBMODE 1X FOR PORT B
01:002005EA 117C00300001    	   976:          MOVE.B  #$30,1(A0)     ENABLE HANDSHAKE LINES
01:002005F0 117C00A8000F    	   977:          MOVE.B  #$A8,15(A0)    RESET AND INIT PRINTER
01:002005F6 21FC000F0010064E	   978:          MOVE.L  #PDI1+$10,PDIPORT
                            	   979: 
01:002005FE 117C00A0000F    	   980:          MOVE.B  #$A0,15(A0)    CLEAR INIT
                            	   981: 
                            	   982: * INITIALIZE THE PDI'S
                            	   983: 
01:00200604 31FC5151064C    	   984:          MOVE.W  #$5151,MD1CON
01:0020060A 61001D58        	   985:          BSR     INITSER        RESET & PROGRAM PDI
                            	   986: 
                            	   987: * INITIALIZE XON/XOFF (READER ON / READER OFF)
                            	   988: *            AUTO-LINE FEED OVERRIDE
                            	   989: 
01:0020060E 21FC0000000004E6	   990:          MOVE.L  #$00000000,XONOFF
                            	   991: 
                            	   992: 
                            	   993: 
                            	   994: * TRAP14.SA
                            	   995:          ADDR2MEM  TRAP14,AV46
01:00200616 487A3C30        	     1M          PEA     TRAP14(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:0020061A 21DF00B8        	     2M          MOVE.L  (A7)+,AV46       INDEPENDANT = TO "MOVE.L #TRAP14,AV46"
01:0020061E 21FCFE2042EC0656	   996:          MOVE.L  #(254<<24)+CT,CTLINK
                            	   997: 
                            	   998: 
                            	   999: 
                            	  1000: 
                            	  1001: 
                            	  1002: ************************************************************************
                            	  1003: *                    V E R S I O N   N U M B E R   A N D   P R O M P T *
                            	  1004: ************************************************************************
                            	  1005: 
01:00200626 46FC2700        	  1006: MACSBUG  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
01:0020062A 4FF80786        	  1007:          LEA     SYSTACK,A7     RESTORE SYSTEM STACK
01:0020062E 61000B5C        	  1008:          BSR     SWAPOUT        GET BP OUT OF USER MEMORY
                            	  1009: 
01:00200632 42B80490        	  1010:          CLR.L   BPTILL         GET RID OF 'TILL' BREAKPOINT
01:00200636 42B8061C        	  1011:          CLR.L   OUTTO          INITIALIZE I/O TO DEFAULT
01:0020063A 42B80620        	  1012:          CLR.L   INFROM         INITIALIZE I/O TO DEFAULT
01:0020063E 423804E2        	  1013:          CLR.B   ECHOPT1        NO ECHO TO PORT1
                            	  1014: 
01:00200642 4BFA00AA        	  1015:          LEA     MSG001(PC),A5  > (Prompt)
01:00200646 6100FEA2        	  1016:          BSR     FIXDATA
                            	  1017: 
01:0020064A 4A7804DE        	  1018:          TST.W   TRACEON        SEE IF IN TRACE MODE
01:0020064E 6704            	  1019:          BEQ.S   MACSBUG1
01:00200650 1CFC003A        	  1020:          MOVE.B  #':',(A6)+     IN TRACE MODE
01:00200654 1CFC003E        	  1021: MACSBUG1 MOVE.B  #'>',(A6)+     PROMPT
01:00200658 1CFC0020        	  1022:          MOVE.B  #BLANK,(A6)+   .. SPACE
01:0020065C 61001996        	  1023:          BSR     OUTPUT         GO PRINT IT
                            	  1024: 
                            	  1025: * INPUT LINE
01:00200660 61001A1E        	  1026:          BSR     FIXBUF         GET READY FOR INPUT
01:00200664 61001A22        	  1027:          BSR     PORTIN1        GET A COMMAND
01:00200668 1CBC0020        	  1028: DECODE6  MOVE.B  #BLANK,(A6)    BLANK OUT END+1
                            	  1029: 
                            	  1030: *  DECODE A COMMAND
                            	  1031: *
                            	  1032: *  DECODE SPECIAL CHARACTER USAGE:
                            	  1033: *    LEADING SPACES IGNORED
                            	  1034: *    LEADING NULLS IGNORED
                            	  1035: *    IF SECOND CHAR  *  CHAR CAN BE ANY CHAR
                            	  1036: 
01:0020066C BBCE            	  1037:          CMP.L   A6,A5          SEE IF ANYTHING ENTERED
01:0020066E 6B08            	  1038:          BMI.S   DECODE1
01:00200670 4A7804DE        	  1039:          TST.W   TRACEON        SEE IF IN TRACE MODE
01:00200674 66000316        	  1040:          BNE     TCMDHOT        DIRECT TO TRACE 1 COMMAND
                            	  1041: 
01:00200678 BBCE            	  1042: DECODE1  CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:0020067A 6200FE1A        	  1043:          BHI     WHAT           GO TO 'WHAT' IF CONFUSED
01:0020067E 1015            	  1044:          MOVE.B  (A5),D0        GRAB FIRST CHARACTER
01:00200680 0C00002A        	  1045:          CMPI.B  #'*',D0        SEND LINE COMMAND
01:00200684 6608            	  1046:          BNE.S   DECODE10
01:00200686 528D            	  1047:          ADDQ.L  #1,A5          GET PAST PHOENY PROMPT
01:00200688 61001974        	  1048:          BSR     OUTPUT2        SEND LINE+CR (NO LF) TO PORT2
01:0020068C 6098            	  1049:          BRA     MACSBUG        REENTER COMMAND MODE
                            	  1050: 
01:0020068E 0C000020        	  1051: DECODE10 CMPI.B  #$20,D0        IGNORE LEADING SPACES
01:00200692 6604            	  1052:          BNE.S   DECODE2        WHERE TO GO IF NOT A SPACE
01:00200694 528D            	  1053:          ADDQ.L  #1,A5          BUMP START OF BUFFER
01:00200696 60E0            	  1054:          BRA.S   DECODE1        TRY NEXT CHARACTER
                            	  1055: *
01:00200698 1215            	  1056: DECODE2  MOVE.B  (A5),D1        GET 2 LETTERS OF COMMAND
01:0020069A E149            	  1057:          LSL.W   #8,D1          MAKE ROOM FOR SECOND CHAR
01:0020069C 122D0001        	  1058:          MOVE.B  1(A5),D1       GET SECOND CHAR
01:002006A0 7600            	  1059:          CLR.L   D3             D3 = CLEAR "NO" SWITCH
                            	  1060: 
01:002006A2 43FA0058        	  1061: DECODE21 LEA     SOLIST(PC),A1  A1 = COMMAND LIST ADDRESS
01:002006A6 3419            	  1062: DECODE4  MOVE.W  (A1)+,D2       D2 = 2 CHAR COMMAND FROM LIST
01:002006A8 7000            	  1063:          CLR.L   D0             CLEAR HIGH BITS
01:002006AA 3019            	  1064:          MOVE.W  (A1)+,D0       D0 = OFFSET FROM START OF ROM
                            	  1065: 
01:002006AC 4A83            	  1066:          TST.L   D3
01:002006AE 6704            	  1067:          BEQ.S   DECODE41       NOT A "NO"
01:002006B0 4A02            	  1068:          TST.B   D2             IS "NO" OPTION SUPPORTED THIS COMMAND?
01:002006B2 6AF2            	  1069:          BPL     DECODE4        NO...THEN RUN OUT OF COMMANDS
                            	  1070: 
01:002006B4 02427F7F        	  1071: DECODE41 ANDI.W  #$7F7F,D2      CLEAR "INVISABLE" & "NO" BITS
01:002006B8 0C427F7F        	  1072:          CMPI.W  #$7F7F,D2      END OF LIST?
01:002006BC 6700FDD8        	  1073:          BEQ     WHAT           Command not found
                            	  1074: 
01:002006C0 0C02002A        	  1075:          CMPI.B  #'*',D2        SEE IF DON'T CARE CHARACTER
01:002006C4 6602            	  1076:          BNE.S   DECODE3
01:002006C6 1401            	  1077:          MOVE.B  D1,D2          DEFAULT
                            	  1078: 
01:002006C8 B441            	  1079: DECODE3  CMP.W   D1,D2          Command from table = the input?
01:002006CA 66DA            	  1080:          BNE     DECODE4        COMMAND NOT FOUND
                            	  1081: 
01:002006CC 427804DE        	  1082:          CLR.W   TRACEON        TURN OFF TRACE MODE
                            	  1083: 
01:002006D0 548D            	  1084:          ADDQ.L  #2,A5          POINT A5 PAST 2 DIGIT COMMAND
                            	  1085: 
01:002006D2 487AF92C        	  1086:          PEA     FIRST(PC)      BUILD GO TO ADDRESS
01:002006D6 D197            	  1087:          ADD.L   D0,(A7)        ON STACK.
01:002006D8 D797            	  1088:          ADD.L   D3,(A7)
                            	  1089: 
01:002006DA 205F            	  1090:          MOVE.L  (A7)+,A0       GO TO COMMAND
01:002006DC 4E90            	  1091:          JSR     (A0)           * SAVE MARK FOR RETURN
01:002006DE 6000FF46        	  1092:          BRA     MACSBUG        *  RETURN HERE
                            	  1093: 
                            	  1094: *
                            	  1095: *    NO COMMAND
                            	  1096: *
01:002006E2 76FC            	  1097: NOCMD    MOVEQ   #-4,D3         SET "NO" SWITCH
01:002006E4 1215            	  1098:          MOVE.B  (A5),D1        MOVE CHAR #3
01:002006E6 E141            	  1099:          ASL.W   #8,D1          MOVE OVER 1 CHAR
01:002006E8 122D0001        	  1100:          MOVE.B  1(A5),D1       MOVE CHAR #4
01:002006EC 60B4            	  1101:          BRA     DECODE21       WHICH "NO" COMMAND?
                            	  1102: 
                            	  1103: 
                            	  1104: *-------------------------------------------------------------------------
                            	  1105: * File COMMANDS  Command list                                     06/20/82
                            	  1106: 
                            	  1107: 
01:002006EE 0D              	  1108: MSG001   DC.B    CR,LF,'TUTOR  1.3 ',EOT    "PROMPT"
01:002006EF 0A
01:002006F0 5455544F52202031
01:002006F8 2E3320
01:002006FB 04
                            	  1109: 
                            	  1110: 
                            	  1111: 
                            	  1112: 
                            	  1113: *******************************************************
                            	  1114: * C O P Y R I G H T . 1 9 8 1 . B Y . M O T O R O L A *
                            	  1115: *******************************************************
                            	  1116: 
                            	  1117: * VERSAbug command generation macro
                            	  1118: CMD      MACRO
                            	  1119: FLAG     SET     0              *
                            	  1120:          IFC     '\2','HELP=NO'
                            	  1121: FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	  1122:          ENDC
                            	  1123:          IFC     '\3','HELP=NO'
                            	  1124: FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	  1125:          ENDC
                            	  1126:          IFC     '\2','NORTN=YES'
                            	  1127: FLAG     SET     FLAG+$80       * "NO\1".Command
                            	  1128:          ENDC
                            	  1129:          IFC     '\3','NORTN=YES'
                            	  1130: FLAG     SET     FLAG+$80       * "NO\1".Command
                            	  1131:          ENDC
                            	  1132:          IFC     '\1','PER'     Check for the "PER" command
                            	  1133:          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	  1134:          DC.W    \1CMD-FIRST    *************************************
                            	  1135:          ENDC
                            	  1136:          IFNC    '\1','PER'     If not PERCMD...
                            	  1137:          IFEQ    '\1'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	  1138:          DC.W    '\1 '+FLAG     * "\1"....Command  -  -  (Single Digit)
                            	  1139:          ENDC
                            	  1140:          IFNE    '\1'&($FF00)   If 2 digit code, leave as is.
                            	  1141:          DC.W    '\1'+FLAG      * "\1"...Command
                            	  1142:          ENDC
                            	  1143:          DC.W    \1CMD-FIRST    *************************************
                            	  1144:          ENDC
                            	  1145:          ENDM
                            	  1146: 
                            	  1147: 
                            	  1148: SOLIST   DS      0              Start Of LIST
                            	  1149: 
                            	  1150:          CMD     PER,HELP=NO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'HELP=NO','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'HELP=NO','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPER".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPER".Command
                            	    13M          ENDC
                            	    14M          IFC     'PER','PER'     Check for the "PER" command
01:002006FC AE2A            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
01:002006FE 197A            	    16M          DC.W    PERCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PER','PER'     If not PERCMD...
                            	    19M          IFEQ    'PER'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PER '+FLAG     * "PER"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PER'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'PER'+FLAG      * "PER"...Command
                            	    24M          ENDC
                            	    25M          DC.W    PERCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1151: 
                            	  1152:          CMD     NO,HELP=NO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'HELP=NO','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'HELP=NO','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NONO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NONO".Command
                            	    13M          ENDC
                            	    14M          IFC     'NO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    NOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'NO','PER'     If not PERCMD...
                            	    19M          IFEQ    'NO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'NO '+FLAG     * "NO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'NO'&($FF00)   If 2 digit code, leave as is.
01:00200700 CE4F            	    23M          DC.W    'NO'+FLAG      * "NO"...Command
                            	    24M          ENDC
01:00200702 06E2            	    25M          DC.W    NOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1153: 
                            	  1154:          CMD     BF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBF".Command
                            	    13M          ENDC
                            	    14M          IFC     'BF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BF','PER'     If not PERCMD...
                            	    19M          IFEQ    'BF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BF '+FLAG     * "BF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BF'&($FF00)   If 2 digit code, leave as is.
01:00200704 4246            	    23M          DC.W    'BF'+FLAG      * "BF"...Command
                            	    24M          ENDC
01:00200706 08D4            	    25M          DC.W    BFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1155: 
                            	  1156:          CMD     BM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBM".Command
                            	    13M          ENDC
                            	    14M          IFC     'BM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BM','PER'     If not PERCMD...
                            	    19M          IFEQ    'BM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BM '+FLAG     * "BM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BM'&($FF00)   If 2 digit code, leave as is.
01:00200708 424D            	    23M          DC.W    'BM'+FLAG      * "BM"...Command
                            	    24M          ENDC
01:0020070A 0926            	    25M          DC.W    BMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1157: 
                            	  1158: 
                            	  1159: 
                            	  1160:          CMD     BR,NORTN=YES,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'NORTN=YES','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'NORTN=YES','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBR".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBR".Command
                            	    13M          ENDC
                            	    14M          IFC     'BR','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BRCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BR','PER'     If not PERCMD...
                            	    19M          IFEQ    'BR'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BR '+FLAG     * "BR"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BR'&($FF00)   If 2 digit code, leave as is.
01:0020070C 42D2            	    23M          DC.W    'BR'+FLAG      * "BR"...Command
                            	    24M          ENDC
01:0020070E 0A42            	    25M          DC.W    BRCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1161: 
                            	  1162:          CMD     BS,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBS".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBS".Command
                            	    13M          ENDC
                            	    14M          IFC     'BS','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BSCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BS','PER'     If not PERCMD...
                            	    19M          IFEQ    'BS'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BS '+FLAG     * "BS"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BS'&($FF00)   If 2 digit code, leave as is.
01:00200710 4253            	    23M          DC.W    'BS'+FLAG      * "BS"...Command
                            	    24M          ENDC
01:00200712 0B08            	    25M          DC.W    BSCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1163: 
                            	  1164:          CMD     BT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOBT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOBT".Command
                            	    13M          ENDC
                            	    14M          IFC     'BT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    BTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'BT','PER'     If not PERCMD...
                            	    19M          IFEQ    'BT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'BT '+FLAG     * "BT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'BT'&($FF00)   If 2 digit code, leave as is.
01:00200714 4254            	    23M          DC.W    'BT'+FLAG      * "BT"...Command
                            	    24M          ENDC
01:00200716 0C42            	    25M          DC.W    BTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1165: 
                            	  1166:          CMD     DC,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODC".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODC".Command
                            	    13M          ENDC
                            	    14M          IFC     'DC','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DCCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DC','PER'     If not PERCMD...
                            	    19M          IFEQ    'DC'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DC '+FLAG     * "DC"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DC'&($FF00)   If 2 digit code, leave as is.
01:00200718 4443            	    23M          DC.W    'DC'+FLAG      * "DC"...Command
                            	    24M          ENDC
01:0020071A 0C94            	    25M          DC.W    DCCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1167: 
                            	  1168:          CMD     DF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODF".Command
                            	    13M          ENDC
                            	    14M          IFC     'DF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DF','PER'     If not PERCMD...
                            	    19M          IFEQ    'DF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DF '+FLAG     * "DF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DF'&($FF00)   If 2 digit code, leave as is.
01:0020071C 4446            	    23M          DC.W    'DF'+FLAG      * "DF"...Command
                            	    24M          ENDC
01:0020071E 0CF2            	    25M          DC.W    DFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1169: 
                            	  1170:          CMD     DU,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NODU".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NODU".Command
                            	    13M          ENDC
                            	    14M          IFC     'DU','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    DUCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'DU','PER'     If not PERCMD...
                            	    19M          IFEQ    'DU'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'DU '+FLAG     * "DU"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'DU'&($FF00)   If 2 digit code, leave as is.
01:00200720 4455            	    23M          DC.W    'DU'+FLAG      * "DU"...Command
                            	    24M          ENDC
01:00200722 0E10            	    25M          DC.W    DUCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1171: 
                            	  1172: 
                            	  1173: 
                            	  1174:          CMD     G,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOG".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOG".Command
                            	    13M          ENDC
                            	    14M          IFC     'G','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'G','PER'     If not PERCMD...
                            	    19M          IFEQ    'G'&($FF00)   If 1 digit code, 2nd will be a blank.
01:00200724 4720            	    20M          DC.W    'G '+FLAG     * "G"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'G'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'G'+FLAG      * "G"...Command
                            	    24M          ENDC
01:00200726 0A14            	    25M          DC.W    GCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1175: 
                            	  1176:          CMD     GD,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGD".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGD".Command
                            	    13M          ENDC
                            	    14M          IFC     'GD','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GDCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GD','PER'     If not PERCMD...
                            	    19M          IFEQ    'GD'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GD '+FLAG     * "GD"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GD'&($FF00)   If 2 digit code, leave as is.
01:00200728 4744            	    23M          DC.W    'GD'+FLAG      * "GD"...Command
                            	    24M          ENDC
01:0020072A 0A22            	    25M          DC.W    GDCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1177: 
                            	  1178:          CMD     GO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGO".Command
                            	    13M          ENDC
                            	    14M          IFC     'GO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GO','PER'     If not PERCMD...
                            	    19M          IFEQ    'GO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GO '+FLAG     * "GO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GO'&($FF00)   If 2 digit code, leave as is.
01:0020072C 474F            	    23M          DC.W    'GO'+FLAG      * "GO"...Command
                            	    24M          ENDC
01:0020072E 0A14            	    25M          DC.W    GOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1179: 
                            	  1180:          CMD     GT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOGT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOGT".Command
                            	    13M          ENDC
                            	    14M          IFC     'GT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    GTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'GT','PER'     If not PERCMD...
                            	    19M          IFEQ    'GT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'GT '+FLAG     * "GT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'GT'&($FF00)   If 2 digit code, leave as is.
01:00200730 4754            	    23M          DC.W    'GT'+FLAG      * "GT"...Command
                            	    24M          ENDC
01:00200732 09C8            	    25M          DC.W    GTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1181: 
                            	  1182:          CMD     HE,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOHE".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOHE".Command
                            	    13M          ENDC
                            	    14M          IFC     'HE','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    HECMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'HE','PER'     If not PERCMD...
                            	    19M          IFEQ    'HE'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'HE '+FLAG     * "HE"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'HE'&($FF00)   If 2 digit code, leave as is.
01:00200734 4845            	    23M          DC.W    'HE'+FLAG      * "HE"...Command
                            	    24M          ENDC
01:00200736 1272            	    25M          DC.W    HECMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1183: 
                            	  1184:          CMD     LO,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOLO".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOLO".Command
                            	    13M          ENDC
                            	    14M          IFC     'LO','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    LOCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'LO','PER'     If not PERCMD...
                            	    19M          IFEQ    'LO'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'LO '+FLAG     * "LO"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'LO'&($FF00)   If 2 digit code, leave as is.
01:00200738 4C4F            	    23M          DC.W    'LO'+FLAG      * "LO"...Command
                            	    24M          ENDC
01:0020073A 13B6            	    25M          DC.W    LOCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1185: 
                            	  1186:          CMD     M,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOM".Command
                            	    13M          ENDC
                            	    14M          IFC     'M','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'M','PER'     If not PERCMD...
                            	    19M          IFEQ    'M'&($FF00)   If 1 digit code, 2nd will be a blank.
01:0020073C 4D20            	    20M          DC.W    'M '+FLAG     * "M"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'M'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'M'+FLAG      * "M"...Command
                            	    24M          ENDC
01:0020073E 1702            	    25M          DC.W    MCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1187: 
                            	  1188: 
                            	  1189: 
                            	  1190:          CMD     MD,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMD".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMD".Command
                            	    13M          ENDC
                            	    14M          IFC     'MD','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MDCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MD','PER'     If not PERCMD...
                            	    19M          IFEQ    'MD'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MD '+FLAG     * "MD"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MD'&($FF00)   If 2 digit code, leave as is.
01:00200740 4D44            	    23M          DC.W    'MD'+FLAG      * "MD"...Command
                            	    24M          ENDC
01:00200742 1554            	    25M          DC.W    MDCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1191: 
                            	  1192:          CMD     MM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMM".Command
                            	    13M          ENDC
                            	    14M          IFC     'MM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MM','PER'     If not PERCMD...
                            	    19M          IFEQ    'MM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MM '+FLAG     * "MM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MM'&($FF00)   If 2 digit code, leave as is.
01:00200744 4D4D            	    23M          DC.W    'MM'+FLAG      * "MM"...Command
                            	    24M          ENDC
01:00200746 1702            	    25M          DC.W    MMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1193: 
                            	  1194:          CMD     MS,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOMS".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOMS".Command
                            	    13M          ENDC
                            	    14M          IFC     'MS','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    MSCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'MS','PER'     If not PERCMD...
                            	    19M          IFEQ    'MS'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'MS '+FLAG     * "MS"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'MS'&($FF00)   If 2 digit code, leave as is.
01:00200748 4D53            	    23M          DC.W    'MS'+FLAG      * "MS"...Command
                            	    24M          ENDC
01:0020074A 1886            	    25M          DC.W    MSCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1195: 
                            	  1196:          CMD     OF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOOF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOOF".Command
                            	    13M          ENDC
                            	    14M          IFC     'OF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    OFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'OF','PER'     If not PERCMD...
                            	    19M          IFEQ    'OF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'OF '+FLAG     * "OF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'OF'&($FF00)   If 2 digit code, leave as is.
01:0020074C 4F46            	    23M          DC.W    'OF'+FLAG      * "OF"...Command
                            	    24M          ENDC
01:0020074E 1AA8            	    25M          DC.W    OFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1197: 
                            	  1198:          CMD     PA,NORTN=YES,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'NORTN=YES','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'NORTN=YES','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPA".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPA".Command
                            	    13M          ENDC
                            	    14M          IFC     'PA','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    PACMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PA','PER'     If not PERCMD...
                            	    19M          IFEQ    'PA'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PA '+FLAG     * "PA"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PA'&($FF00)   If 2 digit code, leave as is.
01:00200750 50C1            	    23M          DC.W    'PA'+FLAG      * "PA"...Command
                            	    24M          ENDC
01:00200752 25A4            	    25M          DC.W    PACMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1199: 
                            	  1200:          CMD     PF,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOPF".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOPF".Command
                            	    13M          ENDC
                            	    14M          IFC     'PF','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    PFCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'PF','PER'     If not PERCMD...
                            	    19M          IFEQ    'PF'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'PF '+FLAG     * "PF"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'PF'&($FF00)   If 2 digit code, leave as is.
01:00200754 5046            	    23M          DC.W    'PF'+FLAG      * "PF"...Command
                            	    24M          ENDC
01:00200756 1B24            	    25M          DC.W    PFCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1201: 
                            	  1202: 
                            	  1203: 
                            	  1204:          CMD     T,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOT".Command
                            	    13M          ENDC
                            	    14M          IFC     'T','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'T','PER'     If not PERCMD...
                            	    19M          IFEQ    'T'&($FF00)   If 1 digit code, 2nd will be a blank.
01:00200758 5420            	    20M          DC.W    'T '+FLAG     * "T"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'T'&($FF00)   If 2 digit code, leave as is.
                            	    23M          DC.W    'T'+FLAG      * "T"...Command
                            	    24M          ENDC
01:0020075A 0978            	    25M          DC.W    TCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1205: 
                            	  1206:          CMD     TM,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTM".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTM".Command
                            	    13M          ENDC
                            	    14M          IFC     'TM','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TMCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TM','PER'     If not PERCMD...
                            	    19M          IFEQ    'TM'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TM '+FLAG     * "TM"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TM'&($FF00)   If 2 digit code, leave as is.
01:0020075C 544D            	    23M          DC.W    'TM'+FLAG      * "TM"...Command
                            	    24M          ENDC
01:0020075E 1C5A            	    25M          DC.W    TMCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1207: 
                            	  1208:          CMD     TR,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTR".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTR".Command
                            	    13M          ENDC
                            	    14M          IFC     'TR','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TRCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TR','PER'     If not PERCMD...
                            	    19M          IFEQ    'TR'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TR '+FLAG     * "TR"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TR'&($FF00)   If 2 digit code, leave as is.
01:00200760 5452            	    23M          DC.W    'TR'+FLAG      * "TR"...Command
                            	    24M          ENDC
01:00200762 0978            	    25M          DC.W    TRCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1209: 
                            	  1210:          CMD     TT,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOTT".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOTT".Command
                            	    13M          ENDC
                            	    14M          IFC     'TT','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    TTCMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'TT','PER'     If not PERCMD...
                            	    19M          IFEQ    'TT'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'TT '+FLAG     * "TT"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'TT'&($FF00)   If 2 digit code, leave as is.
01:00200764 5454            	    23M          DC.W    'TT'+FLAG      * "TT"...Command
                            	    24M          ENDC
01:00200766 0994            	    25M          DC.W    TTCMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1211: 
                            	  1212:          CMD     VE,X,X
                            	     1M FLAG     SET     0              *
                            	     2M          IFC     'X','HELP=NO'
                            	     3M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     4M          ENDC
                            	     5M          IFC     'X','HELP=NO'
                            	     6M FLAG     SET     FLAG+$8000     * "Help" will not display this command
                            	     7M          ENDC
                            	     8M          IFC     'X','NORTN=YES'
                            	     9M FLAG     SET     FLAG+$80       * "NOVE".Command
                            	    10M          ENDC
                            	    11M          IFC     'X','NORTN=YES'
                            	    12M FLAG     SET     FLAG+$80       * "NOVE".Command
                            	    13M          ENDC
                            	    14M          IFC     'VE','PER'     Check for the "PER" command
                            	    15M          DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
                            	    16M          DC.W    VECMD-FIRST    *************************************
                            	    17M          ENDC
                            	    18M          IFNC    'VE','PER'     If not PERCMD...
                            	    19M          IFEQ    'VE'&($FF00)   If 1 digit code, 2nd will be a blank.
                            	    20M          DC.W    'VE '+FLAG     * "VE"....Command  -  -  (Single Digit)
                            	    21M          ENDC
                            	    22M          IFNE    'VE'&($FF00)   If 2 digit code, leave as is.
01:00200768 5645            	    23M          DC.W    'VE'+FLAG      * "VE"...Command
                            	    24M          ENDC
01:0020076A 13B0            	    25M          DC.W    VECMD-FIRST    *************************************
                            	    26M          ENDC
                            	  1213: 
01:0020076C FFFF            	  1214:          DC.W      $FFFF     End of list indicator
                            	  1215: 
                            	  1216: 
                            	  1217: 
                            	  1218: 
                            	  1219: *-------------------------------------------------------------------------
                            	  1220: * File VECTMSG   Messages for vectors                             05/29/82
                            	  1221: 
                            	  1222: ************************************************************
                            	  1223: *Reprogram some VECTORS to specific ERROR handler routines *
                            	  1224: ************************************************************
                            	  1225: 
01:0020076E 41FA0022        	  1226: INITVMSG LEA     VECT(PC),A0    A0 = START OF VECTOR TABLE
01:00200772 43F80010        	  1227:          LEA     AV4,A1         A1 = FIRST VECTOR TO INITIALIZE
01:00200776 700A            	  1228:          MOVEQ   #10,D0         D0 = COUNT
01:00200778 22C8            	  1229: VECTI    MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
01:0020077A D1C0            	  1230:          ADD.L   D0,A0          BUMP ADDRESS
01:0020077C B2FC0030        	  1231:          CMPA.L  #AV11+4,A1
01:00200780 66F6            	  1232:          BNE     VECTI
                            	  1233: 
01:00200782 43F80060        	  1234:          LEA     AV24,A1        A1 = NEXT VECTOR TO INITIALIZE
01:00200786 22C8            	  1235: VECTI2   MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
01:00200788 D1C0            	  1236:          ADD.L   D0,A0          BUMP ADDRESS
01:0020078A B2FC00C0        	  1237:          CMPA.L  #AV48,A1
01:0020078E 66F6            	  1238:          BNE     VECTI2
01:00200790 4E75            	  1239:          RTS
                            	  1240: 
                            	  1241: 
                            	  1242: *************************************************************************
                            	  1243: * STANDARD VECTOR "MESSAGE" HANDLING ROUTINE ($30 IS TEMP STORAGE AREA) *
                            	  1244: *************************************************************************
                            	  1245: 
01:00200792 21FC4F50434F0030	  1246: VECT     MOVE.L  #'OPCO',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1247: 
01:0020079A 604E            	  1248:          BRA.S   EVECT5
01:0020079C 21FC444956300030	  1249: VECT5    MOVE.L  #'DIV0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1250: 
01:002007A4 6044            	  1251:          BRA.S   EVECT5
01:002007A6 21FC4348434B0030	  1252: VECT6    MOVE.L  #'CHCK',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1253: 
01:002007AE 603A            	  1254:          BRA.S   EVECT5
01:002007B0 21FC545020560030	  1255: VECT7    MOVE.L  #'TP V',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1256: 
01:002007B8 6030            	  1257:          BRA.S   EVECT5
01:002007BA 21FC505249560030	  1258: VECT8    MOVE.L  #'PRIV',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1259: 
01:002007C2 6026            	  1260:          BRA.S   EVECT5
01:002007C4 21FC545241430030	  1261: VECT9    MOVE.L  #'TRAC',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1262: 
01:002007CC 601C            	  1263:          BRA.S   EVECT5
01:002007CE 21FC313031300030	  1264: VECT10   MOVE.L  #'1010',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1265: 
01:002007D6 6012            	  1266:          BRA.S   EVECT5
01:002007D8 21FC313131310030	  1267: VECT11   MOVE.L  #'1111',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1268: 
01:002007E0 6008            	  1269:          BRA.S   EVECT5
01:002007E2 21FC535055520030	  1270: VECT24   MOVE.L  #'SPUR',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1271: 
01:002007EA 6044            	  1272: EVECT5   BRA.S   EVECT6
01:002007EC 21FC415623310030	  1273: VECT25   MOVE.L  #'AV#1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1274: 
01:002007F4 603A            	  1275:          BRA.S   EVECT6
01:002007F6 21FC415623320030	  1276: VECT26   MOVE.L  #'AV#2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1277: 
01:002007FE 6030            	  1278:          BRA.S   EVECT6
01:00200800 21FC415623330030	  1279: VECT27   MOVE.L  #'AV#3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1280: 
01:00200808 6026            	  1281:          BRA.S   EVECT6
01:0020080A 21FC415623340030	  1282: VECT28   MOVE.L  #'AV#4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1283: 
01:00200812 601C            	  1284:          BRA.S   EVECT6
01:00200814 21FC415623350030	  1285: VECT29   MOVE.L  #'AV#5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1286: 
01:0020081C 6012            	  1287:          BRA.S   EVECT6
01:0020081E 21FC415623360030	  1288: VECT30   MOVE.L  #'AV#6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1289: 
01:00200826 6008            	  1290:          BRA.S   EVECT6
01:00200828 21FC415623370030	  1291: VECT31   MOVE.L  #'AV#7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1292: 
01:00200830 604E            	  1293: EVECT6   BRA.S   EVECT7
01:00200832 21FC555420300030	  1294: VECT32   MOVE.L  #'UT 0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1295: 
01:0020083A 6044            	  1296:          BRA.S   EVECT7
01:0020083C 21FC555420310030	  1297: VECT33   MOVE.L  #'UT 1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1298: 
01:00200844 603A            	  1299:          BRA.S   EVECT7
01:00200846 21FC555420320030	  1300: VECT34   MOVE.L  #'UT 2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1301: 
01:0020084E 6030            	  1302:          BRA.S   EVECT7
01:00200850 21FC555420330030	  1303: VECT35   MOVE.L  #'UT 3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1304: 
01:00200858 6026            	  1305:          BRA.S   EVECT7
01:0020085A 21FC555420340030	  1306: VECT36   MOVE.L  #'UT 4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1307: 
01:00200862 601C            	  1308:          BRA.S   EVECT7
01:00200864 21FC555420350030	  1309: VECT37   MOVE.L  #'UT 5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1310: 
01:0020086C 6012            	  1311:          BRA.S   EVECT7
01:0020086E 21FC555420360030	  1312: VECT38   MOVE.L  #'UT 6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1313: 
01:00200876 6008            	  1314:          BRA.S   EVECT7
01:00200878 21FC555420370030	  1315: VECT39   MOVE.L  #'UT 7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1316: 
01:00200880 604E            	  1317: EVECT7   BRA.S   EVECT
01:00200882 21FC555420380030	  1318: VECT40   MOVE.L  #'UT 8',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1319: 
01:0020088A 6044            	  1320:          BRA.S   EVECT
01:0020088C 21FC555420390030	  1321: VECT41   MOVE.L  #'UT 9',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1322: 
01:00200894 603A            	  1323:          BRA.S   EVECT
01:00200896 21FC555420410030	  1324: VECT42   MOVE.L  #'UT A',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1325: 
01:0020089E 6030            	  1326:          BRA.S   EVECT
01:002008A0 21FC555420420030	  1327: VECT43   MOVE.L  #'UT B',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1328: 
01:002008A8 6026            	  1329:          BRA.S   EVECT
01:002008AA 21FC555420430030	  1330: VECT44   MOVE.L  #'UT C',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1331: 
01:002008B2 601C            	  1332:          BRA.S   EVECT
01:002008B4 21FC555420440030	  1333: VECT45   MOVE.L  #'UT D',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1334: 
01:002008BC 6012            	  1335:          BRA.S   EVECT
01:002008BE 21FC555420450030	  1336: VECT46   MOVE.L  #'UT E',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1337: 
01:002008C6 6108            	  1338:          BSR.S   EVECT
01:002008C8 21FC555420460030	  1339: VECT47   MOVE.L  #'UT F',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
                            	  1340: 
                            	  1341: 
                            	  1342: *
                            	  1343: *    SAVE REGISTERS AND PRINT VECTOR MSG
                            	  1344: *
01:002008D0 60001482        	  1345: EVECT    BRA     EVECTL
                            	  1346: 
                            	  1347: 
                            	  1348: 
                            	  1349: 
                            	  1350: *-------------------------------------------------------------------------
                            	  1351: * File BF        Block Fill command                               06/16/82
                            	  1352: 
                            	  1353: *  BLOCK FILL    ADDRESS1 ADDRESS2 WORD-DATA
                            	  1354: 
01:002008D4 41FAFBD8        	  1355: BFCMD    LEA     SYNTAX(PC),A0
01:002008D8 61001584        	  1356:          BSR     FNEXTF
01:002008DC 6100064C        	  1357:          BSR     GETA
01:002008E0 6100159A        	  1358:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002008E4 2C00            	  1359:          MOVE.L  D0,D6          D6 = FROM BEGIN ADDRESS
                            	  1360: 
01:002008E6 61001576        	  1361:          BSR     FNEXTF
01:002008EA 6100063E        	  1362:          BSR     GETA
01:002008EE 6100158C        	  1363:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002008F2 2240            	  1364:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1365: 
01:002008F4 61001568        	  1366:          BSR     FNEXTF         FIND NEXT FIELD
01:002008F8 610015E6        	  1367:          BSR     GETNUMA        D0 = VALUE
01:002008FC 2E00            	  1368:          MOVE.L  D0,D7
                            	  1369: 
01:002008FE 2046            	  1370:          MOVE.L  D6,A0          A0 = FROM BEGIN ADDRESS
01:00200900 6100FBBA        	  1371:          BSR     P2PHY          DISPLAY ADDRESSES
01:00200904 B3C8            	  1372:          CMP.L   A0,A1
01:00200906 6500FBA6        	  1373:          BCS     SYNTAX         END ADDR TOO SMALL
                            	  1374: 
01:0020090A 0C8700010000    	  1375:          CMPI.L  #$10000,D7
01:00200910 6400FB9C        	  1376:          BCC     SYNTAX         WORD OVERFLOW
                            	  1377: 
                            	  1378: BFCMD11
01:00200914 3087            	  1379:          MOVE.W  D7,(A0)        STORE DATA
01:00200916 3218            	  1380:          MOVE.W  (A0)+,D1
01:00200918 B247            	  1381:          CMP.W   D7,D1          VERIFY DATA
01:0020091A 66000F58        	  1382:          BNE     MM90           'DATA DID NOT STORE'
                            	  1383: 
01:0020091E B3C8            	  1384:          CMP.L   A0,A1
01:00200920 64F2            	  1385:          BCC     BFCMD11
01:00200922 6000FD02        	  1386:          BRA     MACSBUG
                            	  1387: 
                            	  1388: 
                            	  1389: 
                            	  1390: 
                            	  1391: *-------------------------------------------------------------------------
                            	  1392: * File BM        BM (Block Move) Command                          11/27/81
                            	  1393: 
                            	  1394: *  BLOCK MOVE
                            	  1395: 
01:00200926 41FAFB86        	  1396: BMCMD    LEA     SYNTAX(PC),A0
01:0020092A 61001532        	  1397:          BSR     FNEXTF
01:0020092E 610005FA        	  1398:          BSR     GETA
01:00200932 2640            	  1399:          MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
                            	  1400: 
01:00200934 61001528        	  1401:          BSR     FNEXTF
01:00200938 610005F0        	  1402:          BSR     GETA
01:0020093C 2240            	  1403:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1404: 
01:0020093E 6100151E        	  1405:          BSR     FNEXTF
01:00200942 610005E6        	  1406:          BSR     GETA
01:00200946 2440            	  1407:          MOVE.L  D0,A2          A2 = TO BEGIN ADDRESS
                            	  1408: 
01:00200948 204B            	  1409:          MOVE.L  A3,A0
01:0020094A 6100FB70        	  1410:          BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
01:0020094E 200A            	  1411:          MOVE.L  A2,D0
01:00200950 6100FB62        	  1412:          BSR     PPHY           PRINT TO ADDRESS
                            	  1413: 
01:00200954 2209            	  1414:          MOVE.L  A1,D1
01:00200956 928B            	  1415:          SUB.L   A3,D1          D1 =  SIZE - 1
01:00200958 6500FB54        	  1416:          BCS     SYNTAX         END LESS THAN BEGIN
01:0020095C 5281            	  1417:          ADDQ.L  #1,D1          D1 = COUNT (SIZE)
                            	  1418: 
01:0020095E B5CB            	  1419:          CMP.L   A3,A2
01:00200960 6408            	  1420:          BCC.S   BM122          MOVING LOW TO HIGH
                            	  1421: 
01:00200962 14DB            	  1422: BM112    MOVE.B  (A3)+,(A2)+    MOVING HIGH TO LOW
01:00200964 5381            	  1423:          SUBQ.L  #1,D1          COUNT
01:00200966 66FA            	  1424:          BNE     BM112
01:00200968 600A            	  1425:          BRA.S   BM142
                            	  1426: 
01:0020096A D7C1            	  1427: BM122    ADD.L   D1,A3          MOVING LOW TO HIGH
01:0020096C D5C1            	  1428:          ADD.L   D1,A2
01:0020096E 1523            	  1429: BM132    MOVE.B  -(A3),-(A2)
01:00200970 5381            	  1430:          SUBQ.L  #1,D1
01:00200972 66FA            	  1431:          BNE     BM132
01:00200974 6000FCB0        	  1432: BM142    BRA     MACSBUG
                            	  1433: 
                            	  1434: 
                            	  1435: 
                            	  1436: 
                            	  1437: *-------------------------------------------------------------------------
                            	  1438: * File BR        BR, GD, GT, TR, TT, PER Commands                 12/04/81
                            	  1439: 
                            	  1440: *   ***T***   TRACE COMMAND
                            	  1441: 
                            	  1442: TCMD     DS      0              "T" Alias for "TR" command
01:00200978 41FA0012        	  1443: TRCMD    LEA     TCMDHOT(PC),A0 IF NO PARAMTERS
01:0020097C 610014E0        	  1444:          BSR     FNEXTF         FIND NEXT FIELD
01:00200980 6100155E        	  1445:          BSR     GETNUMA        FIND NUMBER OF INST TO TRACE
01:00200984 610014FC        	  1446:          BSR     CKADDR         INSURE 24 BITS OR LESS
01:00200988 4A80            	  1447:          TST.L   D0
01:0020098A 6602            	  1448:          BNE.S   TCMD15
                            	  1449: 
                            	  1450: TCMDHOT  DS      0              SPECIAL ENTRY FROM DECODE
01:0020098C 7001            	  1451:          MOVEQ   #1,D0          ZERO; MAKE TRACE ONE
01:0020098E 21C004DA        	  1452: TCMD15   MOVE.L  D0,TRACECNT
01:00200992 6022            	  1453:          BRA.S   TRACE2
                            	  1454: 
                            	  1455: 
                            	  1456: *
                            	  1457: ** TT ** "TRACE TILL" COMMAND
                            	  1458: *
                            	  1459: 
01:00200994 41FAFB18        	  1460: TTCMD    LEA     SYNTAX(PC),A0
01:00200998 610014C4        	  1461:          BSR     FNEXTF         FIND NEXT FIELD
01:0020099C 6100058C        	  1462:          BSR     GETA           GET ADDRESS
01:002009A0 610014DA        	  1463:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1464: 
01:002009A4 2C00            	  1465:          MOVE.L  D0,D6
01:002009A6 6100FB0C        	  1466:          BSR     PPHY           DISPLAY TILL ADDRESS
                            	  1467: 
01:002009AA 21C60490        	  1468:          MOVE.L  D6,BPTILL      9TH BP
01:002009AE 21FC0000FFFF04DA	  1469:          MOVE.L  #$FFFF,TRACECNT  SET FOR A VERY LONG TIME
                            	  1470: 
                            	  1471: 
01:002009B6 31FCFFFF04DE    	  1472: TRACE2   MOVE.W  #-1,TRACEON    FOR DECODE OF NEXT COMMAND
                            	  1473: 
01:002009BC 20380400        	  1474:          MOVE.L  REGPC,D0
01:002009C0 6100FAF2        	  1475:          BSR     PPHY           DISPLAY START (PC) ADDRESS
01:002009C4 60000778        	  1476:          BRA     UNTRACE
                            	  1477: 
                            	  1478: 
                            	  1479: *
                            	  1480: *   ***GT***  RUN PROGRAM TO TEMP BREAKPOINT
                            	  1481: *
                            	  1482: 
01:002009C8 41FAFAE4        	  1483: GTCMD    LEA     SYNTAX(PC),A0  GET NUMBER ELSE PRINT "WHAT"
01:002009CC 61001490        	  1484:          BSR     FNEXTF         FIND NEXT FIELD
01:002009D0 61000558        	  1485:          BSR     GETA           GET ADDRESS
01:002009D4 610014A6        	  1486:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:002009D8 2C00            	  1487:          MOVE.L  D0,D6          D6 = UNTIL ADDRESS
01:002009DA 6100FAD8        	  1488:          BSR     PPHY           PRINT PHYSICAL ADDRESS
                            	  1489: 
                            	  1490: * IF TILL ADDRESS IN BREAKPOINT TABLE; DISPLAY WHAT
                            	  1491: 
01:002009DE 41F80470        	  1492:          LEA     BPADD,A0       A0 = POINTER TO BP ADDRESSES
01:002009E2 7E08            	  1493:          MOVEQ   #8,D7          D7 = # OF ADDRESS ALLOWED
01:002009E4 BC98            	  1494: GT21     CMP.L   (A0)+,D6
01:002009E6 670000A0        	  1495:          BEQ     BCMD55         ALREADY IN TABLE -SHOW TABLE-
01:002009EA 5387            	  1496:          SUBQ.L  #1,D7
01:002009EC 66F6            	  1497:          BNE     GT21
                            	  1498: 
01:002009EE 21C60490        	  1499:          MOVE.L  D6,BPTILL      9TH BREAKPOINT
01:002009F2 6116            	  1500:          BSR.S   GOCMD1A        NORMAL STARTUP
01:002009F4 6020            	  1501:          BRA.S   GOCMD1
                            	  1502: 
01:002009F6 41FA0012        	  1503: GOSET1   LEA     GOCMD1A(PC),A0 WHERE TO GO IF NO PARAMERS
01:002009FA 61001462        	  1504:          BSR     FNEXTF         FIND NEXT FIELD
01:002009FE 6100052A        	  1505:          BSR     GETA           GET ADDRESS
01:00200A02 61001478        	  1506:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:00200A06 21C00400        	  1507:          MOVE.L  D0,REGPC
                            	  1508: 
01:00200A0A 20380400        	  1509: GOCMD1A  MOVE.L  REGPC,D0       (ALSO SUBROUTINE ENTRY)
01:00200A0E 6100FAA4        	  1510:          BSR     PPHY           PRINT ".PC" PHYSICAL ADDRESS
01:00200A12 4E75            	  1511:          RTS
                            	  1512: 
                            	  1513: GCMD     DS      0              "G" ALIAS FOR "GO"
01:00200A14 61E0            	  1514: GOCMD    BSR     GOSET1         "GO" (AFTER TRACING ONE INST)
01:00200A16 21FCFFFFFFFF04DA	  1515: GOCMD1   MOVE.L  #-1,TRACECNT   "FLAG" COUNTER AS SPECIAL
                            	  1516: 
01:00200A1E 6000071E        	  1517:          BRA     UNTRACE
                            	  1518: 
01:00200A22 61D2            	  1519: GDCMD    BSR     GOSET1         "GO DIRECT" Command
01:00200A24 60000726        	  1520:          BRA     UNSTACK
                            	  1521: 
                            	  1522: 
                            	  1523: *   ***BR***  SET AND PRINT BREAKPOINTS
                            	  1524: 
                            	  1525: *                   DELETE ALL BREAKPOINTS
                            	  1526: 
01:00200A28 6108            	  1527: NOBRCMD  BSR.S   FIXBP          GET POINTERS
01:00200A2A 4298            	  1528: BCMD01   CLR.L   (A0)+          CLEAR THE ADDRESS TABLE
01:00200A2C 5387            	  1529:          SUBQ.L  #1,D7          DO IT 8 TIMES
01:00200A2E 66FA            	  1530:          BNE     BCMD01
01:00200A30 6060            	  1531:          BRA.S   BCMD7          DISPLAY EMPTY TABLE
                            	  1532: 
01:00200A32 41F80470        	  1533: FIXBP    LEA     BPADD,A0       SET UP ADDRESS & COUNTER
01:00200A36 7E08            	  1534:          MOVEQ   #8,D7          COUNTER
01:00200A38 45F80494        	  1535:          LEA     BPCNT,A2       COUNTS
01:00200A3C 4E75            	  1536:          RTS
                            	  1537: 
                            	  1538: ************************************************************
                            	  1539: * THIS COMMAND SUPPORTS THE "NO" OPTION. COMMANDS THAT ALLOW
                            	  1540: * THE "NO" OPTION PROVIDE A HARD BRANCH 4 BYTES BEFORE THE
                            	  1541: * REGULAR COMMAND.
                            	  1542: ************************************************************
                            	  1543: 
01:00200A3E 6000009A        	  1544:          BRA     NOBR0          ENTRY FOR "NOBR" (IT LOOKS FOR PARMS OR NOT)
01:00200A42 41FA004E        	  1545: BRCMD    LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARMS
01:00200A46 61001416        	  1546: BCMD0    BSR     FNEXTF         FIND NEXT FIELD
01:00200A4A 610004DE        	  1547:          BSR     GETA           GET ADDRESS
01:00200A4E 6100142C        	  1548:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1549: 
01:00200A52 61DE            	  1550:          BSR     FIXBP          SET UP COUNTER & ADDRESS
01:00200A54 B090            	  1551: BCMD00   CMP.L   (A0),D0        SEE IF ALREADY IN TABLE
01:00200A56 6710            	  1552:          BEQ.S   BCMD33         GO CHECK FOR COUNT
01:00200A58 588A            	  1553:          ADDQ.L  #4,A2          BUMP OTHER POINTER
01:00200A5A 5888            	  1554:          ADDQ.L  #4,A0          BUMP MAIN POINTER
01:00200A5C 5387            	  1555:          SUBQ.L  #1,D7
01:00200A5E 66F4            	  1556:          BNE     BCMD00
                            	  1557: 
01:00200A60 61D0            	  1558:          BSR     FIXBP          GET ADDRESS & POINTERS
01:00200A62 4A90            	  1559: BCMD3    TST.L   (A0)           FIND AN EMPTY STOP
01:00200A64 661A            	  1560:          BNE.S   BCMD5
01:00200A66 2080            	  1561:          MOVE.L  D0,(A0)        PUT NEW ADDRESS IN TABLE
01:00200A68 4292            	  1562: BCMD33   CLR.L   (A2)           CLEAR CURRENT COUNT
01:00200A6A 1215            	  1563:          MOVE.B  (A5),D1        CHECK INPUT FOR COUNT
01:00200A6C 0C01003B        	  1564:          CMPI.B  #';',D1
01:00200A70 6608            	  1565:          BNE.S   BCMD6          NO COUNT
01:00200A72 528D            	  1566:          ADDQ.L  #1,A5          BUMP THE BUFFER SCANNER
01:00200A74 6100146A        	  1567:          BSR     GETNUMA        GO GET THE COUNT
01:00200A78 2480            	  1568:          MOVE.L  D0,(A2)        MOVE TO TABLE
                            	  1569: 
01:00200A7A 41FA0016        	  1570: BCMD6    LEA     BCMD7(PC),A0   WHERE TO GO IF NO MORE PARAMETERS
01:00200A7E 60C6            	  1571:          BRA     BCMD0
                            	  1572: 
01:00200A80 5888            	  1573: BCMD5    ADDQ.L  #4,A0          BUMP TABLE POINTER
01:00200A82 588A            	  1574:          ADDQ.L  #4,A2          BUMP POINTER TO COUNTS
01:00200A84 5387            	  1575:          SUBQ.L  #1,D7          LOOP AROUND
01:00200A86 66DA            	  1576:          BNE     BCMD3
                            	  1577: 
01:00200A88 4BFAF9FF        	  1578: BCMD55   LEA     MSG008E(PC),A5 TABLE FULL; ERROR MESSAGE
01:00200A8C 6100FA5C        	  1579:          BSR     FIXDATA
01:00200A90 6008            	  1580:          BRA.S   BCMD77
                            	  1581: 
01:00200A92 4BFA003A        	  1582: BCMD7    LEA     MSGBR(PC),A5   "BREAKPOINTS"
01:00200A96 6100FA66        	  1583:          BSR     FIXDCRLF
01:00200A9A 6100153E        	  1584: BCMD77   BSR     OUT1CR
                            	  1585: 
01:00200A9E 6192            	  1586:          BSR     FIXBP          SET ADDRESS & COUNTER
01:00200AA0 2C1A            	  1587: BCMD8    MOVE.L  (A2)+,D6       D6 = COUNT
01:00200AA2 2010            	  1588:          MOVE.L  (A0),D0        D0 = ADDRESS
01:00200AA4 671E            	  1589:          BEQ.S   BCMD9          ZERO ADDRESS
01:00200AA6 61001316        	  1590:          BSR     FRELADDR       FORMAT RELATIVE ADDRESS
01:00200AAA 1CFC0020        	  1591:          MOVE.B  #BLANK,(A6)+
                            	  1592: 
01:00200AAE 2010            	  1593:          MOVE.L  (A0),D0        FORMAT ABSOLUTE ADDRESS
01:00200AB0 610012E2        	  1594:          BSR     PNT6HX
01:00200AB4 2006            	  1595:          MOVE.L  D6,D0
01:00200AB6 6708            	  1596:          BEQ.S   BCMD81         DON'T PRINT ZERO COUNT
01:00200AB8 1CFC003B        	  1597:          MOVE.B  #';',(A6)+
01:00200ABC 6100135A        	  1598:          BSR     PNTZHX         PRINT WITH ZERO SURPRESS
                            	  1599: 
01:00200AC0 61001518        	  1600: BCMD81   BSR     OUT1CR
01:00200AC4 5888            	  1601: BCMD9    ADDQ.L  #4,A0
01:00200AC6 5387            	  1602:          SUBQ.L  #1,D7          LOOP AROUND
01:00200AC8 66D6            	  1603:          BNE     BCMD8
01:00200ACA 6000FB5A        	  1604:          BRA     MACSBUG
                            	  1605: 
01:00200ACE 425245414B504F49	  1606: MSGBR    DC.B    'BREAKPOINTS',EOT
01:00200AD6 4E5453
01:00200AD9 04
                            	  1607: 
                            	  1608: 
                            	  1609: 
                            	  1610: * NOBR COMMAND
                            	  1611: 
01:00200ADA 41FAFF4C        	  1612: NOBR0    LEA     NOBRCMD(PC),A0 WHERE TO GO IF NO PARAMETERS
01:00200ADE 6100137E        	  1613: NOBR1    BSR     FNEXTF         FIND NEXT FIELD
01:00200AE2 61000446        	  1614:          BSR     GETA           GO DECODE NUMBER/ADDRESS
01:00200AE6 4A80            	  1615:          TST.L   D0
01:00200AE8 679E            	  1616:          BEQ     BCMD55         ZERO NOT VALID BREAKPOINT
01:00200AEA 61001390        	  1617:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
                            	  1618: 
01:00200AEE 41F80470        	  1619:          LEA     BPADD,A0       SET UP TABLE POINTER
01:00200AF2 7E08            	  1620:          MOVEQ   #8,D7          COUNTER
01:00200AF4 2210            	  1621: NOBR3    MOVE.L  (A0),D1        GET BREAKPOINT IN TABLE
01:00200AF6 B081            	  1622:          CMP.L   D1,D0          SEE IF SAME
01:00200AF8 6706            	  1623:          BEQ.S   NOBR4
01:00200AFA 5888            	  1624:          ADDQ.L  #4,A0
01:00200AFC 5387            	  1625:          SUBQ.L  #1,D7
01:00200AFE 66F4            	  1626:          BNE     NOBR3
01:00200B00 4290            	  1627: NOBR4    CLR.L   (A0)           CLEAR THIS BREAKPOINT
01:00200B02 41FAFF8E        	  1628:          LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARAMETER
01:00200B06 60D6            	  1629:          BRA     NOBR1
                            	  1630: 
                            	  1631: 
                            	  1632: 
                            	  1633: 
                            	  1634: *-------------------------------------------------------------------------
                            	  1635: * File BS        BS (Block Search) Command                        11/27/81
                            	  1636: 
                            	  1637: *
                            	  1638: *  BLOCK SEARCH   BS <ADDR1> <ADDR2> 'LITERAL STRING'
                            	  1639: *                 BS <ADDR1> <ADDR2> <DATA> [<MASK>] [;<OPTION>]
                            	  1640: 
01:00200B08 41FAF9A4        	  1641: BSCMD    LEA     SYNTAX(PC),A0
01:00200B0C 61001350        	  1642:          BSR     FNEXTF
01:00200B10 61000418        	  1643:          BSR     GETA
01:00200B14 2640            	  1644:          MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
                            	  1645: 
01:00200B16 61001346        	  1646:          BSR     FNEXTF
01:00200B1A 6100040E        	  1647:          BSR     GETA
01:00200B1E 2240            	  1648:          MOVE.L  D0,A1          A1 = FROM END ADDRESS
                            	  1649: 
01:00200B20 6100133C        	  1650:          BSR     FNEXTF
01:00200B24 1015            	  1651:          MOVE.B  (A5),D0
01:00200B26 0C000027        	  1652:          CMPI.B  #$27,D0
01:00200B2A 670000B0        	  1653:          BEQ     BS311          LITERAL STRING SEARCH
                            	  1654: 
01:00200B2E 610013B0        	  1655:          BSR     GETNUMA
01:00200B32 2E00            	  1656:          MOVE.L  D0,D7          D7 = DATA WE ARE LOOKING FOR
01:00200B34 7A00            	  1657:          CLR.L   D5             SCAN FOR OPTIONS
01:00200B36 204D            	  1658:          MOVE.L  A5,A0
01:00200B38 B1CE            	  1659: BS91     CMP.L   A6,A0
01:00200B3A 6426            	  1660:          BCC.S   BS97           AT END OF BUFFER
                            	  1661: 
01:00200B3C 1018            	  1662:          MOVE.B  (A0)+,D0
01:00200B3E 0C00003B        	  1663:          CMPI.B  #';',D0
01:00200B42 66F4            	  1664:          BNE     BS91           NOT SEMICOLON
                            	  1665: 
01:00200B44 2C48            	  1666:          MOVE.L  A0,A6
01:00200B46 538E            	  1667:          SUBQ.L  #1,A6          ADJUST END OF BUFFER POINTER
                            	  1668: 
01:00200B48 1010            	  1669:          MOVE.B  (A0),D0        D0 = OPTION CHARACTER
01:00200B4A 0C000042        	  1670:          CMPI.B  #'B',D0
01:00200B4E 6712            	  1671:          BEQ.S   BS97           BYTE  D5 = 0
                            	  1672: 
01:00200B50 7A01            	  1673:          MOVEQ   #1,D5
01:00200B52 0C000057        	  1674:          CMPI.B  #'W',D0
01:00200B56 670A            	  1675:          BEQ.S   BS97                WORD  D5 = +
                            	  1676: 
01:00200B58 7AFF            	  1677:          MOVEQ   #-1,D5         LONG WORD  D5 = -
01:00200B5A 0C00004C        	  1678:          CMPI.B  #'L',D0
01:00200B5E 6600F94E        	  1679:          BNE     SYNTAX
                            	  1680: BS97     DS      0
                            	  1681: 
01:00200B62 78FF            	  1682:          MOVEQ   #-1,D4         D4 = DEFAULT SEARCH MASK
01:00200B64 41FA000C        	  1683:          LEA     BS101(PC),A0
01:00200B68 610012F4        	  1684:          BSR     FNEXTF         FIND NEXT FIELD
01:00200B6C 61001372        	  1685:          BSR     GETNUMA
01:00200B70 2800            	  1686:          MOVE.L  D0,D4          D4 = MASK
                            	  1687: BS101    DS      0
                            	  1688: 
01:00200B72 204B            	  1689:          MOVE.L  A3,A0
01:00200B74 6100F946        	  1690:          BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
                            	  1691: 
01:00200B78 B3CB            	  1692:          CMP.L   A3,A1
01:00200B7A 6500F932        	  1693:          BCS     SYNTAX         END LESS THAN BEGIN
                            	  1694: 
01:00200B7E B7C9            	  1695: BS200    CMP.L   A1,A3
01:00200B80 6400FAA4        	  1696:          BCC     MACSBUG        DONE
                            	  1697: 
01:00200B84 610014FA        	  1698:          BSR     FIXBUF
01:00200B88 200B            	  1699:          MOVE.L  A3,D0
01:00200B8A 61001208        	  1700:          BSR     PNT6HX         FORMAT ADDRESS
01:00200B8E 1CFC0020        	  1701:          MOVE.B  #BLANK,(A6)+   SPACE INTO BUFFER
                            	  1702: 
01:00200B92 4A85            	  1703:          TST.L   D5
01:00200B94 6734            	  1704:          BEQ.S   BS225          BYTE SIZE
                            	  1705: 
01:00200B96 200B            	  1706:          MOVE.L  A3,D0
01:00200B98 610012E2        	  1707:          BSR     CKWADR         INSURE WORD BOUNDRY
01:00200B9C 4A85            	  1708:          TST.L   D5
01:00200B9E 6A18            	  1709:          BPL.S   BS219          WORD SIZE (2 BYTES)
                            	  1710: 
01:00200BA0 7C02            	  1711:          MOVEQ   #2,D6          D6 =  SIZE (LONG WORD)
01:00200BA2 2013            	  1712:          MOVE.L  (A3),D0        FETCH
01:00200BA4 C084            	  1713:          AND.L   D4,D0          MASK
01:00200BA6 B087            	  1714:          CMP.L   D7,D0          COMPARE
01:00200BA8 660A            	  1715:          BNE.S   BS215
                            	  1716: 
01:00200BAA 2013            	  1717:          MOVE.L  (A3),D0        DISPLAY NON-MASKED DATA
01:00200BAC 610011DE        	  1718:          BSR     PNT8HX
                            	  1719: 
01:00200BB0 61001428        	  1720: BS213    BSR     OUT1CR
                            	  1721: 
01:00200BB4 D7C6            	  1722: BS215    ADD.L   D6,A3          BUMP FETCH ADDRESS  (D6 = SIZE)
01:00200BB6 60C6            	  1723:          BRA     BS200
                            	  1724: 
01:00200BB8 7C02            	  1725: BS219    MOVEQ   #2,D6          SIZE = WORD
01:00200BBA 3013            	  1726:          MOVE.W  (A3),D0
01:00200BBC C044            	  1727:          AND.W   D4,D0
01:00200BBE B047            	  1728:          CMP.W   D7,D0
01:00200BC0 66F2            	  1729:          BNE     BS215
                            	  1730: 
01:00200BC2 3013            	  1731:          MOVE.W  (A3),D0
01:00200BC4 610011D4        	  1732:          BSR     PNT4HX         DISPLAY
01:00200BC8 60E6            	  1733:          BRA     BS213
                            	  1734: 
01:00200BCA 7C01            	  1735: BS225    MOVEQ   #1,D6          SIZE = BYTE
01:00200BCC 1013            	  1736:          MOVE.B  (A3),D0
01:00200BCE C004            	  1737:          AND.B   D4,D0
01:00200BD0 B007            	  1738:          CMP.B   D7,D0
01:00200BD2 66E0            	  1739:          BNE     BS215
                            	  1740: 
01:00200BD4 1013            	  1741:          MOVE.B  (A3),D0
01:00200BD6 610011CA        	  1742:          BSR     PNT2HX         DISPLAY
01:00200BDA 60D4            	  1743:          BRA     BS213
                            	  1744: 
                            	  1745: * LITERAL STRING SEARCH
                            	  1746: *   SAVE STRING
                            	  1747: 
01:00200BDC 45F805C0        	  1748: BS311    LEA     DUMPTEMP,A2
01:00200BE0 528D            	  1749: BS313    ADDQ.L  #1,A5
01:00200BE2 BBCE            	  1750:          CMP.L   A6,A5
01:00200BE4 6400F8C8        	  1751:          BCC     SYNTAX         ADDR1 GREATER THAN ADDR2
01:00200BE8 14D5            	  1752:          MOVE.B  (A5),(A2)+
01:00200BEA 1015            	  1753:          MOVE.B  (A5),D0
01:00200BEC 0C000027        	  1754:          CMPI.B  #$27,D0
01:00200BF0 66EE            	  1755:          BNE     BS313
01:00200BF2 538A            	  1756:          SUBQ.L  #1,A2          A2 = END OF STRING + 1
                            	  1757: 
01:00200BF4 204B            	  1758:          MOVE.L  A3,A0
01:00200BF6 6100F8C4        	  1759:          BSR     P2PHY          DISPLAY ADDRESSES
                            	  1760: 
01:00200BFA B3CB            	  1761:          CMP.L   A3,A1
01:00200BFC 6500F8B0        	  1762:          BCS     SYNTAX
                            	  1763: 
                            	  1764: * LOOK FOR STRING MATCH
                            	  1765: 
01:00200C00 49F805C0        	  1766: BS323    LEA     DUMPTEMP,A4    A4 = BEGIN OF STRING
01:00200C04 204B            	  1767:          MOVE.L  A3,A0          A0 = BEGIN OF MEMORY
01:00200C06 1010            	  1768: BS325    MOVE.B  (A0),D0
01:00200C08 B01C            	  1769:          CMP.B   (A4)+,D0       DATA COMPARE
01:00200C0A 662C            	  1770:          BNE.S   BS365          MIS-MATCH
                            	  1771: 
01:00200C0C B3C8            	  1772:          CMP.L   A0,A1          ADDRESS CHECK
01:00200C0E 6500FA16        	  1773:          BCS     MACSBUG        OUT OF MEMORY
                            	  1774: 
01:00200C12 5288            	  1775:          ADDQ.L  #1,A0
01:00200C14 B9CA            	  1776:          CMP.L   A2,A4
01:00200C16 65EE            	  1777:          BCS     BS325          MORE STRING TO CHECK
                            	  1778: 
01:00200C18 61001466        	  1779:          BSR     FIXBUF         HAVE MATCH
01:00200C1C 200B            	  1780:          MOVE.L  A3,D0          FORMAT ADDRESS
01:00200C1E 61001174        	  1781:          BSR     PNT6HX
01:00200C22 1CFC0020        	  1782:          MOVE.B  #BLANK,(A6)+   SPACE
                            	  1783: 
01:00200C26 1CFC0027        	  1784:          MOVE.B  #$27,(A6)+     LEADING QUOTE
01:00200C2A 49F805C0        	  1785:          LEA     DUMPTEMP,A4    MOVE STRING TO BUFFER
01:00200C2E 1CDC            	  1786: BS355    MOVE.B  (A4)+,(A6)+
01:00200C30 B5CC            	  1787:          CMP.L   A4,A2
01:00200C32 64FA            	  1788:          BCC     BS355
                            	  1789: 
01:00200C34 610013A4        	  1790:          BSR     OUT1CR         DISPLAY
                            	  1791: 
01:00200C38 528B            	  1792: BS365    ADDQ.L  #1,A3
01:00200C3A B3CB            	  1793:          CMP.L   A3,A1
01:00200C3C 6500F9E8        	  1794:          BCS     MACSBUG        DONE
01:00200C40 60BE            	  1795:          BRA     BS323
                            	  1796: 
                            	  1797: 
                            	  1798: 
                            	  1799: 
                            	  1800: *-------------------------------------------------------------------------
                            	  1801: * File BT        BT (Block Test) command                          11/30/81
                            	  1802: 
                            	  1803: * BT   BLOCK OF MEMORY TEST
                            	  1804: 
01:00200C42 61000CFE        	  1805: BTCMD    BSR     MTSETUP        PREPARE PARMS (FROM,TO/COUNT)
01:00200C46 61000FBE        	  1806:          BSR     RAMTEST        EXEC MEMORY TEST SUBROUTINE
01:00200C4A 6700F9DA        	  1807:          BEQ     MACSBUG        NO ERRORS, RETURN TO MACSBUG
01:00200C4E 2F01            	  1808:          MOVE.L  D1,-(A7)       SAVE DATA READ
01:00200C50 2F00            	  1809:          MOVE.L  D0,-(A7)       SAVE DATA WRITTEN CAUSING ERROR
                            	  1810: 
01:00200C52 6100142C        	  1811:          BSR     FIXBUF         SET UP TO PRINT
01:00200C56 2CFC4641494C    	  1812:          MOVE.L  #'FAIL',(A6)+
01:00200C5C 2CFC45442041    	  1813:          MOVE.L  #'ED A',(A6)+
01:00200C62 3CFC5420        	  1814:          MOVE.W  #'T ',(A6)+
01:00200C66 200A            	  1815:          MOVE.L  A2,D0          ADDRESS WHERE IT FAILED
01:00200C68 6100112A        	  1816:          BSR     PNT6HX
                            	  1817: 
01:00200C6C 2CFC20205752    	  1818:          MOVE.L  #'  WR',(A6)+
01:00200C72 2CFC4F54453D    	  1819:          MOVE.L  #'OTE=',(A6)+
01:00200C78 201F            	  1820:          MOVE.L  (A7)+,D0       WHAT WAS WRITTEN
01:00200C7A 6100111E        	  1821:          BSR     PNT4HX
                            	  1822: 
01:00200C7E 2CFC20202052    	  1823:          MOVE.L  #'   R',(A6)+
01:00200C84 2CFC4541443D    	  1824:          MOVE.L  #'EAD=',(A6)+
01:00200C8A 201F            	  1825:          MOVE.L  (A7)+,D0       WHAT WAS READ
01:00200C8C 6100110C        	  1826:          BSR     PNT4HX
                            	  1827: 
01:00200C90 6000F80E        	  1828:          BRA     MSG            PRINT IT
                            	  1829: 
                            	  1830: 
                            	  1831: 
                            	  1832: 
                            	  1833: *-------------------------------------------------------------------------
                            	  1834: * File DC        DC (Data Conversion) Command                     12/10/81
                            	  1835: 
                            	  1836: *
                            	  1837: *
                            	  1838: *  ***DC***  NUMBER CONVERSIONS
                            	  1839: *
                            	  1840: DCCMD    DS      0              -DATA CONVERT COMMAND-
01:00200C94 41FAF818        	  1841: NUMCON0  LEA     SYNTAX(PC),A0  IF NO PARAMETERS
01:00200C98 610011C4        	  1842:          BSR     FNEXTF         POINT TO NEXT PARAMETER
01:00200C9C 6100028C        	  1843:          BSR     GETA           EVALUATE EXPRESSION
                            	  1844: 
01:00200CA0 610013DE        	  1845:          BSR     FIXBUF         SET UP FOR PRINT
01:00200CA4 2E00            	  1846:          MOVE.L  D0,D7          D7=VALUE
01:00200CA6 4A87            	  1847:          TST.L   D7             SEE IF NEGATIVE
01:00200CA8 6A0E            	  1848:          BPL.S   NUMCON1
01:00200CAA 1CFC0024        	  1849:          MOVE.B  #'$',(A6)+
01:00200CAE 2007            	  1850:          MOVE.L  D7,D0          MOVE NEGATIVE RESULT TO D0
01:00200CB0 610010DA        	  1851:          BSR     PNT8HX
01:00200CB4 1CFC003D        	  1852:          MOVE.B  #'=',(A6)+
01:00200CB8 2007            	  1853: NUMCON1  MOVE.L  D7,D0          RESTORE
01:00200CBA 6A08            	  1854:          BPL.S   NUMCON2
01:00200CBC 4480            	  1855:          NEG.L   D0
01:00200CBE 6B04            	  1856:          BMI.S   NUMCON2        SPECIAL CASE (-0)
01:00200CC0 1CFC002D        	  1857:          MOVE.B  #'-',(A6)+
01:00200CC4 1CFC0024        	  1858: NUMCON2  MOVE.B  #'$',(A6)+
01:00200CC8 6100114E        	  1859:          BSR     PNTZHX
01:00200CCC 1CFC003D        	  1860:          MOVE.B  #'=',(A6)+     NOW PRINT DECIMAL VALUE
01:00200CD0 2007            	  1861:          MOVE.L  D7,D0
01:00200CD2 6A08            	  1862:          BPL.S   NUMCON3
01:00200CD4 4480            	  1863:          NEG.L   D0
01:00200CD6 6B04            	  1864:          BMI.S   NUMCON3        SPECIAL CASE (-0)
01:00200CD8 1CFC002D        	  1865:          MOVE.B  #'-',(A6)+
01:00200CDC 1CFC0026        	  1866: NUMCON3  MOVE.B  #'&',(A6)+
01:00200CE0 6100066A        	  1867:          BSR     HEX2DEC        PUT VALUE IN BUFFER
01:00200CE4 6000F7BA        	  1868:          BRA     MSG            GO PRINT IT
                            	  1869: 
                            	  1870: 
                            	  1871: 
                            	  1872: 
                            	  1873: *-------------------------------------------------------------------------
                            	  1874: * File DFDI      DF (Display registers) WITH disassembler         05/27/82
                            	  1875: 
01:00200CE8 50435352        	  1876: REGNAMES DC.L    'PCSR'         TABLE OF NAMES OF REGISTERS
01:00200CEC 55535353        	  1877:          DC.L    'USSS'
01:00200CF0 3F3F            	  1878:          DC.W    '??'           END OF TABLE
                            	  1879: 
                            	  1880: DFCMD    DS      0              DF COMMAND  ENTRY
01:00200CF2 600A            	  1881:          BRA.S   TD07
                            	  1882: 
01:00200CF4 6100138A        	  1883: TDISPLY  BSR     FIXBUF         PRINT TRACE DISPLAY SUBROUTINE
01:00200CF8 4A3804E9        	  1884:          TST.B   XONOFF+3
01:00200CFC 6652            	  1885:          BNE.S   TD25           SHORT DISPLAY
                            	  1886: 
01:00200CFE 61001380        	  1887: TD07     BSR     FIXBUF         PRINT PRELUDE
01:00200D02 42B8061C        	  1888:          CLR.L   OUTTO          FORCE DISPLAY TO OPERATORS CONSOLE
01:00200D06 2CF80610        	  1889:          MOVE.L  SCREEN1,(A6)+
01:00200D0A 6704            	  1890:          BEQ.S   TD09           SKIP PRELUDE
01:00200D0C 610012E6        	  1891:          BSR     OUTPUT
                            	  1892: TD09
                            	  1893: 
01:00200D10 49FAFFD6        	  1894:          LEA     REGNAMES(PC),A4 REGISTER NAMES
01:00200D14 45F80400        	  1895:          LEA     REGPC,A2       REGISTER DATA
01:00200D18 61001366        	  1896:          BSR     FIXBUF         SET UP I/O BUFFER
                            	  1897: 
01:00200D1C 301C            	  1898: TD1      MOVE.W  (A4)+,D0       GET REG NAME
01:00200D1E 2E1A            	  1899:          MOVE.L  (A2)+,D7       GET REG CONTENT
01:00200D20 0C403F3F        	  1900:          CMPI.W  #'??',D0       SEE IF AT END OF REGS
01:00200D24 6650            	  1901:          BNE.S   TD4
01:00200D26 610012B2        	  1902:          BSR     OUT1CR         PRINT BUFFER
                            	  1903: 
01:00200D2A 1E3C0044        	  1904:          MOVE.B  #'D',D7        CLASS=DATA
01:00200D2E 47F80408        	  1905:          LEA     REGS,A3        OFFSET
01:00200D32 61000D96        	  1906:          BSR     PNTCLS         GO PRINT THE BLOCK
                            	  1907: 
01:00200D36 1E3C0041        	  1908:          MOVE.B  #'A',D7        CLASS=ADDRESS
01:00200D3A 47F80428        	  1909:          LEA     REGS+32,A3     OFFSET
01:00200D3E 61000D8A        	  1910:          BSR     PNTCLS         GO PRINT THE BLOCK
                            	  1911: 
01:00200D42 6100133C        	  1912:          BSR     FIXBUF
01:00200D46 7214            	  1913:          MOVEQ   #20,D1         LOOP COUNTER
01:00200D48 1CFC002D        	  1914: TD27     MOVE.B  #'-',(A6)+     FILL BUFFER WITH BOARDER
01:00200D4C 5381            	  1915:          SUBQ.L  #1,D1
01:00200D4E 66F8            	  1916:          BNE TD27
                            	  1917: 
01:00200D50 28780400        	  1918: TD25     MOVE.L  REGPC,A4       DISASSEMBLE
01:00200D54 4CD40007        	  1919:          MOVEM.L (A4),D0-D2
01:00200D58 2A4E            	  1920:          MOVE.L  A6,A5
01:00200D5A 610030F4        	  1921:          BSR     DCODE68K
01:00200D5E 4BF80540        	  1922:          LEA     BUFFER,A5
                            	  1923: 
01:00200D62 61001276        	  1924:          BSR     OUT1CR         PRINT
                            	  1925: 
01:00200D66 61001318        	  1926:          BSR     FIXBUF         PRINT END STUFF FOR SCREEN CONTROL
01:00200D6A 2CF80614        	  1927:          MOVE.L  SCREEN2,(A6)+
01:00200D6E 6704            	  1928:          BEQ.S   TD39           SKIP END STUFF
01:00200D70 61001282        	  1929:          BSR     OUTPUT
01:00200D74 4E75            	  1930: TD39     RTS     RETURN FOR MORE WORK
                            	  1931: 
01:00200D76 3400            	  1932: TD4      MOVE.W  D0,D2          PRINT REG NAME IN BUFFER
01:00200D78 E040            	  1933:          ASR.W   #8,D0          MOVE IT OVER
01:00200D7A 1600            	  1934:          MOVE.B  D0,D3          SAVE REGISTER TYPE A,D,W,M ETC
01:00200D7C 1CC0            	  1935:          MOVE.B  D0,(A6)+       SAVE FIRST LETTER
01:00200D7E 1CC2            	  1936:          MOVE.B  D2,(A6)+       SAVE NEXT LETTER
01:00200D80 1CFC003D        	  1937:          MOVE.B  #'=',(A6)+     EQUAL SIGN
01:00200D84 0C425553        	  1938:          CMPI.W  #'US',D2
01:00200D88 6606            	  1939:          BNE.S   T44
01:00200D8A 20380448        	  1940:          MOVE.L  REGUS,D0       USER STACK
01:00200D8E 6014            	  1941:          BRA.S   T449
                            	  1942: 
01:00200D90 0C425353        	  1943: T44      CMPI.W  #'SS',D2       SUPER STACK IS SPECIAL
01:00200D94 6606            	  1944:          BNE.S   T448
01:00200D96 20380444        	  1945:          MOVE.L  REGA7,D0       GET A7
01:00200D9A 6008            	  1946:          BRA.S   T449
                            	  1947: 
01:00200D9C 2007            	  1948: T448     MOVE.L  D7,D0          REGISTER VALUE
01:00200D9E 0C425352        	  1949:          CMPI.W  #'SR',D2       SEE IF STATUS REGISTER
01:00200DA2 670C            	  1950:          BEQ.S   TDCC
01:00200DA4 61000FE6        	  1951: T449     BSR     PNT8HX         FORMAT 8 HEX CHAR
01:00200DA8 1CFC0020        	  1952: TD9      MOVE.B  #BLANK,(A6)+   SPACE BETWEEN REGS
01:00200DAC 6000FF6E        	  1953:          BRA TD1
                            	  1954: 
                            	  1955: *   CONDITION CODE FORMAT
                            	  1956: *
01:00200DB0 3600            	  1957: TDCC     MOVE.W  D0,D3          SAVE FOR A MOMENT
01:00200DB2 61000FE6        	  1958:          BSR     PNT4HX
01:00200DB6 1CFC003D        	  1959:          MOVE.B  #'=',(A6)+
01:00200DBA 2E3C80000054    	  1960:          MOVE.L  #$80000054,D7  TRACE BIT
01:00200DC0 613E            	  1961:          BSR.S   TDCC9
01:00200DC2 2E3C20000053    	  1962:          MOVE.L  #$20000053,D7  SUPERVISOR BIT
01:00200DC8 6136            	  1963:          BSR.S   TDCC9
01:00200DCA 3003            	  1964:          MOVE.W  D3,D0          INTERRUPT LEVEL
01:00200DCC E048            	  1965:          LSR.W   #8,D0
01:00200DCE 02000007        	  1966:          ANDI.B  #$07,D0        "7" MAX IN SR FOR LEVEL
01:00200DD2 61000FD6        	  1967:          BSR     PUTHEX
01:00200DD6 2E3C00100058    	  1968:          MOVE.L  #$100058,D7    X BIT
01:00200DDC 6122            	  1969:          BSR.S   TDCC9
01:00200DDE 2E3C0008004E    	  1970:          MOVE.L  #$8004E,D7     N BIT
01:00200DE4 611A            	  1971:          BSR.S   TDCC9
01:00200DE6 2E3C0004005A    	  1972:          MOVE.L  #$4005A,D7     Z BIT
01:00200DEC 6112            	  1973:          BSR.S   TDCC9
01:00200DEE 2E3C00020056    	  1974:          MOVE.L  #$20056,D7     V BIT
01:00200DF4 610A            	  1975:          BSR.S   TDCC9
01:00200DF6 2E3C00010043    	  1976:          MOVE.L  #$10043,D7     C BIT
01:00200DFC 6102            	  1977:          BSR.S   TDCC9
01:00200DFE 60A8            	  1978:          BRA     TD9
                            	  1979: *
01:00200E00 2C07            	  1980: TDCC9    MOVE.L  D7,D6          DUPLICATE STUFF
01:00200E02 4846            	  1981:          SWAP    D6             GET BIT POSITION
01:00200E04 CC43            	  1982:          AND.W   D3,D6          SEE IF ON
01:00200E06 6604            	  1983:          BNE.S   TDCC91
01:00200E08 1E3C002E        	  1984:          MOVE.B  #'.',D7        PUT IN PERIOD IF OFF
01:00200E0C 1CC7            	  1985: TDCC91   MOVE.B  D7,(A6)+       PUT IN LETTER IF ON
01:00200E0E 4E75            	  1986:          RTS
                            	  1987: 
                            	  1988: 
                            	  1989: 
                            	  1990: 
                            	  1991: *-------------------------------------------------------------------------
                            	  1992: * File DUMP      DU     Dump "S-Records"                          05/10/82
                            	  1993: 
                            	  1994: *   ***DUMP***  DUMP  'S' RECORDS
                            	  1995: *    FORMAT:  DU  ADDRESS1 ADDRESS2  [TEXT....]
                            	  1996: *
                            	  1997: DUCMD    DS      0
01:00200E10 6100172E        	  1998:          BSR     SCANPORT       SEE WHERE TO SEND OUTPUT (DUMMY CALL)
01:00200E14 2C38061C        	  1999:          MOVE.L  OUTTO,D6       SAVE OUTTO FOR ACTUAL S-RECORD DUMP
01:00200E18 42B8061C        	  2000:          CLR.L   OUTTO          OVERRIDE SCANPORT CALL
                            	  2001: 
01:00200E1C 41FAF690        	  2002:          LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMTERS
01:00200E20 6100103C        	  2003:          BSR     FNEXTF         FIND NEXT FIELD
01:00200E24 61000104        	  2004:          BSR     GETA           GET ADDRESS1
01:00200E28 2640            	  2005:          MOVE.L  D0,A3          A3 = BEGIN ADDRESS
                            	  2006: 
01:00200E2A 61001032        	  2007:          BSR     FNEXTF
01:00200E2E 610000FA        	  2008:          BSR     GETA           GET ADDRESS2
01:00200E32 2840            	  2009:          MOVE.L  D0,A4          A4 = END ADDRESS
                            	  2010: 
                            	  2011: * PROCESS HEADER
01:00200E34 41FA0006        	  2012:          LEA     PUNCH5(PC),A0  WHERE TO GO IF NO HEADER
01:00200E38 61001024        	  2013:          BSR     FNEXTF         LOOK FOR HEADER
                            	  2014: PUNCH5   DS      0
                            	  2015: 
                            	  2016: * MOVE TEXT TO 'TEMP STORAGE'
01:00200E3C 45F805C0        	  2017:          LEA     DUMPTEMP,A2
01:00200E40 2A0A            	  2018:          MOVE.L  A2,D5          D5 = START OF TEXT
01:00200E42 BDCD            	  2019: PUM11    CMP.L   A5,A6
01:00200E44 6704            	  2020:          BEQ.S   PUM13
01:00200E46 14DD            	  2021:          MOVE.B  (A5)+,(A2)+    MOVE
01:00200E48 60F8            	  2022:          BRA     PUM11
01:00200E4A CB8A            	  2023: PUM13    EXG     A2,D5          D5 = END OF TEXT +1
                            	  2024: 
                            	  2025: * DISPLAY ADDRESSES
01:00200E4C 204B            	  2026:          MOVE.L  A3,A0
01:00200E4E 224C            	  2027:          MOVE.L  A4,A1
01:00200E50 6100F66A        	  2028:          BSR     P2PHY          DISPLAY TWO ADDRESSES
                            	  2029: 
                            	  2030: * INSURE END EQUAL GREATER THAN BEG
01:00200E54 B9CB            	  2031:          CMP.L   A3,A4
01:00200E56 6500F656        	  2032:          BCS     SYNTAX
                            	  2033: 
01:00200E5A 21C6061C        	  2034:          MOVE.L  D6,OUTTO       RESTORE OPTIONAL DESTINATION OF DUMP
                            	  2035: 
                            	  2036: * FINISH PROCESSING HEADER
                            	  2037: *  A2 = START OF TEXT
01:00200E5E 61001220        	  2038:          BSR     FIXBUF         A5,A6=#BUFFER
01:00200E62 7C02            	  2039:          MOVEQ   #2,D6          THE BYTE COUNT
01:00200E64 7800            	  2040:          CLR.L   D4             CLEAR THE CHECKSUM
01:00200E66 2CFC53303F3F    	  2041:          MOVE.L  #'S0??',(A6)+  START OF S RECORD
01:00200E6C 2CFC30303030    	  2042:          MOVE.L  #'0000',(A6)+  DUMMY ADDRESS
01:00200E72 B5C5            	  2043: MORES0   CMP.L   D5,A2          SEE IF AT END OF TEXT
01:00200E74 6C0C            	  2044:          BGE.S   ENDS0          WHERE TO GO WHEN ALL CHARACTERS USED
01:00200E76 5286            	  2045:          ADDQ.L  #1,D6          ANOTHER BYTE
                            	  2046: 
01:00200E78 101A            	  2047:          MOVE.B  (A2)+,D0       GET ANOTHER BYTE OF TEXT
                            	  2048: 
01:00200E7A D880            	  2049:          ADD.L   D0,D4          FOR CHECKSUM
01:00200E7C 61000F24        	  2050:          BSR     PNT2HX         PUT IT IN BUFFER
01:00200E80 60F0            	  2051:          BRA     MORES0
                            	  2052: ENDS0    DS      0
                            	  2053: 
01:00200E82 61000084        	  2054:          BSR     PNTSREC        GO PRINT THE 'S' RECORD
01:00200E86 344B            	  2055:          MOVE    A3,A2          A2 WILL SCAN BETWEEN A3-A4
                            	  2056: 
                            	  2057: * DO ANOTHER 'S' RECORD
01:00200E88 610011F6        	  2058: MORESP   BSR     FIXBUF         A5,A6=#BUFFER
01:00200E8C 7800            	  2059:          CLR.L   D4             CLEAR CHECKSUM REGISTER
01:00200E8E 200B            	  2060:          MOVE.L  A3,D0          READY TO PRINT ADDRESS
01:00200E90 220B            	  2061:          MOVE.L  A3,D1          GET READY TO AND ADDRESS
01:00200E92 7610            	  2062:          MOVEQ   #$10,D3        MAXIMUM BYTES ON S REC LINE
01:00200E94 D283            	  2063:          ADD.L   D3,D1          INSURE END OF LINE ADDRESS IS MAX
01:00200E96 028100FF0000    	  2064:          ANDI.L  #$FF0000,D1    SEE IF 3 BYTE ADDRESS
01:00200E9C 6618            	  2065:          BNE.S   S2REC          WHERE TO GO IF 3 BYTES NEEDED
01:00200E9E 2CFC53313F3F    	  2066:          MOVE.L  #'S1??',(A6)+  PUSH
01:00200EA4 300B            	  2067:          MOVE    A3,D0          SET UP TO PRINT 2 BYTE ADDRESS
01:00200EA6 61000EF2        	  2068:          BSR     PNT4HX         PRINT 4 HEX CHAR ADDRESS
01:00200EAA 7C02            	  2069:          MOVEQ   #2,D6          BYTE COUNT
01:00200EAC 300B            	  2070:          MOVE.W  A3,D0          FIX UP CHECKSUM
01:00200EAE D800            	  2071:          ADD.B   D0,D4          LOW BYTE
01:00200EB0 E040            	  2072:          ASR     #8,D0          SHIFT IT OVER
01:00200EB2 D800            	  2073:          ADD.B   D0,D4          HIGH BYTE OF ADDRESS
01:00200EB4 6018            	  2074:          BRA.S   PNCA3          GO PUNCH A LINE
                            	  2075: 
01:00200EB6 2CFC53323F3F    	  2076: S2REC    MOVE.L  #'S2??',(A6)+  PUSH
01:00200EBC 61000ED6        	  2077:          BSR     PNT6HX         PRINT 6 HEX CHAR ADDRESS
01:00200EC0 7C03            	  2078:          MOVEQ   #3,D6          BYTE COUNT
01:00200EC2 200B            	  2079:          MOVE.L  A3,D0          FIX UP CHECKSUM
01:00200EC4 D800            	  2080:          ADD.B   D0,D4          LOW BYTE
01:00200EC6 E040            	  2081:          ASR     #8,D0          SHIFT IT OVER
01:00200EC8 D800            	  2082:          ADD.B   D0,D4          MIDDLE BYTE
01:00200ECA 4840            	  2083:          SWAP    D0             SET UP FOR HIGH BYTE
01:00200ECC D800            	  2084:          ADD.B   D0,D4          ADD HIGH BYTE
01:00200ECE B7CC            	  2085: PNCA3    CMP.L   A4,A3          SEE IF AT ENDING ADDRESS
                            	  2086: 
                            	  2087: * END OF FILE
01:00200ED0 6F1C            	  2088:          BLE.S   A3OUT          WHERE TO GO IF BELOW OR AT END ADDRESS
01:00200ED2 612E            	  2089:          BSR.S   PNTSRECX       END IT BY PRINTING LAST RECORD
01:00200ED4 610011AA        	  2090:          BSR     FIXBUF         A5,A6=#BUFFER
01:00200ED8 7800            	  2091:          CLR.L   D4             CLEAR THE CHECKSUM
01:00200EDA 2CFC53393F3F    	  2092:          MOVE.L  #'S9??',(A6)+  MOVE TO PRINT BUFFER
01:00200EE0 2CFC30303030    	  2093:          MOVE.L  #'0000',(A6)+  MOVE '0000' TO PRIT BUFFER
01:00200EE6 7C02            	  2094:          MOVEQ   #2,D6          BYTE COUNT
01:00200EE8 611E            	  2095:          BSR.S   PNTSREC        PRINT 'S9' END-OF-FILE RECORD
01:00200EEA 6000F73A        	  2096:          BRA     MACSBUG        REENTER MACSBUG
                            	  2097: 
01:00200EEE 101B            	  2098: A3OUT    MOVE.B  (A3)+,D0       GRAB THE BYTE FROM MEMORY
01:00200EF0 D840            	  2099:          ADD.W   D0,D4          ADD TO CHECKSUM
01:00200EF2 5246            	  2100:          ADDQ.W  #1,D6          BUMP THE BYTE COUNT
01:00200EF4 5289            	  2101:          ADDQ.L  #1,A1          ADD TO COUNT OF BYTES PROCESSED
01:00200EF6 61000EAA        	  2102:          BSR     PNT2HX         PUT THE HEX IN THE PRINT BUFFER
01:00200EFA 5383            	  2103:          SUBQ.L  #1,D3          COUNT DOWN CHAR TO GO IN LINE
01:00200EFC 66D0            	  2104:          BNE     PNCA3
01:00200EFE 6108            	  2105:          BSR.S   PNTSREC        END OF LINE-PUNCH IT
01:00200F00 6086            	  2106:          BRA     MORESP         GO FIX UP NEXT LINE
                            	  2107: 
                            	  2108: * FIX UP & PRINT THE 'S' RECORD/LINE
                            	  2109: 
01:00200F02 B2FC0000        	  2110: PNTSRECX CMP.W   #0,A1          SEE IF ANY CHAR MOVED
01:00200F06 6720            	  2111:          BEQ.S   PNTSRTS        NO CHAR MOVED
                            	  2112: 
01:00200F08 5246            	  2113: PNTSREC  ADD     #1,D6          ONE MORE BYTE (CHECKSUM)
01:00200F0A D846            	  2114:          ADD.W   D6,D4          ADD BYTE COUNT TO CHECKSUM
01:00200F0C 4604            	  2115:          NOT.B   D4             COMPLIMENT THE CHECKSUM
01:00200F0E 2004            	  2116:          MOVE.L  D4,D0          READY FOR PRINT-HEX
01:00200F10 61000E90        	  2117:          BSR     PNT2HX         PUT CHECKSUM IN RECORD
01:00200F14 2E0E            	  2118:          MOVE.L  A6,D7          SAVE FOR THE MOMENT
01:00200F16 2C4D            	  2119:          MOVE.L  A5,A6          START OF BUFFER
01:00200F18 548E            	  2120:          ADDQ.L  #2,A6          BYPASS RECORD TYPE (4 CHAR)
01:00200F1A 1006            	  2121:          MOVE.B  D6,D0          SET UP BYTE COUNT FOR PNTHEX ROUTINE
01:00200F1C 61000E84        	  2122:          BSR     PNT2HX         PUT THE BYTE COUNT IN THE PRINT BUFFER
01:00200F20 2C47            	  2123:          MOVE.L  D7,A6          RESTORE REAL END OF BUFFER
01:00200F22 610010B6        	  2124:          BSR     OUT1CR         DO THE ACTUAL DISPLAY/PUNCH
01:00200F26 93C9            	  2125:          SUB.L   A1,A1          CLEAR COUNTER OF BYTES PROCESSED
01:00200F28 4E75            	  2126: PNTSRTS  RTS
                            	  2127: 
                            	  2128: 
                            	  2129: 
                            	  2130: 
                            	  2131: *-------------------------------------------------------------------------
                            	  2132: * File GETA      GET ADDRESS Subroutine                           12/01/81
                            	  2133: 
                            	  2134: * GET ADDRESS
                            	  2135: *  ENTER (A5) POINTER START OF BUFFER
                            	  2136: *        (A6) POINTER END OF BUFFER
                            	  2137: *
                            	  2138: *  RETURN:  D0 = ADDRESS
                            	  2139: 
                            	  2140: *        (A6) POINTER END OF BUFFER
                            	  2141: *
                            	  2142: *  RETURN:  D0 = ADDRESS
                            	  2143: 
                            	  2144: 
                            	  2145: * FORMATS HANDLED:
                            	  2146: *  1.  NUMBER        DEFAULTS TO HEX
                            	  2147: *  2.  $NUMBER       HEX
                            	  2148: *  3.  &NUMBER       DECIMAL
                            	  2149: *  4.  (A@)
                            	  2150: *  5.  NUMBER(A@)
                            	  2151: *  6.  (A@,D@)
                            	  2152: *  7.  NUMBER(A@,D@)
                            	  2153: *  8.  [NUMBER]      MEMORY INDIRECT
                            	  2154: *
                            	  2155: *   FORMATS 1,2,3,8  ADD OFFSET R0 UNLESS R1 - R7 SPECIFIED
                            	  2156: 
                            	  2157: 
                            	  2158: * WORK REGISTERS
                            	  2159: *  D4    VALUE BEING BUILT
                            	  2160: *
                            	  2161: *  D5    FLAG REGISTER
                            	  2162: *     = 8000XXXX  R@ GIVEN (GARO)
                            	  2163: *     = XXXX80XX  [  GIVEN (GALB)
                            	  2164: *     = XXXXXX80  (  GIVEN (GALP)
                            	  2165: *
                            	  2166: *  D6    FLAG REGISTER
                            	  2167: *     = 8000XXXX  A@ GIVEN           (GAAVF)
                            	  2168: *     = XXXX80XX  NEED PLUS OR MINUS (GANPM)
                            	  2169: *     = XXXXXX2B  +  PLUS GIVEN      (GAPMS)
                            	  2170: *             2D  -  MINUS GIVEN
                            	  2171: 
01:00200F2A 48E70E80        	  2172: GETA     MOVEM.L D4-D6/A0,-(A7) SAVE SOME REGISTERS
01:00200F2E 7800            	  2173:          CLR.L   D4             VALUE BEING BUILT
01:00200F30 7A00            	  2174:          CLR.L   D5             FLAG REG
01:00200F32 7C00            	  2175:          CLR.L   D6             FLAG REG
                            	  2176: 
01:00200F34 101D            	  2177:          MOVE.B  (A5)+,D0       GET BYTE
01:00200F36 BDCD            	  2178:          CMP.L   A5,A6
01:00200F38 6500010C        	  2179:          BCS     GAP191         END OF BUFFER
                            	  2180: 
01:00200F3C 0C00005B        	  2181:          CMPI.B  #'[',D0
01:00200F40 660C            	  2182:          BNE.S   GAP113
                            	  2183: 
                            	  2184: *  [  SET INDIRECT
                            	  2185: 
01:00200F42 00458000        	  2186:          ORI.W   #$8000,D5      SET LEFT BRACKET (GALB)
                            	  2187: 
01:00200F46 101D            	  2188: GAP111   MOVE.B  (A5)+,D0       GET BYTE
01:00200F48 BDCD            	  2189:          CMP.L   A5,A6
01:00200F4A 650000FA        	  2190:          BCS     GAP191         END OF BUFFER
                            	  2191: GAP113   DS      0
                            	  2192: 
01:00200F4E 0C00002B        	  2193:          CMPI.B  #'+',D0
01:00200F52 675E            	  2194:          BEQ.S   GAP121         PLUS SIGN
                            	  2195: 
01:00200F54 0C00002D        	  2196:          CMPI.B  #'-',D0
01:00200F58 6758            	  2197:          BEQ.S   GAP121         MINUS SIGN
                            	  2198: 
01:00200F5A 0C00005D        	  2199:          CMPI.B  #']',D0
01:00200F5E 675E            	  2200:          BEQ.S   GAP131         RIGHT BRACKET (INDIRECT)
                            	  2201: 
01:00200F60 0C000028        	  2202:          CMPI.B  #'(',D0
01:00200F64 676C            	  2203:          BEQ.S   GAP141         LEFT PARIN
                            	  2204: 
01:00200F66 0C00002C        	  2205:          CMPI.B  #',',D0
01:00200F6A 67000092        	  2206:          BEQ     GAP161         COMMA
                            	  2207: 
01:00200F6E 0C000029        	  2208:          CMPI.B  #')',D0
01:00200F72 670000CC        	  2209:          BEQ     GAP181         RIGHT PARIN
                            	  2210: 
01:00200F76 0C00003B        	  2211:          CMPI.B  #';',D0        "SEMI-COLON"
01:00200F7A 670000CA        	  2212:          BEQ     GAP191         TERMINATE
                            	  2213: 
01:00200F7E 0C000020        	  2214:          CMPI.B  #BLANK,D0      "SPACE"
01:00200F82 670000C2        	  2215:          BEQ     GAP191         TERMINATE
                            	  2216: 
01:00200F86 4A46            	  2217:          TST.W   D6             (GANPM)
01:00200F88 6B70            	  2218:          BMI.S   GAE            NEEDS PLUS OR MINUS
                            	  2219: 
01:00200F8A 0C000052        	  2220:          CMPI.B  #'R',D0
01:00200F8E 67000094        	  2221:          BEQ     GAP171         RELATIVE OFFSET
                            	  2222: 
01:00200F92 4A06            	  2223:          TST.B   D6             (GALP)
01:00200F94 6B64            	  2224:          BMI.S   GAE            (...   NUMBER NOT ALLOWED
                            	  2225: 
                            	  2226: * NONE OF ABOVE ASSUME NUMERIC VALUE
01:00200F96 538D            	  2227:          SUBQ.L  #1,A5          ADJUST (A5) TO FIRST CHAR
01:00200F98 7000            	  2228:          CLR.L   D0
01:00200F9A 61000F44        	  2229:          BSR     GETNUMA
                            	  2230: 
01:00200F9E 0C06002D        	  2231:          CMPI.B  #'-',D6        (GAPMS)
01:00200FA2 6704            	  2232:          BEQ.S   GAP118         MINUS SIGN
                            	  2233: 
01:00200FA4 D880            	  2234:          ADD.L   D0,D4          PLUS SIGN
01:00200FA6 6002            	  2235:          BRA.S   GAP119
                            	  2236: 
01:00200FA8 9880            	  2237: GAP118   SUB.L   D0,D4
                            	  2238: 
01:00200FAA 4206            	  2239: GAP119   CLR.B   D6             (GAPMS)  RESET PLUS MINUS FLAG
01:00200FAC 00468000        	  2240:          ORI.W   #$8000,D6      (GANPM)  SET NEED PLUS MINUS
01:00200FB0 6094            	  2241: GAP111S  BRA     GAP111
                            	  2242: 
                            	  2243: * (*) (-) SET ARITHMETIC OPERATOR
                            	  2244: 
01:00200FB2 4A06            	  2245: GAP121   TST.B   D6             (GAPMS)
01:00200FB4 6644            	  2246:          BNE.S   GAE            MULTI OPERATORS
01:00200FB6 1C00            	  2247:          MOVE.B  D0,D6          (GAPMS)
01:00200FB8 024600FF        	  2248:          ANDI.W  #$00FF,D6      RESET (GANPM) NEED PLUS MINUS
01:00200FBC 60F2            	  2249:          BRA     GAP111S
                            	  2250: 
                            	  2251: *  ]  CLOSE INDIRECT
                            	  2252: 
01:00200FBE 4A45            	  2253: GAP131   TST.W   D5             (GALB)
01:00200FC0 6A38            	  2254:          BPL.S   GAE            [ MISSING
                            	  2255: 
                            	  2256: * IF NO R@ GIVEN ADD R0
01:00200FC2 4A85            	  2257:          TST.L   D5             (GARO)
01:00200FC4 6B04            	  2258:          BMI.S   GAP135         R@ GIVEN
01:00200FC6 D8B8044C        	  2259:          ADD.L   OFFSET,D4      NO R@ GIVEN; ADD R0
                            	  2260: GAP135   DS      0
                            	  2261: 
01:00200FCA 2044            	  2262:          MOVE.L  D4,A0
01:00200FCC 2010            	  2263:          MOVE.L  (A0),D0
01:00200FCE 6000008A        	  2264:          BRA     GAP199
                            	  2265: 
                            	  2266: *  (  DO PARIN PAIR
                            	  2267: 
01:00200FD2 4A05            	  2268: GAP141   TST.B   D5             (GALP)
01:00200FD4 6B24            	  2269:          BMI.S   GAE            MULTI (
01:00200FD6 4A85            	  2270:          TST.L   D5             (GARO)
01:00200FD8 6B20            	  2271:          BMI.S   GAE            R@ NOT ALLOWED WITH (..)
01:00200FDA 00050080        	  2272:          ORI.B   #$80,D5        (GALP) SET LEFT PAREN
                            	  2273: 
                            	  2274: * LEFT PARIN SET; MUST BE A@ NEXT
01:00200FDE 101D            	  2275:          MOVE.B  (A5)+,D0       GET BYTE
01:00200FE0 BDCD            	  2276:          CMP.L   A5,A6
01:00200FE2 6516            	  2277:          BCS.S   GAE
01:00200FE4 0C000041        	  2278:          CMPI.B  #'A',D0
01:00200FE8 6610            	  2279:          BNE.S   GAE            NOT A-REG
01:00200FEA 41F80428        	  2280:          LEA     REGS+32,A0
01:00200FEE 6170            	  2281:          BSR.S   GASRGN         GET VALUE IN A@
01:00200FF0 D881            	  2282:          ADD.L   D1,D4
01:00200FF2 008680000000    	  2283:          ORI.L   #$80000000,D6  (GAAVF) A-REG VALUE FLAG
01:00200FF8 60B6            	  2284:          BRA     GAP111S
                            	  2285: 
01:00200FFA 6000F4B2        	  2286: GAE      BRA     SYNTAX
                            	  2287: 
                            	  2288: *  COMMA  A-REG or
                            	  2289: *  COMMA  D-REG REQUIRED
                            	  2290: 
01:00200FFE 4A86            	  2291: GAP161   TST.L   D6             (GAAVF)
01:00201000 6AF8            	  2292:          BPL     GAE            NO A-REG SPECIFIED
01:00201002 101D            	  2293:          MOVE.B  (A5)+,D0       GET BYTE
01:00201004 BDCD            	  2294:          CMP.L   A5,A6
01:00201006 65F2            	  2295:          BCS     GAE
01:00201008 0C000041        	  2296:          CMPI.B  #'A',D0
01:0020100C 6606            	  2297:          BNE.S   GAP163
01:0020100E 41F80428        	  2298:          LEA     REGS+32,A0     GET VALUE IN A@
01:00201012 600A            	  2299:          BRA.S   GAP165
01:00201014 0C000044        	  2300: GAP163   CMPI.B  #'D',D0
01:00201018 66E0            	  2301:          BNE     GAE            NOT D-REG
01:0020101A 41F80408        	  2302:          LEA     REGS,A0        GET VALUE IN D@
01:0020101E 6140            	  2303: GAP165   BSR.S   GASRGN
01:00201020 D881            	  2304:          ADD.L   D1,D4
01:00201022 608C            	  2305:          BRA     GAP111S
                            	  2306: 
                            	  2307: *  R@  OFFSET
                            	  2308: 
01:00201024 0C06002B        	  2309: GAP171   CMPI.B  #'+',D6        (GAPMS)
01:00201028 66D0            	  2310:          BNE     GAE            ONLY + ALLOWED
                            	  2311: 
                            	  2312: * ONLY ONE R@ ALLOWED
                            	  2313: 
01:0020102A 4A85            	  2314:          TST.L   D5             (GARO)
01:0020102C 6BCC            	  2315:          BMI     GAE            MULIT R@
01:0020102E 008580000000    	  2316:          ORI.L   #$80000000,D5  SET R@ GIVEN (GARO)
                            	  2317: 
01:00201034 41F8044C        	  2318:          LEA     OFFSET,A0
01:00201038 6126            	  2319:          BSR.S   GASRGN         GET VALUE IN R@
01:0020103A D881            	  2320:          ADD.L   D1,D4
01:0020103C 6000FF6C        	  2321:          BRA     GAP119
                            	  2322: 
                            	  2323: *  )  CLOSE THE WORLD
                            	  2324: 
01:00201040 4A86            	  2325: GAP181   TST.L   D6             (GAAVF)
01:00201042 6AB6            	  2326:          BPL     GAE            NO (
01:00201044 6012            	  2327:          BRA.S   GAP197
                            	  2328: 
                            	  2329: *  SPACE  TERMINATOR
                            	  2330: 
01:00201046 4A45            	  2331: GAP191   TST.W   D5             (GALB)
01:00201048 6BB0            	  2332:          BMI     GAE            [ WITHOUT ]
01:0020104A 4A05            	  2333:          TST.B   D5             (GALP)
01:0020104C 6BAC            	  2334:          BMI     GAE            ( WITHOUT )
01:0020104E 538D            	  2335:          SUBQ.L  #1,A5          ADJUST CHAR POINTER
                            	  2336: 
                            	  2337: * IF NO R@ GIVEN ADD R0
                            	  2338: 
01:00201050 4A85            	  2339:          TST.L   D5             (GARO)
01:00201052 6B04            	  2340:          BMI.S   GAP197         R@ GIVEN
01:00201054 D8B8044C        	  2341:          ADD.L   OFFSET,D4
01:00201058 2004            	  2342: GAP197   MOVE.L  D4,D0
                            	  2343: 
01:0020105A 4CDF0170        	  2344: GAP199   MOVEM.L (A7)+,D4-D6/A0
01:0020105E 4E75            	  2345:          RTS
                            	  2346: 
                            	  2347: * GET NEXT NUMBER
                            	  2348: *  A0 = POINTER TO TABLE OF VALUES
                            	  2349: *  D1 = VALUE ON RETURN
                            	  2350: 
01:00201060 7000            	  2351: GASRGN   CLR.L   D0
01:00201062 101D            	  2352:          MOVE.B  (A5)+,D0       GET BYTE
01:00201064 BDCD            	  2353:          CMP.L   A5,A6
01:00201066 6592            	  2354:          BCS     GAE
01:00201068 04000030        	  2355:          SUBI.B  #'0',D0        ADJUST TO ZERO
01:0020106C 0C000007        	  2356:          CMPI.B  #7,D0
01:00201070 6288            	  2357:          BHI     GAE            NOT 0 - 7
01:00201072 C0FC0004        	  2358:          MULU    #4,D0          4 * OFFSET
01:00201076 22300000        	  2359:          MOVE.L  (A0,D0),D1
01:0020107A 4E75            	  2360:          RTS
                            	  2361: 
                            	  2362: 
                            	  2363: 
                            	  2364: 
                            	  2365: *-------------------------------------------------------------------------
                            	  2366: * File H         Register save,Trace, Breakpoint                  03/03/82
                            	  2367: 
                            	  2368: *       SAVE ALL REGISTERS ROUTINE-JMP [TEMP] BACK
                            	  2369: *          USUALLY CALLED BY THE MACRO "SAVEREGS"
                            	  2370: 
                            	  2371: SAVE     DS      0
01:0020107C 4FF80444        	  2372:          LEA     REGA7,A7       WHERE TO START STORING
01:00201080 48E7FFFE        	  2373:          MOVEM.L D0-D7/A0-A6,-(A7)  SAVE REGISTERS
                            	  2374: 
01:00201084 4FF8078A        	  2375:          LEA     SYSTACK+4,A7   SET UP STRETCHED VERSAUG STACK
                            	  2376: 
01:00201088 20780444        	  2377:          MOVE.L  REGA7,A0       A0 = TARGETS SUPERVISOR STACK POINTER
01:0020108C 31D80406        	  2378:          MOVE.W  (A0)+,REGSR+2  GET TARGETS SR
                            	  2379: 
01:00201090 21D80400        	  2380:          MOVE.L  (A0)+,REGPC    GET TARGETS PC
                            	  2381: 
01:00201094 21C80444        	  2382:          MOVE.L  A0,REGA7       WHERE TARGET STACK REALLY POINTS
                            	  2383: 
01:00201098 4E69            	  2384:          MOVE.L  USP,A1         GET USERS STACK POINTER
01:0020109A 21C90448        	  2385:          MOVE.L  A1,REGUS       SAVE IT FOR DISPLAY ETC
                            	  2386: 
01:0020109E 20380400        	  2387:          MOVE.L  REGPC,D0       GET PROGRAM COUNTER
01:002010A2 598F            	  2388:          SUBQ.L  #4,A7          SET REAL MACSBUG STACK
01:002010A4 2F3804D6        	  2389:          MOVE.L  TEMP,-(A7)     PUT RETURN ADDRESS ON STACK
01:002010A8 4E75            	  2390:          RTS                    RETURN TO SENDER
                            	  2391: 
                            	  2392: *
                            	  2393: *     ***TRACE***  TRACE ENTRY POINT
                            	  2394: *       ENTER FROM VECTOR 9  (LOCATION 24) FOR
                            	  2395: *
                            	  2396: 
                            	  2397: * REGISTER USAGE
                            	  2398: *  A0 = ADDRESS OF BREAKPOINT ADDRESS
                            	  2399: *  A2 = ADDRESS OF BREAKPOINT COUNTS
                            	  2400: *  D1 = PC
                            	  2401: *  D5 = TRACECNT
                            	  2402: *  D7 = BKPT COUNT
                            	  2403: 
01:002010AA 46FC2700        	  2404: TRACE    MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
                            	  2405:          SAVEREGS
01:002010AE 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002010B2 4FFA0008        	     2M          LEA     SV_000043(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002010B6 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002010BA 60C0            	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000043     DS      0
                            	  2406: 
                            	  2407: * IF PC POINTS TO 'TRACE'; DOUBLE EVENT OCCURED
                            	  2408: *  CLEAR LAST EVENT BY IGNORING
                            	  2409: 
01:002010BC 0CB8002004000400	  2410:          CMPI.L  #V2,REGPC
                            	  2411: 
01:002010C4 6610            	  2412:          BNE.S   TRACE16
                            	  2413: 
01:002010C6 2A780444        	  2414:          MOVE.L  REGA7,A5       TRIM LAST EVENT FROM STACK
01:002010CA 31DD0406        	  2415:          MOVE.W  (A5)+,REGSR+2  *MOVE VALUES FROM STACK TO
01:002010CE 21DD0400        	  2416:          MOVE.L  (A5)+,REGPC    *PSUEDO SR, PC,
01:002010D2 21CD0444        	  2417:          MOVE.L  A5,REGA7       *REFLECT ADJUSTMENTS IN PSUEDO STACK
01:002010D6 02787FFF0406    	  2418: TRACE16  ANDI.W  #$7FFF,REGSR+2 RESET "T" (TRACE) BIT
                            	  2419: 
                            	  2420: 
01:002010DC 2A3804DA        	  2421:          MOVE.L  TRACECNT,D5
01:002010E0 6B54            	  2422:          BMI.S   TRACE39        EXECUTING ONE-INSTRUCTION
01:002010E2 67000C4C        	  2423:          BEQ     ABORT335       NOT TRACEING
                            	  2424: 
                            	  2425: *   MAKE SURE WE ARE NOT TRACING OURSELVES
01:002010E6 22380400        	  2426:          MOVE.L  REGPC,D1       GET PC
01:002010EA 41FAEF14        	  2427:          LEA.L   FIRST(PC),A0
01:002010EE B288            	  2428:          CMP.L   A0,D1
01:002010F0 6B10            	  2429:          BMI.S   TISOK          TRACING BELOW OURSELVES
01:002010F2 41FA32E4        	  2430:          LEA     LAST(PC),A0
01:002010F6 B288            	  2431:          CMP.L   A0,D1
01:002010F8 6208            	  2432:          BHI.S   TISOK          TRACING ABOVE OURSELVES
01:002010FA 4BFA015E        	  2433:          LEA     MSG020(PC),A5  TRACING OURSELVES
01:002010FE 60000128        	  2434:          BRA     CHKBP4
                            	  2435: TISOK
                            	  2436: 
01:00201102 41F80470        	  2437:          LEA     BPADD,A0
01:00201106 45F80494        	  2438:          LEA     BPCNT,A2
01:0020110A 7E09            	  2439:          MOVEQ   #9,D7          9TH BP IS "UNTILL" FEATURE
                            	  2440: 
01:0020110C B290            	  2441: TRACE01  CMP.L   (A0),D1        SEE IF PC MATCHES ADDRESS IN TABLE
01:0020110E 6610            	  2442:          BNE.S   TRACE08
01:00201110 2012            	  2443:          MOVE.L  (A2),D0        GET COUNT
01:00201112 67000110        	  2444:          BEQ     CHKBP3         COUNT ZERO
01:00201116 5380            	  2445:          SUBQ.L  #1,D0          COUNT DOWN
01:00201118 2480            	  2446:          MOVE.L  D0,(A2)        SAVE IT
01:0020111A 67000108        	  2447:          BEQ     CHKBP3         COUNT WENT TO ZERO
01:0020111E 6008            	  2448:          BRA.S   TRACE03
                            	  2449: 
01:00201120 5888            	  2450: TRACE08  ADDQ.L  #4,A0          BUMP TABLE POINTER
01:00201122 588A            	  2451:          ADDQ.L  #4,A2          BUMP COUNT TABLE POINTER
01:00201124 5387            	  2452:          SUBQ.L  #1,D7          LOOP AROUND
01:00201126 66E4            	  2453:          BNE     TRACE01
                            	  2454: 
01:00201128 6100FBCA        	  2455: TRACE03  BSR     TDISPLY        DO TRACE DISPLAY
01:0020112C 53B804DA        	  2456:          SUBQ.L  #1,TRACECNT    TRACE COUNT
01:00201130 6700F4F4        	  2457:          BEQ     MACSBUG        STOP WHEN ZERO
01:00201134 6008            	  2458:          BRA.S   UNTRACE        CONTINUE WITH TRACE
                            	  2459: 
                            	  2460: 
                            	  2461: * END UP HERE AFTER BREAKPOINTING ONE INSTRUCTION
                            	  2462: * -- PUT BP BACK IN AND CONTINUE TO RUN
                            	  2463: 
01:00201136 42B804DA        	  2464: TRACE39  CLR.L   TRACECNT
01:0020113A 613A            	  2465:          BSR.S   SWAPIN         PUT BP INTO USER'S MEMORY
01:0020113C 600E            	  2466:          BRA.S   UNSTACK        CONTINUE TO RUN
                            	  2467: 
                            	  2468: 
01:0020113E 007880000406    	  2469: UNTRACE  ORI.W   #$8000,REGSR+2 SET UP TRACE BIT!
                            	  2470:          ADDR2MEM TRACE,AV9     TAKE TRACE VECTOR
01:00201144 487AFF64        	     1M          PEA     TRACE(PC)         MOVE ADDRESS TO MEMORY; POSITION
01:00201148 21DF0024        	     2M          MOVE.L  (A7)+,AV9       INDEPENDANT = TO "MOVE.L #TRACE,AV9"
                            	  2471: 
01:0020114C 22780448        	  2472: UNSTACK  MOVE.L  REGUS,A1
01:00201150 4E61            	  2473:          MOVE.L  A1,USP         US = TARGET'S USER STACK
01:00201152 24780400        	  2474:          MOVE.L  REGPC,A2       A2 = TARGET'S PC
                            	  2475: 
                            	  2476: 
                            	  2477:          DS      0              INSURE MEMORY AT LOCATION OF PC
01:00201156 3012            	  2478:          MOVE.W  (A2),D0        * ADDR TRAP ERROR * IF NO MEMORY
                            	  2479: 
01:00201158 22780444        	  2480:          MOVE.L  REGA7,A1       A1 = TARGET SYSTEM STACK (SS)
                            	  2481: 
                            	  2482:          DS      0              INSURE MEMORY AT TARGET'S STACK
01:0020115C 230A            	  2483:          MOVE.L  A2,-(A1)       MOVE PC ONTO TARGET'S STACK
                            	  2484: 
01:0020115E 30380406        	  2485:          MOVE.W  REGSR+2,D0
01:00201162 3300            	  2486:          MOVE.W  D0,-(A1)       SR ONTO TARGET'S STACK
                            	  2487: 
01:00201164 21C904D6        	  2488:          MOVE.L  A1,TEMP        TEMP = TARGETS SS
                            	  2489: 
01:00201168 4FF80408        	  2490:          LEA     REGS,A7        A7 = POINTER TO PSUEDO REGISTERS
01:0020116C 4CDF7FFF        	  2491:          MOVEM.L (A7)+,D0-D7/A0-A6  ARM MOST OF TARGET REGISTERS
01:00201170 2E7804D6        	  2492:          MOVE.L  TEMP,A7        SS = TARGET'S
                            	  2493: 
01:00201174 4E73            	  2494:          RTE                    GO BACK TO THE USER
                            	  2495: 
                            	  2496: 
01:00201176 6114            	  2497: SWAPIN   BSR.S   SWAPOUT        MAKE SURE THEY ARE ALL OUT
                            	  2498: 
01:00201178 21F8001004D2    	  2499:          MOVE.L  AV4,SAVEAV4    SAVE VECTOR (WHOM EVER'S IT WAS)
01:0020117E 4DFA0054        	  2500:          LEA     CHKBP(PC),A6
01:00201182 21CE0010        	  2501:          MOVE.L  A6,AV4         REPLACE IT WITH THE "CHKBP" RTN
01:00201186 4DFA002A        	  2502:          LEA     SWAPIN1(PC),A6 A6 = ROUTINE ADDRESS
01:0020118A 6010            	  2503:          BRA.S   SWAP
                            	  2504: 
01:0020118C 4A7804E0        	  2505: SWAPOUT  TST.W   BPSTATUS        SEE IF OUT ALREADY
01:00201190 6740            	  2506:          BEQ.S   SWAPEND         YES...DONE
01:00201192 21F804D20010    	  2507:          MOVE.L  SAVEAV4,AV4     NO....REPLACE THE VECTOR
                            	  2508: 
01:00201198 4DFA0028        	  2509:          LEA     SWAPOUT1(PC),A6 A6 = ROUTINE ADDRESS
01:0020119C 41F80470        	  2510: SWAP     LEA     BPADD,A0       A0 = ADDRESS OF TABLE
01:002011A0 45F80494        	  2511:          LEA     BPCNT,A2       A2 = ADDRESS OF COUNTS
01:002011A4 7E09            	  2512:          MOVEQ   #9,D7          DO 9 BP
01:002011A6 47F804B8        	  2513:          LEA     BPDATA,A3      CONTENT TABLE
                            	  2514: 
01:002011AA 2850            	  2515: SWAP1    MOVE.L  (A0),A4        GET POSSIBLE ADDDRESS
01:002011AC 4A90            	  2516:          TST.L   (A0)           IS POSSIBLE ADDRESS ZERO
01:002011AE 671A            	  2517:          BEQ.S   SWAP99         ZERO MEANS NO BP DEFINED
01:002011B0 4ED6            	  2518:          JMP     (A6)           GO TO RIGHT ROUTINE
                            	  2519: 
                            	  2520: SWAPIN1
01:002011B2 3014            	  2521:          MOVE.W  (A4),D0        USER'S PROGRAM GOES INTO TABLE
                            	  2522: 
01:002011B4 3680            	  2523:          MOVE.W  D0,(A3)
01:002011B6 38BC4AFB        	  2524:          MOVE.W  #BKPOINT,(A4)  PUT BREAKPOINT IN
                            	  2525: 
01:002011BA 31FC000104E0    	  2526:          MOVE.W  #1,BPSTATUS    FLAG AS BP IN
01:002011C0 6008            	  2527:          BRA.S   SWAP99
                            	  2528: 
01:002011C2 3013            	  2529: SWAPOUT1 MOVE.W  (A3),D0        GET CONTENTS FROM TABLE
01:002011C4 3880            	  2530:          MOVE.W  D0,(A4)        PUT CONTENTS BACK INTO PROGRAM
                            	  2531: 
01:002011C6 427804E0        	  2532:          CLR.W   BPSTATUS       FLAG AS BREAKPOINTS OUT
01:002011CA 5888            	  2533: SWAP99   ADDQ.L  #4,A0          BUMP ADDRESS TABLE POINTER
01:002011CC 548B            	  2534:          ADDQ.L  #2,A3          BUMP CONTENT TABLE POINTER
01:002011CE 5387            	  2535:          SUBQ.L  #1,D7
01:002011D0 66D8            	  2536:          BNE     SWAP1
01:002011D2 4E75            	  2537: SWAPEND  RTS
                            	  2538: 
                            	  2539: *  ILLEGAL INSTRUCTION ENTRY POINT
                            	  2540: *   BREAKPOINT TEST
                            	  2541: *
01:002011D4 46FC2700        	  2542: CHKBP    MOVE.W  #$2700,SR      MASK OF INT.
                            	  2543:          SAVEREGS
01:002011D8 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002011DC 4FFA000A        	     2M          LEA     SV_000045(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002011E0 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002011E4 6000FE96        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000045     DS      0
01:002011E8 20380400        	  2544:          MOVE.L  REGPC,D0       GET PROGRAM COUNTER TO COMPARE
01:002011EC 2A40            	  2545:          MOVE.L  D0,A5          A5 = TARGET PC
01:002011EE 3215            	  2546:          MOVE.W  (A5),D1        SEE WHAT OP CODE WAS XEQ
                            	  2547: 
01:002011F0 619A            	  2548:          BSR     SWAPOUT        TAKE BREAKPOINTS OUT
                            	  2549: 
01:002011F2 0C414AFB        	  2550:          CMPI.W  #BKPOINT,D1    USED FOR BP
01:002011F6 6616            	  2551:          BNE.S   CHKBP11        NOT AT BREAKPOINT
                            	  2552: 
01:002011F8 41F80470        	  2553:          LEA     BPADD,A0       A0 = ADDRESS OF BP ADDRESSES
01:002011FC 45F80494        	  2554:          LEA     BPCNT,A2       A2 = ADDRESS OF BP COUNTS
01:00201200 7E09            	  2555:          MOVEQ   #9,D7          D7 = LOOP COUNT
                            	  2556: 
01:00201202 BBD0            	  2557: CHKBP1   CMP.L   (A0),A5        SEE IF WE ARE THERE
01:00201204 6712            	  2558:          BEQ.S   CHKBP2         AT BREAKPOINT; AT AN ADDRESS
                            	  2559: 
01:00201206 5888            	  2560:          ADDQ.L  #4,A0          BUMP BOTH POINTERS
01:00201208 588A            	  2561:          ADDQ.L  #4,A2
01:0020120A 5387            	  2562:          SUBQ.L  #1,D7
01:0020120C 66F4            	  2563:          BNE     CHKBP1
                            	  2564: 
                            	  2565: * IS NOT A BREAKPOINT; ASSUME ILLEGAL INSTRUCTION
01:0020120E 4BFA0028        	  2566: CHKBP11  LEA     MSG009(PC),A5  'ILLEGAL INSTRUCTION'
01:00201212 427804DE        	  2567:          CLR.W   TRACEON        RESET TRACE MODE
01:00201216 6010            	  2568:          BRA.S   CHKBP4
                            	  2569: 
                            	  2570: * AT BREAKPOINT...CHECK COUNT
01:00201218 2012            	  2571: CHKBP2   MOVE.L  (A2),D0        GET COUNT
01:0020121A 6708            	  2572:          BEQ.S   CHKBP3         COUNT ZERO
01:0020121C 5380            	  2573:          SUBQ.L  #1,D0          DECREMENT
01:0020121E 2480            	  2574:          MOVE.L  D0,(A2)        PUT COUNT BACK
01:00201220 6600F7F4        	  2575:          BNE     GOCMD1         COUNT NOT ZERO; KEEP GOING
                            	  2576: 
01:00201224 4BFA0026        	  2577: CHKBP3   LEA     MSG014(PC),A5  "AT BREAKPOINT"
                            	  2578: 
01:00201228 6100F2D4        	  2579: CHKBP4   BSR     FIXDCRLF
01:0020122C 61000DAC        	  2580:          BSR     OUT1CR
01:00201230 6100FAC2        	  2581:          BSR     TDISPLY        PRINT TRACE DISPLAY
01:00201234 6000F3F0        	  2582:          BRA     MACSBUG
                            	  2583: 
01:00201238 494C4C4547414C20	  2584: MSG009   DC.B    'ILLEGAL INSTRUCTION',EOT
01:00201240 494E535452554354
01:00201248 494F4E
01:0020124B 04
                            	  2585: 
                            	  2586: 
                            	  2587: 
                            	  2588: 
01:0020124C 415420425245414B	  2589: MSG014   DC.B    'AT BREAKPOINT',EOT
01:00201254 504F494E54
01:00201259 04
                            	  2590: 
                            	  2591: 
                            	  2592: 
01:0020125A 2E50432077697468	  2593: MSG020   DC.B    '.PC within "DEBUGGER"',BELL,EOT
01:00201262 696E202244454255
01:0020126A 4747455222
01:0020126F 07
01:00201270 04
                            	  2594: 
                            	  2595: 
                            	  2596: 
                            	  2597: 
                            	  2598: 
01:00201271 00              	  2599:          DC.B    0              PAD BYTE
                            	  2600: 
                            	  2601: 
                            	  2602: 
                            	  2603: 
                            	  2604: *-------------------------------------------------------------------------
                            	  2605: * File HE        HELP Command                                     12/01/81
                            	  2606: 
                            	  2607: * HELP  COMMAND
                            	  2608: *  PRINT: REGISTERS AND COMMANDS IN TABLES
                            	  2609: 
01:00201272 4BFA0066        	  2610: HECMD    LEA     MSG002(PC),A5
01:00201276 6100F272        	  2611:          BSR     FIXDATA
01:0020127A 61000D5E        	  2612:          BSR     OUT1CR         PRINT
                            	  2613: 
01:0020127E 49FAF47C        	  2614:          LEA     SOLIST(PC),A4  A4 = POINTER TO COMMAND LIST
                            	  2615: 
01:00201282 61000DFC        	  2616:          BSR     FIXBUF
01:00201286 143C0008        	  2617:          MOVE.B  #8,D2          D2 = # CMDS PER LINE
01:0020128A 321C            	  2618: HELP4    MOVE.W  (A4)+,D1       GET 2 BYTE COMMAND
01:0020128C 0C41FFFF        	  2619:          CMPI.W  #$FFFF,D1
01:00201290 6740            	  2620:          BEQ.S   HELP6          DONE PRINT LAST BUFFER
01:00201292 548C            	  2621:          ADDQ.L  #2,A4          BUMP POINTER UP BY 2
01:00201294 4A41            	  2622:          TST.W   D1             IS THE INVISIBLE INDICATOR ON?
01:00201296 6BF2            	  2623:          BMI     HELP4          YES... THEN BYPASS THIS ONE
01:00201298 3601            	  2624:          MOVE.W  D1,D3          SAVE XX FOR "XX" AND "NOXX" IN HELP
01:0020129A 02417F7F        	  2625:          ANDI.W  #$7F7F,D1      REMOVE CONTROL BITS
01:0020129E 3CC1            	  2626:          MOVE.W  D1,(A6)+       NO.... MOVE THIS COMMAND TO "PRINT" LINE
01:002012A0 2CFC20202020    	  2627:          MOVE.L  #'    ',(A6)+  MOVE BLANKS FOR SPACING
01:002012A6 6118            	  2628:          BSR.S   HELP81         PRINT THE LINE IF FULL
01:002012A8 08030007        	  2629:          BTST    #7,D3          IS "NO" OPTION SUPPORTED?
01:002012AC 6710            	  2630:          BEQ.S   EOHLOOP        NO...BYPASS THIS COMMAND, ELSE...
01:002012AE 3CFC4E4F        	  2631:          MOVE.W  #'NO',(A6)+    "NO  "   IN MSG
01:002012B2 02437F7F        	  2632:          ANDI.W  #$7F7F,D3      RESET CONTROL BITS
01:002012B6 3CC3            	  2633:          MOVE.W  D3,(A6)+       "NOCC"   IN MSG (WHERE CC=COMMAND CODE)
01:002012B8 3CFC2020        	  2634:          MOVE.W  #'  ',(A6)+    "NOCC  " IN MSG    "    "    "      "
01:002012BC 6102            	  2635:          BSR.S   HELP81         PRINT THE LINE IF FULL
01:002012BE 60CA            	  2636: EOHLOOP  BRA     HELP4          NEXT COMMAND.
                            	  2637: 
                            	  2638: *        DISPLAY LINE OF COMMANDS (IF FULL)
                            	  2639: 
01:002012C0 5302            	  2640: HELP81   SUBQ.B  #1,D2          D2 = COUNT OF COMMANDS PER LINE
01:002012C2 660C            	  2641:          BNE.S   HELP85         NOT FULL, JUST RETURN FOR MORE
01:002012C4 61000D14        	  2642:          BSR     OUT1CR         YES, THEN WRITE IT
01:002012C8 61000DB6        	  2643:          BSR     FIXBUF         SET-UP LINE FOR NEXT COMMANDS
01:002012CC 143C0008        	  2644:          MOVE.B  #8,D2          D2 = MAX NUMBER CAN BE PLACED IN LINE
01:002012D0 4E75            	  2645: HELP85   RTS
                            	  2646: 
01:002012D2 61000D06        	  2647: HELP6    BSR     OUT1CR         PRINT ANY REMAINING PORTION
                            	  2648: *        BRA     HELP1          SEE IF COMPLETE
01:002012D6 6000F34E        	  2649:          BRA     MACSBUG        HELP IS COMPLETE SO RETURN
                            	  2650: 
01:002012DA 2E5043202E535220	  2651: MSG002   DC.B    '.PC .SR .US .SS',CR,LF
01:002012E2 2E5553202E5353
01:002012E9 0D
01:002012EA 0A
                            	  2652: 
                            	  2653: 
                            	  2654: 
01:002012EB 2E4430202E443120	  2655:          DC.B    '.D0 .D1 .D2 .D3 .D4 .D5 .D6 .D7',CR,LF
01:002012F3 2E4432202E443320
01:002012FB 2E4434202E443520
01:00201303 2E4436202E4437
01:0020130A 0D
01:0020130B 0A
                            	  2656: 
                            	  2657: 
                            	  2658: 
                            	  2659: 
                            	  2660: 
                            	  2661: 
01:0020130C 2E4130202E413120	  2662:          DC.B    '.A0 .A1 .A2 .A3 .A4 .A5 .A6 .A7',CR,LF
01:00201314 2E4132202E413320
01:0020131C 2E4134202E413520
01:00201324 2E4136202E4137
01:0020132B 0D
01:0020132C 0A
                            	  2663: 
                            	  2664: 
                            	  2665: 
                            	  2666: 
                            	  2667: 
                            	  2668: 
01:0020132D 2E5230202E523120	  2669:          DC.B    '.R0 .R1 .R2 .R3 .R4 .R5 .R6',CR,LF,EOT
01:00201335 2E5232202E523320
01:0020133D 2E5234202E523520
01:00201345 2E5236
01:00201348 0D
01:00201349 0A
01:0020134A 04
                            	  2670: 
                            	  2671: 
                            	  2672: 
                            	  2673: 
                            	  2674: 
                            	  2675: 
01:0020134B 00              	  2676:          DC.B    0              PAD BYTE
                            	  2677: 
                            	  2678: 
                            	  2679: 
                            	  2680: *-------------------------------------------------------------------------
                            	  2681: * File HEX2DEC   HEX2DEC convert hex to decimal                   11/02/81
                            	  2682: 
                            	  2683: 
                            	  2684: *    CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
                            	  2685: 
01:0020134C 48E77B00        	  2686: HEX2DEC  MOVEM.L D1-D4/D6-D7,-(A7)   SAVE REGISTERS
01:00201350 2E00            	  2687:          MOVE.L  D0,D7          SAVE IT HERE
01:00201352 6A08            	  2688:          BPL.S   HX2DC
01:00201354 4487            	  2689:          NEG.L   D7             CHANGE TO POSITIVE
01:00201356 6B4E            	  2690:          BMI.S   HX2DC57        SPECIAL CASE (-0)
01:00201358 1CFC002D        	  2691:          MOVE.B  #'-',(A6)+     PUT IN NEG SIGN
01:0020135C 4244            	  2692: HX2DC    CLR.W   D4             FOR ZERO SURPRESS
01:0020135E 7C0A            	  2693:          MOVEQ   #10,D6         COUNTER
01:00201360 7401            	  2694: HX2DC0   MOVEQ   #1,D2          VALUE TO SUB
01:00201362 2206            	  2695:          MOVE.L  D6,D1          COUNTER
01:00201364 5381            	  2696:          SUBQ.L  #1,D1          ADJUST - FORM POWER OF TEN
01:00201366 671A            	  2697:          BEQ.S   HX2DC2         IF POWER IS ZERO
01:00201368 3602            	  2698: HX2DC1   MOVE.W  D2,D3          D3=LOWER WORD
01:0020136A C6FC000A        	  2699:          MULU    #10,D3
01:0020136E 4842            	  2700:          SWAP    D2             D2=UPPER WORD
01:00201370 C4FC000A        	  2701:          MULU    #10,D2
01:00201374 4843            	  2702:          SWAP    D3             ADD UPPER TO UPPER
01:00201376 D443            	  2703:          ADD.W   D3,D2
01:00201378 4842            	  2704:          SWAP    D2             PUT UPPER IN UPPER
01:0020137A 4843            	  2705:          SWAP    D3             PUT LOWER IN LOWER
01:0020137C 3403            	  2706:          MOVE.W  D3,D2          D2=UPPER & LOWER
01:0020137E 5381            	  2707:          SUBQ.L  #1,D1
01:00201380 66E6            	  2708:          BNE     HX2DC1
01:00201382 7000            	  2709: HX2DC2   CLR.L   D0             HOLDS SUB AMT
01:00201384 BE82            	  2710: HX2DC22  CMP.L   D2,D7
01:00201386 6D06            	  2711:          BLT.S   HX2DC3         IF NO MORE SUB POSSIBLE
01:00201388 5280            	  2712:          ADDQ.L  #1,D0          BUMP SUBS
01:0020138A 9E82            	  2713:          SUB.L   D2,D7          COUNT DOWN BY POWERS OF TEN
01:0020138C 60F6            	  2714:          BRA.S   HX2DC22        DO MORE
01:0020138E 4A00            	  2715: HX2DC3   TST.B   D0             ANY VALUE?
01:00201390 6604            	  2716:          BNE.S   HX2DC4
01:00201392 4A44            	  2717:          TST.W   D4             ZERO SURPRESS
01:00201394 6708            	  2718:          BEQ.S   HX2DC5
01:00201396 06000030        	  2719: HX2DC4   ADDI.B  #$30,D0        BINARY TO ASCII
01:0020139A 1CC0            	  2720:          MOVE.B  D0,(A6)+       PUT IN BUFFER
01:0020139C 1800            	  2721:          MOVE.B  D0,D4          MARK AS NON ZERO SURPRESS
01:0020139E 5386            	  2722: HX2DC5   SUBQ.L  #1,D6          NEXT POWER
01:002013A0 66BE            	  2723:          BNE     HX2DC0
01:002013A2 4A44            	  2724:          TST.W   D4             SEE IF ANYTHING PRINTED
01:002013A4 6604            	  2725:          BNE.S   HX2DC6
01:002013A6 1CFC0030        	  2726: HX2DC57  MOVE.B  #'0',(A6)+     PRINT AT LEST A ZERO
01:002013AA 4CDF00DE        	  2727: HX2DC6   MOVEM.L (A7)+,D1-D4/D6-D7   RESTORE REGISTERS
01:002013AE 4E75            	  2728:          RTS                    END OF ROUTINE
                            	  2729: 
                            	  2730: 
                            	  2731: 
                            	  2732: 
                            	  2733: *-------------------------------------------------------------------------
                            	  2734: * File LOAD      LO & VE (Load & Verify) Commands.                02/22/82
                            	  2735: 
                            	  2736: * THIS FUNCTION
                            	  2737: *   1.) READS A "S-RECORD"
                            	  2738: *   2.) FORMATS THE DATA ON THE STACK
                            	  2739: *   3.) CALCULATES THE CHECKSUM
                            	  2740: *   4.) THEN STORES (VERIFIES) THE DATA TO MEMORY
                            	  2741: *
                            	  2742: * WHEN VERIFYING RECORDS MAKE BE SKIPPED WHILE DISPLAYING THE MISS-MATCHED
                            	  2743: *  RECORDS.  DISPLAY FORMAT
                            	  2744: *   S1CCAAAA.-.-.-33.-
                            	  2745: *     CC                     BYTE COUNT
                            	  2746: *       AAAA                 ADDRESS
                            	  2747: *           .-.-.-  .-       DATA FIELDS THAT MATCHED
                            	  2748: *                 33         DATA MISS MATCH (DISPLAY DATA FROM S-RECORD)
                            	  2749: 
                            	  2750: *   ***LOAD*** AND ***VERIFY***  'S' RECORDS
                            	  2751: *
                            	  2752: *        D4 = ERROR FLAG
                            	  2753: *
                            	  2754: *        D5 = V000I0CC
                            	  2755: *             0.......  = LOAD
                            	  2756: *             8.......  = VERIFY
                            	  2757: *             ....0...  = CALCULATE CHECKSUM
                            	  2758: *             ....8...  = IGNORE CHECKSUM
                            	  2759: *             ......CC  = CHECKSUM
                            	  2760: 
01:002013B0 7A01            	  2761: VECMD    MOVEQ   #1,D5          MARK THE MODE
01:002013B2 E29D            	  2762:          ROR.L   #1,D5          D5 = $80000000
01:002013B4 6002            	  2763:          BRA.S   CHKCHKS        GO CHECK CHECKSUM OPTION
                            	  2764: 
01:002013B6 7A00            	  2765: LOCMD    CLR.L   D5             READ MODE
01:002013B8 7800            	  2766: CHKCHKS  CLR.L   D4             RESET ERROR FLAG
01:002013BA 61001184        	  2767:          BSR     SCANPORT       SET UP OUTPUT P1,P2,P3 ETC
                            	  2768: 
                            	  2769: * SEE IF CHECKSUM -C OPTION AND =SEND THIS OPTION
                            	  2770: 
01:002013BE BBCE            	  2771: READ01   CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:002013C0 643C            	  2772:          BCC.S   READ09
01:002013C2 101D            	  2773:          MOVE.B  (A5)+,D0       GET A CHARACTER
01:002013C4 0C00003D        	  2774: READ03   CMPI.B  #'=',D0        SEE IF EQUAL SIGN
01:002013C8 6730            	  2775:          BEQ.S   READ08
                            	  2776: 
01:002013CA 0C000058        	  2777:          CMPI.B  #'X',D0        SEE IF ECHO
01:002013CE 6606            	  2778:          BNE.S   READ021
01:002013D0 1A3C00FF        	  2779:          MOVE.B  #-1,D5         D5.B = ECHO TO PORT ONE
01:002013D4 60E8            	  2780:          BRA     READ01
                            	  2781: 
01:002013D6 0C00002D        	  2782: READ021  CMPI.B  #'-',D0        SEE IF MINUS SIGN
01:002013DA 66E2            	  2783:          BNE.S   READ01
01:002013DC BBCE            	  2784:          CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:002013DE 671E            	  2785:          BEQ.S   READ09
01:002013E0 101D            	  2786:          MOVE.B  (A5)+,D0       GRAB SECOND CHARACTER
01:002013E2 0C000043        	  2787:          CMPI.B  #'C',D0        SEE IF LETTER C AS IN -C
01:002013E6 66DC            	  2788:          BNE     READ03
01:002013E8 00458000        	  2789:          ORI.W   #$8000,D5      MARK AS IGNORE CHECKSUM
01:002013EC 60D0            	  2790:          BRA     READ01
                            	  2791: 
01:002013EE 7C00            	  2792: READS1   CLR.L   D6             D6 = TYPE "S1"
01:002013F0 5983            	  2793:          SUBQ.L  #4,D3          BYTE COUNT
                            	  2794: 
01:002013F2 7000            	  2795:          CLR.L   D0
01:002013F4 6100013C        	  2796:          BSR     READHEX4       FORM ADDRESS
01:002013F8 6066            	  2797:          BRA.S   READS202
                            	  2798: 
01:002013FA 61000C02        	  2799: READ08   BSR     OUTPUT2        SEND REST OF LINE(+CR) TO PORT
                            	  2800: 
01:002013FE 11C504E2        	  2801: READ09   MOVE.B  D5,ECHOPT1     MOVE ECHO FLAG
01:00201402 21F80630061C    	  2802:          MOVE.L  OUTPORT1,OUTTO SEND OUTPUT TO CONSOLE
                            	  2803: 
                            	  2804: 
01:00201408 4FF80786        	  2805: READ0    LEA     SYSTACK,A7     FORCE STACK (FOR ERROR RECOVERY)
                            	  2806: 
01:0020140C 4E54FFBC        	  2807:          LINK    A4,#-((BUFFSIZE/2)+4)  CREATE BUFFER ON STACK
                            	  2808: 
01:00201410 4205            	  2809:          CLR.B   D5             ZERO CHECKSUM
                            	  2810: 
01:00201412 61000C6C        	  2811:          BSR     FIXBUF         START OF INPUT BUFFER
01:00201416 61000F94        	  2812:          BSR     PORTIN2        GET A RECORD FROM PORT
                            	  2813: 
01:0020141A 264D            	  2814:          MOVE.L  A5,A3 SAVE     START ADDRESS OF BUFFER
01:0020141C 101B            	  2815: READ00   MOVE.B  (A3)+,D0       GET FIRST CHARACTER
01:0020141E BDCB            	  2816:          CMP.L   A3,A6
01:00201420 65E6            	  2817:          BCS     READ0          END OF BUFFER WITHOUT "S"
                            	  2818: 
01:00201422 0C000053        	  2819: READ005  CMPI.B  #'S',D0        SEE IF IT IS AN S
01:00201426 66F4            	  2820:          BNE     READ00         GET ANOTHER CHARACTER
01:00201428 610000C4        	  2821:          BSR     GETCHR         GET RECORD TYPE
01:0020142C 2C00            	  2822:          MOVE.L  D0,D6
                            	  2823: 
01:0020142E 610000B0        	  2824:          BSR     READHEX        GET CHAR COUNT
01:00201432 7600            	  2825:          CLR.L   D3
01:00201434 1600            	  2826:          MOVE.B  D0,D3
                            	  2827: 
01:00201436 0C060030        	  2828:          CMPI.B  #'0',D6        'S0'???
01:0020143A 67CC            	  2829:          BEQ     READ0          JUST IGNORE
01:0020143C 0C060031        	  2830:          CMPI.B  #'1',D6
01:00201440 67AC            	  2831:          BEQ.S   READS1         S1 RECORD TYPE (2 BYTE ADDRESS)
01:00201442 0C060038        	  2832:          CMPI.B  #'8',D6
01:00201446 670000F6        	  2833:          BEQ     READS8         S8 RECORD TYPE
01:0020144A 0C060039        	  2834:          CMPI.B  #'9',D6
01:0020144E 670000FE        	  2835:          BEQ     READS9         S9 RECORD TYPE
01:00201452 0C060032        	  2836:          CMPI.B  #'2',D6
01:00201456 66CA            	  2837:          BNE.S   READ005        KEEP LOOKING FOR "Sn"
                            	  2838: 
01:00201458 7C02            	  2839: READS2   MOVEQ   #2,D6          D6 = TYPE = S2 (3 BYTE ADDRESS)
01:0020145A 610000D0        	  2840:          BSR     READHEX6
01:0020145E 5B83            	  2841:          SUBQ.L  #5,D3          BYTE COUNT
01:00201460 2943FFBC        	  2842: READS202 MOVE.L  D3,CC(A4)
                            	  2843: 
01:00201464 2940FFC0        	  2844:          MOVE.L  D0,ADDRESS(A4) ADDRESS + OFFSET
01:00201468 45ECFFC4        	  2845:          LEA     LDATA(A4),A2   A2 = STORE TO STACK POINTER
                            	  2846: 
01:0020146C 6172            	  2847: READ100  BSR.S   READHEX        GET DATA BYTE
01:0020146E 14C0            	  2848:          MOVE.B  D0,(A2)+       MOVE DATA TO STACK
01:00201470 51CBFFFA        	  2849:          DBRA    D3,READ100
                            	  2850: 
01:00201474 4A45            	  2851:          TST.W   D5
01:00201476 6B0A            	  2852:          BMI.S   READ120        IGNORE CHECKSUM
                            	  2853: 
01:00201478 1E05            	  2854:          MOVE.B  D5,D7
01:0020147A 6164            	  2855:          BSR.S   READHEX        GET CHECKSUM FROM DATA
01:0020147C 4607            	  2856:          NOT.B   D7             CALCULATED CHECKSUM
01:0020147E B007            	  2857:          CMP.B   D7,D0
01:00201480 664C            	  2858:          BNE.S   READCKSM       ERROR
                            	  2859: READ120
                            	  2860: 
                            	  2861: 
                            	  2862: * STORE DATA (VERIFY) TO MEMORY
                            	  2863: 
01:00201482 262CFFBC        	  2864:          MOVE.L  CC(A4),D3      BYTE COUNT
01:00201486 266CFFC0        	  2865:          MOVE.L  ADDRESS(A4),A3 MEMORY STORE ADDRESS
01:0020148A 45ECFFC4        	  2866:          LEA     LDATA(A4),A2   DATA ADDRESS ON STACK
                            	  2867: 
01:0020148E 4A85            	  2868:          TST.L   D5
01:00201490 6B10            	  2869:          BMI.S   READ400        VERIFY
                            	  2870: 
01:00201492 1692            	  2871: READ130  MOVE.B  (A2),(A3)      STORE DATA
01:00201494 B70A            	  2872:          CMP.B   (A2)+,(A3)+    VERIFY DATA STORED
01:00201496 6600045A        	  2873:          BNE     SETME          DATA DID NOT STORE
01:0020149A 51CBFFF6        	  2874:          DBRA    D3,READ130
01:0020149E 6000FF68        	  2875: READ135  BRA     READ0
                            	  2876: 
                            	  2877: 
                            	  2878: ***     VERIFY
                            	  2879: 
01:002014A2 43ED0008        	  2880: READ400  LEA     8(A5),A1       A1 = PTR TO INPUT STRING
01:002014A6 D3C6            	  2881:          ADD.L   D6,A1
                            	  2882: 
01:002014A8 7E00            	  2883:          CLR.L   D7             D7 = MISS-MATCH FLAG
                            	  2884: 
01:002014AA B70A            	  2885: READ410  CMP.B   (A2)+,(A3)+    VERIFY DATA
01:002014AC 6618            	  2886:          BNE.S   READ440        MISS-MATCH
01:002014AE 12FC002E        	  2887:          MOVE.B  #'.',(A1)+     OVERLAY INPUT STRING IF OK
01:002014B2 12FC002D        	  2888:          MOVE.B  #'-',(A1)+
01:002014B6 51CBFFF2        	  2889: READ420  DBRA    D3,READ410
                            	  2890: 
01:002014BA 4A87            	  2891:          TST.L   D7
01:002014BC 67E0            	  2892:          BEQ     READ135        RECORD OK
                            	  2893: 
01:002014BE 2C49            	  2894:          MOVE.L  A1,A6          DONOT DISPLAY CHECKSUM
01:002014C0 61000B18        	  2895: READ430  BSR     OUT1CR         DISPLAY IT
01:002014C4 60D8            	  2896:          BRA     READ135        READ NEXT RECORD
                            	  2897: 
01:002014C6 7EFF            	  2898: READ440  MOVEQ   #-1,D7         D7 = Set miss-match flag
01:002014C8 78FF            	  2899:          MOVEQ   #-1,D4         D4 = Set Summary error flag
01:002014CA 5489            	  2900:          ADDQ.L  #2,A1
01:002014CC 60E8            	  2901:          BRA     READ420
                            	  2902: 
01:002014CE 78FF            	  2903: READCKSM MOVEQ   #-1,D4         D4 = Set summary error flag
01:002014D0 4BFA0051        	  2904:          LEA     MSGLOAD2(PC),A5
01:002014D4 6100F018        	  2905:          BSR     FIXDADD
01:002014D8 2007            	  2906:          MOVE.L  D7,D0
01:002014DA 610008C6        	  2907:          BSR     PNT2HX         CALCULATED CHECKSUM
01:002014DE 60E0            	  2908:          BRA     READ430
                            	  2909: 
01:002014E0 6114            	  2910: READHEX  BSR.S   GETHEXC        FORM BYTE
01:002014E2 E900            	  2911:          ASL.B   #4,D0
01:002014E4 1200            	  2912:          MOVE.B  D0,D1
01:002014E6 610E            	  2913:          BSR.S   GETHEXC
01:002014E8 8001            	  2914:          OR.B    D1,D0          D0 = BYTE FORMED
01:002014EA DA00            	  2915:          ADD.B   D0,D5          UPDATE CHECKSUM
01:002014EC 4E75            	  2916:          RTS
                            	  2917: 
01:002014EE 101B            	  2918: GETCHR   MOVE.B  (A3)+,D0
01:002014F0 BDCB            	  2919:          CMP.L   A3,A6
01:002014F2 65DA            	  2920:          BCS     READCKSM       OVERFLOW
01:002014F4 4E75            	  2921:          RTS
                            	  2922: 
01:002014F6 61F6            	  2923: GETHEXC  BSR     GETCHR
01:002014F8 04000030        	  2924:          SUBI.B  #$30,D0        SEE IF LESS THAN ZERO
01:002014FC 6D10            	  2925:          BLT.S   RHEX3
01:002014FE 0C000009        	  2926:          CMPI.B  #$09,D0        SEE IF GT 9
01:00201502 6F08            	  2927:          BLE.S   RHEX2
01:00201504 5F00            	  2928:          SUBQ.B  #7,D0          NORMALIZE $A TO 10
01:00201506 0C000010        	  2929:          CMPI.B  #$10,D0        SEE IF TOO LARGE
01:0020150A 6402            	  2930:          BCC.S   RHEX3
01:0020150C 4E75            	  2931: RHEX2    RTS
                            	  2932: 
01:0020150E 4BFA000A        	  2933: RHEX3    LEA     MSGLOAD1(PC),A5 'NOT HEX=X?'  MESSAGE
01:00201512 6100EFDA        	  2934:          BSR     FIXDADD
01:00201516 1CE3            	  2935:          MOVE.B  -(A3),(A6)+    BAD CHARACTER
01:00201518 60A6            	  2936:          BRA     READ430        GO TRY NEXT RECORD
                            	  2937: 
01:0020151A 4E4F54204845583D	  2938: MSGLOAD1 DC.B    'NOT HEX=',EOT
01:00201522 04
                            	  2939: 
                            	  2940: 
01:00201523 2043484B53554D3D	  2941: MSGLOAD2 DC.B    ' CHKSUM=',EOT
01:0020152B 04
                            	  2942: 
                            	  2943: 
01:0020152C 7000            	  2944: READHEX6 CLR.L   D0             FORM ADDRESS (3 BYTE)
01:0020152E 61B0            	  2945:          BSR     READHEX
01:00201530 E180            	  2946:          ASL.L   #8,D0
01:00201532 61AC            	  2947: READHEX4 BSR     READHEX        FORM ADDRESS (2 BYTE)
01:00201534 E180            	  2948:          ASL.L   #8,D0
01:00201536 61A8            	  2949:          BSR     READHEX
01:00201538 D0B8044C        	  2950:          ADD.L   OFFSET,D0
01:0020153C 4E75            	  2951:          RTS
                            	  2952: 
01:0020153E 61EC            	  2953: READS8   BSR     READHEX6
01:00201540 21C00400        	  2954: READS800 MOVE.L  D0,REGPC       SAVE IT IN THE USER PREG
                            	  2955: 
01:00201544 4A84            	  2956:          TST.L   D4
01:00201546 6600EF60        	  2957:          BNE     ERROR          DISPLAY "ERROR"
01:0020154A 6000F0DA        	  2958:          BRA     MACSBUG        END OF ROUTINE
                            	  2959: 
01:0020154E 7000            	  2960: READS9   CLR.L   D0
01:00201550 61E0            	  2961:          BSR     READHEX4       GET ADDRESS
01:00201552 60EC            	  2962:          BRA     READS800
                            	  2963: 
                            	  2964: 
                            	  2965: *-------------------------------------------------------------------------
                            	  2966: * File MDDI      MD[S] (Memory Display) Command                   06/16/82
                            	  2967: 
                            	  2968: *   ***MD***   MEMORY DISPLAY         ENTRY POINT
                            	  2969: *     FORMAT:  MD[S] <ADDRESS> [<COUNT>] [;DI]
                            	  2970: * 1.  IF 'S' USED IN COMMAND THEN IT WILL DUMP 16 LINES, (1 Screen), AND
                            	  2971: *     PROMPT-ENTER CR FOR 16 MORE LINES ETC OR ANY MACSBUG COMMAND.
                            	  2972: *
                            	  2973: 
                            	  2974: MDCMD    DS      0
01:00201554 61000FEA        	  2975:          BSR     SCANPORT       WHERE TO SEND OUTPUT
01:00201558 21F90000062C0620	  2976:          MOVE.L  INPORT1.L,INFROM ONLY ALLOW INPUT FROM PORT1
                            	  2977: 
01:00201560 7CFF            	  2978:          MOVEQ   #-1,D6         D6 = HOW MANY LINES PER PAGE
                            	  2979: 
01:00201562 97CB            	  2980:          SUB.L   A3,A3          A4 = DEFAULT ZERO  START
01:00201564 284B            	  2981:          MOVE.L  A3,A4          A3 = END ADDR
                            	  2982: 
01:00201566 7E00            	  2983:          CLR.L   D7             D7 = DO NOT DISASSEMBLE
01:00201568 244D            	  2984:          MOVE.L  A5,A2
01:0020156A BDCA            	  2985: PRINT8   CMP.L   A2,A6          LOOK FOR OPTIONS
01:0020156C 651A            	  2986:          BCS.S   PRINTDI        NO  OPTIONS
01:0020156E 0C1A003B        	  2987:          CMPI.B  #';',(A2)+
01:00201572 66F6            	  2988:          BNE     PRINT8
                            	  2989: 
01:00201574 2C4A            	  2990:          MOVE.L  A2,A6
01:00201576 538E            	  2991:          SUBQ.L  #1,A6          A6 = POINTER TO ;
                            	  2992: 
01:00201578 0C1A0044        	  2993:          CMPI.B  #'D',(A2)+
01:0020157C 6600EF30        	  2994: PRINTMB  BNE     SYNTAX         COMMAND SYNTAX ERROR
01:00201580 0C1A0049        	  2995:          CMPI.B  #'I',(A2)+
01:00201584 66F6            	  2996:          BNE     PRINTMB
01:00201586 7EFF            	  2997:          MOVEQ   #-1,D7         DISASSEMBLE OPTION
                            	  2998: PRINTDI
                            	  2999: 
                            	  3000: 
                            	  3001: * LOOK FOR "S" IN COMMAND
01:00201588 1015            	  3002:          MOVE.B  (A5),D0
01:0020158A 0C000053        	  3003:          CMPI.B  #'S',D0
01:0020158E 6608            	  3004:          BNE.S   PRINT5         NO "S" IN COMMAND
01:00201590 528D            	  3005:          ADDQ.L  #1,A5          MOVE PAST "S"
                            	  3006: 
01:00201592 7C10            	  3007:          MOVEQ   #16,D6         DO 16 LINES AT A TIME
01:00201594 97CB            	  3008:          SUB.L   A3,A3
01:00201596 538B            	  3009:          SUBQ.L  #1,A3          MAX END ADDRESS
                            	  3010: 
01:00201598 41FA001A        	  3011: PRINT5   LEA     PRINT7(PC),A0  WHERE TO GO IF NO PARAMETERS
01:0020159C 610008C0        	  3012:          BSR     FNEXTF         FIND NEXT FIELD
01:002015A0 6100F988        	  3013:          BSR     GETA
01:002015A4 2840            	  3014:          MOVE.L  D0,A4          A4 = GET ADDRESS
                            	  3015: 
01:002015A6 610008B6        	  3016:          BSR     FNEXTF
01:002015AA 61000906        	  3017:          BSR     GETEXP         D0 = GET COUNT
01:002015AE D08C            	  3018:          ADD.L   A4,D0          END=START+COUNT-1
01:002015B0 5380            	  3019:          SUBQ.L  #1,D0          BACK OFF ONE
01:002015B2 2640            	  3020:          MOVE.L  D0,A3          A3 = END ADDRESS
                            	  3021: 
01:002015B4 4A87            	  3022: PRINT7   TST.L   D7
01:002015B6 672A            	  3023:          BEQ.S   PUTADR         NOT DISASSEMBLE
                            	  3024: 
01:002015B8 61000AC6        	  3025: PRINTDI5 BSR     FIXBUF         ;DI OPTION
01:002015BC 48E70310        	  3026:          MOVEM.L A3/D6-D7,-(A7)
01:002015C0 4CD40007        	  3027:          MOVEM.L (A4),D0-D2     D0-D2 = DATA TO DISASSEMBLE
01:002015C4 6100288A        	  3028:          BSR     DCODE68K       DISASSEMBLE
01:002015C8 61000A10        	  3029:          BSR     OUT1CR
01:002015CC 4CDF08C0        	  3030:          MOVEM.L (A7)+,A3/D6-D7
                            	  3031: 
01:002015D0 5386            	  3032:          SUBQ.L  #1,D6
01:002015D2 676C            	  3033:          BEQ.S   PRINT9         'MDS' COMMAND
                            	  3034: 
01:002015D4 B7CC            	  3035:          CMP.L   A4,A3          END CHECK
01:002015D6 64E0            	  3036:          BCC     PRINTDI5
01:002015D8 6066            	  3037:          BRA.S   PRINT9
                            	  3038: 
01:002015DA 7C10            	  3039: PRINT3   MOVEQ   #16,D6         D6 = LINE BLOCK COUNT
01:002015DC 97CB            	  3040:          SUB.L   A3,A3
01:002015DE 538B            	  3041:          SUBQ.L  #1,A3          A3 = MAX END ADDRESS
01:002015E0 60D2            	  3042:          BRA     PRINT7
                            	  3043: 
                            	  3044: * START A NEW  LINE
                            	  3045: *
01:002015E2 61000A9C        	  3046: PUTADR   BSR     FIXBUF         SET UP OUTPUT BUFFER
01:002015E6 200C            	  3047:          MOVE.L  A4,D0          CURRENT LINE ADDRESS
01:002015E8 610007D4        	  3048:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:002015EC 1CFC0020        	  3049:          MOVE.B  #$20,(A6)+     FORMAT  SPACE
01:002015F0 204C            	  3050:          MOVE.L  A4,A0          A0 IS SCANNING ADDRESS
01:002015F2 7610            	  3051:          MOVEQ   #$10,D3        SET UP COUNTER FOR LOOP
                            	  3052: 
01:002015F4 1018            	  3053: NXTBP    MOVE.B  (A0)+,D0       GET BYTE TO PRINT
01:002015F6 610007AA        	  3054:          BSR     PNT2HX         PRINT IT
01:002015FA 1CFC0020        	  3055:          MOVE.B  #$20,(A6)+     SPACE BETWEEN EACH HEX
                            	  3056: 
01:002015FE 0C030009        	  3057:          CMPI.B  #9,D3          HALF LINE SPACING
01:00201602 6604            	  3058:          BNE.S   NXTBP3
01:00201604 1CFC0020        	  3059:          MOVE.B  #$20,(A6)+
                            	  3060: NXTBP3
                            	  3061: 
01:00201608 5383            	  3062:          SUBQ.L  #1,D3
01:0020160A 66E8            	  3063:          BNE     NXTBP          LOOP TILL D3 IS ZERO
                            	  3064: 
01:0020160C 1CFC0020        	  3065:          MOVE.B  #$20,(A6)+     MOVE A SPACE
01:00201610 204C            	  3066:          MOVE.L  A4,A0          RELOAD SCANNER FOR ASCII PRINTS
01:00201612 7610            	  3067:          MOVEQ   #$10,D3        RELOAD COUNTER
                            	  3068: 
01:00201614 1018            	  3069: NXTCHR   MOVE.B  (A0)+,D0       FETCH BYTE
01:00201616 0200007F        	  3070:          ANDI.B  #$7F,D0        REMOVE HIGH ORDER BIT, (ASCII ONLY USES 7 BITS)
01:0020161A 0C000020        	  3071:          CMPI.B  #$20,D0        SEE IF IT IS CONTROL CHAR
01:0020161E 6D06            	  3072:          BLT.S   NOTCHR         BYPASS IF IT IS... ELSE
01:00201620 0C00007F        	  3073:          CMPI.B  #$7F,D0        IS IT A "7F"?    (CAUSES PRINTER PROBLEM)
01:00201624 6D04            	  3074:          BLT.S   PUTCHR         NO... THEN PRINT IT, ELSE SUBSTITUTE "."
01:00201626 103C002E        	  3075: NOTCHR   MOVE.B  #$2E,D0        CHANGE UNPRINTABLE TO PERIOD
                            	  3076: 
01:0020162A 1CC0            	  3077: PUTCHR   MOVE.B  D0,(A6)+       MOVE "EDITTED" CHARACTER TO PRINT LINE
01:0020162C 5383            	  3078:          SUBQ.L  #1,D3          LOOP AROUND FOR NEXT CHAR
01:0020162E 66E4            	  3079:          BNE     NXTCHR         ANY LEFT?
01:00201630 610009A8        	  3080:          BSR     OUT1CR         NO... THEN PRINT THE COMPLETE LINE
01:00201634 508C            	  3081:          ADDQ.L  #$08,A4        UPDATE STARTING ADDRESS OF NEXT ADDRESS
01:00201636 508C            	  3082:          ADDQ.L  #$08,A4        ........
01:00201638 B7CC            	  3083:          CMP.L   A4,A3          DOES NEW LINE START PAST END
01:0020163A 6504            	  3084:          BCS.S   PRINT9         SEE IF STILL GOING
01:0020163C 5386            	  3085:          SUBQ.L  #1,D6          DECR THE COUNTER
01:0020163E 66A2            	  3086:          BNE     PUTADR         DO ANOTHER LINE
                            	  3087: 
01:00201640 4BFAF0AC        	  3088: PRINT9   LEA     MSG001(PC),A5  SET UP FOR PROMPT
01:00201644 6100EEA4        	  3089:          BSR     FIXDATA
01:00201648 1CFC003E        	  3090:          MOVE.B  #'>',(A6)+     PROMPT SAME AS MACSBUG
01:0020164C 1CFC0020        	  3091:          MOVE.B  #BLANK,(A6)+
01:00201650 610009A2        	  3092:          BSR     OUTPUT         PRINT IT
                            	  3093: 
01:00201654 61000A2A        	  3094:          BSR     FIXBUF         RESET BUFFER
01:00201658 61000A2E        	  3095:          BSR     PORTIN1        TAKE IN INPUT
01:0020165C BBCE            	  3096:          CMP.L   A6,A5          SEE IF ANYTHING ENTERED
01:0020165E 6700FF7A        	  3097:          BEQ     PRINT3         NOTHING ENTERED; DO 16 MORE LINES
01:00201662 42B8061C        	  3098:          CLR.L   OUTTO          *
01:00201666 6000F000        	  3099:          BRA     DECODE6        GO MAKE SURE 2ND DIGIT IS BLANK
                            	  3100: 
                            	  3101: 
                            	  3102: 
                            	  3103: 
                            	  3104: *-------------------------------------------------------------------------
                            	  3105: * File MMDI      Modify Memory command WITH asm/disasm            11/27/81
                            	  3106: 
                            	  3107: * MODIFY MEMORY
                            	  3108: *  COMMON REGISTER USAGE
                            	  3109: *   A6  IO BUFFER POINTER  END
                            	  3110: *   A5  IO BUFFER POINTER  START
                            	  3111: *   A4  ADDRESS TO MODIFY
                            	  3112: *   A3
                            	  3113: *   A2
                            	  3114: *   A1
                            	  3115: *   A0
                            	  3116: *   D7  DATA READ (DATA STORED)
                            	  3117: *   D6  SIZE  1/2/4 BYTES  (ASM/DISASM 2 - 10 BYTES)
                            	  3118: *   D5  OVERRIDE BYTE (80XX=NON VERIFY)  (XX80=BYTE SIZE)
                            	  3119: *
                            	  3120: * ;OPTIONS
                            	  3121: *   ;W  WORD
                            	  3122: *   ;L  LONG WORD (4 BYTES)
                            	  3123: *   ;DI DISASSEMBLE
                            	  3124: *     ;O  ODD ADDRESSES ONLY
                            	  3125: *     ;V  EVEN ADDRESSES ONLY
                            	  3126: *       ;N  NON-VERIFY
                            	  3127: *
                            	  3128: 
01:0020166A 61000810        	  3129: MMDI     BSR     CKWADR
01:0020166E 61000812        	  3130:          BSR     CKADDR
01:00201672 7C00            	  3131:          CLR.L   D6             SIZE = 0
01:00201674 D9C6            	  3132: MMDI22   ADD.L   D6,A4          PC = PC + SIZE
01:00201676 61000A08        	  3133: MMDI23   BSR     FIXBUF         A5 & A6 = POINTER TO BUFFER
                            	  3134: 
                            	  3135: *                  ENTRY
                            	  3136: *                   A4 = PROGRAM COUNTER
                            	  3137: *                   A5 = POINTER TO STORE DISASSEMBLED LINE
01:0020167A 4CD40007        	  3138:          MOVEM.L   (A4),D0-D2          DATA TO DISASSEMBLE
01:0020167E 610027D0        	  3139:          BSR       DCODE68K
                            	  3140: *                  RETURN
                            	  3141: *                   A4 = NEW PROGRAM COUNTER
                            	  3142: *                   A5 = PTR START BUFFER
                            	  3143: *                   A6 = PRT END BUFFER
                            	  3144: *                   D6 = NUMBER OF BYTES DISASSEMBLED
                            	  3145: 
01:00201682 1CFC003F        	  3146:          MOVE.B  #'?',(A6)+
01:00201686 6100096C        	  3147:          BSR     OUTPUT
                            	  3148: 
01:0020168A 610009F4        	  3149: MMDI31   BSR     FIXBUF
01:0020168E 61000A0A        	  3150:          BSR     PORTIN1N       INPUT ASSEMBLY SOURCE (NO LINE FEED)
01:00201692 BDCD            	  3151:          CMP.L   A5,A6
01:00201694 6606            	  3152:          BNE.S   MMDI34
01:00201696 61000942        	  3153:          BSR     OUT1CR         NOTHING INPUT; OUTPUT LINE FEED
01:0020169A 60DA            	  3154:          BRA     MMDI23
                            	  3155: 
01:0020169C 99C6            	  3156: MMDI34   SUB.L   D6,A4          BACKUP PC
                            	  3157: 
01:0020169E 0C15002E        	  3158:          CMPI.B  #'.',(A5)
01:002016A2 670001DC        	  3159:          BEQ     MM905          CLOSE
                            	  3160: 
01:002016A6 47F80797        	  3161:          LEA     SYSTACK+17,A3  STORE BUFFER
                            	  3162: 
                            	  3163: *                  A3 = STORE POINTER
                            	  3164: *                  A4 = PROGRAM COUNTER
                            	  3165: *                  A5 = POINTER TO DATA TO ASSEMBLE
                            	  3166: *                  A6 = POINTER TO END OF SOURCE DATA
                            	  3167: 
01:002016AA 610015CA        	  3168:          BSR     CODE68K        ASSEMBLE
                            	  3169: 
                            	  3170: *                  A3 = POINTER TO LINE ASSEMBLED
                            	  3171: *                  A4 = PROGRAM COUNTER
                            	  3172: *                  A6 = POINTER END OF LINE ASSEMBLED
                            	  3173: *                  D0-D2 = DATA ASSEMBLED
                            	  3174: *                  D6 = NUMBER OF BYTES ASSEMBLED
                            	  3175: *                  D7 = ERROR FLAG & POSITION OF ERROR
                            	  3176: 
01:002016AE 2A4B            	  3177:          MOVE.L  A3,A5
01:002016B0 47EB004E        	  3178:          ADD.L   #78,A3         A3 = MAX LINE
01:002016B4 B7CE            	  3179: MMDI26   CMP.L   A6,A3
01:002016B6 6506            	  3180:          BCS.S   MMDI27
01:002016B8 1CFC0020        	  3181:          MOVE.B  #BLANK,(A6)+   SPACE FILL LINE
01:002016BC 60F6            	  3182:          BRA     MMDI26
01:002016BE 6100091A        	  3183: MMDI27   BSR     OUT1CR         PRINT LINE JUST ENTERED
                            	  3184: 
01:002016C2 4A07            	  3185:          TST.B   D7
01:002016C4 6620            	  3186:          BNE.S   MMDI30         ERROR; DON'T STORE DATA
                            	  3187: 
01:002016C6 45F8078A        	  3188:          LEA     SYSTACK+4,A2   A2 = TEMP AREA
01:002016CA 48E2E000        	  3189:          MOVEM.L D0/D1/D2,-(A2) STORE DATA
01:002016CE 2206            	  3190:          MOVE.L  D6,D1          D1 = NUMBER OF BYTES TO STORE
01:002016D0 5381            	  3191:          SUBQ.L  #1,D1
01:002016D2 224C            	  3192:          MOVE.L  A4,A1          A1 = DATA STORE POINTER
01:002016D4 101A            	  3193: MMDI29   MOVE.B  (A2)+,D0
01:002016D6 1280            	  3194:          MOVE.B  D0,(A1)
01:002016D8 1419            	  3195:          MOVE.B  (A1)+,D2       INSURE DATA STORED
01:002016DA B400            	  3196:          CMP.B   D0,D2
01:002016DC 66000196        	  3197:          BNE     MM90
01:002016E0 51C9FFF2        	  3198:          DBRA    D1,MMDI29
01:002016E4 608E            	  3199:          BRA     MMDI22
                            	  3200: 
01:002016E6 61000998        	  3201: MMDI30   BSR     FIXBUF
01:002016EA 1CFC0020        	  3202: MMDI44   MOVE.B  #BLANK,(A6)+   SPACES
01:002016EE 51CFFFFA        	  3203:          DBRA    D7,MMDI44
                            	  3204: 
01:002016F2 1D7C0058FFFF    	  3205:          MOVE.B  #'X',-1(A6)    X UNDER ERROR
01:002016F8 1CFC003F        	  3206:          MOVE.B  #'?',(A6)+     ? ALLOW REINPUT
01:002016FC 610008F6        	  3207:          BSR     OUTPUT
01:00201700 6088            	  3208:          BRA     MMDI31
                            	  3209: 
                            	  3210: 
                            	  3211: MCMD     DS      0              "M" Alias for "MM" Command
                            	  3212: MMCMD    DS      0              "MM" Command -Memory Modify-
01:00201702 41FAEDAA        	  3213:          LEA     SYNTAX(PC),A0  A0=ERROR RETURN
01:00201706 61000756        	  3214:          BSR     FNEXTF
01:0020170A 6100F81E        	  3215:          BSR     GETA
01:0020170E 2840            	  3216:          MOVE.L  D0,A4          A4= ADDRESS OF DATA
01:00201710 7C01            	  3217:          MOVEQ   #1,D6          SIZE = BYTE
01:00201712 7A00            	  3218:          CLR.L   D5             NO OVERRIDE
                            	  3219: 
01:00201714 BDCD            	  3220: MM05     CMP.L   A5,A6
01:00201716 6566            	  3221:          BCS.S   MM10           AT END OF BUFFER
                            	  3222: 
                            	  3223: * LOOK FOR ;OPTIONS
01:00201718 101D            	  3224:          MOVE.B  (A5)+,D0
01:0020171A 0C00003B        	  3225:          CMPI.B  #';',D0
01:0020171E 66F4            	  3226:          BNE     MM05           IGNORE NOT ;
                            	  3227: 
01:00201720 101D            	  3228:          MOVE.B  (A5)+,D0       GET NEXT CHAR
01:00201722 0C000044        	  3229:          CMPI.B  #'D',D0
01:00201726 660A            	  3230:          BNE.S   MM045
                            	  3231: 
01:00201728 0C1D0049        	  3232:          CMPI.B  #'I',(A5)+     DISSAMBLY OPTION
01:0020172C 66E6            	  3233:          BNE     MM05
01:0020172E 6000FF3A        	  3234:          BRA     MMDI
                            	  3235: 
01:00201732 0C000057        	  3236: MM045    CMPI.B  #'W',D0
01:00201736 6742            	  3237:          BEQ.S   MM065          ;W   D6=2
                            	  3238: 
01:00201738 0C00004C        	  3239:          CMPI.B  #'L',D0
01:0020173C 6608            	  3240:          BNE.S   MM054
01:0020173E 1C3C0004        	  3241:          MOVE.B  #4,D6          ;L   D6=4
01:00201742 4205            	  3242:          CLR.B   D5             RESET BYTE OVERRIDE
01:00201744 60CE            	  3243:          BRA     MM05
                            	  3244: 
01:00201746 0C00004E        	  3245: MM054    CMPI.B  #'N',D0
01:0020174A 6606            	  3246:          BNE.S   MM056
01:0020174C 00458000        	  3247:          ORI.W   #$8000,D5      ;N  D5=$8000
01:00201750 60C2            	  3248:          BRA     MM05
                            	  3249: 
01:00201752 0C00004F        	  3250: MM056    CMPI.B  #'O',D0
01:00201756 6608            	  3251:          BNE.S   MM058
01:00201758 200C            	  3252:          MOVE.L  A4,D0          ;O
01:0020175A 00000001        	  3253:          ORI.B   #1,D0          FORCE ODD ADDRESS
01:0020175E 600E            	  3254:          BRA.S   MM060
                            	  3255: 
01:00201760 0C000056        	  3256: MM058    CMPI.B  #'V',D0
01:00201764 6600ED48        	  3257:          BNE     SYNTAX         ERROR
01:00201768 200C            	  3258:          MOVE.L  A4,D0          ;V
01:0020176A 020000FE        	  3259:          ANDI.B  #$FE,D0        FORCE EVEN ADDRESS
01:0020176E 2840            	  3260: MM060    MOVE.L  D0,A4
01:00201770 00050080        	  3261:          ORI.B   #$80,D5        BYTE OVERRIDE
01:00201774 1C3C0002        	  3262: MM064    MOVE.B  #2,D6          SIZE = WORD (2 BYTES)
01:00201778 609A            	  3263:          BRA     MM05
                            	  3264: 
01:0020177A 4205            	  3265: MM065    CLR.B   D5             RESET BYTE OVERRIDE
01:0020177C 60F6            	  3266:          BRA     MM064
                            	  3267: 
                            	  3268: * FORMAT ADDRESS FOR PRINTING
01:0020177E 200C            	  3269: MM10     MOVE.L  A4,D0
01:00201780 0C060001        	  3270:          CMPI.B  #1,D6
01:00201784 6708            	  3271:          BEQ.S   MM11           "BYTE"
01:00201786 4A05            	  3272:          TST.B   D5
01:00201788 6B04            	  3273:          BMI.S   MM11           BYTE OVERRIDE
01:0020178A 610006F0        	  3274:          BSR     CKWADR         CHK ALLIGNMENT
01:0020178E 610006F2        	  3275: MM11     BSR     CKADDR         *
01:00201792 610008EC        	  3276:          BSR     FIXBUF
01:00201796 61000626        	  3277:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:0020179A 1CFC0020        	  3278:          MOVE.B  #BLANK,(A6)+   SPACE
                            	  3279: 
01:0020179E 4A45            	  3280:          TST.W   D5
01:002017A0 6B2C            	  3281:          BMI.S   MM18           NON-VERIFY (DON'T READ MEMORY)
                            	  3282: 
                            	  3283: * READ DATA FROM MEMORY & FORMAT IT
01:002017A2 4A05            	  3284:          TST.B   D5
01:002017A4 6B0C            	  3285:          BMI.S   MM12           BYTE OVERRIDE
                            	  3286: 
01:002017A6 0C060002        	  3287:          CMPI.B  #2,D6
01:002017AA 6710            	  3288:          BEQ.S   MM14           WORD
01:002017AC 0C060004        	  3289:          CMPI.B  #4,D6
01:002017B0 6714            	  3290:          BEQ.S   MM16           LONG WORD
                            	  3291: 
                            	  3292: * BYTE
                            	  3293: MM12
01:002017B2 1E14            	  3294:          MOVE.B  (A4),D7        D7 = DATA READ
01:002017B4 2007            	  3295:          MOVE.L  D7,D0
01:002017B6 610005EA        	  3296:          BSR     PNT2HX         FORMAT BYTE
01:002017BA 6012            	  3297:          BRA.S   MM18
                            	  3298: 
                            	  3299: * WORD
                            	  3300: MM14
01:002017BC 3E14            	  3301:          MOVE.W  (A4),D7
01:002017BE 2007            	  3302:          MOVE.L  D7,D0
01:002017C0 610005D8        	  3303:          BSR     PNT4HX         FORMAT WORD
01:002017C4 6008            	  3304:          BRA.S   MM18
                            	  3305: 
                            	  3306: * LONG WORD
                            	  3307: MM16
01:002017C6 2E14            	  3308:          MOVE.L  (A4),D7
01:002017C8 2007            	  3309:          MOVE.L  D7,D0
01:002017CA 610005C0        	  3310:          BSR     PNT8HX         FORMAT LONG WORD
                            	  3311: 
01:002017CE 1CFC0020        	  3312: MM18     MOVE.B  #BLANK,(A6)+   SPACE
01:002017D2 1CFC003F        	  3313:          MOVE.B  #'?',(A6)+
01:002017D6 6100081C        	  3314:          BSR     OUTPUT
                            	  3315: 
                            	  3316: * READ USER INPUT
                            	  3317: *  [DATA] (CR)   NEXT
                            	  3318: *           ^    LAST
                            	  3319: *           =    SAME
                            	  3320: *           .    EXIT
                            	  3321: 
01:002017DA 610008A4        	  3322:          BSR     FIXBUF
01:002017DE 610008A8        	  3323:          BSR     PORTIN1
01:002017E2 BDCD            	  3324:          CMP.L   A5,A6
01:002017E4 67000082        	  3325:          BEQ     MM50           NO DATA (CR ONLY)
                            	  3326: 
01:002017E8 41FA005A        	  3327:          LEA     MM40(PC),A0    A0 = NO PARAMETER RETURN
01:002017EC 61000670        	  3328:          BSR     FNEXTF         FIND NEXT FIELD
                            	  3329: 
                            	  3330: * IF = ^ OR .  TAKE ACTION
01:002017F0 1015            	  3331:          MOVE.B  (A5),D0
01:002017F2 0C00003D        	  3332:          CMPI.B  #'=',D0
01:002017F6 6786            	  3333:          BEQ     MM10
01:002017F8 0C00002E        	  3334:          CMPI.B  #'.',D0
01:002017FC 6700EE28        	  3335:          BEQ     MACSBUG
01:00201800 0C00005E        	  3336:          CMPI.B  #'^',D0
01:00201804 6768            	  3337:          BEQ.S   MM60
                            	  3338: 
01:00201806 610006AA        	  3339:          BSR     GETEXP         GET DATA
01:0020180A 2E00            	  3340:          MOVE.L  D0,D7          D7=DATA STORED
                            	  3341: 
                            	  3342: * WE HAVE DATA; STORE IT
01:0020180C 4A05            	  3343:          TST.B   D5
01:0020180E 6B0C            	  3344:          BMI.S   MM22           BYTE OVERRIDE
                            	  3345: 
01:00201810 0C060002        	  3346:          CMPI.B  #2,D6
01:00201814 6714            	  3347:          BEQ.S   MM24           WORD
01:00201816 0C060004        	  3348:          CMPI.B  #4,D6
01:0020181A 671C            	  3349:          BEQ.S   MM26           LONG WORD
                            	  3350: 
                            	  3351: * BYTE
                            	  3352: MM22
01:0020181C 1880            	  3353:          MOVE.B  D0,(A4)        STORE DATA
01:0020181E 4A45            	  3354:          TST.W   D5
01:00201820 6B22            	  3355:          BMI.S   MM40           NO-VERIFY
01:00201822 1014            	  3356:          MOVE.B  (A4),D0
01:00201824 B007            	  3357:          CMP.B   D7,D0
01:00201826 664C            	  3358:          BNE.S   MM90           NO MATCH
01:00201828 601A            	  3359:          BRA.S   MM40
                            	  3360: 
                            	  3361: * WORD
                            	  3362: MM24
01:0020182A 3880            	  3363:          MOVE.W  D0,(A4)        STORE
01:0020182C 4A45            	  3364:          TST.W   D5
01:0020182E 6B14            	  3365:          BMI.S   MM40           DO NOT VERIFY
01:00201830 3014            	  3366:          MOVE.W  (A4),D0
01:00201832 B047            	  3367:          CMP.W   D7,D0
01:00201834 663E            	  3368:          BNE.S   MM90           NO MATCH
01:00201836 600C            	  3369:          BRA.S   MM40
                            	  3370: 
                            	  3371: * LONG WORD
                            	  3372: MM26
01:00201838 2880            	  3373:          MOVE.L  D0,(A4)
01:0020183A 4A45            	  3374:          TST.W   D5
01:0020183C 6B06            	  3375:          BMI.S   MM40           DO NOT VERIFY
01:0020183E 2014            	  3376:          MOVE.L  (A4),D0
01:00201840 B087            	  3377:          CMP.L   D7,D0
01:00201842 6630            	  3378:          BNE.S   MM90           NO MATCH
                            	  3379: 
                            	  3380: * LOOK FOR  . = ^
01:00201844 1015            	  3381: MM40     MOVE.B  (A5),D0
01:00201846 0C00002E        	  3382:          CMPI.B  #'.',D0
01:0020184A 6700EDDA        	  3383:          BEQ     MACSBUG        DONE
01:0020184E 0C00005E        	  3384:          CMPI.B  #'^',D0
01:00201852 671A            	  3385:          BEQ.S   MM60           BACKUP ADDRESS
01:00201854 0C00003D        	  3386:          CMPI.B  #'=',D0
01:00201858 6700FF24        	  3387:          BEQ     MM10           ADDRESS STAYS THE SAME
01:0020185C 0C000020        	  3388:          CMPI.B  #BLANK,D0
01:00201860 6706            	  3389:          BEQ.S   MM50
01:00201862 BDCD            	  3390:          CMP.L   A5,A6
01:00201864 6600EC48        	  3391:          BNE     SYNTAX         ERROR
                            	  3392: 
                            	  3393: * ADDRESS LOW TO HIGH
01:00201868 D9C6            	  3394: MM50     ADD.L   D6,A4
01:0020186A 6000FF12        	  3395:          BRA     MM10
                            	  3396: 
                            	  3397: * ADDRESS HIGH TO LOW
01:0020186E 99C6            	  3398: MM60     SUB.L   D6,A4
01:00201870 6000FF0C        	  3399:          BRA     MM10
                            	  3400: 
01:00201874 4BFA00B6        	  3401: MM90     LEA     MSG017(PC),A5  'DATA DID NOT STORE'
01:00201878 6100EC84        	  3402: MM95     BSR     FIXDCRLF
01:0020187C 6000EC22        	  3403:          BRA     MSG
                            	  3404: 
01:00201880 4BFAEC0D        	  3405: MM905    LEA     MSGEOT(PC),A5
01:00201884 60F2            	  3406:          BRA     MM95
                            	  3407: 
                            	  3408: 
                            	  3409: 
                            	  3410: 
                            	  3411: *-------------------------------------------------------------------------
                            	  3412: * File MS        Memory set command                               11/02/81
                            	  3413: 
                            	  3414: *    ***MS***   MEMORY SET
                            	  3415: *     FORMAT: MS  ADDRESS HEX HEX,HEX,'ASCII'  ETC.
                            	  3416: *     COMMAS OR SPACES BETWEEN FIELDS
                            	  3417: *     FIELDS ARE SIZE ADJUSTED (STORES UP TO 4 BYTES)
                            	  3418: *     ASCII ENCLOSED IN SINGLE QUOTES-ANY LENGTH
                            	  3419: 
01:00201886 41FAEC26        	  3420: MSCMD    LEA     SYNTAX(PC),A0  IF NO PARAMETERS
01:0020188A 610005D2        	  3421:          BSR     FNEXTF         FIND NEXT FIELD
01:0020188E 6100F69A        	  3422:          BSR     GETA           GET ADDRESS
01:00201892 610005EE        	  3423:          BSR     CKADDR         CHECK VALID ADDRESS
                            	  3424: 
01:00201896 2240            	  3425:          MOVE.L  D0,A1          A1=START (OPEN) ADDRESS
01:00201898 41FAED8C        	  3426: SETM1    LEA     MACSBUG(PC),A0 IF NO PARAMTER
01:0020189C 610005C0        	  3427:          BSR     FNEXTF         FIND NEXT FIELD
01:002018A0 284D            	  3428:          MOVE.L  A5,A4          SAVE ADDRESS OF PARAMTER
01:002018A2 1015            	  3429:          MOVE.B  (A5),D0        CHECK OUT NEXT CHARACTER
01:002018A4 0C000027        	  3430:          CMPI.B  #$27,D0        SEE IF IT IS QUOTE MARK
01:002018A8 6730            	  3431:          BEQ.S   SETM5          SPECIAL ROUTINE
01:002018AA 0C00004E        	  3432:          CMPI.B  #'N',D0        SEE IF NEXT LINE FEATURE
01:002018AE 674E            	  3433:          BEQ.S   SETM7
01:002018B0 6100062E        	  3434:          BSR     GETNUMA        GET THE DATA
01:002018B4 2649            	  3435:          MOVE.L  A1,A3          ADDRESS
01:002018B6 220D            	  3436:          MOVE.L  A5,D1          COMPUTE BYTES OF DATA
01:002018B8 928C            	  3437:          SUB.L   A4,D1          LEN=END-START
01:002018BA E281            	  3438:          ASR.L   #1,D1          BYTES=CHAR/2
01:002018BC 6402            	  3439:          BCC.S   SETM3          TAKE CARE OF ODD CHARACTER
01:002018BE 5281            	  3440:          ADDQ.L  #1,D1          WHOLE NUMBER OF BYTES
01:002018C0 2401            	  3441: SETM3    MOVE.L  D1,D2          D1 SCANS DOWN
01:002018C2 5382            	  3442:          SUBQ.L  #1,D2          KNOCK IT DOWN TO INDEX
01:002018C4 17802000        	  3443:          MOVE.B  D0,0(A3,D2)    INDEXED BECAUSE BACKWARD
                            	  3444: 
01:002018C8 16332000        	  3445:          MOVE.B  0(A3,D2),D3    REREAD TO CHECK IF STORED OK
                            	  3446: 
01:002018CC B600            	  3447:          CMP.B   D0,D3          ARE SAME?
01:002018CE 6622            	  3448:          BNE.S   SETME          'DATA DID NOT STORE'
                            	  3449: 
01:002018D0 E080            	  3450:          ASR.L   #8,D0          SHIFT ONE BYTE
01:002018D2 5289            	  3451:          ADDQ.L  #1,A1          BUMP ADDRESS
01:002018D4 5381            	  3452:          SUBQ.L  #1,D1
01:002018D6 66E8            	  3453:          BNE     SETM3
01:002018D8 60BE            	  3454:          BRA.S   SETM1          GO DO NEXT DATA
                            	  3455: 
                            	  3456: *  DATA IN IN ASCII STRING
01:002018DA 528D            	  3457: SETM5    ADDQ.L  #1,A5          GET PAST QUOTE MARK
01:002018DC BBCE            	  3458: SETM6    CMP.L   A6,A5          SEE IF END OF BUFFER
01:002018DE 6C00ED46        	  3459:          BGE     MACSBUG
01:002018E2 101D            	  3460:          MOVE.B  (A5)+,D0       GRAB CHARACTER
01:002018E4 0C000027        	  3461:          CMPI.B  #$27,D0        SEE IF QUOTE MARK
01:002018E8 67AE            	  3462:          BEQ.S   SETM1          IF SO-END OF STRING
01:002018EA 1280            	  3463:          MOVE.B  D0,(A1)        SAVE DATA
                            	  3464: 
01:002018EC 1219            	  3465:          MOVE.B  (A1)+,D1       REREAD FOR CHECK
                            	  3466: 
01:002018EE B001            	  3467:          CMP.B   D1,D0          SEE IF SAME
01:002018F0 67EA            	  3468:          BEQ     SETM6
01:002018F2 4BFA0038        	  3469: SETME    LEA     MSG017(PC),A5  'DATA DID NOT STORE'
01:002018F6 6100EC06        	  3470:          BSR     FIXDCRLF
01:002018FA 6000EBA4        	  3471:          BRA     MSG
                            	  3472: 
01:002018FE 61000780        	  3473: SETM7    BSR     FIXBUF         DISPLAY CURRENT ADDRESS
01:00201902 2009            	  3474:          MOVE.L  A1,D0
01:00201904 61000486        	  3475:          BSR     PNT8HX         PUT ADDRESS IN BUFFER
01:00201908 2CFC20203F20    	  3476:          MOVE.L  #'  ? ',(A6)+  PROMPT
01:0020190E 610006E4        	  3477:          BSR     OUTPUT         DUMP BUFFER WITH NO LF CR
01:00201912 6100076C        	  3478:          BSR     FIXBUF         GET READY FOR INPUT
01:00201916 1AFC0020        	  3479:          MOVE.B  #BLANK,(A5)+   ADVANCE IN BUFFER
01:0020191A 2C4D            	  3480:          MOVE.L  A5,A6          BECAUSE OF SNAFU IN FINDNP
01:0020191C 6100076A        	  3481:          BSR     PORTIN1        INPUT FROM CONSOLE
01:00201920 1025            	  3482:          MOVE.B  -(A5),D0       JUST BACK UP IN BUFFER
01:00201922 BBCE            	  3483:          CMP.L   A6,A5
01:00201924 6700ED00        	  3484:          BEQ     MACSBUG
01:00201928 6000FF6E        	  3485:          BRA     SETM1          DO DECODE IT
                            	  3486: 
01:0020192C 4441544120444944	  3487: MSG017   DC.B    'DATA DID NOT STORE',CR,LF,EOT
01:00201934 204E4F542053544F
01:0020193C 5245
01:0020193E 0D
01:0020193F 0A
01:00201940 04
                            	  3488: 
                            	  3489: 
                            	  3490: 
                            	  3491: 
                            	  3492: 
01:00201941 00              	  3493:          DC.B    0              PAD BYTE
                            	  3494: 
                            	  3495: 
                            	  3496: 
                            	  3497: 
                            	  3498: *-------------------------------------------------------------------------
                            	  3499: * File MTSETUP   MTSETUP memory test setup                        11/02/81
                            	  3500: 
                            	  3501: *
                            	  3502: * SET UP PARMS FOR BLOCK TEST AND BLOCK INITIALIZE
                            	  3503: *
                            	  3504: 
                            	  3505: MTSETUP  DS      0
01:00201942 21CF04D6        	  3506:          MOVE.L  A7,TEMP        STACK FOR EXCEPTION RETURN
01:00201946 41FAEB66        	  3507:          LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMETERS
01:0020194A 61000512        	  3508:          BSR     FNEXTF         FIND NEXT FIELD
01:0020194E 6100F5DA        	  3509:          BSR     GETA           GET ADDR1
01:00201952 61000528        	  3510:          BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
01:00201956 2640            	  3511:          MOVE.L  D0,A3          SAVE STARTING ADDRESS
                            	  3512: 
01:00201958 41FAEB54        	  3513:          LEA     SYNTAX(PC),A0  SET UP TO TRY "TO" ADDRESS
01:0020195C 61000500        	  3514:          BSR     FNEXTF         *
01:00201960 6100F5C8        	  3515:          BSR     GETA           GET ADDR2
01:00201964 61000516        	  3516:          BSR     CKWADR
01:00201968 2240            	  3517:          MOVE.L  D0,A1          A1 = END ADDRESS?
01:0020196A 204B            	  3518:          MOVE.L  A3,A0          A0 = STARTING ADDRESS
01:0020196C 6100EB4E        	  3519:          BSR     P2PHY          DISPLAY TWO ADDRESSES
01:00201970 B3C8            	  3520:          CMP.L   A0,A1
01:00201972 6500EB3A        	  3521:          BCS     SYNTAX         END ADDR TOO SMALL
01:00201976 5489            	  3522:          ADDQ.L  #2,A1          ADJUST END ADDR
01:00201978 4E75            	  3523:          RTS
                            	  3524: 
                            	  3525: 
                            	  3526: 
                            	  3527: 
                            	  3528: *-------------------------------------------------------------------------
                            	  3529: * File OF        OF & PERIOD Command                              12/18/81
                            	  3530: 
                            	  3531: * .*  HANDLER
                            	  3532: *   GET TWO CHARACTERS FOLLOWING PERIOD
                            	  3533: 
01:0020197A E149            	  3534: PERCMD   LSL.W   #8,D1
01:0020197C 1215            	  3535:          MOVE.B  (A5),D1        D1 = 2ND,3RD CHARACTERS
01:0020197E 538D            	  3536:          SUBQ.L  #1,A5          A5 = POINTER TO 2ND CHAR  (1ST REAL CHARACTER)
                            	  3537: 
01:00201980 41FA0030        	  3538:          LEA     REGTBL(PC),A0
01:00201984 7E00            	  3539: PER4     CLR.L   D7
01:00201986 3E18            	  3540:          MOVE.W  (A0)+,D7       SAVE FIRST WORD FOR END OF TABLE TEST
01:00201988 3018            	  3541:          MOVE.W  (A0)+,D0       GET REAL REGISTER ID INTO D0
01:0020198A 0C47FFFF        	  3542:          CMPI.W  #$FFFF,D7      ARE WE AT THE END OF THE TABLE?
01:0020198E 6700EB06        	  3543:          BEQ     WHAT           YES...THEN WE DIDNT FIND IT
                            	  3544: 
01:00201992 0C000040        	  3545:          CMPI.B  #'@',D0
01:00201996 660E            	  3546:          BNE.S   PER3           NOT @
                            	  3547: 
                            	  3548: * THIRD CHAR MUST BE NUMERIC 0 - 7
01:00201998 1001            	  3549:          MOVE.B  D1,D0          ALLEGED DIGIT
01:0020199A 0C000030        	  3550:          CMPI.B  #'0',D0
01:0020199E 6BE4            	  3551:          BMI     PER4           NOT A DIGIT
01:002019A0 0C000038        	  3552:          CMPI.B  #'8',D0
01:002019A4 6ADE            	  3553:          BPL     PER4           NOT A DIGIT
                            	  3554: 
01:002019A6 B041            	  3555: PER3     CMP.W   D1,D0
01:002019A8 66DA            	  3556:          BNE     PER4           MISS-MATCH
                            	  3557: 
                            	  3558: *******************************************************************
                            	  3559: *        AT THIS TIME WE HAVE FOUND THE ENTRY IN THE "REG TABLE"  *
                            	  3560: *        WE NOW NEED TO EXTRACT AND USE THE OFFSET                *
                            	  3561: *******************************************************************
                            	  3562: 
01:002019AA 41FAE654        	  3563:          LEA     FIRST(PC),A0   A0 = Start of VERSAbug RO
01:002019AE D1C7            	  3564:          ADD.L   D7,A0          Add offset
01:002019B0 4ED0            	  3565:          JMP     (A0)           Now go to the calculated location
                            	  3566: 
                            	  3567: 
                            	  3568: ***************
                            	  3569: REGTBL   EQU  *
                            	  3570: ***************
                            	  3571: 
01:002019B2 19F4            	  3572:          DC.W    SETA7-FIRST    Stack Register Routine
01:002019B4 4137            	  3573:          DC.W    'A7'           *
                            	  3574: 
01:002019B6 19E8            	  3575:          DC.W    SETPC-FIRST    Program Counter Routine
01:002019B8 5043            	  3576:          DC.W    'PC'           *
                            	  3577: 
01:002019BA 19EE            	  3578:          DC.W    SETSR-FIRST    Status Register Routine
01:002019BC 5352            	  3579:          DC.W    'SR'           *
                            	  3580: 
01:002019BE 1A04            	  3581:          DC.W    SETUS-FIRST    User Stack Routine
01:002019C0 5553            	  3582:          DC.W    'US'           *
                            	  3583: 
01:002019C2 19FE            	  3584:          DC.W    SETSS-FIRST    System Stack Routine
01:002019C4 5353            	  3585:          DC.W    'SS'           *
                            	  3586: 
01:002019C6 19DC            	  3587:          DC.W    SETD-FIRST     Data Register Routine
01:002019C8 4440            	  3588:          DC.W    'D@'           *
                            	  3589: 
01:002019CA 19E2            	  3590:          DC.W    SETA-FIRST     Address Register Routine
01:002019CC 4140            	  3591:          DC.W    'A@'           *
                            	  3592: 
01:002019CE 1ABC            	  3593:          DC.W    PNTCLSA-FIRST  All Address Registers Routine
01:002019D0 4120            	  3594:          DC.W    'A '           *
                            	  3595: 
01:002019D2 1AB2            	  3596:          DC.W    PNTCLSD-FIRST  All Data Registers Routine
01:002019D4 4420            	  3597:          DC.W    'D '           *
                            	  3598: 
01:002019D6 1A0A            	  3599:          DC.W    SETRN-FIRST    All Registers Routine
01:002019D8 5240            	  3600:          DC.W    'R@'           *
                            	  3601: 
01:002019DA FFFF            	  3602:          DC.W    $FFFF          END OF TABLE
                            	  3603: 
                            	  3604: *    PRINT & INPUT REGISTER ROUTINES
                            	  3605: 
01:002019DC 49F80408        	  3606: SETD     LEA     REGS,A4        START OF REGISTERS
01:002019E0 6034            	  3607:          BRA.S   SETR
                            	  3608: 
01:002019E2 49F80428        	  3609: SETA     LEA     REGS+32,A4     OFFSET IN REGISTER TABLE
01:002019E6 602E            	  3610:          BRA.S   SETR
                            	  3611: 
01:002019E8 49F80400        	  3612: SETPC    LEA     REGPC,A4       WHERE PC IS
01:002019EC 6030            	  3613:          BRA.S   SETR0
                            	  3614: 
01:002019EE 49F80404        	  3615: SETSR    LEA     REGSR,A4       WHERE SR IS
01:002019F2 602A            	  3616:          BRA.S   SETR0
                            	  3617: 
01:002019F4 22380404        	  3618: SETA7    MOVE.L  REGSR,D1       GET CONDITION CODES
01:002019F8 02412000        	  3619:          ANDI.W  #$2000,D1      CHECK SUPERVISOR BIT
01:002019FC 6706            	  3620:          BEQ.S   SETUS
01:002019FE 49F80444        	  3621: SETSS    LEA     REGA7,A4       WHERE SUPERVISOR STACK IS
01:00201A02 601A            	  3622:          BRA.S   SETR0
                            	  3623: 
01:00201A04 49F80448        	  3624: SETUS    LEA     REGUS,A4       USER STACK
01:00201A08 6014            	  3625:          BRA.S   SETR0
                            	  3626: 
01:00201A0A 49F8044C        	  3627: SETRN    LEA     OFFSET,A4      SET OFFSET
01:00201A0E 0C010037        	  3628:          CMPI.B  #'7',D1
01:00201A12 6700EA9A        	  3629:          BEQ     SYNTAX         NOT ALLOWED TO CHANGE A7
                            	  3630: 
                            	  3631: 
                            	  3632: *  ROUTINE TO ENTER DATA FOR A SINGLE REGISTER
                            	  3633: *   A5-A6 ARE COMMAND BUFFER
                            	  3634: *   D0 HAS REGISTER DIGIT A4 HAS CLASS OFFSET
                            	  3635: 
01:00201A16 61000578        	  3636: SETR     BSR     GETHEX         GET REG NUMBER
01:00201A1A E588            	  3637:          LSL.L   #2,D0          SHIFT LEFT...MULT BY 4
01:00201A1C D9C0            	  3638:          ADD.L   D0,A4          A4 NOW HAS EXACT ADDRESS
01:00201A1E 548D            	  3639: SETR0    ADDQ.L  #2,A5          NOW FIND PARAMETERS
01:00201A20 103C003A        	  3640:          MOVE.B  #':',D0        SEE IF COLON IN COMMAND
01:00201A24 6154            	  3641:          BSR.S   SCAN
01:00201A26 671E            	  3642:          BEQ.S   SETR5
                            	  3643: *SEE IF ANY PARAMER (HEX)
01:00201A28 41FA0016        	  3644:          LEA     SETR4(PC),A0   WHERE TO GO IF NO PARAMETERS
01:00201A2C 61000430        	  3645:          BSR     FNEXTF         FIND NEXT FIELD
                            	  3646: 
01:00201A30 0C00002E        	  3647:          CMPI.B  #'.',D0
01:00201A34 6706            	  3648:          BEQ.S   SEMACS         PERIOD; GET OUT
                            	  3649: 
01:00201A36 6100F4F2        	  3650:          BSR     GETA           GET ADDRESS VALUE
01:00201A3A 2880            	  3651:          MOVE.L  D0,(A4)        SAVE NEW VALUE
01:00201A3C 6000EBE8        	  3652: SEMACS   BRA     MACSBUG
                            	  3653: 
                            	  3654: *JUST PRINT IT
                            	  3655: 
01:00201A40 6148            	  3656: SETR4    BSR.S   PRINTR         FIX UP TO PRINT
01:00201A42 6000EA5C        	  3657:          BRA     MSG            GO PRINT MESSAGE-GO TO MACSBUG
                            	  3658: 
01:00201A46 6102            	  3659: SETR5    BSR.S   SETSR1
01:00201A48 60F2            	  3660:          BRA     SEMACS
                            	  3661: 
01:00201A4A 613E            	  3662: SETSR1   BSR.S   PRINTR         FIX UP TO PRINT
01:00201A4C 1CFC0020        	  3663:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201A50 1CFC003F        	  3664:          MOVE.B  #'?',(A6)+     PROMPT
01:00201A54 1CFC0020        	  3665:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201A58 6100059A        	  3666:          BSR     OUTPUT         PRINT IT
                            	  3667: 
01:00201A5C 61000622        	  3668:          BSR     FIXBUF
01:00201A60 61000626        	  3669:          BSR     PORTIN1
                            	  3670: 
01:00201A64 41FA0012        	  3671:          LEA     SETSR15(PC),A0 A0=DEFAULT (NO PARM) ADDRESS
01:00201A68 610003F4        	  3672:          BSR     FNEXTF         FIND FIELD
                            	  3673: 
01:00201A6C 0C00002E        	  3674:          CMPI.B  #'.',D0
01:00201A70 67CA            	  3675:          BEQ     SEMACS         PERIOD; GET OUT
                            	  3676: 
01:00201A72 6100F4B6        	  3677:          BSR     GETA           CONVERT IT
01:00201A76 2880            	  3678:          MOVE.L  D0,(A4)        STORE NEW DATA
                            	  3679: 
                            	  3680: SETSR15  DS      0
01:00201A78 4E75            	  3681:          RTS
                            	  3682: 
                            	  3683: 
                            	  3684: * SEE IF CHARACTER IS IN BUFFER
                            	  3685: 
01:00201A7A 204D            	  3686: SCAN     MOVE.L  A5,A0          A0 IS WORKING SCANNER
01:00201A7C B1CE            	  3687: SCAN2    CMP.L   A6,A0          SEE IF AT END OF BUFFER
01:00201A7E 6208            	  3688:          BHI.S   RETURN5
01:00201A80 B010            	  3689:          CMP.B   (A0),D0        LOOK AT CHARACTER
01:00201A82 6704            	  3690:          BEQ.S   RETURN5
01:00201A84 5288            	  3691:          ADDQ.L  #1,A0          GET PAST CHARACTER
01:00201A86 60F4            	  3692:          BRA.S   SCAN2
01:00201A88 4E75            	  3693: RETURN5  RTS
                            	  3694: 
                            	  3695: * ROUTINE TO SET UP TO PRINT REG
                            	  3696: 
01:00201A8A 610005F4        	  3697: PRINTR   BSR     FIXBUF
                            	  3698: 
01:00201A8E 568E            	  3699:          ADDQ.L  #3,A6          GET PAST REG NAME (.XX)
01:00201A90 1CFC003D        	  3700:          MOVE.B  #'=',(A6)+     PUT IN EQUAL SIGN
01:00201A94 2014            	  3701:          MOVE.L  (A4),D0        GET VALUE
01:00201A96 B8FC0404        	  3702:          CMPA.L  #REGSR,A4      SEE IF THIS IS CONDITION CODES
01:00201A9A 6606            	  3703:          BNE.S   PRINTR2
01:00201A9C 610002FC        	  3704:          BSR     PNT4HX         JUST PRINT WORD
01:00201AA0 4E75            	  3705:          RTS
                            	  3706: 
01:00201AA2 610002E8        	  3707: PRINTR2  BSR     PNT8HX         PRINT THE VALUE
01:00201AA6 4E75            	  3708:          RTS
                            	  3709: 
                            	  3710: *
                            	  3711: *   PRINT ALL REGISTERS IN A CLASS (A OR D OR R)
                            	  3712: *
                            	  3713: 
                            	  3714: OFCMD    DS      0              "OF" Command -Display Offset registers-
01:00201AA8 1E3C0052        	  3715: SETO     MOVE.B  #'R',D7
01:00201AAC 47F8044C        	  3716:          LEA     OFFSET,A3
01:00201AB0 6012            	  3717:          BRA.S   PNTCLSB
                            	  3718: 
01:00201AB2 1E3C0044        	  3719: PNTCLSD  MOVE.B  #'D',D7        CLASS=DATA
01:00201AB6 47F80408        	  3720:          LEA     REGS,A3        OFFSET
01:00201ABA 6008            	  3721:          BRA.S   PNTCLSB
                            	  3722: 
01:00201ABC 1E3C0041        	  3723: PNTCLSA  MOVE.B  #'A',D7        CLASS=ADDRESS
01:00201AC0 47F80428        	  3724:          LEA     REGS+32,A3     OFFSET
01:00201AC4 6104            	  3725: PNTCLSB  BSR.S   PNTCLS
01:00201AC6 6000EB5E        	  3726:          BRA     MACSBUG
                            	  3727: 
01:00201ACA 610005B4        	  3728: PNTCLS   BSR     FIXBUF
01:00201ACE 7C00            	  3729:          CLR.L   D6             REGISTER COUNTER
01:00201AD0 611C            	  3730: PNTCLS1  BSR.S   PNTREG         PRINT THE REGISTER
01:00201AD2 0C060004        	  3731:          CMPI.B  #4,D6          DISPLAY AFTER 3&7
01:00201AD6 660A            	  3732:          BNE.S   PNTCLS2
01:00201AD8 61000500        	  3733:          BSR     OUT1CR
01:00201ADC 610005A2        	  3734:          BSR     FIXBUF
01:00201AE0 60EE            	  3735:          BRA     PNTCLS1        DO SOME MORE
                            	  3736: 
01:00201AE2 0C060008        	  3737: PNTCLS2  CMPI.B  #8,D6          AT END?
01:00201AE6 66E8            	  3738:          BNE     PNTCLS1
01:00201AE8 610004F0        	  3739:          BSR     OUT1CR         PRINT IT
01:00201AEC 4E75            	  3740:          RTS
                            	  3741: 
                            	  3742: *  SUBROUTINE TO PRINT REGISTER  X#=01234567.
                            	  3743: 
01:00201AEE 1CC7            	  3744: PNTREG   MOVE.B  D7,(A6)+       CLASS
01:00201AF0 1006            	  3745:          MOVE.B  D6,D0          REG#
01:00201AF2 610002B6        	  3746:          BSR     PUTHEX
01:00201AF6 1CFC003D        	  3747:          MOVE.B  #'=',(A6)+     EQUAL SIGN
01:00201AFA 2006            	  3748:          MOVE.L  D6,D0          COMPUTE ADDRESS OF REG
01:00201AFC E588            	  3749:          LSL.L   #2,D0          MULT BY FOUR
01:00201AFE D08B            	  3750:          ADD.L   A3,D0          ADD IN OFFSET
01:00201B00 2840            	  3751:          MOVE.L  D0,A4          SET UP TO GET DEFFERED
01:00201B02 B8FC0444        	  3752:          CMPA.L  #REGA7,A4      SEE IF REG A7
01:00201B06 660E            	  3753:          BNE.S   PNTREG1
01:00201B08 20380404        	  3754:          MOVE.L  REGSR,D0       GET STATUS REGISTER
01:00201B0C 02402000        	  3755:          ANDI.W  #$2000,D0      CHECK SUPERVISOR BIT
01:00201B10 6604            	  3756:          BNE.S   PNTREG1
01:00201B12 49F80448        	  3757:          LEA     REGUS,A4       TAKE ADDRESS OF USER STACK
01:00201B16 2014            	  3758: PNTREG1  MOVE.L  (A4),D0        GET REG CONTENT
01:00201B18 61000272        	  3759:          BSR     PNT8HX         PUT IN BUFFER
01:00201B1C 1CFC0020        	  3760:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201B20 5286            	  3761:          ADDQ.L  #1,D6          BUMP REG#
01:00201B22 4E75            	  3762:          RTS
                            	  3763: 
                            	  3764: 
                            	  3765: 
                            	  3766: 
                            	  3767: *-------------------------------------------------------------------------
                            	  3768: * File PF        "PFCMD", Port format                             05/19/82
                            	  3769: 
                            	  3770: * **PF**   PF      DISPLAY PORT PROFILE
                            	  3771: *          PF1     DISPLAY/CHANGE PORT 1
                            	  3772: *          PF2     DISPLAY/CHANGE PORT 2
                            	  3773: 
01:00201B24 1C15            	  3774: PFCMD    MOVE.B  (A5),D6        D6 = PORT #
01:00201B26 0C060031        	  3775:          CMPI.B  #'1',D6
01:00201B2A 675A            	  3776:          BEQ.S   PFCMD1         CHANGE PORT 1
01:00201B2C 0C060032        	  3777:          CMPI.B  #'2',D6
01:00201B30 6754            	  3778:          BEQ.S   PFCMD1         CHANGE PORT 2
                            	  3779: 
01:00201B32 43F8064C        	  3780:          LEA     MD1CON,A1      PRINT BOTH PORTS
01:00201B36 4BFA00A2        	  3781:          LEA     MSG003(PC),A5
01:00201B3A 6132            	  3782:          BSR.S   PFPT           DISPLAY/CHANGE
01:00201B3C 610004B6        	  3783:          BSR     OUTPUT
                            	  3784: 
01:00201B40 43F80618        	  3785:          LEA     NULLPADS,A1
01:00201B44 4BFA009F        	  3786:          LEA     MSG004(PC),A5
01:00201B48 6124            	  3787:          BSR.S   PFPT
01:00201B4A 610004A8        	  3788:          BSR     OUTPUT
                            	  3789: 
01:00201B4E 43F8061A        	  3790:          LEA     CRPADS,A1
01:00201B52 4BFA009C        	  3791:          LEA     MSG005(PC),A5
01:00201B56 6116            	  3792:          BSR.S   PFPT
                            	  3793: 
01:00201B58 4BFA00A1        	  3794:          LEA     MSG031(PC),A5  TELL WHERE XONOFF IS
01:00201B5C 6100E990        	  3795:          BSR     FIXDADD
01:00201B60 203C000004E6    	  3796:          MOVE.L  #OPTIONS,D0
01:00201B66 6100022C        	  3797:          BSR     PNT6HX         "OPTIONS@AAAAAA"
01:00201B6A 6000E934        	  3798:          BRA     MSG
                            	  3799: 
01:00201B6E 6100E98E        	  3800: PFPT     BSR     FIXDCRLF       FORMAT FROM A5
01:00201B72 1011            	  3801:          MOVE.B  (A1),D0
01:00201B74 6100022C        	  3802:          BSR     PNT2HX         FORMAT DATA
01:00201B78 1CFC0020        	  3803:          MOVE.B  #BLANK,(A6)+   SPACE
01:00201B7C 10290001        	  3804:          MOVE.B  1(A1),D0
01:00201B80 61000220        	  3805:          BSR     PNT2HX         FORMAT DATA PORT 2
01:00201B84 4E75            	  3806:          RTS
                            	  3807: 
                            	  3808: 
01:00201B86 43F8064C        	  3809: PFCMD1   LEA     MD1CON,A1
01:00201B8A 4BFA004E        	  3810:          LEA     MSG003(PC),A5
01:00201B8E 6120            	  3811:          BSR.S   PFCH           DISPLAY/CHANGE
                            	  3812: 
01:00201B90 43F80618        	  3813:          LEA     NULLPADS,A1
01:00201B94 4BFA004F        	  3814:          LEA     MSG004(PC),A5
01:00201B98 6116            	  3815:          BSR.S   PFCH
                            	  3816: 
01:00201B9A 43F8061A        	  3817:          LEA     CRPADS,A1
01:00201B9E 4BFA0050        	  3818:          LEA     MSG005(PC),A5
01:00201BA2 610C            	  3819:          BSR.S   PFCH
01:00201BA4 610007BE        	  3820:          BSR     INITSER        PLACE NEW SBITS INTO ACIA
01:00201BA8 610004D6        	  3821:          BSR     FIXBUF         BLANK LINE FOR SPACING
01:00201BAC 6000E8F2        	  3822:          BRA     MSG
                            	  3823: 
01:00201BB0 6100E938        	  3824: PFCH     BSR     FIXDATA        FORMAT FROM A5
01:00201BB4 0C060031        	  3825:          CMPI.B  #'1',D6
01:00201BB8 6702            	  3826:          BEQ.S   PFCH2          PORT 1
01:00201BBA 5289            	  3827:          ADDQ.L  #1,A1          PORT 2
01:00201BBC 1011            	  3828: PFCH2    MOVE.B  (A1),D0
01:00201BBE 610001E2        	  3829:          BSR     PNT2HX         FORMAT DATA
01:00201BC2 1CFC003F        	  3830:          MOVE.B  #'?',(A6)+
01:00201BC6 6100042C        	  3831:          BSR     OUTPUT
                            	  3832: 
01:00201BCA 610004BC        	  3833:          BSR     PORTIN1        INPUT LINE
01:00201BCE BDCD            	  3834:          CMP.L   A5,A6
01:00201BD0 6706            	  3835:          BEQ.S   PFCH4          NOTHING INPUT
                            	  3836: 
01:00201BD2 6100030C        	  3837:          BSR     GETNUMA
01:00201BD6 1280            	  3838:          MOVE.B  D0,(A1)
01:00201BD8 4E75            	  3839: PFCH4    RTS
                            	  3840: 
01:00201BDA 464F524D41543D20	  3841: MSG003   DC.B    'FORMAT=   ',EOT
01:00201BE2 2020
01:00201BE4 04
                            	  3842: 
                            	  3843: 
                            	  3844: 
01:00201BE5 43484152204E554C	  3845: MSG004   DC.B    'CHAR NULL=',EOT
01:00201BED 4C3D
01:00201BEF 04
                            	  3846: 
                            	  3847: 
                            	  3848: 
01:00201BF0 432F5220204E554C	  3849: MSG005   DC.B    'C/R  NULL=',EOT
01:00201BF8 4C3D
01:00201BFA 04
                            	  3850: 
                            	  3851: 
                            	  3852: 
01:00201BFB 0D              	  3853: MSG031   DC.B    CR,LF,'OPTIONS@',EOT
01:00201BFC 0A
01:00201BFD 4F5054494F4E5340
01:00201C05 04
                            	  3854: 
                            	  3855: 
                            	  3856: 
                            	  3857: 
                            	  3858: 
                            	  3859: 
                            	  3860: *-------------------------------------------------------------------------
                            	  3861: * File RAMTEST   RAMTEST                                          11/02/81
                            	  3862: 
                            	  3863: ***********************************************************************
                            	  3864: * MEMORY TEST SUBROUTINE.                                             *
                            	  3865: *                                                                     *
                            	  3866: *        A0=BEGINNING ADDRESS (MUST BE EVEN ADDRESS)                  *
                            	  3867: *        A1=ENDING ADDRESS+1  (MUST BE EVEN ADDRESS)                  *
                            	  3868: *        A2=FAILING ADDRESS                                           *
                            	  3869: *        D0=DATA WRITTEN TO RAM                                       *
                            	  3870: *        D1=DATA READ FROM RAM                                        *
                            	  3871: *                                                                     *
                            	  3872: *        ZERO FLAG IS SET IF TEST IS SUCCESSFUL                       *
                            	  3873: *           REGISTERS D2,D3,D4 DESTROYED                              *
                            	  3874: ***********************************************************************
                            	  3875: 
                            	  3876: *       -1ST TEST-
                            	  3877: RAMTEST  DS      0
01:00201C06 2608            	  3878:          MOVE.L  A0,D3          D3 = BEGINNING ADDRESS
01:00201C08 2443            	  3879:          MOVE.L  D3,A2          USE A2 AS POINTER IN MEMORY
01:00201C0A 70FE            	  3880: WALK3    MOVEQ   #-2,D0         PREPARE FOR "WALKING BIT" TEST
                            	  3881: WALK0
01:00201C0C 3480            	  3882:          MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
01:00201C0E 3212            	  3883:          MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
01:00201C10 B240            	  3884:          CMP.W   D0,D1          WRITTEN VS. READ
01:00201C12 6642            	  3885:          BNE.S   RAMERR         STOP ON ERROR
01:00201C14 E358            	  3886:          ROL.W   #1,D0          ROLL A ZERO IN A FIELD OF ONES
01:00201C16 65F4            	  3887:          BCS.S   WALK0          CONTINUE TILL DONE
                            	  3888: 
01:00201C18 7001            	  3889:          MOVEQ   #$00000001,D0  THIS TIME, WALK A 1 THROUGH ZEROS
                            	  3890: WALK1
01:00201C1A 3480            	  3891:          MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
01:00201C1C 3212            	  3892:          MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
01:00201C1E B240            	  3893:          CMP.W   D0,D1          WRITTEN VS. READ
01:00201C20 6634            	  3894:          BNE.S   RAMERR         STOP ON ERROR
01:00201C22 D040            	  3895:          ASL.W   #1,D0          ROLL A ONE TO THE NEXT POSITION
01:00201C24 64F4            	  3896:          BCC.S   WALK1          CONTINUE TILL DONE
                            	  3897: 
01:00201C26 45EA0100        	  3898:          LEA     $0100(A2),A2   GO TO NEXT 256TH POSITION
01:00201C2A B5C9            	  3899:          CMP.L   A1,A2          CHECK TO SEE IF DONE
01:00201C2C 6DDC            	  3900:          BLT.S   WALK3          CONTINUE
                            	  3901: 
                            	  3902: * -2ND TEST-
01:00201C2E 2443            	  3903:          MOVE.L  D3,A2          SET A2 TO POINT TO START OF MEMORY
01:00201C30 7000            	  3904:          MOVEQ   #$00000000,D0  CLEAR D0
                            	  3905: MTCLR
01:00201C32 34C0            	  3906:          MOVE.W  D0,(A2)+       CLEAR MEMORY
01:00201C34 B5C9            	  3907:          CMP.L   A1,A2          DONE?
01:00201C36 66FA            	  3908:          BNE.S   MTCLR          NO... ZERO ALL OF MEMORY
                            	  3909: 
01:00201C38 74FF            	  3910:          MOVEQ   #-1,D2         SET D2 = FFFF
                            	  3911: MTSTOR1
01:00201C3A 3222            	  3912:          MOVE.W  -(A2),D1       FIRST READ BACK MEMORY
01:00201C3C B240            	  3913:          CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
01:00201C3E 6616            	  3914:          BNE.S   RAMERR         STOP ON ERROR
01:00201C40 3482            	  3915:          MOVE.W  D2,(A2)        STORE COMPLEMENT
01:00201C42 B5C3            	  3916:          CMP.L   D3,A2          DONE?
01:00201C44 66F4            	  3917:          BNE.S   MTSTOR1        NO... COMPLEMENT ALL OF MEMORY
01:00201C46 3002            	  3918:          MOVE.W  D2,D0          D0=WHAT WAS WRITTEN
01:00201C48 4642            	  3919:          NOT.W   D2             SAVE COMPLEMENT FOR LATER
                            	  3920: 
                            	  3921: MTSTOR0
01:00201C4A 3212            	  3922:          MOVE.W  (A2),D1        READ BACK MEMORY
01:00201C4C B240            	  3923:          CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
01:00201C4E 6606            	  3924:          BNE.S   RAMERR         STOP ON ERROR
01:00201C50 34C2            	  3925:          MOVE.W  D2,(A2)+       STORE COMPLEMENT
01:00201C52 B5C9            	  3926:          CMP.L   A1,A2          DONE?
01:00201C54 66F4            	  3927:          BNE     MTSTOR0        NO...KEEP LOOPING, YES...
                            	  3928: 
01:00201C56 2043            	  3929: RAMERR   MOVE.L  D3,A0          RESTORE A0
01:00201C58 4E75            	  3930:          RTS                    RETURN
                            	  3931: 
                            	  3932: 
                            	  3933: 
                            	  3934: 
                            	  3935: *-------------------------------------------------------------------------
                            	  3936: * File TM        TM  Transparent mode                             12/28/81
                            	  3937: 
                            	  3938: *    TM  [[EXIT CHAR]TRAILING CHAR]
                            	  3939: *
                            	  3940: *  In transparent mode the terminal is physically connected to the
                            	  3941: *  host; at the same time the terminal is watched by TM software
                            	  3942: *  for the EXIT character.  When the exit character is transmitted
                            	  3943: *  by the terminal it goes directly to the host; and at the same
                            	  3944: *  time the TM software reconfigures the hardware.  If a nonnull
                            	  3945: *  trailing character is present it is now sent via port 2 to
                            	  3946: *  the host.
                            	  3947: 
                            	  3948: *   TRANSPARENT MODE
                            	  3949: 
01:00201C5A 41FA0012        	  3950: TMCMD    LEA     P2CMD0(PC),A0
01:00201C5E 610001FE        	  3951:          BSR     FNEXTF         FIND NEXT FIELD
01:00201C62 11DD04EB        	  3952:          MOVE.B  (A5)+,TMCHARS+1 QUIT CHARACTER
01:00201C66 610001F6        	  3953:          BSR     FNEXTF         FIND NEXT FIELD
01:00201C6A 11DD04EA        	  3954:          MOVE.B  (A5)+,TMCHARS  OPTIONAL TRAILING CHAR
01:00201C6E 3E3804EA        	  3955: P2CMD0   MOVE.W  TMCHARS,D7
01:00201C72 610003E8        	  3956:          BSR     GETSER1        ADDRESS FOR PORT1 INTO A0
01:00201C76 4BFA007A        	  3957:          LEA     MSG006(PC),A5  "TRANSPARENT MODE"
01:00201C7A 6100E882        	  3958:          BSR     FIXDCRLF       SET UP FOR MESSAGE
01:00201C7E 2007            	  3959:          MOVE.L  D7,D0          EXIT CHARACTER
01:00201C80 61000120        	  3960:          BSR     PNT2HX         PRINT 2 HEX CHARACTERS
01:00201C84 3CFC203D        	  3961:          MOVE.W  #' =',(A6)+
01:00201C88 1007            	  3962:          MOVE.B  D7,D0          SEE IF CONTROL CHAR
01:00201C8A 0C000020        	  3963:          CMPI.B  #BLANK,D0
01:00201C8E 6A0A            	  3964:          BPL.S   P2CMD01
01:00201C90 2CFC2043544C    	  3965:          MOVE.L  #' CTL',(A6)+
01:00201C96 06000040        	  3966:          ADDI.B  #64,D0         MAKE IT A PRINTABLE CHARACTER
01:00201C9A 1CFC0020        	  3967: P2CMD01  MOVE.B  #BLANK,(A6)+
01:00201C9E 1CC0            	  3968:          MOVE.B  D0,(A6)+
01:00201CA0 3CFC0D0A        	  3969:          MOVE.W  #$0D0A,(A6)+
01:00201CA4 61000334        	  3970:          BSR     OUT1CR         GO PRINT BUFFER WITH CRLF
                            	  3971: 
01:00201CA8 10390000064C    	  3972:          MOVE.B  MD1CON.L,D0    PROGRAM ACIA FOR TRANSPARENT MODE
01:00201CAE 0200009F        	  3973:          ANDI.B  #$9F,D0
01:00201CB2 00000040        	  3974:          ORI.B   #$40,D0        FORCE RTS HIGH
01:00201CB6 1080            	  3975:          MOVE.B  D0,(A0)
01:00201CB8 08100000        	  3976: P2CMD2   BTST.B  #$0,(A0)      READ STATUS
01:00201CBC 67FA            	  3977:          BEQ.S   P2CMD2
01:00201CBE 10280001        	  3978:          MOVE.B  1(A0),D0       RECEIVE CHAR FROM PORT 1
01:00201CC2 0200007F        	  3979:          ANDI.B  #$7F,D0
01:00201CC6 B007            	  3980:          CMP.B   D7,D0          SEE IF QUIT CHARACTER (CTL A USUALLY)
01:00201CC8 66EE            	  3981:          BNE.S   P2CMD2
01:00201CCA 10390000064C    	  3982:          MOVE.B  MD1CON.L,D0    REPROGRAM FOR NON-TRANSPARENT
01:00201CD0 0200009F        	  3983:          ANDI.B  #$9F,D0
01:00201CD4 1080            	  3984:          MOVE.B  D0,(A0)
                            	  3985: 
01:00201CD6 E047            	  3986:          ASR.W   #8,D7
01:00201CD8 4A07            	  3987:          TST.B   D7
01:00201CDA 6712            	  3988:          BEQ.S   P2CMD6
                            	  3989: * SPECIAL SECOND CHAR TO HOST SEQUENCE
01:00201CDC 203C00001000    	  3990:          MOVE.L  #DELAYC1,D0
01:00201CE2 5380            	  3991: P2CMD4   SUBQ.L  #1,D0          DELAY; ALLOW HOST TO SYNC
01:00201CE4 66FC            	  3992:          BNE.S   P2CMD4
01:00201CE6 61000386        	  3993:          BSR     GETSER2
01:00201CEA 11470001        	  3994:          MOVE.B  D7,1(A0)       SEND CHAR
01:00201CEE 6000E936        	  3995: P2CMD6   BRA     MACSBUG
                            	  3996: 
01:00201CF2 2A5452414E535041	  3997: MSG006   DC.B    '*TRANSPARENT* EXIT=$',EOT
01:00201CFA 52454E542A204558
01:00201D02 49543D24
01:00201D06 04
                            	  3998: 
                            	  3999: 
                            	  4000: 
                            	  4001: 
                            	  4002: 
01:00201D07 00              	  4003:          DC.B    0              PAD BYTE
                            	  4004: 
                            	  4005: 
                            	  4006: 
                            	  4007: 
                            	  4008: *-------------------------------------------------------------------------
                            	  4009: * File W         Software Abort, Hex print routines               06/05/82
                            	  4010: 
                            	  4011: *
                            	  4012: *   HANDLE THE ABORT BUTTON
                            	  4013: *
01:00201D08 46FC2700        	  4014: ABORTB   MOVE.W  #$2700,SR
                            	  4015:          SAVEREGS
01:00201D0C 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00201D10 4FFA000A        	     2M          LEA     SV_000046(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:00201D14 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:00201D18 6000F362        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000046     DS      0
01:00201D1C 6100060A        	  4016:          BSR     FAULTSER       RESET SERIAL PORTS
01:00201D20 4BFA0016        	  4017:          LEA     MSG012(PC),A5  'SOFTWARE ABORT'
                            	  4018: 
01:00201D24 6100063E        	  4019:          BSR     INITSER        RESET SERIAL PORTS (CLEAR TM MODE)
01:00201D28 6100E7D4        	  4020:          BSR     FIXDCRLF       MOVE MESSAGE TO BUFFER
01:00201D2C 610002C6        	  4021: EVECT4   BSR     OUTPUT         MSG TO PORT1
01:00201D30 6100EFC2        	  4022: ABORT335 BSR     TDISPLY        DISPLAY REGISTERS
01:00201D34 6000E8F0        	  4023:          BRA     MACSBUG
                            	  4024: 
01:00201D38 0A              	  4025: MSG012   DC.B    LF,LF,'SOFTWARE ABORT',CR,LF,EOT
01:00201D39 0A
01:00201D3A 534F465457415245
01:00201D42 2041424F5254
01:00201D48 0D
01:00201D49 0A
01:00201D4A 04
                            	  4026: 
                            	  4027: 
                            	  4028: 
                            	  4029: 
01:00201D4B 00              	  4030:          DC.B    0              PAD BYTE
                            	  4031: 
01:00201D4C 21FC3F3F3F3F0030	  4032: ABORTE MOVE.L    #'????',$30    UNKNOWN INTERRUPT
                            	  4033: 
                            	  4034: 
                            	  4035: *    SAVE REGISTERS AND PRINT VECTOR MSG
                            	  4036: *
                            	  4037: EVECTL   SAVEREGS
01:00201D54 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:00201D58 4FFA000A        	     2M          LEA     SV_000047(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:00201D5C 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:00201D60 6000F31A        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000047     DS      0
01:00201D64 610005C2        	  4038:          BSR     FAULTSER       RESET SERIAL PORTS
01:00201D68 61000316        	  4039: EVECT2   BSR     FIXBUF         PRINT MESSAGE "XXXX TRAP ERROR"
01:00201D6C 3CFC0D0A        	  4040:          MOVE.W  #$0D0A,(A6)+
01:00201D70 2CF80030        	  4041:          MOVE.L  AV12,(A6)+     TYPE OF ERROR
01:00201D74 4BFA0008        	  4042:          LEA     MSG010(PC),A5  'TRAP ERROR'
01:00201D78 6100E774        	  4043:          BSR     FIXDADD
01:00201D7C 60AE            	  4044:          BRA     EVECT4
                            	  4045: 
01:00201D7E 2054524150204552	  4046: MSG010   DC.B    ' TRAP ERROR',CR,LF,EOT
01:00201D86 524F52
01:00201D89 0D
01:00201D8A 0A
01:00201D8B 04
                            	  4047: 
                            	  4048: 
                            	  4049: 
                            	  4050: 
                            	  4051: *
                            	  4052: *  PRINT HEX ROUTINES
                            	  4053: *
                            	  4054: *
                            	  4055: * PRINT 8 HEX CHARACTERS
                            	  4056: *
                            	  4057: *  D0,D1,D2 DESTROYED
                            	  4058: *
01:00201D8C 4840            	  4059: PNT8HX   SWAP    D0             FLIP REG HALVES
01:00201D8E 610A            	  4060:          BSR.S   PNT4HX         DO TOP WORD
01:00201D90 4840            	  4061:          SWAP    D0             NOW DO LOWER WORD
01:00201D92 6006            	  4062:          BRA.S   PNT4HX
                            	  4063: * PRINT 6 HEX CHARACTERS
01:00201D94 4840            	  4064: PNT6HX   SWAP    D0             FLIP REGISTER HALVES
01:00201D96 610A            	  4065:          BSR.S   PNT2HX
01:00201D98 4840            	  4066:          SWAP    D0             FLIP BACK REG HALVES
                            	  4067: * PRINT 4 HEX CHARACTERS IN D0.W
01:00201D9A 3200            	  4068: PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
01:00201D9C E058            	  4069:          ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
01:00201D9E 6102            	  4070:          BSR.S   PNT2HX         PRINT IT
01:00201DA0 3001            	  4071:          MOVE.W  D1,D0          PULL IT BACK
                            	  4072: * PRINT 2 HEX CHARACTERS IN D0.B
01:00201DA2 3400            	  4073: PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
01:00201DA4 E850            	  4074:          ROXR.W  #4,D0          FORM UPPER NIBBLE
01:00201DA6 6102            	  4075:          BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
01:00201DA8 3002            	  4076:          MOVE.W  D2,D0          GET BACK FROM TEMP
                            	  4077: * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
                            	  4078: *
01:00201DAA 0200000F        	  4079: PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
01:00201DAE 00000030        	  4080:          ORI.B   #$30,D0        CONVERT TO ASCII
01:00201DB2 0C000039        	  4081:          CMPI.B  #$39,D0        SEE IF IT IS>9
01:00201DB6 6F02            	  4082:          BLE.S   SAVHEX
01:00201DB8 5E40            	  4083:          ADD     #7,D0          ADD TO MAKE 10=>A
01:00201DBA 1CC0            	  4084: SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
01:00201DBC 4E75            	  4085:          RTS
                            	  4086: 
                            	  4087: * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
                            	  4088: *        ENTER     D0 = VALUE
                            	  4089: *                  A6 = STORE POINTER
                            	  4090: *
01:00201DBE 48E74780        	  4091: FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
01:00201DC2 41F8044C        	  4092:          LEA     OFFSET,A0
01:00201DC6 7EFF            	  4093:          MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
01:00201DC8 7C00            	  4094:          CLR.L   D6             D6 = OFFSET POSITION
                            	  4095: 
01:00201DCA 2200            	  4096: FREL10   MOVE.L  D0,D1
01:00201DCC 4A90            	  4097:          TST.L   (A0)
01:00201DCE 670C            	  4098:          BEQ.S   FREL15         ZERO OFFSET
01:00201DD0 9290            	  4099:          SUB.L   (A0),D1        D1 = DIFF.
01:00201DD2 6B08            	  4100:          BMI.S   FREL15         NO FIT
                            	  4101: 
01:00201DD4 B287            	  4102:          CMP.L   D7,D1
01:00201DD6 6404            	  4103:          BCC.S   FREL15         OLD FIT BETTER
                            	  4104: 
01:00201DD8 2E01            	  4105:          MOVE.L  D1,D7          D7 = NEW BEST FIT
01:00201DDA 2A06            	  4106:          MOVE.L  D6,D5          D5 = POSITION
                            	  4107: 
01:00201DDC 5888            	  4108: FREL15   ADDQ.L  #4,A0
01:00201DDE 5286            	  4109:          ADDQ.L  #1,D6
01:00201DE0 0C460008        	  4110:          CMPI.W  #8,D6
01:00201DE4 66E4            	  4111:          BNE     FREL10         MORE OFFSETS TO CHECK
                            	  4112: 
01:00201DE6 4A87            	  4113:          TST.L   D7
01:00201DE8 6B1C            	  4114:          BMI.S   FREL25         NO FIT
01:00201DEA 4A46            	  4115:          TST     D6
01:00201DEC 6606            	  4116:          BNE.S   FREL20
01:00201DEE 4AB8044C        	  4117:          TST.L   OFFSET
01:00201DF2 6712            	  4118:          BEQ.S   FREL25         R0 = 000000; NO FIT
                            	  4119: 
01:00201DF4 2007            	  4120: FREL20   MOVE.L  D7,D0
01:00201DF6 619C            	  4121:          BSR     PNT6HX         FORMAT OFFSET
01:00201DF8 1CFC002B        	  4122:          MOVE.B  #'+',(A6)+     +
01:00201DFC 1CFC0052        	  4123:          MOVE.B  #'R',(A6)+     R
01:00201E00 06050030        	  4124:          ADDI.B  #'0',D5        MAKE ASCII
01:00201E04 600A            	  4125:          BRA.S   FREL30
                            	  4126: 
01:00201E06 618C            	  4127: FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
01:00201E08 1A3C0020        	  4128:          MOVE.B  #BLANK,D5
01:00201E0C 1CC5            	  4129:          MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
01:00201E0E 1CC5            	  4130:          MOVE.B  D5,(A6)+
01:00201E10 1CC5            	  4131: FREL30   MOVE.B  D5,(A6)+
                            	  4132: 
01:00201E12 4CDF01E2        	  4133:          MOVEM.L (A7)+,D1/D5-D7/A0
01:00201E16 4E75            	  4134:          RTS
                            	  4135: 
                            	  4136: *
                            	  4137: *
                            	  4138: *   PRINT HEX (ZERO SURPRESS)
                            	  4139: *
01:00201E18 7800            	  4140: PNTZHX   CLR.L   D4             IS ZERO WHEN SURPRESSING
01:00201E1A 2200            	  4141:          MOVE.L  D0,D1          SAVE IN TEMP
01:00201E1C 6738            	  4142:          BEQ.S   PNTZ81         IF ZERO
01:00201E1E 6A08            	  4143:          BPL.S   PNTZ0
01:00201E20 4481            	  4144:          NEG.L   D1             CHANGE TO POSITIVE VALUE
01:00201E22 6B32            	  4145:          BMI.S   PNTZ81         WATCH OUT SPECIAL CASE $80000000
01:00201E24 1CFC002D        	  4146:          MOVE.B  #'-',(A6)+     PUT SIGN INTO BUFFER
01:00201E28 7408            	  4147: PNTZ0    MOVEQ   #8,D2          8 POSSIBLE CHARACTERS
01:00201E2A 2001            	  4148: PNTZ1    MOVE.L  D1,D0          UNSAVE IT
01:00201E2C 2602            	  4149:          MOVE.L  D2,D3          COUNT DOWN FROM HERE
01:00201E2E 5383            	  4150:          SUBQ.L  #1,D3          BACK OFF ONE
01:00201E30 670C            	  4151:          BEQ.S   PNTZ4          IF NO ROTATE SKIP THIS
01:00201E32 E880            	  4152: PNTZ2    ASR.L   #4,D0          ROTATE LRIGHT
01:00201E34 02800FFFFFFF    	  4153:          ANDI.L  #$FFFFFFF,D0   CLEAR TOP NIBBLE
01:00201E3A 5383            	  4154:          SUBQ.L  #1,D3
01:00201E3C 66F4            	  4155:          BNE     PNTZ2
01:00201E3E 0200000F        	  4156: PNTZ4    ANDI.B  #$F,D0         SAVE ONLY NIBBLE
01:00201E42 6604            	  4157:          BNE.S   PNTZ3
01:00201E44 4A04            	  4158:          TST.B   D4             SEE IF STILL SURPRESSING
01:00201E46 6706            	  4159:          BEQ.S   PNTZ8
01:00201E48 6100FF60        	  4160: PNTZ3    BSR     PUTHEX         PUT A HEX CHAR IN BUFFER
01:00201E4C 1800            	  4161:          MOVE.B  D0,D4          MARK AS NON-SURPRESSING MODE
01:00201E4E 5382            	  4162: PNTZ8    SUBQ.L  #1,D2          DO ANOTHER CHAR
01:00201E50 66D8            	  4163:          BNE     PNTZ1
01:00201E52 4A04            	  4164:          TST.B   D4             SEE IF ANYTHING PRINTED
01:00201E54 6604            	  4165:          BNE.S   PNTZ9
01:00201E56 1CFC0030        	  4166: PNTZ81   MOVE.B  #'0',(A6)+     MOVE AT LEAST ONE ZERO
01:00201E5A 4E75            	  4167: PNTZ9    RTS
                            	  4168: 
                            	  4169: * FIND NEXT FIELD... (A5) POINTS TO FIELD, (A0) NULL FIELD RETURN
                            	  4170: *   *-*-WARNING-*-* IF (A0) RETURN IS USED;  RETURN MUST BE AT
                            	  4171: *                   SAME SUBROUTINE LEVEL OR STACK GETS SCREWED UP
                            	  4172: *
                            	  4173: *  SKIP LEADING SPACES
                            	  4174: *  TERMINATE NULL FIELD ON COMA ,SEMICOLEN OR A5=A6
                            	  4175: 
01:00201E5C 528D            	  4176: FNEXTF1  ADDQ.L  #1,A5
                            	  4177: 
01:00201E5E 1015            	  4178: FNEXTF   MOVE.B  (A5),D0        ENTRY POINT
01:00201E60 BBCE            	  4179:          CMP.L   A6,A5
01:00201E62 6414            	  4180:          BCC.S   FNEXTF7        AT END OF BUFFER
01:00201E64 0C000020        	  4181:          CMPI.B  #BLANK,D0
01:00201E68 67F2            	  4182:          BEQ     FNEXTF1        SPACE
                            	  4183: 
01:00201E6A 0C00002C        	  4184:          CMPI.B  #',',D0
01:00201E6E 6708            	  4185:          BEQ.S   FNEXTF7        COMMA - NULL FIELD
01:00201E70 0C00003B        	  4186:          CMPI.B  #';',D0
01:00201E74 6702            	  4187:          BEQ.S   FNEXTF7        SEMICOLON - NULL FIELD
01:00201E76 4E75            	  4188:          RTS                    NORMAL FOUND FIELD RETURN
                            	  4189: 
01:00201E78 588F            	  4190: FNEXTF7  ADDQ.L  #4,A7          TRIM STACK
01:00201E7A 4ED0            	  4191:          JMP     (A0)           NULL FIELD RETURN
                            	  4192: 
                            	  4193: **************************************************************
                            	  4194: * THIS ROUTINE MAKES SURE YOU ARE ON THE CORRECT BOUNDRY.    *
                            	  4195: *  D0 = ARGUMENT...   CHECKS ADDRESS AND WORD ALIGNMENTS.   *
                            	  4196: **************************************************************
                            	  4197: 
01:00201E7C E298            	  4198: CKWADR   ROR.L   #1,D0
01:00201E7E E398            	  4199:          ROL.L   #1,D0
01:00201E80 6508            	  4200:          BCS.S   CKADR39        NOT WORD ALIGNED
                            	  4201: 
01:00201E82 0C8001000000    	  4202: CKADDR   CMPI.L  #$1000000,D0   VALID ADDRESS?
01:00201E88 6514            	  4203:          BCS.S   CKADR99        GOOD ADDRESS
                            	  4204: 
01:00201E8A 4BFA0014        	  4205: CKADR39  LEA     MSG018(PC),A5
01:00201E8E 6100E65A        	  4206:          BSR     FIXDATA
01:00201E92 6100FEF8        	  4207:          BSR     PNT8HX
01:00201E96 61000142        	  4208:          BSR     OUT1CR
01:00201E9A 6000E78A        	  4209:          BRA     MACSBUG
                            	  4210: 
01:00201E9E 4E75            	  4211: CKADR99  RTS
                            	  4212: 
01:00201EA0 494E56414C494420	  4213: MSG018   DC.B    'INVALID ADDRESS=',EOT
01:00201EA8 414444524553533D
01:00201EB0 04
                            	  4214: 
                            	  4215: 
                            	  4216: 
                            	  4217: 
01:00201EB1 00              	  4218:          DC.B    0              PAD BYTE
                            	  4219: 
                            	  4220: * EVALUATE EXPRESSION
                            	  4221: *  NUMBER PLUS OR MINUS NUMBER....
                            	  4222: *
01:00201EB2 2F07            	  4223: GETEXP   MOVE.L  D7,-(A7)       SAVE D7
01:00201EB4 7E00            	  4224:          CLR.L   D7
01:00201EB6 6128            	  4225: GETEXP21 BSR.S   GETNUMA        GET NUMBER
01:00201EB8 DE80            	  4226:          ADD.L   D0,D7          D7 = NUMBER BEING BUILT
01:00201EBA 121D            	  4227: GETEXP15 MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
01:00201EBC 7000            	  4228:          CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
01:00201EBE 0C01002B        	  4229:          CMPI.B  #'+',D1
01:00201EC2 67F2            	  4230:          BEQ     GETEXP21       PLUS
01:00201EC4 0C01002D        	  4231:          CMPI.B  #'-',D1
01:00201EC8 6606            	  4232:          BNE.S   GETEXP39       NOT MINUS
01:00201ECA 6114            	  4233:          BSR.S   GETNUMA        GET NEXT NUMBER
01:00201ECC 9E80            	  4234:          SUB.L   D0,D7
01:00201ECE 60EA            	  4235:          BRA     GETEXP15
                            	  4236: 
01:00201ED0 2007            	  4237: GETEXP39 MOVE.L  D7,D0          D0 = VALUE BUILT
01:00201ED2 538D            	  4238:          SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
01:00201ED4 2E1F            	  4239:          MOVE.L  (A7)+,D7       RESTORE D7
01:00201ED6 4E75            	  4240:          RTS
                            	  4241: 
                            	  4242: *   ROUTINES TO CONVERT STRING TO BINARY VALUE
                            	  4243: *
                            	  4244: *        ACCEPTS PREFIXES:
                            	  4245: *         % binary
                            	  4246: *         @ octal
                            	  4247: *         & decimal
                            	  4248: *         $ hex
                            	  4249: *
01:00201ED8 610A            	  4250: GETNUMD  BSR.S   GETDECNU       GET DECIMAL NUMBER
01:00201EDA 6600E5CC        	  4251: GETNUMD9 BNE     ERROR
01:00201EDE 4E75            	  4252:          RTS
                            	  4253: 
01:00201EE0 610A            	  4254: GETNUMA  BSR.S   GETHEXNU       GET HEX NUMBER
01:00201EE2 60F6            	  4255:          BRA     GETNUMD9
                            	  4256: 
01:00201EE4 48E77C80        	  4257: GETDECNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A DECIMAL NUMBER
01:00201EE8 760A            	  4258:          MOVEQ   #10,D3         D3 = BASE (DECIMAL)
01:00201EEA 6006            	  4259:          BRA.S   GETN20
                            	  4260: 
01:00201EEC 48E77C80        	  4261: GETHEXNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A HEX NUMBER
01:00201EF0 7610            	  4262:          MOVEQ   #16,D3         D3 = BASE
                            	  4263: 
01:00201EF2 4244            	  4264: GETN20   CLR.W   D4             D4 = FLAG FOR CHARACTER HIT
01:00201EF4 7200            	  4265:          CLR.L   D1             D1 = TEMP RESULTS
01:00201EF6 0C150020        	  4266:          CMPI.B  #BLANK,(A5)
01:00201EFA 6778            	  4267:          BEQ.S   GETN80         FIRST CHAR SPACE; ERROR
                            	  4268: 
01:00201EFC BBCE            	  4269: GETN30   CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:00201EFE 677A            	  4270:          BEQ.S   GETN90
01:00201F00 7000            	  4271:          CLR.L   D0
01:00201F02 101D            	  4272:          MOVE.B  (A5)+,D0       D0 = CHARACTER
                            	  4273: 
01:00201F04 41FA007E        	  4274:          LEA     GETNDATA(PC),A0 POINTER TO TERMINATE CHARS
01:00201F08 1A18            	  4275: GETN40   MOVE.B  (A0)+,D5       D5 = TERMINATION CHAR
01:00201F0A 6706            	  4276:          BEQ.S   GETN50         NOT TERM.CHAR
01:00201F0C B005            	  4277:          CMP.B   D5,D0
01:00201F0E 6768            	  4278:          BEQ.S   GETN85         FOUND TERMINATION CHAR; EXIT
01:00201F10 60F6            	  4279:          BRA     GETN40
                            	  4280: 
01:00201F12 0C000025        	  4281: GETN50   CMPI.B  #'%',D0        SEE IF FLAGGED AS BINARY
01:00201F16 660A            	  4282:          BNE.S   GETN60
01:00201F18 7602            	  4283:          MOVEQ   #2,D3          BASE IS BINARY
01:00201F1A 4A44            	  4284: GETN55   TST.W   D4             ANYTHING ENTERED
01:00201F1C 6656            	  4285:          BNE.S   GETN80         CONFLICT
                            	  4286: 
01:00201F1E 78FF            	  4287: GETN57   MOVEQ   #-1,D4         SET DATA ENTERED FLAG
01:00201F20 60DA            	  4288:          BRA     GETN30
                            	  4289: 
01:00201F22 0C000040        	  4290: GETN60   CMPI.B  #'@',D0        SEE IF FLAGGED AS OCTAL
01:00201F26 6604            	  4291:          BNE.S   GETN65
01:00201F28 7608            	  4292:          MOVEQ   #8,D3          BASE IS OCTAL
01:00201F2A 60EE            	  4293:          BRA     GETN55
                            	  4294: 
01:00201F2C 0C000026        	  4295: GETN65   CMPI.B  #'&',D0        SEE IF FLAGGED AS DECIMAL
01:00201F30 6604            	  4296:          BNE.S   GETN70
01:00201F32 760A            	  4297:          MOVEQ   #10,D3         BASE IS DECIMAL
01:00201F34 60E4            	  4298:          BRA     GETN55
                            	  4299: 
01:00201F36 0C000024        	  4300: GETN70   CMPI.B  #'$',D0        SEE IF FLAGGED AS HEX
01:00201F3A 6604            	  4301:          BNE.S   GETN75
01:00201F3C 7610            	  4302:          MOVEQ   #16,D3         BASE IS 16
01:00201F3E 60DA            	  4303:          BRA     GETN55
                            	  4304: 
01:00201F40 04000030        	  4305: GETN75   SUBI.B  #$30,D0
01:00201F44 6D2E            	  4306:          BLT.S   GETN80         LESS THAN ZERO
01:00201F46 0C000009        	  4307:          CMPI.B  #9,D0
01:00201F4A 6F0E            	  4308:          BLE.S   GETN77         VALUE 0 - 9
01:00201F4C 0C000011        	  4309:          CMPI.B  #$11,D0
01:00201F50 6D22            	  4310:          BLT.S   GETN80         LESS THAN A
01:00201F52 0C000016        	  4311:          CMPI.B  #$16,D0
01:00201F56 6E1C            	  4312:          BGT.S   GETN80         GREATER THAN F
01:00201F58 5F00            	  4313:          SUBQ.B  #7,D0          MAKE BINARY
                            	  4314: 
01:00201F5A B043            	  4315: GETN77   CMP.W   D3,D0          IS INPUT LARGER THAN BASE
01:00201F5C 6416            	  4316:          BCC.S   GETN80         LARGER THAN BASE
01:00201F5E 2401            	  4317:          MOVE.L  D1,D2          GET READY TO MULTIPLY D1*BASE
01:00201F60 4841            	  4318:          SWAP    D1
01:00201F62 C2C3            	  4319:          MULU    D3,D1          TOP PART
01:00201F64 4841            	  4320:          SWAP    D1
01:00201F66 4A41            	  4321:          TST.W   D1             CHECK FOR OVERFLOW
01:00201F68 660A            	  4322:          BNE.S   GETN80         VALUE IS TOO LARGE
01:00201F6A C4C3            	  4323:          MULU    D3,D2          NOW WORK ON LOW WORD
01:00201F6C D282            	  4324:          ADD.L   D2,D1          PUT IT BACK TOGETHER
01:00201F6E 6904            	  4325:          BVS.S   GETN80         OVERFLOW?
01:00201F70 D280            	  4326:          ADD.L   D0,D1          ADD IN NEW STUFF
01:00201F72 68AA            	  4327:          BVC     GETN57
01:00201F74 70FF            	  4328: GETN80   MOVEQ   #-1,D0         ERROR RETURN (BNE)
01:00201F76 6006            	  4329:          BRA.S   GETN95
                            	  4330: 
01:00201F78 538D            	  4331: GETN85   SUBQ.L  #1,A5          BACK UP TO POINT AT SPACE/PREVIOUS CHAR
01:00201F7A 2001            	  4332: GETN90   MOVE.L  D1,D0          SET UP RESULT FOR RETURN
01:00201F7C 7200            	  4333:          CLR.L   D1             NORMAL RETURN (BEQ)
01:00201F7E 4CDF013E        	  4334: GETN95   MOVEM.L (A7)+,D1-D5/A0 RESTORE SOME REGISTERS
01:00201F82 4E75            	  4335:          RTS
                            	  4336: 
01:00201F84 20282B2C2D2E3A3B	  4337: GETNDATA DC.B    ' (+,-.:;=^]',0 TERMINATE CHARS
01:00201F8C 3D5E5D
01:00201F8F 00
                            	  4338: 
                            	  4339: 
                            	  4340: 
                            	  4341: *
                            	  4342: *  ***GETHEX***  GET HEX (BINARY VALUE FROM ASCII)
                            	  4343: *   D0.B HAS ASCII CHAR  RETURNS $0-$F BINARY
                            	  4344: *
01:00201F90 0C000030        	  4345: GETHEX CMPI.B    #$30,D0        IS IT LESS THAN ZERO
01:00201F94 6D1C            	  4346:        BLT.S     PNMSG011
01:00201F96 0C000039        	  4347:        CMPI.B    #$39,D0        IS IT GREATER THAN 9
01:00201F9A 6F0E            	  4348:        BLE.S     GTHX2          GOOD HEX
                            	  4349: 
01:00201F9C 0C000041        	  4350:        CMPI.B    #$41,D0        IS IT LESS THAN 'A'
01:00201FA0 6D10            	  4351:        BLT.S     PNMSG011
01:00201FA2 0C000046        	  4352:        CMPI.B    #$46,D0        IS IT GT 'F'
01:00201FA6 6E0A            	  4353:        BGT.S     PNMSG011
01:00201FA8 5F00            	  4354:        SUBQ.B    #7,D0          MAKE IT SMALLER A=10
01:00201FAA 02800000000F    	  4355: GTHX2  ANDI.L    #$F,D0
01:00201FB0 4E75            	  4356:        RTS
                            	  4357: 
01:00201FB2 610000CC        	  4358: PNMSG011 BSR     FIXBUF         PRINT NOT A HEX DIGIT
01:00201FB6 1CC0            	  4359:          MOVE.B  D0,(A6)+       PUT IN OFFENDING CHAR
01:00201FB8 4BFA000A        	  4360:          LEA     MSG011(PC),A5  '  IS NOT A HEX DIGIT'
01:00201FBC 6100E530        	  4361:          BSR     FIXDADD
01:00201FC0 6000E4DE        	  4362:          BRA     MSG            GO PRINT IT AND ENTER MACSBUG
                            	  4363: 
01:00201FC4 20204953204E4F54	  4364: MSG011   DC.B    '  IS NOT A HEX DIGIT',EOT
01:00201FCC 2041204845582044
01:00201FD4 49474954
01:00201FD8 04
                            	  4365: 
                            	  4366: 
                            	  4367: 
                            	  4368: 
                            	  4369: 
01:00201FD9 00              	  4370:          DC.B    0              PAD BYTE
                            	  4371: 
                            	  4372: 
                            	  4373: 
                            	  4374: 
                            	  4375: *-------------------------------------------------------------------------
                            	  4376: * File X         COMMON I/O                                       05/17/82
                            	  4377: 
                            	  4378: ******************************
                            	  4379: *
                            	  4380: *    SEND LINE TO PORT1 WITH CR/LF
                            	  4381: *
01:00201FDA 1CFC000D        	  4382: OUT1CR   MOVE.B  #CR,(A6)+
01:00201FDE 1CFC000A        	  4383:          MOVE.B  #LF,(A6)+
01:00201FE2 4AB8061C        	  4384:          TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
01:00201FE6 6706            	  4385:          BEQ.S   OUT1CRX
01:00201FE8 2F38061C        	  4386:          MOVE.L  OUTTO,-(A7)    PUSH ON STACK
01:00201FEC 4E75            	  4387:          RTS                    GO DO IT
                            	  4388: 
01:00201FEE 2F380630        	  4389: OUT1CRX  MOVE.L  OUTPORT1,-(A7) GO TO I/O ADDRESS
01:00201FF2 4E75            	  4390:          RTS                    ; (THIS NORMALLY GOES TO OUT1CR0)
                            	  4391: *
                            	  4392: OUT1CR0  DS      0
                            	  4393: *
                            	  4394: *    OUTPUT BUFFER TO PORT1
                            	  4395: *
01:00201FF4 48E7F0C0        	  4396: OUTPUT   MOVEM.L D0-D3/A0-A1,-(A7) GET SOME WORKING ROOM
01:00201FF8 7600            	  4397:          CLR.L   D3             D3 = NO OFFSET INTO NULL CHARACTERS
01:00201FFA 6160            	  4398:          BSR.S   GETSER1        A0 = GET SERIAL PORT 1 ADDRESS
01:00201FFC 601E            	  4399:          BRA.S   OUTP2
                            	  4400: *
                            	  4401: *    SEND LINE TO PORT2 WITH CR
                            	  4402: *
01:00201FFE 1CFC000D        	  4403: OUTPUT2  MOVE.B  #$D,(A6)+      TACK ON A "CR"
01:00202002 4AB8061C        	  4404:          TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
01:00202006 6706            	  4405:          BEQ.S   OUTPUT2X
01:00202008 2F38061C        	  4406:          MOVE.L  OUTTO,-(A7)    PUSH ON STACK
01:0020200C 4E75            	  4407:          RTS                    GO DO IT
                            	  4408: 
01:0020200E 2F380638        	  4409: OUTPUT2X MOVE.L  OUTPORT2,-(A7) GO TO IO ROUTINE
01:00202012 4E75            	  4410:          RTS                    ; (THIS NORMALLY GOES TO OUTPUT20)
                            	  4411: *
                            	  4412: OUTPUT20 DS      0
                            	  4413: *
                            	  4414: *     OUTPUT BUFFER TO PORT2
                            	  4415: *
01:00202014 48E7F0C0        	  4416: OUTPUT21 MOVEM.L D0-D3/A0-A1,-(A7)
01:00202018 7601            	  4417:          MOVEQ   #1,D3          SIGNAL FOR PORT2
01:0020201A 6152            	  4418:          BSR.S   GETSER2        RETURNS SERIAL PORT 2 BASE ADDRESS IN A0
                            	  4419: *
                            	  4420: *   SEND BUFFER TO PORT
                            	  4421: *
01:0020201C BBCE            	  4422: OUTP2    CMP.L   A6,A5          SEE IF AT OR BEYOND END OF LINE
01:0020201E 6506            	  4423:          BCS.S   OUTP3          NO... KEEP GOING, ELSE
01:00202020 4CDF030F        	  4424:          MOVEM.L (A7)+,D0-D3/A0-A1 RESTORE REGISTERS
01:00202024 4E75            	  4425:          RTS                    END OF ROUTINE
                            	  4426: 
01:00202026 101D            	  4427: OUTP3    MOVE.B  (A5)+,D0       GRAB BYTE TO OUTPUT
01:00202028 6102            	  4428:          BSR.S   OUTCH1         GO PRINT IT
01:0020202A 60F0            	  4429:          BRA.S   OUTP2          GO DO ANOTHER
                            	  4430: 
                            	  4431: *   SEND CHARACTER IN D0.B TO PORT1
                            	  4432: *   WHOSE BASE ADDRESS IS IN A0
                            	  4433: *   D3=0 FOR PORT1  D3=1 FOR PORT2
                            	  4434: *   PUTS IN NULL PADDING AS NEEDED
                            	  4435: *
01:0020202C 610001D6        	  4436: OUTCH1   BSR     OUTCH          GO PRINT D0
01:00202030 4A00            	  4437:          TST.B   D0             SEE IF NULL
01:00202032 6726            	  4438:          BEQ.S   OUTCHRTS       JUST END IF NULL
01:00202034 7400            	  4439:          CLR.L   D2             CLEAR UPPER BYTES OF NULL LOOP COUNTER
01:00202036 43F80618        	  4440:          LEA     NULLPADS,A1    FORM ADDRESS OF PADS
01:0020203A D3C3            	  4441:          ADD.L   D3,A1          D3=0 FOR PORT1 1=PORT2
01:0020203C 1411            	  4442:          MOVE.B  (A1),D2        DEFAULT NULL PADS
01:0020203E 0C00000D        	  4443:          CMPI.B  #$D,D0         SEE IF CR
01:00202042 6608            	  4444:          BNE.S   OUTCH2
01:00202044 43F8061A        	  4445:          LEA     CRPADS,A1      FORM ADDRESS OF CR PADS
01:00202048 D3C3            	  4446:          ADD.L   D3,A1          D3=0 FOR PORT1  1=PORT2
01:0020204A 1411            	  4447:          MOVE.B  (A1),D2        NULLS AFTER CR
01:0020204C 4A82            	  4448: OUTCH2   TST.L   D2  SEE        IF ANY PADDS TO BE SEND
01:0020204E 670A            	  4449:          BEQ.S   OUTCHRTS       0=NONE
01:00202050 7000            	  4450:          CLR.L   D0             0=NULL CHAR TO BE SEND
01:00202052 610001B0        	  4451: OUTCH3   BSR     OUTCH          SEND A NULL
01:00202056 5382            	  4452:          SUBQ.L  #1,D2          LOOP AROUND
01:00202058 66F8            	  4453:          BNE     OUTCH3
01:0020205A 4E75            	  4454: OUTCHRTS RTS                    END OF OUTCH ROUTINE
                            	  4455: 
                            	  4456: *
                            	  4457: *   GET BASE ADDRESS OF SERIAL PORT 1 IN  A0
                            	  4458: *
                            	  4459: 
01:0020205C 41F9003C0008    	  4460: GETSER1  LEA     SER1,A0        DEFAULT
01:00202062 4AB80624        	  4461:          TST.L   ALTSER1        IF ALTERNATE IS ZERO
01:00202066 6704            	  4462:          BEQ.S   RETURN         THEN RETURN
01:00202068 20780624        	  4463:          MOVE.L  ALTSER1,A0     ELSE USE ALTERNATE SERIAL PORT 1
01:0020206C 4E75            	  4464: RETURN   RTS     RETURN         (USED FROM A COUPLE OF PLACES)
                            	  4465: 
                            	  4466: 
                            	  4467: *
                            	  4468: *   GET BASE ADDRESS OF SERIAL PORT 2 IN A0
                            	  4469: *
                            	  4470: 
01:0020206E 41F9003C0008    	  4471: GETSER2  LEA     SER2,A0        DEFAULT SERIAL PORT 2
01:00202074 4AB80628        	  4472:          TST.L   ALTSER2        IF ALTERNATE IS ZERO
01:00202078 67F2            	  4473:          BEQ     RETURN         THEN RETURN
01:0020207A 20780628        	  4474:          MOVE.L  ALTSER2,A0     ELSE USE ALTERNATE SERIAL PORT 2
01:0020207E 4E75            	  4475:          RTS                    RETURN
                            	  4476: *
                            	  4477: *     FIX THE BUFFER A5 & A6 SET TO START OF BUFFER QUE
                            	  4478: *
01:00202080 4BF80540        	  4479: FIXBUF   LEA     BUFFER,A5
01:00202084 2C4D            	  4480:          MOVE.L  A5,A6
01:00202086 4E75            	  4481:          RTS
                            	  4482: 
                            	  4483: *   INPUT A LINE FROM PORT1
                            	  4484: *
01:00202088 4AB80620        	  4485: PORTIN1  TST.L   INFROM         SEE IF ALTERNAME ADDRESS
01:0020208C 6706            	  4486:          BEQ.S   PORTIN1X
01:0020208E 2F380620        	  4487:          MOVE.L  INFROM,-(A7)   PUSH ON STACK
01:00202092 4E75            	  4488:          RTS                    GO DO IT
01:00202094 2F38062C        	  4489: PORTIN1X MOVE.L  INPORT1,-(A7)  GO TO IO ROUTINE
01:00202098 4E75            	  4490:          RTS                    NORMALLY GOES TO PORTIN10
                            	  4491: 
01:0020209A 48E7F9E0        	  4492: PORTIN1N MOVEM.L D0-D4/D7/A0-A2,-(A7)
01:0020209E 4A3804E8        	  4493:          TST.B   XONOFF+2
01:002020A2 6608            	  4494:          BNE.S   PORTIN1V       OVERRIDE "No Auto Line Feed"
01:002020A4 7E01            	  4495:          MOVEQ   #1,D7          "No Auto Line Feed" Entry point
01:002020A6 6006            	  4496:          BRA.S   PORTIN1W
                            	  4497: 
                            	  4498: * ENTRY ALSO POSSIBLE FROM:  PORTIN2
01:002020A8 48E7F9E0        	  4499: PORTIN10 MOVEM.L D0-D4/D7/A0-A2,-(A7)
01:002020AC 7E00            	  4500: PORTIN1V CLR.L   D7             "Auto Line Feed" Entry point.
01:002020AE 7600            	  4501: PORTIN1W CLR.L   D3             FLAG AS PORT1
01:002020B0 61AA            	  4502:          BSR     GETSER1        MOVE ADDRESS INTO A0
                            	  4503: 
01:002020B2 610002DC        	  4504: READBUF  BSR     INCHNE         GO GET SOME DATA  (NO ECHO)
01:002020B6 4A00            	  4505:          TST.B   D0             CHECK FOR NULLS
01:002020B8 67F8            	  4506:          BEQ.S   READBUF
01:002020BA 3800            	  4507:          MOVE.W  D0,D4          SAVE FOR A WHILE
01:002020BC 6100FF6E        	  4508:          BSR     OUTCH1         ECHO WHAT IS IN D0
01:002020C0 3004            	  4509:          MOVE.W  D4,D0          RESTORE IT
01:002020C2 0C00000A        	  4510:          CMPI.B  #LF,D0         SEE IF LINE FEED
01:002020C6 67EA            	  4511:          BEQ.S   READBUF        DONT PUT IT IN BUFFER
                            	  4512: 
01:002020C8 0C000018        	  4513:          CMPI.B  #CTLX,D0       SEE IF CTRL-X "CANCEL LINE"
01:002020CC 6610            	  4514:          BNE.S   CHKCTLH        No... Then go check for backspace
01:002020CE 700D            	  4515:          MOVEQ   #CR,D0         Yes.. 1) Send a carriage return
01:002020D0 6100FF5A        	  4516:          BSR     OUTCH1         *
01:002020D4 700A            	  4517:          MOVEQ   #LF,D0         *     2) Send a line feed
01:002020D6 6100FF54        	  4518:          BSR     OUTCH1         *
01:002020DA 2C4D            	  4519:          MOVE.L  A5,A6          *     3) Set BUFFER at start again
01:002020DC 60D4            	  4520:          BRA.S   READBUF        *     4) Restart this routine
                            	  4521: 
01:002020DE 0C000008        	  4522: CHKCTLH  CMPI.B  #CTLH,D0       CTRL-H? (Backspace)
01:002020E2 6714            	  4523:          BEQ.S   BS4CTLH        Yes...  Go backspace 1 character
01:002020E4 0C00007F        	  4524:          CMPI.B  #DEL,D0        DEL?    (Also a Backspace)
01:002020E8 6624            	  4525:          BNE.S   CHKCTLD        No....  Then go check for CTRL D
01:002020EA BDCD            	  4526: BKSPACE  CMP.L   A5,A6          Yes...  Usually need an extra "Backspace"
01:002020EC 67C4            	  4527:          BEQ     READBUF        If at start of buffer, don't back up any more.
01:002020EE 103C0008        	  4528:          MOVE.B  #CTLH,D0       Backspace cursor.
01:002020F2 6100FF38        	  4529:          BSR     OUTCH1         *
01:002020F6 6004            	  4530:          BRA.S   BLANKIT        Bypass check for start of buffer
                            	  4531: 
                            	  4532: BS4CTLH  DS      0              CTL-H already backed up 1 character.
01:002020F8 BDCD            	  4533:          CMP.L   A5,A6          At beginning of buffer?
01:002020FA 67B6            	  4534:          BEQ     READBUF        Yes...  Then don't back up any more.
01:002020FC 7020            	  4535: BLANKIT  MOVEQ   #$20,D0        Now blank out previous character.
01:002020FE 6100FF2C        	  4536:          BSR     OUTCH1         *
01:00202102 1026            	  4537:          MOVE.B  -(A6),D0       Remove last character from buffer.
01:00202104 103C0008        	  4538:          MOVE.B  #CTLH,D0       Backup cursor again.
01:00202108 6100FF22        	  4539:          BSR     OUTCH1         *
01:0020210C 60A4            	  4540:          BRA     READBUF        Go get next character.
                            	  4541: 
01:0020210E 0C000004        	  4542: CHKCTLD  CMPI.B  #CTLD,D0       CTL D?  (REPRINT)
01:00202112 6626            	  4543:          BNE.S   CHKCR          No....  Then go check if a "CR".
01:00202114 700D            	  4544:          MOVEQ   #CR,D0         Yes...  Print "CR"
01:00202116 6100FF14        	  4545:          BSR     OUTCH1         *
01:0020211A 700A            	  4546:          MOVEQ   #LF,D0         Print "LF"
01:0020211C 6100FF0E        	  4547:          BSR     OUTCH1         *
01:00202120 2F0D            	  4548:          MOVE.L  A5,-(A7)       SAVE ON STACK FOR A MOMENT
01:00202122 6100FED0        	  4549:          BSR     OUTPUT         GO PRINT BUFFER
01:00202126 2A5F            	  4550:          MOVE.L  (A7)+,A5       GET BACK FROM STACK
01:00202128 6088            	  4551:          BRA     READBUF
                            	  4552: 
01:0020212A 1CC0            	  4553: CHARSAVE MOVE.B  D0,(A6)+       SAVE DATA INTO BUFFER
01:0020212C 220E            	  4554:          MOVE.L  A6,D1          CALCULATE ROOM USED
01:0020212E 928D            	  4555:          SUB.L   A5,D1          DONT USE MORE THAN "BUFFSIZE"
01:00202130 0C410080        	  4556:          CMPI.W  #BUFFSIZE,D1
01:00202134 6B00FF7C        	  4557:          BMI     READBUF        We're OK, go get next character.
01:00202138 60B0            	  4558:          BRA     BKSPACE        If not, handle as though a "CNTL-H"
                            	  4559: 
01:0020213A 0C00000D        	  4560: CHKCR    CMPI.B  #CR,D0         CR?  (End of command line).
01:0020213E 66EA            	  4561:          BNE.S   CHARSAVE       No.. Then go store this character.
                            	  4562: 
01:00202140 4A07            	  4563:          TST.B   D7             Check "Auto Line Feed" switch
01:00202142 6606            	  4564:          BNE.S   NOAUTOLF       Yes.. Bypass sending Line feed.
01:00202144 700A            	  4565:          MOVEQ   #LF,D0         No... Set one up and...
01:00202146 6100FEE4        	  4566:          BSR     OUTCH1         .     Send it!
                            	  4567: NOAUTOLF DS      0
                            	  4568: 
01:0020214A 4CDF079F        	  4569:  MOVEM.L (A7)+,D0-D4/D7/A0-A2 Restore Regs.
01:0020214E 4E75            	  4570:          RTS                    RETURN TO CALLER
                            	  4571: 
                            	  4572: 
                            	  4573: 
                            	  4574: 
                            	  4575: 
                            	  4576: *-------------------------------------------------------------------------
                            	  4577: * File Y         TUTOR     I/O Routine                            05/19/82
                            	  4578: 
                            	  4579: LTIME    SET     205000         LONG TIMER 5 SEC @ 8 MHZ
                            	  4580: STIME    SET     41000          SHORT TIMER  100 MLS @ 8 MHZ
                            	  4581: 
                            	  4582: PDI1     SET     $0F0000        PARALLEL PORT ADDRESS
                            	  4583: PITCDDR  SET     $0F0009        PORT C DATA DIRECTION REGISTER
                            	  4584: PITPCDR  SET     $0F0019        PORT C DATA REGISTER
                            	  4585: PITTCR   SET     $0F0021        TIMER CONTROL REGISTER
                            	  4586: PSTATUS  SET     $B             PRINTER STATUS
                            	  4587: PBDATA   SET     3              PRINTER CONTROL--BUSY,PAPER,SELECT
                            	  4588: PDATA    SET     1              PRINTER DATA
                            	  4589: SER1     SET     $3C0008        TERMINAL
                            	  4590: SER2     SET     $3C0008        SERIAL PORT2 ADDRESS
                            	  4591: 
                            	  4592: *        PRINTER DRIVER
                            	  4593: *
                            	  4594: *    SEND BUFFER TO PRINTER
                            	  4595: *
                            	  4596: PRCRLF   DS      0
                            	  4597: 
01:00202150 48E70006        	  4598:          MOVEM.L A5-A6,-(A7)    SAVE REGISTERS
                            	  4599: *
                            	  4600: *   SEND LINE
                            	  4601: *
01:00202154 BBCE            	  4602: LIST     CMP.L   A6,A5          SEE IF AT END OF BUFFER
01:00202156 6B06            	  4603:          BMI.S   LIST1
01:00202158 4CDF6000        	  4604:          MOVEM.L (A7)+,A5-A6    RESTORE REGISTERS
01:0020215C 4E75            	  4605:          RTS
                            	  4606: *
01:0020215E 101D            	  4607: LIST1    MOVE.B  (A5)+,D0       GRAB BYTE
01:00202160 6102            	  4608:          BSR.S   CHRPRINT       PRINT CHAR
01:00202162 60F0            	  4609:          BRA     LIST
                            	  4610: 
                            	  4611: * OUTPUT CHAR IN D0 TO PRINTER
01:00202164 48E7C186        	  4612: CHRPRINT MOVEM.L D0/D1/D7/A0/A5/A6,-(A7) SAVE SOME REGISTERS
01:00202168 610000D2        	  4613: LIST2    BSR     CHKBRK         CHECK FOR BREAK
                            	  4614: 
01:0020216C 2078064E        	  4615:          MOVE.L  PDIPORT,A0     A0 = ADDRESS OF PORT
                            	  4616: 
01:00202170 102F0003        	  4617:          MOVE.B  3(A7),D0       D0 = CHAR TO BE SENT
                            	  4618: * CHANGE CONTROL CHARS TO "."
01:00202174 0200007F        	  4619:          ANDI.B  #$7F,D0
01:00202178 0C00000D        	  4620:          CMPI.B  #CR,D0
01:0020217C 6716            	  4621:          BEQ.S   LIST25         OK CARRIAGE RETURN
01:0020217E 0C00000A        	  4622:          CMPI.B  #LF,D0
01:00202182 6710            	  4623:          BEQ.S   LIST25         OK LINE FEED
01:00202184 0C000020        	  4624:          CMPI.B  #$20,D0
01:00202188 6D06            	  4625:          BLT.S   LIST24
01:0020218A 0C00007F        	  4626:          CMPI.B  #$7F,D0
01:0020218E 6D04            	  4627:          BLT.S   LIST25
01:00202190 103C002E        	  4628: LIST24   MOVE.B  #'.',D0        MAKE CHAR A PERIOD
                            	  4629: LIST25   DS      0
                            	  4630: 
01:00202194 11400001        	  4631:          MOVE.B  D0,PDATA(A0)   SEND DATA
01:00202198 13FC0068000F000D	  4632:          MOVE.B  #$68,PDI1+13   STROBE PRINTER
                            	  4633: 
01:002021A0 13FC0060000F000D	  4634:          MOVE.B  #$60,PDI1+13
                            	  4635: 
                            	  4636: *
                            	  4637: *
01:002021A8 61000092        	  4638: LIST3    BSR     CHKBRK         CHECK FOR BREAK
01:002021AC 10280003        	  4639:          MOVE.B  PBDATA(A0),D0
01:002021B0 02000003        	  4640:          ANDI.B  #3,D0          PAPER OUT? DESELECTED?
01:002021B4 5300            	  4641:          SUBQ.B  #1,D0
01:002021B6 6728            	  4642:          BEQ.S   LIST5
01:002021B8 3E380652        	  4643:          MOVE.W  CRTPNT,D7
01:002021BC 42780652        	  4644:          CLR.W   CRTPNT
01:002021C0 4BFA002C        	  4645:          LEA     MSG007(PC),A5
01:002021C4 6100E324        	  4646:          BSR     FIXDATA
01:002021C8 6100FE2A        	  4647:          BSR     OUTPUT
                            	  4648: *
                            	  4649: *   WAIT FOR BREAK OR PRINTER TO BE READY
                            	  4650: *
01:002021CC 616E            	  4651: LERR1    BSR.S   CHKBRK
01:002021CE 10280003        	  4652:          MOVE.B  PBDATA(A0),D0
01:002021D2 02000003        	  4653:          ANDI.B  #3,D0
01:002021D6 5300            	  4654:          SUBQ.B  #1,D0
01:002021D8 66F2            	  4655:          BNE     LERR1          PRINTER NOT READY
01:002021DA 31C70652        	  4656:          MOVE.W  D7,CRTPNT      RESTORE POSSIBLE "PA" SWITCH
01:002021DE 6088            	  4657:          BRA     LIST2          TRY AGAIN
                            	  4658: 
01:002021E0 08280000000B    	  4659: LIST5    BTST.B  #0,PSTATUS(A0) ACKNOWLEDGE?
01:002021E6 67C0            	  4660:          BEQ.S   LIST3
                            	  4661: 
01:002021E8 4CDF6183        	  4662:          MOVEM.L (A7)+,D0/D1/D7/A0/A5/A6  RESTORE REGISTERS
01:002021EC 4E75            	  4663:          RTS
                            	  4664: 
01:002021EE 0D              	  4665: MSG007   DC.B    CR,LF,'PRINTER NOT READY',CR,LF,EOT
01:002021EF 0A
01:002021F0 5052494E54455220
01:002021F8 4E4F542052454144
01:00202200 59
01:00202201 0D
01:00202202 0A
01:00202203 04
                            	  4666: 
                            	  4667: 
                            	  4668: 
                            	  4669: 
                            	  4670: 
                            	  4671:          DS.B    0
                            	  4672: 
                            	  4673: *
                            	  4674: *       SEND CHARACTER IN D0.B TO SERIAL PORT IN (A0) (NO NULL PADS)
                            	  4675: *
01:00202204 6136            	  4676: OUTCH    BSR.S   CHKBRK         CHECK FOR BREAK
01:00202206 1210            	  4677:          MOVE.B  (A0),D1        READ STATUS AGAIN
01:00202208 02010002        	  4678:          ANDI.B  #$2,D1         CHECK FOR READY TO SEND
01:0020220C 67F6            	  4679:          BEQ.S   OUTCH          STILL NOT READY
01:0020220E 11400001        	  4680:          MOVE.B  D0,1(A0)       SEND CHARACTER  ****************
                            	  4681: 
                            	  4682: * IF PRINT FLAG SET GOTO PRINTER
01:00202212 670A            	  4683:          BEQ.S   OUTCH21        NULL; IGNORE SENDING TO PRINTER
01:00202214 4A780652        	  4684:          TST.W   CRTPNT
01:00202218 6704            	  4685:          BEQ.S   OUTCH21        CRT ONLY
01:0020221A 6100FF48        	  4686:          BSR     CHRPRINT       GOTO PRINTER
                            	  4687: OUTCH21  DS      0
                            	  4688: 
                            	  4689: *   CHECK FOR CONTROL W
01:0020221E 1210            	  4690:          MOVE.B  (A0),D1        READ STATUS
01:00202220 02010001        	  4691:          ANDI.B  #1,D1
01:00202224 6714            	  4692:          BEQ.S   CTLW9          CHAR NOT READY
01:00202226 12280001        	  4693:          MOVE.B  1(A0),D1       READ CHARACTER
01:0020222A 0C010017        	  4694:          CMPI.B  #CTLW,D1
01:0020222E 660A            	  4695:          BNE.S   CTLW9          NOT CNTL/W
01:00202230 610A            	  4696: CTLWH    BSR.S   CHKBRK         CHECK FOR BREAK
01:00202232 1210            	  4697:          MOVE.B  (A0),D1        READ STATUS
01:00202234 02010001        	  4698:          ANDI.B  #1,D1
01:00202238 67F6            	  4699:          BEQ     CTLWH          WAIT FOR ANY CHAR TO CONTINUE
01:0020223A 4E75            	  4700: CTLW9    RTS
                            	  4701: *
                            	  4702: *   CHECK FOR BREAK ON PORT #1
                            	  4703: *
01:0020223C 2F08            	  4704: CHKBRK   MOVE.L  A0,-(A7)       SAVE A0 * * *
01:0020223E 6100FE1C        	  4705:          BSR     GETSER1        RETURNS ADDRESS IN A0
01:00202242 1210            	  4706:          MOVE.B  (A0),D1        READ STATUS
01:00202244 02010010        	  4707:          ANDI.B  #$10,D1
01:00202248 661E            	  4708:          BNE.S   BREAK
01:0020224A 205F            	  4709:          MOVE.L  (A7)+,A0       RESTORE A0 * * *
01:0020224C 4E75            	  4710:          RTS
                            	  4711: 
                            	  4712: *    WHAT TO DO WHEN THE BREAK IS PRESSED
                            	  4713: *
                            	  4714: 
01:0020224E 42280001        	  4715: BREAK2   CLR.B   1(A0)          SEND NULL TO ACIA TO RESET
01:00202252 08100001        	  4716: BREAK1   BTST.B  #1,(A0)        CHECK IF "TRANSMIT READY"
01:00202256 67FA            	  4717:          BEQ.S   BREAK1         WAIT FOR READY
                            	  4718: 
01:00202258 10280001        	  4719:          MOVE.B  1(A0),D0       READ TWO CHARS
01:0020225C 10280001        	  4720:          MOVE.B  1(A0),D0       *
                            	  4721: 
01:00202260 08100004        	  4722:          BTST.B  #4,(A0)        SEE IF BREAK BUTTON RELEASED
01:00202264 66E8            	  4723:          BNE     BREAK2         NO... KEEP LOOPING
01:00202266 4E75            	  4724:          RTS
                            	  4725: 
01:00202268 61E4            	  4726: BREAK    BSR     BREAK2
01:0020226A 4BFA000E        	  4727:          LEA     MSG013(PC),A5  MSG:  "BREAK"
                            	  4728: 
01:0020226E 6100E28E        	  4729: BREAK79  BSR     FIXDCRLF       *
01:00202272 6100FD80        	  4730:          BSR     OUTPUT         PRINT MESSAGE
01:00202276 6000E3AE        	  4731:          BRA     MACSBUG        AND REENTER MACSBUG
                            	  4732: 
01:0020227A 0A              	  4733: MSG013   DC.B    LF,LF,'BREAK',CR,LF,LF,EOT
01:0020227B 0A
01:0020227C 425245414B
01:00202281 0D
01:00202282 0A
01:00202283 0A
01:00202284 04
                            	  4734: 
                            	  4735: 
                            	  4736: 
01:00202285 00              	  4737:          DC.B    0              PAD BYTE
                            	  4738: 
                            	  4739: ***  OUTPUT BUFFER TO TAPE  ***
01:00202286 48E7F8C0        	  4740: TAPEOUT  MOVEM.L D0-D4/A0-A1,-(A7)  SAVE REGISTERS
01:0020228A 204D            	  4741:          MOVE.L  A5,A0          REMEMBER WHERE BUFFER STARTS
01:0020228C 227C000F0000    	  4742:          MOVEA.L #PDI1,A1
01:00202292 42290021        	  4743:          CLR.B   $21(A1)
01:00202296 0C505330        	  4744:          CMPI.W  #'S0',(A0)     HEADER RECORD?
01:0020229A 6612            	  4745:          BNE.S   TAPEOUT2       NO
01:0020229C 137C00020009    	  4746:          MOVE.B  #2,9(A1)       YES, PC0 INPUT, PC1 OUTPUT
01:002022A2 363C02BC        	  4747:          MOVE.W  #700,D3        OUTPUT NULLS (HEADER)
01:002022A6 4200            	  4748: TAPEOUT1 CLR.B   D0
01:002022A8 6120            	  4749:          BSR.S   TAPEO
01:002022AA 5343            	  4750:          SUBQ.W  #1,D3
01:002022AC 66F8            	  4751:          BNE.S   TAPEOUT1
01:002022AE BBCE            	  4752: TAPEOUT2 CMP.L   A6,A5          SEE IF AT OR BEYOND END OF LINE
01:002022B0 6512            	  4753:          BCS.S   TAPEOUT4       NO. KEEP GOING.
01:002022B2 16380654        	  4754:          MOVE.B  TAPENULS,D3    OUTPUT NULLS AFTER EACH RECORD
01:002022B6 4200            	  4755: TAPEOUT5 CLR.B   D0             YES. OUTPUT A NULL
01:002022B8 6110            	  4756:          BSR.S   TAPEO
01:002022BA 5303            	  4757:          SUBQ.B  #1,D3
01:002022BC 66F8            	  4758:          BNE.S   TAPEOUT5
01:002022BE 4CDF031F        	  4759:          MOVEM.L (A7)+,D0-D4/A0-A1  RESTORE REGISTERS
01:002022C2 4E75            	  4760:          RTS
01:002022C4 101D            	  4761: TAPEOUT4 MOVE.B  (A5)+,D0       GRAB BYTE TO OUTPUT
01:002022C6 6102            	  4762:          BSR.S   TAPEO          GO OUTPUT IT
01:002022C8 60E4            	  4763:          BRA.S   TAPEOUT2       GO DO ANOTHER
                            	  4764: *
                            	  4765: * OUTPUTS THE CHARACTER IN D0.B TO TAPE
                            	  4766: * A LOGIC `0' IS RECORDED AS ONE SQUARE WAVE PERIOD OF
                            	  4767: *        1 MILLISEC DURATION, 50% DUTY CYCLE
                            	  4768: * A LOGIC `1' IS RECORDED AS ONE SQUARE WAVE PERIOD OF
                            	  4769: *        500 MICROSEC DURATION, 50% DUTY CYCLE
                            	  4770: *
01:002022CA 003C0010        	  4771: TAPEO    ORI.B   #%10000,CCR    SET X BIT IN SR
01:002022CE E310            	  4772:          ROXL.B  #1,D0          DATA BIT INTO X
01:002022D0 E312            	  4773: TAPEO1   ROXL.B  #1,D2          DATA BIT INTO D2
01:002022D2 613E            	  4774:          BSR.S   TIMERTST       WAIT UNTIL LAST PULSE DONE
01:002022D4 08A900000021    	  4775:          BCLR.B  #0,$21(A1)     HALT TIMER
01:002022DA 721E            	  4776:          MOVEQ   #30,D1         TIMER COUNT FOR A `1'
01:002022DC 08020000        	  4777:          BTST.L  #0,D2          SENDING A `1'?
01:002022E0 6606            	  4778:          BNE.S   TAPEO2         YES.
01:002022E2 068100000020    	  4779:          ADDI.L  #32,D1         NO. TIMER COUNT FOR 0
01:002022E8 03C90025        	  4780: TAPEO2   MOVEP.L D1,$25(A1)     SET TIMER PRELOAD REGISTER
01:002022EC 08E900010019    	  4781:          BSET.B  #1,$19(A1)     SEND 1 TO TAPE
01:002022F2 08E900000021    	  4782:          BSET.B  #0,$21(A1)     START TIMER
01:002022F8 6118            	  4783:          BSR.S   TIMERTST       WAIT UNTIL PULSE DONE
01:002022FA 08A900000021    	  4784:          BCLR.B  #0,$21(A1)     HALT TIMER
01:00202300 08A900010019    	  4785:          BCLR.B  #1,$19(A1)     SEND 0 TO TAPE
01:00202306 08E900000021    	  4786:          BSET.B  #0,$21(A1)     START TIMER
01:0020230C D000            	  4787:          ASL.B   #1,D0          SENT 8 BITS?
01:0020230E 66C0            	  4788:          BNE     TAPEO1         NO. CONTINUE
01:00202310 4E75            	  4789:          RTS
                            	  4790: *
                            	  4791: * WAITS UNTIL PROGRAMMED TIME DELAY HAS ELAPSED
                            	  4792: * (IF TIMER IS RUNNING)
                            	  4793: * ALSO CHECKS FOR BREAK
                            	  4794: * USES D1
                            	  4795: *
01:00202312 6100FF28        	  4796: TIMERTST BSR     CHKBRK         CHECK FOR BREAK
01:00202316 082900000021    	  4797:          BTST.B  #0,$21(A1)     IS TIMER RUNNING?
01:0020231C 6708            	  4798:          BEQ.S   TIMERTS1       NO. RETURN
01:0020231E 082900000035    	  4799:          BTST.B  #0,$35(A1)     HAS TIME DELAY ELAPSED?
01:00202324 67EC            	  4800:          BEQ.S   TIMERTST       NO. WAIT
01:00202326 4E75            	  4801: TIMERTS1 RTS
                            	  4802: 
                            	  4803: *   IF FAULT THEN INITIALIZE AN ACIA
                            	  4804: *
01:00202328 48E78080        	  4805: FAULTSER MOVEM.L D0/A0,-(A7)  FREE UP SOME WORKING REGISTERS
                            	  4806: 
                            	  4807: * DELAY TO ALLOW ACIA TO FINISH TRANSMITTING
                            	  4808: *  LONGEST TIME FOR TWO CHARACTERS; 110 BAUD, 16MHZ NO WAIT STATES
01:0020232C 203C0000C350    	  4809:          MOVE.L  #50000,D0      DELAY A WHILE
01:00202332 5380            	  4810: FAULTAC4 SUBQ.L  #1,D0          LOOP AROUND
01:00202334 66FC            	  4811:          BNE     FAULTAC4
                            	  4812: 
01:00202336 6100FD24        	  4813:          BSR     GETSER1        MOVE ADDRESS INTO A0
01:0020233A 1010            	  4814:          MOVE.B  (A0),D0        READ STATUS
01:0020233C 02000070        	  4815:          ANDI.B  #$70,D0        SEE IF FAULT
01:00202340 6708            	  4816:          BEQ.S   FAULTAC2
01:00202342 10BC0003        	  4817:          MOVE.B  #RESET,(A0)    MASTER RESET
01:00202346 10B8064C        	  4818:          MOVE.B  MD1CON,(A0)    HOW TO PROGRAM IT
                            	  4819: 
01:0020234A 6100FD22        	  4820: FAULTAC2 BSR     GETSER2        MOVE ADDRESS INTO A0
01:0020234E 1010            	  4821:          MOVE.B  (A0),D0
01:00202350 02000070        	  4822:          ANDI.B  #$70,D0
01:00202354 6708            	  4823:          BEQ.S   FAULTAC3
01:00202356 10BC0003        	  4824:          MOVE.B  #RESET,(A0)    MASTER RESET
01:0020235A 10B8064D        	  4825:          MOVE.B  MD1CON+1,(A0)  HOW TO PROGRAM IT
                            	  4826: FAULTAC3
01:0020235E 4CDF0101        	  4827:          MOVEM.L (A7)+,A0/D0    RESTORE REGISTERS
01:00202362 4E75            	  4828:          RTS
                            	  4829: 
                            	  4830: *   INITIALIZE BOTH ACIAs
                            	  4831: *
01:00202364 48E78080        	  4832: INITSER  MOVEM.L D0/A0,-(A7)  FREE UP SOME WORKING REGISTERS
                            	  4833: 
                            	  4834: * DELAY TO ALLOW ACIA TO FINISH TRANSMITTING
                            	  4835: *  LONGEST TIME FOR TWO CHARACTERS; 110 BAUD, 16MHZ NO WAIT STATES
01:00202368 203C0000C350    	  4836:          MOVE.L  #50000,D0      DELAY A WHILE
01:0020236E 5380            	  4837: INITAC3  SUBQ.L  #1,D0          LOOP AROUND
01:00202370 66FC            	  4838:          BNE     INITAC3
                            	  4839: 
01:00202372 6100FCE8        	  4840:          BSR     GETSER1        MOVE ADDRESS INTO A0
01:00202376 10BC0003        	  4841:          MOVE.B  #RESET,(A0)    MASTER RESET
01:0020237A 10B8064C        	  4842:          MOVE.B  MD1CON,(A0)    HOW TO PROGRAM IT
01:0020237E 6100FCEE        	  4843:          BSR     GETSER2        MOVE ADDRESS INTO A0
01:00202382 10BC0003        	  4844:          MOVE.B  #RESET,(A0)    MASTER RESET
01:00202386 10B8064D        	  4845:          MOVE.B  MD1CON+1,(A0)  HOW TO PROGRAM IT
01:0020238A 4CDF0101        	  4846:          MOVEM.L (A7)+,A0/D0    RESTORE REGISTERS
01:0020238E 4E75            	  4847:          RTS
                            	  4848: 
                            	  4849: *    INPUT CHARACTER FROM PORT1
                            	  4850: *    ACIA ADDRESS IN (A0)
                            	  4851: *
                            	  4852: 
01:00202390 1210            	  4853: INCHNE   MOVE.B  (A0),D1        (INCH NO ECHO) LOAD STATUS SIDE
01:00202392 02010010        	  4854:          ANDI.B  #$10,D1        .              CHECK FOR BREAK
01:00202396 6600FED0        	  4855:          BNE     BREAK          .              GO PROCESS IT
                            	  4856: 
01:0020239A 1210            	  4857:          MOVE.B  (A0),D1        LOAD STATUS SIDE
01:0020239C 02010001        	  4858:          ANDI.B  #1,D1          SEE IF READY
01:002023A0 67EE            	  4859:          BEQ.S   INCHNE         IF NOT READY
01:002023A2 10280001        	  4860:          MOVE.B  1(A0),D0       READ DATA SIDE   *****************
01:002023A6 0200007F        	  4861:          ANDI.B  #$7F,D0        DROP PARITY BIT
01:002023AA 4E75            	  4862:          RTS
                            	  4863: 
                            	  4864: *  INPUT A LINE FROM PORT2 (ACIA2)
                            	  4865: *   [ECHO TO PORT1 (ACIA1)]
                            	  4866: *                  XONOFF
                            	  4867: *                   0000     NULL  NULL    DO NOTHING
                            	  4868: *                   0817   BKSPACE CNTL/W
                            	  4869: *                   1214     X-ON  X-OFF   READER ON OFF
                            	  4870: *
01:002023AC 4AB80620        	  4871: PORTIN2  TST.L   INFROM         SEE IF ALTERNATE ADDRESS
01:002023B0 6706            	  4872:          BEQ.S   PORTIN2X
01:002023B2 2F380620        	  4873:          MOVE.L  INFROM,-(A7)
01:002023B6 4E75            	  4874:          RTS                    GO DO IT
01:002023B8 2F380634        	  4875: PORTIN2X MOVE.L  INPORT2,-(A7)  GO TO IO ROUTINE
01:002023BC 4E75            	  4876:          RTS                    ; (THIS NORMALLY GOES TO PORTIN20)
                            	  4877: *
01:002023BE 48E77090        	  4878: PORTIN20 MOVEM.L D1-D3/A0/A3,-(A7)  SAVE WORKING REGISTERS
                            	  4879: 
01:002023C2 6100FCAA        	  4880:          BSR     GETSER2
01:002023C6 2648            	  4881:          MOVE.L  A0,A3          A3 = ADDRESS OF PORT 2
01:002023C8 6100FC92        	  4882:          BSR     GETSER1        A0 = ADDRESS OF PORT 1
                            	  4883: 
01:002023CC 243C000320C8    	  4884:          MOVE.L  #LTIME,D2 D2 = 5 SEC DEADMAN @ 8MHZ
                            	  4885: 
01:002023D2 614A            	  4886: PORT2100 BSR.S   P2READY
01:002023D4 6704            	  4887:          BEQ.S   PORT2120       PORT2 DATA IN NOT-READY
                            	  4888: 
01:002023D6 615C            	  4889:          BSR.S   RES            READ/ECHO/STORE CHAR
01:002023D8 60F8            	  4890:          BRA     PORT2100
                            	  4891: 
01:002023DA 7601            	  4892: PORT2120 MOVEQ   #1,D3          D3 = MLS TIMER (ONE TICK)
01:002023DC 6140            	  4893: PORT2130 BSR.S   P2READY
01:002023DE 6622            	  4894:          BNE.S   PORT2250       PORT2 DATA IN READY
                            	  4895: 
01:002023E0 5382            	  4896:          SUBQ.L  #1,D2
01:002023E2 6B2A            	  4897:          BMI.S   PORT2300       SECOND TIME OUT
                            	  4898: 
01:002023E4 5383            	  4899:          SUBQ.L  #1,D3
01:002023E6 66F4            	  4900:          BNE     PORT2130       MLS TIMER
                            	  4901: 
01:002023E8 103804E6        	  4902: PORT2140 MOVE.B  XONOFF,D0
01:002023EC 670C            	  4903:          BEQ.S   PORT2150       NULL; IGNORE READER ON
01:002023EE 1213            	  4904:          MOVE.B  (A3),D1
01:002023F0 02010002        	  4905:          ANDI.B  #2,D1
01:002023F4 67E4            	  4906:          BEQ     PORT2120       PORT2 DATA OUT NOT-READY
01:002023F6 17400002        	  4907:          MOVE.B  D0,2(A3)       SEND START READER CHAR
                            	  4908: PORT2150
                            	  4909: 
01:002023FA 263C0000A028    	  4910:          MOVE.L  #STIME,D3      D3 = 100 MLS @ 8MHZ
01:00202400 60DA            	  4911:          BRA     PORT2130
                            	  4912: 
01:00202402 611A            	  4913: PORT2250 BSR.S   P2READY
01:00202404 6702            	  4914:          BEQ.S   PORT2260       PORT2 DATA IN NOT-READY
01:00202406 612C            	  4915:          BSR.S   RES            READ/ECHO/STORE CHAR
                            	  4916: 
01:00202408 5383            	  4917: PORT2260 SUBQ.L  #1,D3
01:0020240A 6BDC            	  4918:          BMI     PORT2140       CHARACTER TIME OUT
01:0020240C 60F4            	  4919:          BRA     PORT2250
                            	  4920: 
01:0020240E 4BFA0006        	  4921: PORT2300 LEA     MSG030(PC),A5  TIMEOUT ERROR
01:00202412 6000FE5A        	  4922:          BRA     BREAK79
                            	  4923: 
01:00202416 54494D454F5554  	  4924: MSG030   DC.B    'TIMEOUT',EOT
01:0020241D 04
                            	  4925: 
                            	  4926: 
01:0020241E 1210            	  4927: P2READY  MOVE.B  (A0),D1        CHECK FOR ACTIVITY ON PORT1
01:00202420 02010010        	  4928:          ANDI.B  #$10,D1        CHECK FOR BREAK
01:00202424 6600FE42        	  4929:          BNE     BREAK
01:00202428 12280001        	  4930:          MOVE.B  1(A0),D1       READ POSSIBLE CHAR PORT 1; IGNORE
                            	  4931: 
01:0020242C 1213            	  4932:          MOVE.B  (A3),D1        READ STATUS OF PORT2
01:0020242E 02010001        	  4933:          ANDI.B  #1,D1          SEE IF CHARACTER SENT
01:00202432 4E75            	  4934:          RTS
                            	  4935: 
01:00202434 122B0002        	  4936: RES      MOVE.B  2(A3),D1       D1 = CHAR READ FROM PORT2
01:00202438 0201007F        	  4937:          ANDI.B  #$7F,D1        DROP PARITY BIT
                            	  4938: 
01:0020243C 4A7804E2        	  4939:          TST.W   ECHOPT1        SEE IF ECHO ON
01:00202440 6704            	  4940:          BEQ.S   RES140
01:00202442 11410001        	  4941:          MOVE.B  D1,1(A0)       SEND TO DATA SIDE (PORT1)
                            	  4942: RES140
                            	  4943: 
01:00202446 0C01000D        	  4944:          CMPI.B  #CR,D1
01:0020244A 671C            	  4945:          BEQ.S   RES190         END OF LINE
                            	  4946: 
01:0020244C 0C010020        	  4947:          CMPI.B  #$20,D1        IGNORE CONTROL CHARACTERS (NULLS)
01:00202450 6D14            	  4948:          BLT.S   RES150
01:00202452 1C81            	  4949:          MOVE.B  D1,(A6)        SAVE CHAR IN BUFFER
                            	  4950: 
01:00202454 263C00019064    	  4951:          MOVE.L  #LTIME/2,D3    D3 = 2 1/2 SEC @ 8MHZ (CHARATER  TIMER)
                            	  4952: 
01:0020245A 220E            	  4953:          MOVE.L  A6,D1          CHECK BUFFER FULL
01:0020245C 928D            	  4954:          SUB.L   A5,D1
01:0020245E 0C410050        	  4955:          CMPI.W  #BUFSIZE,D1
01:00202462 6A02            	  4956:          BPL.S   RES150         FULL
01:00202464 528E            	  4957:          ADDQ.L  #1,A6          INCREMENT STORE POINTER
01:00202466 4E75            	  4958: RES150   RTS
                            	  4959: 
                            	  4960: 
01:00202468 BDCD            	  4961: RES190   CMP.L   A5,A6
01:0020246A 67FA            	  4962:          BEQ     RES150         NULL RECORD; IGNORE
                            	  4963: 
01:0020246C 588F            	  4964:          ADDQ.L  #4,A7          TRIM STACK
                            	  4965: 
01:0020246E 103804E7        	  4966:          MOVE.B  XONOFF+1,D0
01:00202472 670C            	  4967:          BEQ.S   RES195         XOFF = NULL CHAR; IGNORE
01:00202474 1213            	  4968: RES194   MOVE.B  (A3),D1
01:00202476 02010002        	  4969:          ANDI.B  #2,D1
01:0020247A 67F8            	  4970:          BEQ     RES194         PORT2 DATA OUT NOT-READY
01:0020247C 17400002        	  4971:          MOVE.B  D0,2(A3)       STOP READER
                            	  4972: RES195
                            	  4973: 
01:00202480 4CDF090E        	  4974:          MOVEM.L (A7)+,D1-D3/A0/A3   RESTORE THE REGISTERS
01:00202484 4E75            	  4975:          RTS
                            	  4976: 
                            	  4977: *
                            	  4978: * INPUT A LINE FROM AUDIO TAPE (PI/T)
                            	  4979: * [ECHO TO PORT1 (ACIA1)]
                            	  4980: *
01:00202486 48E778F0        	  4981: TAPEIN   MOVEM.L D1-D4/A0-A3,-(A7)  SAVE WORKING REGISTERS
01:0020248A 6100FBD0        	  4982:          BSR     GETSER1        ACIA1 ADDRESS INTO A0
01:0020248E 227C000F0000    	  4983:          MOVEA.L #PDI1,A1
01:00202494 13FC0002000F0009	  4984:          MOVE.B  #2,PITCDDR     PC0 INPUT, PC1 OUTPUT.
                            	  4985: 
                            	  4986: * SYNCHRONIZE ON S CHARACTER
01:0020249C 4201            	  4987:          CLR.B   D1
01:0020249E 613C            	  4988: TAPEIN10 BSR.S   TAPEIN40       GET TAPE
01:002024A0 65FC            	  4989:          BCS.S   TAPEIN10       WAIT FOR LOW
01:002024A2 6138            	  4990: TAPEIN11 BSR.S   TAPEIN40       GET TAPE
01:002024A4 64FC            	  4991:          BCC.S   TAPEIN11       WAIT FOR HIGH
01:002024A6 6154            	  4992:          BSR.S   STARTIMR       START TIMER
01:002024A8 D201            	  4993: TAPEIN12 ASL.B   #1,D1
01:002024AA 6110            	  4994:          BSR.S   TAPEIN30       GET ONE BIT FROM TAPE
01:002024AC 0C010053        	  4995:          CMPI.B  #'S',D1        S?
01:002024B0 66F6            	  4996:          BNE.S   TAPEIN12       NO. GET NEXT BIT
01:002024B2 6072            	  4997:          BRA.S   TAPEIN51
                            	  4998: 
                            	  4999: * GET ONE CHARACTER FROM THE TAPE
01:002024B4 7202            	  5000: TAPEIN20 MOVEQ   #2,D1          SET STOP BIT
01:002024B6 6104            	  5001: TAPEIN21 BSR.S   TAPEIN30       GET 1 BIT FROM TAPE
01:002024B8 D201            	  5002:          ASL.B   #1,D1          STOP IN CARRY
01:002024BA 64FA            	  5003:          BCC.S   TAPEIN21       NO
                            	  5004: *FALL INTO LOAD BIT ROUTINE FOR LAST BIT
01:002024BC 611E            	  5005: TAPEIN30 BSR.S   TAPEIN40       GET TAPE
01:002024BE 65FC            	  5006:          BCS.S   TAPEIN30       WAIT FOR LOW
01:002024C0 611A            	  5007: TAPEIN31 BSR.S   TAPEIN40       GET TAPE
01:002024C2 64FC            	  5008:          BCC.S   TAPEIN31       WAIT FOR HIGH
01:002024C4 4239000F0021    	  5009:          CLR.B   PITTCR         STOP TIMER
01:002024CA 0749002D        	  5010:          MOVEP.L $2D(A1),D3     GET PERIOD MEASUREMENT
01:002024CE 612C            	  5011:          BSR.S   STARTIMR       START TIMER
01:002024D0 048300FFFFA1    	  5012:          SUBI.L  #$FFFFFF-94,D3 IS IT A LOGIC 1?
01:002024D6 6502            	  5013:          BLO.S   TAPEIN32       NO
01:002024D8 5201            	  5014:          ADDQ.B  #1,D1          YES. STORE LOGIC 1
01:002024DA 4E75            	  5015: TAPEIN32 RTS
                            	  5016: 
                            	  5017: * READ THE TAPE LEVEL INTO THE CARRY AND CHECK FOR BREAK
01:002024DC 1410            	  5018: TAPEIN40 MOVE.B  (A0),D2        CHECK FOR ACTIVITY ON PORT1
01:002024DE 02020010        	  5019:          ANDI.B  #$10,D2        CHECK FOR BREAK
01:002024E2 6600FD84        	  5020:          BNE     BREAK
01:002024E6 1410            	  5021:          MOVE.B  (A0),D2        SEE IF CHARACTER SENT
01:002024E8 02020001        	  5022:          ANDI.B  #1,D2
01:002024EC 6704            	  5023:          BEQ.S   TAPEIN41       NONE SENT.
01:002024EE 14280001        	  5024:          MOVE.B  1(A0),D2       READ WHAT WAS SENT
01:002024F2 1439000F0019    	  5025: TAPEIN41 MOVE.B  PITPCDR,D2     READ PI/T
01:002024F8 E202            	  5026:          ASR.B   #1,D2          DATA INTO CARRY
01:002024FA 4E75            	  5027:          RTS
                            	  5028: 
                            	  5029: *STARTS PROGRAMMABLE TIMER
01:002024FC 283C00FFFFFF    	  5030: STARTIMR MOVE.L  #$00FFFFFF,D4  INIT. COUNT. PRELOAD REG.
01:00202502 09C90025        	  5031:          MOVEP.L D4,$25(A1)
01:00202506 13FC0001000F0021	  5032:          MOVE.B  #1,PITTCR      START TIMER
                            	  5033: 
01:0020250E 4E75            	  5034:          RTS
                            	  5035: 
01:00202510 0C010020        	  5036: TAPEIN53 CMPI.B  #$20,D1
01:00202514 6D0E            	  5037:          BLT.S   TAPEIN50       IGNORE CONTROL CHARACTERS
01:00202516 1C81            	  5038:          MOVE.B  D1,(A6)        SAVE CHARACTER IN BUFFER
01:00202518 220E            	  5039:          MOVE.L  A6,D1          CHECK BUFFER FULL
01:0020251A 928D            	  5040:          SUB.L   A5,D1
01:0020251C 0C410050        	  5041:          CMPI.W  #BUFSIZE,D1
01:00202520 6A02            	  5042:          BPL.S   TAPEIN50       FULL
01:00202522 528E            	  5043:          ADDQ.L  #1,A6          INCREMENT BUFFER POINTER
                            	  5044: 
01:00202524 618E            	  5045: TAPEIN50 BSR     TAPEIN20       GET ONE CHARACTER FROM TAPE
01:00202526 0201007F        	  5046: TAPEIN51 ANDI.B  #$7F,D1        DROP PARITY BIT
01:0020252A 4A7804E2        	  5047:          TST.W   ECHOPT1        SEE IF ECHO ON
01:0020252E 6704            	  5048:          BEQ.S   TAPEIN52
01:00202530 11410001        	  5049:          MOVE.B  D1,1(A0)       SEND TO PORT1
01:00202534 0C01000A        	  5050: TAPEIN52 CMPI.B  #LF,D1         END OF LINE?
01:00202538 66D6            	  5051:          BNE.S   TAPEIN53       NO.
01:0020253A 4CDF0F1E        	  5052:          MOVEM.L (A7)+,D1-D4/A0-A3  RESTORE REGISTERS
01:0020253E 4E75            	  5053:          RTS
                            	  5054: 
                            	  5055: *     SCAN COMMAND LINE FOR PORT NUMBER
                            	  5056: *     DU LO VE MD
                            	  5057: *
01:00202540 42B80620        	  5058: SCANPORT CLR.L   INFROM         DEFAULT IS WHATEVER IS CALLED
01:00202544 42B8061C        	  5059:          CLR.L   OUTTO
01:00202548 1015            	  5060:          MOVE.B  (A5),D0        NO....GET CHARACTER
01:0020254A 0C000020        	  5061:          CMPI.B  #BLANK,D0      .     IS IT A BLANK?
01:0020254E 6750            	  5062:          BEQ.S   SCANP6         .     YES..EXIT
                            	  5063: 
01:00202550 0C000031        	  5064:          CMPI.B  #'1',D0        SEE IF PORT 1 OVERRIDE
01:00202554 660E            	  5065:          BNE.S   SCANP4
01:00202556 21F8062C0620    	  5066:          MOVE.L  INPORT1,INFROM
01:0020255C 21F80630061C    	  5067:          MOVE.L  OUTPORT1,OUTTO
01:00202562 603A            	  5068:          BRA.S   SCANP7
                            	  5069: 
01:00202564 0C000032        	  5070: SCANP4   CMPI.B  #'2',D0        SEE IF PORT 2 OVERRIDE
01:00202568 660E            	  5071:          BNE.S   SCANP5
01:0020256A 21F806340620    	  5072:          MOVE.L  INPORT2,INFROM
01:00202570 21F80638061C    	  5073:          MOVE.L  OUTPORT2,OUTTO
01:00202576 6026            	  5074:          BRA.S   SCANP7
                            	  5075: 
01:00202578 0C000033        	  5076: SCANP5   CMPI.B  #'3',D0        SEE IF PORT3 OVERRIDE
01:0020257C 660E            	  5077:          BNE.S   SCANP8
01:0020257E 21F8063C0620    	  5078:          MOVE.L  INPORT3,INFROM
01:00202584 21F80640061C    	  5079:          MOVE.L  OUTPORT3,OUTTO
01:0020258A 6012            	  5080:          BRA.S   SCANP7
                            	  5081: 
01:0020258C 0C000034        	  5082: SCANP8   CMPI.B  #'4',D0        SEE IF PORT4 OVERRIDE
01:00202590 660E            	  5083:          BNE.S   SCANP6
01:00202592 21F806440620    	  5084:          MOVE.L  INPORT4,INFROM
01:00202598 21F80648061C    	  5085:          MOVE.L  OUTPORT4,OUTTO
                            	  5086: 
01:0020259E 528D            	  5087: SCANP7   ADDQ.L  #1,A5          ADJUST GET CHAR POINTER
01:002025A0 4E75            	  5088: SCANP6   RTS
                            	  5089: 
                            	  5090: *       *  P A  *      "PRINTER ATTACH" COMMAND          *
                            	  5091: *                                                        *
                            	  5092: * IF THE "PRINTER" HAS BEEN ATTACHED, ALL CHARACTERS     *
                            	  5093: * ENTERED AND TRANSMITTED VIA THE CONSOLE WILL PRINT ON  *
                            	  5094: * THE HARD COPY PRINTER. -- TO TERMINATE, ENTER "NOPA"   *
                            	  5095: *                                                        *
                            	  5096: * THIS COMMAND MAKES USE OF THE "NO" OPTION.  THERE IS A *
                            	  5097: * 4 BYTE HARD BRANCH INFRONT OF THE REGULAR ENTRY POINT. *
                            	  5098: **********************************************************
                            	  5099: 
01:002025A2 6004            	  5100:          BRA     NOPACMD        ENTRY FOR "NOPA"
                            	  5101: 
                            	  5102: *
01:002025A4 70FF            	  5103: PACMD    MOVEQ   #-1,D0         ENTRY FOR "PA" (D0=-1[CRT & PRINT])
01:002025A6 6002            	  5104:          BRA.S   SETCRTPR       GO ACTUALLY SET THE SWITCH
01:002025A8 7000            	  5105: NOPACMD  CLR.L   D0             D0 = ZEROS... "CRT" ONLY
01:002025AA 31C00652        	  5106: SETCRTPR MOVE.W  D0,CRTPNT      SET THE "CRT" AND "PRINTER" SWITCH
01:002025AE 6000E076        	  5107:          BRA     MACSBUG        GO BE "READY"
                            	  5108: 
                            	  5109: 
                            	  5110: 
                            	  5111: 
                            	  5112: *-------------------------------------------------------------------------
                            	  5113: * File CODE68K   68K ONE LINE ASSEMBLER                           07/23/82
                            	  5114: 
                            	  5115: * EVALUATE EXPRESSION
                            	  5116: *  NUMBER PLUS OR MINUS NUMBER....
                            	  5117: *
                            	  5118: EV       DS      0
01:002025B2 2F07            	  5119:          MOVE.L  D7,-(A7)       SAVE D7
01:002025B4 7E00            	  5120:          CLR.L   D7
01:002025B6 6120            	  5121: EV21     BSR.S   GETFIELD       GET NUMBER
01:002025B8 DE80            	  5122:          ADD.L   D0,D7          D7 = NUMBER BEING BUILT
01:002025BA 121D            	  5123: EV15     MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
01:002025BC 7000            	  5124:          CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
01:002025BE 0C01002B        	  5125:          CMPI.B  #'+',D1
01:002025C2 67F2            	  5126:          BEQ     EV21           PLUS
01:002025C4 0C01002D        	  5127:          CMPI.B  #'-',D1
01:002025C8 6606            	  5128:          BNE.S   EV39           NOT MINUS
01:002025CA 610C            	  5129:          BSR.S   GETFIELD       GET NEXT NUMBER
01:002025CC 9E80            	  5130:          SUB.L   D0,D7
01:002025CE 60EA            	  5131:          BRA     EV15
                            	  5132: 
01:002025D0 2007            	  5133: EV39     MOVE.L  D7,D0          D0 = VALUE BUILT
01:002025D2 538D            	  5134:          SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
01:002025D4 2E1F            	  5135:          MOVE.L  (A7)+,D7       RESTORE D7
01:002025D6 4E75            	  5136:          RTS
                            	  5137: 
                            	  5138: GETFIELD DS      0
01:002025D8 0C15002A        	  5139:          CMPI.B  #'*',(A5)
01:002025DC 6606            	  5140:          BNE.S   GETF305
                            	  5141: 
01:002025DE 2004            	  5142:          MOVE.L  D4,D0          D0 = PROGRAM COUNTER
01:002025E0 528D            	  5143:          ADDQ.L  #1,A5
01:002025E2 6036            	  5144:          BRA.S   GETF333
                            	  5145: 
01:002025E4 0C150027        	  5146: GETF305  CMPI.B  #$27,(A5)
01:002025E8 662A            	  5147:          BNE.S   GETF325        NOT LITERAL
                            	  5148: 
01:002025EA 528D            	  5149:          ADDQ.L  #1,A5
01:002025EC 7000            	  5150:          CLR.L   D0
                            	  5151: 
01:002025EE 3229000C        	  5152:          MOVE.W  TLENGTH(A1),D1  D1 = SIZE
01:002025F2 6704            	  5153:          BEQ.S   GETF308        .B = 0
01:002025F4 EA49            	  5154:          LSR.W   #5,D1          .W = 1
01:002025F6 5381            	  5155:          SUBQ.L  #1,D1          .L = 3
                            	  5156: GETF308
                            	  5157: 
01:002025F8 E188            	  5158: GETF311  LSL.L   #8,D0
01:002025FA 101D            	  5159:          MOVE.B  (A5)+,D0
01:002025FC 0C150027        	  5160:          CMPI.B  #$27,(A5)
01:00202600 6706            	  5161:          BEQ.S   GETF312        CLOSING QUOTE
01:00202602 51C9FFF4        	  5162:          DBF     D1,GETF311
01:00202606 6056            	  5163:          BRA.S   ER1            OVERFLOW
                            	  5164: 
01:00202608 528D            	  5165: GETF312  ADDQ.L  #1,A5          MOVE PAST CLOSING QUOTE
01:0020260A 6002            	  5166:          BRA.S   GETF314
                            	  5167: 
01:0020260C E188            	  5168: GETF313  LSL.L   #8,D0
01:0020260E 51C9FFFC        	  5169: GETF314  DBF     D1,GETF313     LEFT NORNALIZE
01:00202612 6006            	  5170:          BRA.S   GETF333
                            	  5171: 
01:00202614 6100F8CE        	  5172: GETF325  BSR     GETDECNU       GET DECIMAL NUMBER
01:00202618 6644            	  5173:          BNE.S   ER1            MESSED UP NUMBER
                            	  5174: 
01:0020261A 4E75            	  5175: GETF333  RTS
                            	  5176: 
                            	  5177: XBASE    DS        0
                            	  5178: 
                            	  5179: * FIND AND SET SIZE
                            	  5180: * BIT 5432109876543210
                            	  5181: *     ........00......  = BYTE
                            	  5182: *     ........01......  = WORD
                            	  5183: *     ........10......  = LONG
                            	  5184: *
01:0020261C 8469000C        	  5185: FSIZE    OR.W    TLENGTH(A1),D2  SET SIZE BITS
01:00202620 4E75            	  5186:          RTS
                            	  5187: 
                            	  5188: *  D0 = VALUE 0 - 7
                            	  5189: *  D1 = 0 IF D@     = 1 IF A@
01:00202622 7200            	  5190: GETREGD  CLR.L   D1
01:00202624 0C1D0044        	  5191:          CMPI.B  #'D',(A5)+
01:00202628 6634            	  5192:          BNE.S   ER1
01:0020262A 7000            	  5193: GET41    CLR.L   D0
01:0020262C 101D            	  5194:          MOVE.B  (A5)+,D0
01:0020262E 04000030        	  5195:          SUBI.B  #'0',D0
01:00202632 6B2A            	  5196:          BMI.S   ER1
01:00202634 0C000007        	  5197:          CMPI.B  #$7,D0
01:00202638 6E24            	  5198:          BGT.S   ER1
01:0020263A 4E75            	  5199:          RTS
                            	  5200: 
01:0020263C 7200            	  5201: GETREGA  CLR.L   D1
01:0020263E 123C0008        	  5202:          MOVE.B  #8,D1
01:00202642 0C1D0041        	  5203:          CMPI.B  #'A',(A5)+
01:00202646 6616            	  5204:          BNE.S   ER1
01:00202648 60E0            	  5205:          BRA     GET41
                            	  5206: 
01:0020264A 4241            	  5207: GETREGAD CLR     D1
01:0020264C 101D            	  5208:          MOVE.B  (A5)+,D0
01:0020264E 0C000044        	  5209:          CMPI.B  #'D',D0
01:00202652 67D6            	  5210:          BEQ     GET41
01:00202654 123C0008        	  5211:          MOVE.B  #8,D1
01:00202658 0C000041        	  5212:          CMPI.B  #'A',D0
01:0020265C 67CC            	  5213:          BEQ     GET41
01:0020265E 60000786        	  5214: ER1      BRA     ER
                            	  5215: 
01:00202662 3E3C01FD        	  5216: EADA     MOVE.W  #$1FD,D7       DATA ALTERABLE ONLY
01:00202666 6022            	  5217:          BRA.S   EA
                            	  5218: 
01:00202668 3E3C07E4        	  5219: EAC      MOVE.W  #$7E4,D7       CONTROL ONLY
01:0020266C 601C            	  5220:          BRA.S   EA
                            	  5221: 
01:0020266E 3E3C01FC        	  5222: EAM      MOVE.W  #$1FC,D7       MEMORY ALTERABLE ONLY
01:00202672 6016            	  5223:          BRA.S   EA
                            	  5224: 
01:00202674 3E3C0800        	  5225: EAZ      MOVE.W  #$800,D7       IMMEDIATE ONLY
01:00202678 6010            	  5226:          BRA.S   EA
                            	  5227: 
01:0020267A 3E3C0FFD        	  5228: EADADDR  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:0020267E 600A            	  5229:          BRA.S   EA
                            	  5230: 
01:00202680 3E3C01FF        	  5231: EAA      MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
01:00202684 6004            	  5232:          BRA.S   EA
                            	  5233: 
01:00202686 3E3C0FFF        	  5234: EAALL    MOVE.W  #$FFF,D7       ALL MODES
                            	  5235: 
                            	  5236: *  ...............1  D@                DATA REGISTER
                            	  5237: *  ..............1.  A@
                            	  5238: *  .............1..  (A@)
                            	  5239: *  ............1...  -(A@)
                            	  5240: *  ...........1....  (A@)+
                            	  5241: *  ..........1.....  DATA(A@)
                            	  5242: *  .........1......  DATA(A@,R@)
                            	  5243: *  ........1.......  DATA  (SHORT)
                            	  5244: *  .......1........  DATA  (LONG)
                            	  5245: *  ......1.........  DATA(PC)
                            	  5246: *  .....1..........  DATA(PC,R@)
                            	  5247: *  ....1...........  #DATA
                            	  5248: *  1...............  SPECIAL CASE JMP.L
                            	  5249: 
                            	  5250: * D0 = VALUE CALCULATED
                            	  5251: * D2 = MASK WORD (1ST WORD OF INSTRUCTION)
                            	  5252: * D3 = OFFSET FOR DATA STORE (TDATA+..)
                            	  5253: * D4 = EXTENSION WORD
                            	  5254: * D5 = <DATA>
                            	  5255: * D6 = MODE AS BUILT   .........XXXXXX
                            	  5256: * D7 = MODES ALLOWED
                            	  5257: *
                            	  5258: * A4 = BASE ADDRESS FOR DATA STORE (TDATA+..)[A4,D3]
                            	  5259: EA       DS      0
01:0020268A 7A00            	  5260:          CLR.L   D5             ZERO VALUE
01:0020268C 7C00            	  5261:          CLR.L   D6             MODE = 000000
01:0020268E 1015            	  5262:          MOVE.B  (A5),D0
01:00202690 0C000023        	  5263:          CMPI.B  #'#',D0
01:00202694 6646            	  5264:          BNE.S   EA10
                            	  5265: 
                            	  5266: * IMMEDIATE MODE
                            	  5267: 
01:00202696 0807000B        	  5268:          BTST    #11,D7
01:0020269A 67C2            	  5269:          BEQ     ER1
                            	  5270: 
01:0020269C 1C3C003C        	  5271:          MOVE.B  #$3C,D6        D6 = MODE  111100
01:002026A0 528D            	  5272:          ADDQ.L  #1,A5
                            	  5273: 
01:002026A2 6100FF0E        	  5274:          BSR     EV             EVALUATE EXPRESSION
01:002026A6 2A00            	  5275:          MOVE.L  D0,D5          D5 = VALUE
                            	  5276: 
01:002026A8 4A29000B        	  5277:          TST.B   TLSPEC(A1)
01:002026AC 670A            	  5278:          BEQ.S   EA0633         .SIZE NOT SPECIFIED (.W ASSUMED)
                            	  5279: 
01:002026AE 3029000C        	  5280:          MOVE.W  TLENGTH(A1),D0
01:002026B2 6714            	  5281:          BEQ.S   EA0635         .BYTE
                            	  5282: 
01:002026B4 4A00            	  5283:          TST.B   D0
01:002026B6 6B18            	  5284:          BMI.S   EA0637         .LONG
                            	  5285: 
01:002026B8 61000238        	  5286: EA0633   BSR     EA16BIT        .WORD     -32K TO +64K
01:002026BC 39853000        	  5287: EA0634   MOVE.W  D5,(A4,D3)
01:002026C0 5429000A        	  5288:          ADDQ.B  #2,TNB(A1)     BYTE COUNT
01:002026C4 5483            	  5289:          ADDQ.L  #2,D3          OFFSET
01:002026C6 4E75            	  5290:          RTS
                            	  5291: 
01:002026C8 6100023E        	  5292: EA0635   BSR     EA8BIT         -127 TO +255
01:002026CC 6690            	  5293:          BNE     ER1
01:002026CE 60EC            	  5294:          BRA     EA0634
                            	  5295: 
01:002026D0 29853000        	  5296: EA0637   MOVE.L  D5,(A4,D3)
01:002026D4 5829000A        	  5297:          ADDQ.B  #4,TNB(A1)
01:002026D8 5883            	  5298:          ADDQ.L  #4,D3
01:002026DA 4E75            	  5299:          RTS
                            	  5300: 
                            	  5301: EA10     DS      0
01:002026DC 0C15002D        	  5302:          CMPI.B  #'-',(A5)
01:002026E0 6626            	  5303:          BNE.S   EA11
                            	  5304: 
01:002026E2 0C2D00280001    	  5305:          CMPI.B  #'(',1(A5)
01:002026E8 66000090        	  5306:          BNE     EA41           MAY BE "-<DATA>
                            	  5307: 
01:002026EC 548D            	  5308:          ADDQ.L  #2,A5
01:002026EE 3C3C0020        	  5309:          MOVE.W  #$0020,D6      MODE = -(A@)    100AAA
                            	  5310: 
01:002026F2 08070004        	  5311:          BTST    #4,D7
01:002026F6 6700FF66        	  5312:          BEQ     ER1            THIS MODE NOT ALLOWED
                            	  5313: 
01:002026FA 6100FF40        	  5314:          BSR     GETREGA
01:002026FE 8C40            	  5315:          OR.W    D0,D6
                            	  5316: 
01:00202700 0C1D0029        	  5317:          CMPI.B  #')',(A5)+
01:00202704 6670            	  5318:          BNE.S   ER3            NO CLOSING PAREN
01:00202706 4E75            	  5319:          RTS
                            	  5320: 
01:00202708 0C000041        	  5321: EA11     CMPI.B  #'A',D0
01:0020270C 6612            	  5322:          BNE.S   EA21
                            	  5323: 
01:0020270E 1C3C0008        	  5324:          MOVE.B  #$08,D6        MODE = 001...
01:00202712 08070001        	  5325:          BTST    #1,D7
01:00202716 675E            	  5326:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5327: 
01:00202718 6100FF22        	  5328:          BSR     GETREGA
01:0020271C 8C40            	  5329:          OR.W    D0,D6
01:0020271E 4E75            	  5330:          RTS
                            	  5331: 
01:00202720 0C000044        	  5332: EA21     CMPI.B  #'D',D0
01:00202724 660E            	  5333:          BNE.S   EA31
                            	  5334: 
01:00202726 08070000        	  5335:          BTST    #0,D7
01:0020272A 674A            	  5336:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5337: 
01:0020272C 6100FEF4        	  5338:          BSR     GETREGD        MODE = D@   000AAA
01:00202730 8C40            	  5339:          OR.W    D0,D6
01:00202732 4E75            	  5340:          RTS
                            	  5341: 
01:00202734 0C000028        	  5342: EA31     CMPI.B  #'(',D0
01:00202738 6640            	  5343:          BNE.S   EA41
                            	  5344: 
                            	  5345: * POSSIBLE
                            	  5346: *  (A@)
                            	  5347: *  (A@)+
                            	  5348: *  (A@,R@)  IMPLIED ZERO DISPLACEMENT
                            	  5349: *
01:0020273A 528D            	  5350:          ADDQ.L  #1,A5
01:0020273C 6100FEFE        	  5351:          BSR     GETREGA
01:00202740 8C40            	  5352:          OR.W    D0,D6
                            	  5353: 
01:00202742 101D            	  5354:          MOVE.B  (A5)+,D0
01:00202744 0C00002C        	  5355:          CMPI.B  #',',D0
01:00202748 670000D0        	  5356:          BEQ     EA5116         MODE = (A@,R@)  ;IMPLIED D5 = 0 DATA
                            	  5357: 
01:0020274C 0C000029        	  5358:          CMPI.B  #')',D0        LOOK FOR CLOSING )
01:00202750 6624            	  5359:          BNE.S   ER3
                            	  5360: 
01:00202752 0C150020        	  5361:          CMPI.B  #BLANK,(A5)    LOOK FOR BLANK
01:00202756 6714            	  5362:          BEQ.S   EA35           MODE = (A@)
                            	  5363: 
01:00202758 0C15002B        	  5364:          CMPI.B  #'+',(A5)
01:0020275C 660E            	  5365:          BNE.S   EA35
01:0020275E 528D            	  5366:          ADDQ.L  #1,A5
                            	  5367: 
01:00202760 00460018        	  5368:          ORI.W   #$18,D6        MODE = 011...    (A@)+
                            	  5369: 
01:00202764 08070003        	  5370:          BTST    #3,D7
01:00202768 670C            	  5371:          BEQ.S   ER3            MODE NOT ALLOWED
                            	  5372: 
01:0020276A 4E75            	  5373: EA34     RTS
                            	  5374: 
01:0020276C 00460010        	  5375: EA35     ORI.W   #$10,D6        MODE = 010...   (A@)
                            	  5376: 
01:00202770 08070002        	  5377:          BTST    #2,D7
01:00202774 66F4            	  5378:          BNE     EA34           MODE ALLOWED
01:00202776 6000066E        	  5379: ER3      BRA     ER             MODE NOT ALLOWED
                            	  5380: 
                            	  5381: * POSSIBLE
                            	  5382: *   <DATA>   SHORT
                            	  5383: *   <DATA>   LONG
                            	  5384: *   <DATA>(A@)
                            	  5385: *   <DATA>(A@,R@)
                            	  5386: *   <DATA>(A@,R@.W)
                            	  5387: *   <DATA>(A@,R@.L)
                            	  5388: *   <DATA>(PC)
                            	  5389: *   <DATA>(PC,R@)
                            	  5390: *   <DATA>(PC,R@.W)
                            	  5391: *   <DATA>(PC,R@.L)
                            	  5392: *
01:0020277A 6100FE36        	  5393: EA41     BSR     EV             EVALUATE EXPRESSION
01:0020277E 2A00            	  5394:          MOVE.L  D0,D5          D5 = <DATA>
                            	  5395: 
01:00202780 1015            	  5396:          MOVE.B  (A5),D0
01:00202782 0C00002C        	  5397:          CMPI.B  #',',D0
01:00202786 6706            	  5398:          BEQ.S   EA4102
01:00202788 0C000020        	  5399:          CMPI.B  #BLANK,D0
01:0020278C 6642            	  5400:          BNE.S   EA4120
                            	  5401: 
                            	  5402: *  <DATA>         ONLY
                            	  5403: * CHECK IF NEGATIVE NUMBER
                            	  5404: 
01:0020278E 2005            	  5405: EA4102   MOVE.L  D5,D0
01:00202790 6A02            	  5406:          BPL.S   EA4105         POSITIVE NUMBER
01:00202792 4680            	  5407:          NOT.L   D0
01:00202794 02408000        	  5408: EA4105   ANDI.W  #$8000,D0
01:00202798 4A80            	  5409:          TST.L   D0
01:0020279A 661E            	  5410:          BNE.S   EA4135         .LONG
                            	  5411: 
                            	  5412: *  <DATA>.W
01:0020279C 08070007        	  5413:          BTST    #7,D7
01:002027A0 6608            	  5414:          BNE.S   EA4127         SHORT ALLOWED
01:002027A2 0807000F        	  5415:          BTST    #15,D7
01:002027A6 67CE            	  5416:          BEQ     ER3            MODE NOT ALLOWED
01:002027A8 6010            	  5417:          BRA.S   EA4135         SPECIAL CASE (JMP.L)
                            	  5418: 
01:002027AA 00460038        	  5419: EA4127   ORI.W   #$38,D6        EA = ABSOULTE SHORT
01:002027AE 39853000        	  5420:          MOVE.W  D5,(A4,D3)     D5 = DATA
01:002027B2 5429000A        	  5421:          ADDQ.B  #2,TNB(A1)     BYTE COUNT
01:002027B6 5483            	  5422:          ADDQ.L  #2,D3
01:002027B8 4E75            	  5423:          RTS
                            	  5424: 
                            	  5425: *EA4134  CMPI.B  #'L',D0
                            	  5426: *        BNE     ER3
                            	  5427: 
                            	  5428: *  <DATA>.L
01:002027BA 00460039        	  5429: EA4135   ORI.W   #$39,D6        EA = ABSOLUTE LONG
01:002027BE 29853000        	  5430:          MOVE.L  D5,(A4,D3)
01:002027C2 5829000A        	  5431:          ADDQ.B  #4,TNB(A1)     BYTE COUNT
01:002027C6 5883            	  5432:          ADDQ.L  #4,D3
01:002027C8 08070008        	  5433:          BTST    #8,D7
01:002027CC 67A8            	  5434:          BEQ     ER3            MODE NOT ALLOWED
01:002027CE 4E75            	  5435:          RTS
                            	  5436: 
01:002027D0 528D            	  5437: EA4120   ADDQ.L  #1,A5
01:002027D2 0C000028        	  5438:          CMPI.B  #'(',D0
01:002027D6 669E            	  5439:          BNE     ER3
                            	  5440: 
01:002027D8 0C150050        	  5441:          CMPI.B  #'P',(A5)
01:002027DC 6700008E        	  5442:          BEQ     EA61
                            	  5443: 
                            	  5444: * <DATA>(A@.......
01:002027E0 6100011A        	  5445:          BSR     EA16BITS       -32K TO +32K
                            	  5446: 
01:002027E4 6100FE56        	  5447:          BSR     GETREGA
01:002027E8 8C40            	  5448:          OR.W    D0,D6
                            	  5449: 
01:002027EA 1015            	  5450:          MOVE.B  (A5),D0
01:002027EC 0C000029        	  5451:          CMPI.B  #')',D0
01:002027F0 6624            	  5452:          BNE.S   EA5115
                            	  5453: 
                            	  5454: * <DATA>(A@)
01:002027F2 528D            	  5455:          ADDQ.L  #1,A5
                            	  5456: 
01:002027F4 08070005        	  5457:          BTST    #5,D7
01:002027F8 670000A0        	  5458:          BEQ     ER4            MODE NOT ALLOWED
                            	  5459: 
01:002027FC 00460028        	  5460:          ORI.W   #$0028,D6      MODE = 101AAA
                            	  5461: 
01:00202800 0C8500010000    	  5462:          CMPI.L  #$10000,D5
01:00202806 6A000092        	  5463:          BPL     ER4
                            	  5464: 
01:0020280A 39853000        	  5465:          MOVE.W  D5,(A4,D3)
01:0020280E 5429000A        	  5466:          ADDQ.B  #2,TNB(A1)
01:00202812 5483            	  5467:          ADDQ.L  #2,D3
01:00202814 4E75            	  5468:          RTS
                            	  5469: 
01:00202816 610005B4        	  5470: EA5115   BSR     COMMA
                            	  5471: 
                            	  5472: *  <DATA>(A@,-----    ADDRESS REGISTER WITH INDEX
01:0020281A 48C5            	  5473: EA5116   EXT.L   D5
01:0020281C 610000F2        	  5474:          BSR     EA8BITS        -128 TO +127
01:00202820 6678            	  5475:          BNE.S   ER4
01:00202822 024500FF        	  5476:          ANDI.W  #$00FF,D5
01:00202826 00460030        	  5477:          ORI.W   #$0030,D6      MODE  110---
                            	  5478: 
01:0020282A 08070006        	  5479:          BTST    #6,D7
01:0020282E 676A            	  5480:          BEQ.S   ER4            MODE NOT ALLOWED
                            	  5481: 
01:00202830 6100FE18        	  5482:          BSR     GETREGAD
01:00202834 8041            	  5483:          OR.W    D1,D0
01:00202836 E858            	  5484:          ROR.W   #4,D0
01:00202838 8A40            	  5485:          OR.W    D0,D5          EXTENSION WORD
                            	  5486: 
                            	  5487: * BIT 11 EXTENSION WORD
                            	  5488: *   0 = SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REGISTER
                            	  5489: *   1 = LONG VALUE IN INDEX REGISTER  (DEFAULT)
                            	  5490: *
01:0020283A 101D            	  5491:          MOVE.B  (A5)+,D0
01:0020283C 0C000029        	  5492:          CMPI.B  #')',D0
01:00202840 671E            	  5493:          BEQ.S   EA5119         DEFAULT   .W
                            	  5494: 
01:00202842 0C00002E        	  5495:          CMPI.B  #'.',D0
01:00202846 6652            	  5496:          BNE.S   ER4
                            	  5497: 
01:00202848 101D            	  5498:          MOVE.B  (A5)+,D0
01:0020284A 0C000057        	  5499:          CMPI.B  #'W',D0
01:0020284E 670A            	  5500:          BEQ.S   EA5118
                            	  5501: 
01:00202850 0C00004C        	  5502:          CMPI.B  #'L',D0
01:00202854 6644            	  5503:          BNE.S   ER4            NEITHER .W NOR .L
                            	  5504: 
01:00202856 00450800        	  5505:          ORI.W   #$0800,D5      EXTENSION WORD, W/L BIT = .L
                            	  5506: 
01:0020285A 0C1D0029        	  5507: EA5118   CMPI.B  #')',(A5)+
01:0020285E 663A            	  5508:          BNE.S   ER4            NO CLOSING ")"
                            	  5509: 
01:00202860 39853000        	  5510: EA5119   MOVE.W  D5,(A4,D3)
01:00202864 5429000A        	  5511:          ADDQ.B  #2,TNB(A1)
01:00202868 5483            	  5512:          ADDQ.L  #2,D3
01:0020286A 4E75            	  5513: EA5119E  RTS
                            	  5514: 
                            	  5515: *  <DATA>(P-----
01:0020286C 528D            	  5516: EA61     ADDQ.L  #1,A5
01:0020286E 0C1D0043        	  5517:          CMPI.B  #'C',(A5)+
01:00202872 66000572        	  5518:          BNE     ER
                            	  5519: 
01:00202876 9AA9000E        	  5520:          SUB.L   PCOUNTER(A1),D5  D5 = D5 - PC
01:0020287A 5585            	  5521:          SUBQ.L  #2,D5          D5 = D5 - (PC + 2)
                            	  5522: 
01:0020287C 101D            	  5523:          MOVE.B  (A5)+,D0
01:0020287E 0C000029        	  5524:          CMPI.B  #')',D0
01:00202882 661A            	  5525:          BNE.S   EA71
                            	  5526: 
                            	  5527: *  <DATA>(PC)
01:00202884 0046003A        	  5528:          ORI.W   #$3A,D6        MODE = 111010
                            	  5529: 
01:00202888 6172            	  5530:          BSR.S   EA16BITS       -32K TO +32K
01:0020288A 39853000        	  5531:          MOVE.W  D5,(A4,D3)
01:0020288E 5429000A        	  5532:          ADDQ.B  #2,TNB(A1)
01:00202892 5483            	  5533:          ADDQ.L  #2,D3
                            	  5534: 
01:00202894 08070009        	  5535:          BTST    #9,D7
01:00202898 66D0            	  5536:          BNE     EA5119E
01:0020289A 6000054A        	  5537: ER4      BRA     ER
                            	  5538: 
                            	  5539: *  <DATA>(PC----          PROGRAM COUNTER WITH INDEX
01:0020289E 3C3C003B        	  5540: EA71     MOVE.W  #$003B,D6      MODE = 111011
                            	  5541: 
01:002028A2 0C00002C        	  5542:          CMPI.B  #',',D0
01:002028A6 66F2            	  5543:          BNE     ER4
                            	  5544: 
01:002028A8 0807000A        	  5545:          BTST    #10,D7
01:002028AC 67EC            	  5546:          BEQ     ER4            MODE NOT ALLOWED
                            	  5547: 
01:002028AE 6160            	  5548:          BSR.S   EA8BITS        -128 TO +127
01:002028B0 66E8            	  5549:          BNE     ER4
                            	  5550: 
01:002028B2 024500FF        	  5551:          ANDI.W  #$00FF,D5      D5 = VALUE
01:002028B6 6100FD92        	  5552:          BSR     GETREGAD
01:002028BA 8041            	  5553:          OR.W    D1,D0
                            	  5554: 
01:002028BC E858            	  5555:          ROR.W   #4,D0
01:002028BE 8A40            	  5556:          OR.W    D0,D5          D5 = EXTENSION WORD
                            	  5557: 
01:002028C0 101D            	  5558:          MOVE.B  (A5)+,D0
01:002028C2 0C000029        	  5559:          CMPI.B  #')',D0
01:002028C6 671E            	  5560:          BEQ.S   EA7115         DEFAULT  .W
                            	  5561: 
01:002028C8 0C00002E        	  5562:          CMPI.B  #'.',D0
01:002028CC 66CC            	  5563:          BNE     ER4
                            	  5564: 
01:002028CE 101D            	  5565:          MOVE.B  (A5)+,D0
01:002028D0 0C000057        	  5566:          CMPI.B  #'W',D0
01:002028D4 670A            	  5567:          BEQ.S   EA7113
                            	  5568: 
01:002028D6 0C00004C        	  5569:          CMPI.B  #'L',D0
01:002028DA 66BE            	  5570:          BNE     ER4
01:002028DC 00450800        	  5571:          ORI.W   #$0800,D5      EXTENSION WORD W/L = .L
                            	  5572: 
01:002028E0 0C1D0029        	  5573: EA7113   CMPI.B  #')',(A5)+
01:002028E4 66B4            	  5574:          BNE     ER4            NO CLOSING ")"
                            	  5575: 
01:002028E6 39853000        	  5576: EA7115   MOVE.W  D5,(A4,D3)
01:002028EA 5429000A        	  5577:          ADDQ.B  #2,TNB(A1)
01:002028EE 5483            	  5578:          ADDQ.L  #2,D3
01:002028F0 4E75            	  5579:          RTS
                            	  5580: 
                            	  5581: ****************************************************************************
                            	  5582: *
                            	  5583: *        ROUTINES TO TEST FOR VALID EFFECTIVE ADDRESSES
                            	  5584: *
                            	  5585: *        EA16BIT   tests that -32768 <= D5 <= 65535.  (signed or unsigned)
                            	  5586: *        EA16BITS  tests that -32768 <= D5 <= 32767.  (signed only)
                            	  5587: *        EA8BIT    tests that   -128 <= D5 <=   255.  (signed or unsigned)
                            	  5588: *        EA8BITS   tests that   -128 <= D5 <=   127.  (signed only)
                            	  5589: *
                            	  5590: *        The 16-bit tests branch to ER if invalid, else return.
                            	  5591: *        The  8-bit tests return condition codes <EQ> if valid, else <NE>.
                            	  5592: *        D5 is preserved unless a branch to ER results.
                            	  5593: *        D1 is destroyed.
                            	  5594: *
                            	  5595: ****************************************************************************
                            	  5596: 
                            	  5597: EA16BIT:
01:002028F2 610C            	  5598:          BSR.S   EA16BITC       CHECK RANGE -32768 TO 32767.  IF
01:002028F4 2205            	  5599:          MOVE.L  D5,D1          INVALID, CHECK WHETHER THE HIGH 16
01:002028F6 4841            	  5600:          SWAP    D1             BITS ARE 0 (WHICH IMPLIES THAT
01:002028F8 4A41            	  5601:          TST.W   D1             D5 <= 65535).  IF NOT, FALL THRU TO
01:002028FA 6728            	  5602:          BEQ.S   EASEX          THE 16-BIT SIGNED TEST--WE WILL
                            	  5603: *                               FAIL AND GO TO ER.
                            	  5604: 
                            	  5605: EA16BITS:
01:002028FC 487A04E8        	  5606:          PEA     ER(PC)         SET UP TO RETURN TO ER IF INVALID.
                            	  5607: 
01:00202900 223C00007FFF    	  5608: EA16BITC MOVE.L  #$7FFF,D1      D1  <--  2^16-1.
01:00202906 600E            	  5609:          BRA.S   EAS            GO TO THE COMMON TEST ROUTINE.
                            	  5610: 
                            	  5611: 
                            	  5612: EA8BIT:
01:00202908 610A            	  5613:          BSR.S   EA8BITC        CHECK RANGE -128 TO 127.  IF INVALID,
01:0020290A 2205            	  5614:          MOVE.L  D5,D1          CHECK WHETHER THE HIGH 24 BITS ARE
01:0020290C E089            	  5615:          LSR.L   #8,D1          0 (WHICH IMPLIES THAT D5 <= 255).
01:0020290E 4E75            	  5616:          RTS
                            	  5617: 
                            	  5618: EA8BITS:
01:00202910 6102            	  5619:          BSR.S   EA8BITC        JUST CHECK FOR -127 <= D5 <= 128.
01:00202912 4E75            	  5620:          RTS                    ; (BSR PUTS NEEDED ADDRESS ON STACK!)
                            	  5621: 
01:00202914 727F            	  5622: EA8BITC  MOVEQ   #$7F,D1        D1  <--  2^8 - 1.
                            	  5623: 
                            	  5624: *                  *** NOTE: THIS ROUTINE PLAYS WITH THE STACK ***
01:00202916 BA81            	  5625: EAS      CMP.L   D1,D5          IF D5 > 2^N-1, RETURN WITH <NE> (INVAL).
01:00202918 6E0A            	  5626:          BGT.S   EASEX
01:0020291A 4681            	  5627:          NOT.L   D1             IF D5 < -2^N,  RETURN WITH <NE> (INVAL).
01:0020291C BA81            	  5628:          CMP.L   D1,D5
01:0020291E 6D04            	  5629:          BLT.S   EASEX
                            	  5630: 
01:00202920 588F            	  5631:          ADDQ.L  #4,A7          POP THE RETURN ADDRESS OFF THE STACK,
01:00202922 7200            	  5632:          CLR.L   D1             SET <EQ> (VALID), AND RETURN.
                            	  5633: 
01:00202924 4E75            	  5634: EASEX    RTS
                            	  5635: 
                            	  5636: ADR      MACRO
                            	  5637:          DC.W    M\1-XBASE
                            	  5638:          ENDM
                            	  5639: 
                            	  5640: TBLKEYS  DS      0              INDEX
                            	  5641:          ADR     ABCD            0  ABCD SBCD
01:00202926 0808            	     1M          DC.W    MABCD-XBASE
                            	  5642:          ADR     ADD             1  ADD  SUB
01:00202928 08BE            	     1M          DC.W    MADD-XBASE
                            	  5643:          ADR     ADDA            2  ADDA CMPA SUBA
01:0020292A 0966            	     1M          DC.W    MADDA-XBASE
                            	  5644:          ADR     ADDI            3  ADDI CMPI SUBI
01:0020292C 0918            	     1M          DC.W    MADDI-XBASE
                            	  5645:          ADR     ADDQ            4  ADDQ SUBQ
01:0020292E 098E            	     1M          DC.W    MADDQ-XBASE
                            	  5646:          ADR     ADDX            5  ADDX SUBX
01:00202930 09D0            	     1M          DC.W    MADDX-XBASE
                            	  5647:          ADR     AND             6  AND  EOR OR
01:00202932 0A12            	     1M          DC.W    MAND-XBASE
                            	  5648:          ADR     ASL             7  ASL  LSL ROL ROXL
01:00202934 0AC0            	     1M          DC.W    MASL-XBASE
                            	  5649:          ADR     DBCC            8  DBCC
01:00202936 0BAC            	     1M          DC.W    MDBCC-XBASE
                            	  5650:          ADR     BCHG            9  BCHG
01:00202938 0B30            	     1M          DC.W    MBCHG-XBASE
                            	  5651:          ADR     BRA            10  BRA  BSR  BCC
01:0020293A 0BBA            	     1M          DC.W    MBRA-XBASE
                            	  5652:          ADR     BSET           11  BSET
01:0020293C 0B88            	     1M          DC.W    MBSET-XBASE
                            	  5653:          ADR     CHK            12  CHK  DIVS DIVU MILS MULU
01:0020293E 0C12            	     1M          DC.W    MCHK-XBASE
                            	  5654:          ADR     CLR            13  CLR NEG NEGX NOT TST
01:00202940 0C2C            	     1M          DC.W    MCLR-XBASE
                            	  5655:          ADR     CMPM           14  CMPM
01:00202942 0C3A            	     1M          DC.W    MCMPM-XBASE
                            	  5656:          ADR     MOVEQ          15  MOVEQ
01:00202944 0E18            	     1M          DC.W    MMOVEQ-XBASE
                            	  5657:          ADR     EXG            16  EXG
01:00202946 0C64            	     1M          DC.W    MEXG-XBASE
                            	  5658:          ADR     EXT            17  EXT
01:00202948 0C9E            	     1M          DC.W    MEXT-XBASE
                            	  5659:          ADR     JMP            18  JMP  JSR
01:0020294A 0FAC            	     1M          DC.W    MJMP-XBASE
                            	  5660:          ADR     LEA            19  LEA
01:0020294C 0FD8            	     1M          DC.W    MLEA-XBASE
                            	  5661:          ADR     LINK           20  LINK
01:0020294E 1022            	     1M          DC.W    MLINK-XBASE
                            	  5662:          ADR     MOVE           21  MOVE
01:00202950 0E64            	     1M          DC.W    MMOVE-XBASE
                            	  5663:          ADR     CMMD2          22  NOP RESET RTE RTR RTS TRAPV
01:00202952 07D8            	     1M          DC.W    MCMMD2-XBASE
                            	  5664:          ADR     STOP           23  STOP
01:00202954 1040            	     1M          DC.W    MSTOP-XBASE
                            	  5665:          ADR     SWAP           24  SWAP
01:00202956 1000            	     1M          DC.W    MSWAP-XBASE
                            	  5666:          ADR     TRAP           25  TRAP
01:00202958 1058            	     1M          DC.W    MTRAP-XBASE
                            	  5667:          ADR     UNLK           26  UNLK
01:0020295A 106A            	     1M          DC.W    MUNLK-XBASE
                            	  5668:          ADR     MOVEM          27  MOVEM
01:0020295C 0CB8            	     1M          DC.W    MMOVEM-XBASE
                            	  5669:          ADR     ANDI           28  ANDI EORI ORI
01:0020295E 092E            	     1M          DC.W    MANDI-XBASE
                            	  5670:          ADR     SCC            29  NBCD SCC TAS
01:00202960 0B22            	     1M          DC.W    MSCC-XBASE
                            	  5671:          ADR     BCLR           30  BCLR
01:00202962 0B94            	     1M          DC.W    MBCLR-XBASE
                            	  5672:          ADR     BTST           31  BTST
01:00202964 0BA0            	     1M          DC.W    MBTST-XBASE
                            	  5673:          ADR     MOVEA          32  MOVEA
01:00202966 0F80            	     1M          DC.W    MMOVEA-XBASE
                            	  5674:          ADR     MOVEP          33  MOVEP
01:00202968 0DB8            	     1M          DC.W    MMOVEP-XBASE
                            	  5675:          ADR     CMP            34  CMP
01:0020296A 084C            	     1M          DC.W    MCMP-XBASE
                            	  5676:          ADR     EOR            35  EOR
01:0020296C 0A74            	     1M          DC.W    MEOR-XBASE
                            	  5677:          ADR     PEA            36  PEA
01:0020296E 0FF2            	     1M          DC.W    MPEA-XBASE
                            	  5678:          ADR     DC             37  DC.W
01:00202970 1074            	     1M          DC.W    MDC-XBASE
                            	  5679: 
                            	  5680: 
                            	  5681: * \1,\2 = MNEUMONIC (\2 SIGN BIT SET AS LAST CHARACTER)
                            	  5682: * \3    = INDEX TO TABLKEYS
                            	  5683: * \4,\5 = FIRST WORD MASK
                            	  5684: * \6    = NO OPERAND ALLOWED IF SIGN SET
                            	  5685: * \7    = .S ALLOWED (.W NOT ALLOWED)
                            	  5686: OPC      MACRO
                            	  5687:          DC.B    '\1','\2'+128
                            	  5688:          DC.B    \3+\6+\7,$\4,$\5
                            	  5689:          ENDM
                            	  5690: 
                            	  5691: NOC      EQU     $80            (BIT 7 SET) NO OPERAND
                            	  5692: NW       EQU     $40            (BIT 6 SET) .W NOT ALLOWED
                            	  5693: 
                            	  5694: TBLOPC   OPC     ABC,D,0,C1,00,0,0     ABCD
01:00202972 414243          	     1M          DC.B    'ABC','D'+128
01:00202975 C4
01:00202976 00              	     2M          DC.B    0+0+0,$C1,$00
01:00202977 C1
01:00202978 00
                            	  5695:          OPC     ADD,A,2,D0,C0,0,0     ADDA
01:00202979 414444          	     1M          DC.B    'ADD','A'+128
01:0020297C C1
01:0020297D 02              	     2M          DC.B    2+0+0,$D0,$C0
01:0020297E D0
01:0020297F C0
                            	  5696:          OPC     ADD,I,3,06,00,0,0     ADDI
01:00202980 414444          	     1M          DC.B    'ADD','I'+128
01:00202983 C9
01:00202984 03              	     2M          DC.B    3+0+0,$06,$00
01:00202985 06
01:00202986 00
                            	  5697:          OPC     ADD,Q,4,50,00,0,0     ADDQ
01:00202987 414444          	     1M          DC.B    'ADD','Q'+128
01:0020298A D1
01:0020298B 04              	     2M          DC.B    4+0+0,$50,$00
01:0020298C 50
01:0020298D 00
                            	  5698:          OPC     ADD,X,5,D1,00,0,0     ADDX
01:0020298E 414444          	     1M          DC.B    'ADD','X'+128
01:00202991 D8
01:00202992 05              	     2M          DC.B    5+0+0,$D1,$00
01:00202993 D1
01:00202994 00
                            	  5699:          OPC     AD,D,1,D0,00,0,0      ADD
01:00202995 4144            	     1M          DC.B    'AD','D'+128
01:00202997 C4
01:00202998 01              	     2M          DC.B    1+0+0,$D0,$00
01:00202999 D0
01:0020299A 00
                            	  5700:          OPC     AND,I,28,02,00,0,0    ANDI
01:0020299B 414E44          	     1M          DC.B    'AND','I'+128
01:0020299E C9
01:0020299F 1C              	     2M          DC.B    28+0+0,$02,$00
01:002029A0 02
01:002029A1 00
                            	  5701:          OPC     AN,D,6,C0,00,0,0      AND
01:002029A2 414E            	     1M          DC.B    'AN','D'+128
01:002029A4 C4
01:002029A5 06              	     2M          DC.B    6+0+0,$C0,$00
01:002029A6 C0
01:002029A7 00
                            	  5702:          OPC     AS,L,7,E1,00,0,0      ASL
01:002029A8 4153            	     1M          DC.B    'AS','L'+128
01:002029AA CC
01:002029AB 07              	     2M          DC.B    7+0+0,$E1,$00
01:002029AC E1
01:002029AD 00
                            	  5703:          OPC     AS,R,07,E0,00,0,0     ASR
01:002029AE 4153            	     1M          DC.B    'AS','R'+128
01:002029B0 D2
01:002029B1 07              	     2M          DC.B    07+0+0,$E0,$00
01:002029B2 E0
01:002029B3 00
                            	  5704:          OPC     BR,A,10,60,00,0,NW    BRA
01:002029B4 4252            	     1M          DC.B    'BR','A'+128
01:002029B6 C1
01:002029B7 4A              	     2M          DC.B    10+0+NW,$60,$00
01:002029B8 60
01:002029B9 00
                            	  5705:          OPC     BH,I,10,62,00,0,NW    BHI
01:002029BA 4248            	     1M          DC.B    'BH','I'+128
01:002029BC C9
01:002029BD 4A              	     2M          DC.B    10+0+NW,$62,$00
01:002029BE 62
01:002029BF 00
                            	  5706:          OPC     BL,S,10,63,00,0,NW    BLS
01:002029C0 424C            	     1M          DC.B    'BL','S'+128
01:002029C2 D3
01:002029C3 4A              	     2M          DC.B    10+0+NW,$63,$00
01:002029C4 63
01:002029C5 00
                            	  5707:          OPC     BC,C,10,64,00,0,NW    BCC
01:002029C6 4243            	     1M          DC.B    'BC','C'+128
01:002029C8 C3
01:002029C9 4A              	     2M          DC.B    10+0+NW,$64,$00
01:002029CA 64
01:002029CB 00
                            	  5708:          OPC     BC,S,10,65,00,0,NW    BCS
01:002029CC 4243            	     1M          DC.B    'BC','S'+128
01:002029CE D3
01:002029CF 4A              	     2M          DC.B    10+0+NW,$65,$00
01:002029D0 65
01:002029D1 00
                            	  5709:          OPC     BN,E,10,66,00,0,NW    BNE
01:002029D2 424E            	     1M          DC.B    'BN','E'+128
01:002029D4 C5
01:002029D5 4A              	     2M          DC.B    10+0+NW,$66,$00
01:002029D6 66
01:002029D7 00
                            	  5710:          OPC     BE,Q,10,67,00,0,NW    BEQ
01:002029D8 4245            	     1M          DC.B    'BE','Q'+128
01:002029DA D1
01:002029DB 4A              	     2M          DC.B    10+0+NW,$67,$00
01:002029DC 67
01:002029DD 00
                            	  5711:          OPC     BV,C,10,68,00,0,NW    BVC
01:002029DE 4256            	     1M          DC.B    'BV','C'+128
01:002029E0 C3
01:002029E1 4A              	     2M          DC.B    10+0+NW,$68,$00
01:002029E2 68
01:002029E3 00
                            	  5712:          OPC     BV,S,10,69,00,0,NW    BVS
01:002029E4 4256            	     1M          DC.B    'BV','S'+128
01:002029E6 D3
01:002029E7 4A              	     2M          DC.B    10+0+NW,$69,$00
01:002029E8 69
01:002029E9 00
                            	  5713:          OPC     BP,L,10,6A,00,0,NW    BPL
01:002029EA 4250            	     1M          DC.B    'BP','L'+128
01:002029EC CC
01:002029ED 4A              	     2M          DC.B    10+0+NW,$6A,$00
01:002029EE 6A
01:002029EF 00
                            	  5714:          OPC     BM,I,10,6B,00,0,NW    BMI
01:002029F0 424D            	     1M          DC.B    'BM','I'+128
01:002029F2 C9
01:002029F3 4A              	     2M          DC.B    10+0+NW,$6B,$00
01:002029F4 6B
01:002029F5 00
                            	  5715:          OPC     BG,E,10,6C,00,0,NW    BGE
01:002029F6 4247            	     1M          DC.B    'BG','E'+128
01:002029F8 C5
01:002029F9 4A              	     2M          DC.B    10+0+NW,$6C,$00
01:002029FA 6C
01:002029FB 00
                            	  5716:          OPC     BL,T,10,6D,00,0,NW    BLT
01:002029FC 424C            	     1M          DC.B    'BL','T'+128
01:002029FE D4
01:002029FF 4A              	     2M          DC.B    10+0+NW,$6D,$00
01:00202A00 6D
01:00202A01 00
                            	  5717:          OPC     BG,T,10,6E,00,0,NW    BGT
01:00202A02 4247            	     1M          DC.B    'BG','T'+128
01:00202A04 D4
01:00202A05 4A              	     2M          DC.B    10+0+NW,$6E,$00
01:00202A06 6E
01:00202A07 00
                            	  5718:          OPC     BL,E,10,6F,00,0,NW    BLE
01:00202A08 424C            	     1M          DC.B    'BL','E'+128
01:00202A0A C5
01:00202A0B 4A              	     2M          DC.B    10+0+NW,$6F,$00
01:00202A0C 6F
01:00202A0D 00
                            	  5719:          OPC     BCH,G,9,01,40,0,0     BCHG
01:00202A0E 424348          	     1M          DC.B    'BCH','G'+128
01:00202A11 C7
01:00202A12 09              	     2M          DC.B    9+0+0,$01,$40
01:00202A13 01
01:00202A14 40
                            	  5720:          OPC     BCL,R,30,01,80,0,0    BCLR      DYNAMIC
01:00202A15 42434C          	     1M          DC.B    'BCL','R'+128
01:00202A18 D2
01:00202A19 1E              	     2M          DC.B    30+0+0,$01,$80
01:00202A1A 01
01:00202A1B 80
                            	  5721:          OPC     BSE,T,11,01,C0,0,0    BSET
01:00202A1C 425345          	     1M          DC.B    'BSE','T'+128
01:00202A1F D4
01:00202A20 0B              	     2M          DC.B    11+0+0,$01,$C0
01:00202A21 01
01:00202A22 C0
                            	  5722:          OPC     BS,R,10,61,00,0,NW    BSR
01:00202A23 4253            	     1M          DC.B    'BS','R'+128
01:00202A25 D2
01:00202A26 4A              	     2M          DC.B    10+0+NW,$61,$00
01:00202A27 61
01:00202A28 00
                            	  5723:          OPC     BTS,T,31,01,00,0,0    BTST
01:00202A29 425453          	     1M          DC.B    'BTS','T'+128
01:00202A2C D4
01:00202A2D 1F              	     2M          DC.B    31+0+0,$01,$00
01:00202A2E 01
01:00202A2F 00
                            	  5724:          OPC     B,T,10,60,00,0,NW     BT
01:00202A30 42              	     1M          DC.B    'B','T'+128
01:00202A31 D4
01:00202A32 4A              	     2M          DC.B    10+0+NW,$60,$00
01:00202A33 60
01:00202A34 00
                            	  5725:          OPC     CH,K,12,41,80,0,0     CHK
01:00202A35 4348            	     1M          DC.B    'CH','K'+128
01:00202A37 CB
01:00202A38 0C              	     2M          DC.B    12+0+0,$41,$80
01:00202A39 41
01:00202A3A 80
                            	  5726:          OPC     CL,R,13,42,00,0,0     CLR
01:00202A3B 434C            	     1M          DC.B    'CL','R'+128
01:00202A3D D2
01:00202A3E 0D              	     2M          DC.B    13+0+0,$42,$00
01:00202A3F 42
01:00202A40 00
                            	  5727:          OPC     CMP,A,2,B0,C0,0,0     CMPA
01:00202A41 434D50          	     1M          DC.B    'CMP','A'+128
01:00202A44 C1
01:00202A45 02              	     2M          DC.B    2+0+0,$B0,$C0
01:00202A46 B0
01:00202A47 C0
                            	  5728:          OPC     CMP,I,3,0C,00,0,0     CMPI
01:00202A48 434D50          	     1M          DC.B    'CMP','I'+128
01:00202A4B C9
01:00202A4C 03              	     2M          DC.B    3+0+0,$0C,$00
01:00202A4D 0C
01:00202A4E 00
                            	  5729:          OPC     CMP,M,14,B1,08,0,0    CMPM
01:00202A4F 434D50          	     1M          DC.B    'CMP','M'+128
01:00202A52 CD
01:00202A53 0E              	     2M          DC.B    14+0+0,$B1,$08
01:00202A54 B1
01:00202A55 08
                            	  5730:          OPC     CM,P,34,B0,00,0,0     CMP
01:00202A56 434D            	     1M          DC.B    'CM','P'+128
01:00202A58 D0
01:00202A59 22              	     2M          DC.B    34+0+0,$B0,$00
01:00202A5A B0
01:00202A5B 00
                            	  5731:          OPC     DB,T,8,50,C8,0,NW     DBT
01:00202A5C 4442            	     1M          DC.B    'DB','T'+128
01:00202A5E D4
01:00202A5F 48              	     2M          DC.B    8+0+NW,$50,$C8
01:00202A60 50
01:00202A61 C8
                            	  5732:          OPC     DB,F,8,51,C8,0,NW     DBF
01:00202A62 4442            	     1M          DC.B    'DB','F'+128
01:00202A64 C6
01:00202A65 48              	     2M          DC.B    8+0+NW,$51,$C8
01:00202A66 51
01:00202A67 C8
                            	  5733:          OPC     DBR,A,8,51,C8,0,NW    DBRA
01:00202A68 444252          	     1M          DC.B    'DBR','A'+128
01:00202A6B C1
01:00202A6C 48              	     2M          DC.B    8+0+NW,$51,$C8
01:00202A6D 51
01:00202A6E C8
                            	  5734:          OPC     DBH,I,8,52,C8,0,NW    DBHI
01:00202A6F 444248          	     1M          DC.B    'DBH','I'+128
01:00202A72 C9
01:00202A73 48              	     2M          DC.B    8+0+NW,$52,$C8
01:00202A74 52
01:00202A75 C8
                            	  5735:          OPC     DBL,S,8,53,C8,0,NW    DBLS
01:00202A76 44424C          	     1M          DC.B    'DBL','S'+128
01:00202A79 D3
01:00202A7A 48              	     2M          DC.B    8+0+NW,$53,$C8
01:00202A7B 53
01:00202A7C C8
                            	  5736:          OPC     DBC,C,8,54,C8,0,NW    DBCC
01:00202A7D 444243          	     1M          DC.B    'DBC','C'+128
01:00202A80 C3
01:00202A81 48              	     2M          DC.B    8+0+NW,$54,$C8
01:00202A82 54
01:00202A83 C8
                            	  5737:          OPC     DBC,S,8,55,C8,0,NW    DBCS
01:00202A84 444243          	     1M          DC.B    'DBC','S'+128
01:00202A87 D3
01:00202A88 48              	     2M          DC.B    8+0+NW,$55,$C8
01:00202A89 55
01:00202A8A C8
                            	  5738:          OPC     DBN,E,8,56,C8,0,NW    DBNE
01:00202A8B 44424E          	     1M          DC.B    'DBN','E'+128
01:00202A8E C5
01:00202A8F 48              	     2M          DC.B    8+0+NW,$56,$C8
01:00202A90 56
01:00202A91 C8
                            	  5739:          OPC     DBE,Q,8,57,C8,0,NW    DBEQ
01:00202A92 444245          	     1M          DC.B    'DBE','Q'+128
01:00202A95 D1
01:00202A96 48              	     2M          DC.B    8+0+NW,$57,$C8
01:00202A97 57
01:00202A98 C8
                            	  5740:          OPC     DBV,C,8,58,C8,0,NW    DBVC
01:00202A99 444256          	     1M          DC.B    'DBV','C'+128
01:00202A9C C3
01:00202A9D 48              	     2M          DC.B    8+0+NW,$58,$C8
01:00202A9E 58
01:00202A9F C8
                            	  5741:          OPC     DBV,S,8,59,C8,0,NW    DBVS
01:00202AA0 444256          	     1M          DC.B    'DBV','S'+128
01:00202AA3 D3
01:00202AA4 48              	     2M          DC.B    8+0+NW,$59,$C8
01:00202AA5 59
01:00202AA6 C8
                            	  5742:          OPC     DBP,L,8,5A,C8,0,NW    DBPL
01:00202AA7 444250          	     1M          DC.B    'DBP','L'+128
01:00202AAA CC
01:00202AAB 48              	     2M          DC.B    8+0+NW,$5A,$C8
01:00202AAC 5A
01:00202AAD C8
                            	  5743:          OPC     DBM,I,8,5B,C8,0,NW    DBMI
01:00202AAE 44424D          	     1M          DC.B    'DBM','I'+128
01:00202AB1 C9
01:00202AB2 48              	     2M          DC.B    8+0+NW,$5B,$C8
01:00202AB3 5B
01:00202AB4 C8
                            	  5744:          OPC     DBG,E,8,5C,C8,0,NW    DBGE
01:00202AB5 444247          	     1M          DC.B    'DBG','E'+128
01:00202AB8 C5
01:00202AB9 48              	     2M          DC.B    8+0+NW,$5C,$C8
01:00202ABA 5C
01:00202ABB C8
                            	  5745:          OPC     DBL,T,8,5D,C8,0,NW    DBLT
01:00202ABC 44424C          	     1M          DC.B    'DBL','T'+128
01:00202ABF D4
01:00202AC0 48              	     2M          DC.B    8+0+NW,$5D,$C8
01:00202AC1 5D
01:00202AC2 C8
                            	  5746:          OPC     DBG,T,8,5E,C8,0,NW    DBGT
01:00202AC3 444247          	     1M          DC.B    'DBG','T'+128
01:00202AC6 D4
01:00202AC7 48              	     2M          DC.B    8+0+NW,$5E,$C8
01:00202AC8 5E
01:00202AC9 C8
                            	  5747:          OPC     DBL,E,8,5F,C8,0,NW    DBLE
01:00202ACA 44424C          	     1M          DC.B    'DBL','E'+128
01:00202ACD C5
01:00202ACE 48              	     2M          DC.B    8+0+NW,$5F,$C8
01:00202ACF 5F
01:00202AD0 C8
                            	  5748:          OPC     DC.,W,37,00,00,0,0    DC.W  (WORD ONLY)
01:00202AD1 44432E          	     1M          DC.B    'DC.','W'+128
01:00202AD4 D7
01:00202AD5 25              	     2M          DC.B    37+0+0,$00,$00
01:00202AD6 00
01:00202AD7 00
                            	  5749:          OPC     DIV,S,12,81,C0,0,0    DIVS
01:00202AD8 444956          	     1M          DC.B    'DIV','S'+128
01:00202ADB D3
01:00202ADC 0C              	     2M          DC.B    12+0+0,$81,$C0
01:00202ADD 81
01:00202ADE C0
                            	  5750:          OPC     DIV,U,12,80,C0,0,0    DIVU
01:00202ADF 444956          	     1M          DC.B    'DIV','U'+128
01:00202AE2 D5
01:00202AE3 0C              	     2M          DC.B    12+0+0,$80,$C0
01:00202AE4 80
01:00202AE5 C0
                            	  5751:          OPC     EOR,I,28,0A,00,0,0    EORI
01:00202AE6 454F52          	     1M          DC.B    'EOR','I'+128
01:00202AE9 C9
01:00202AEA 1C              	     2M          DC.B    28+0+0,$0A,$00
01:00202AEB 0A
01:00202AEC 00
                            	  5752:          OPC     EO,R,35,B1,00,0,0     EOR
01:00202AED 454F            	     1M          DC.B    'EO','R'+128
01:00202AEF D2
01:00202AF0 23              	     2M          DC.B    35+0+0,$B1,$00
01:00202AF1 B1
01:00202AF2 00
                            	  5753:          OPC     EX,G,16,C1,00,0,0     EXG
01:00202AF3 4558            	     1M          DC.B    'EX','G'+128
01:00202AF5 C7
01:00202AF6 10              	     2M          DC.B    16+0+0,$C1,$00
01:00202AF7 C1
01:00202AF8 00
                            	  5754:          OPC     EX,T,17,48,00,0,0     EXT
01:00202AF9 4558            	     1M          DC.B    'EX','T'+128
01:00202AFB D4
01:00202AFC 11              	     2M          DC.B    17+0+0,$48,$00
01:00202AFD 48
01:00202AFE 00
                            	  5755:          OPC     JM,P,18,4E,C0,0,NW    JMP
01:00202AFF 4A4D            	     1M          DC.B    'JM','P'+128
01:00202B01 D0
01:00202B02 52              	     2M          DC.B    18+0+NW,$4E,$C0
01:00202B03 4E
01:00202B04 C0
                            	  5756:          OPC     JS,R,18,4E,80,0,NW    JSR
01:00202B05 4A53            	     1M          DC.B    'JS','R'+128
01:00202B07 D2
01:00202B08 52              	     2M          DC.B    18+0+NW,$4E,$80
01:00202B09 4E
01:00202B0A 80
                            	  5757:          OPC     LE,A,19,41,C0,0,0     LEA
01:00202B0B 4C45            	     1M          DC.B    'LE','A'+128
01:00202B0D C1
01:00202B0E 13              	     2M          DC.B    19+0+0,$41,$C0
01:00202B0F 41
01:00202B10 C0
                            	  5758:          OPC     LIN,K,20,4E,50,0,0    LINK
01:00202B11 4C494E          	     1M          DC.B    'LIN','K'+128
01:00202B14 CB
01:00202B15 14              	     2M          DC.B    20+0+0,$4E,$50
01:00202B16 4E
01:00202B17 50
                            	  5759:          OPC     LS,L,7,E3,08,0,0      LSL
01:00202B18 4C53            	     1M          DC.B    'LS','L'+128
01:00202B1A CC
01:00202B1B 07              	     2M          DC.B    7+0+0,$E3,$08
01:00202B1C E3
01:00202B1D 08
                            	  5760:          OPC     LS,R,07,E2,08,0,0     LSR
01:00202B1E 4C53            	     1M          DC.B    'LS','R'+128
01:00202B20 D2
01:00202B21 07              	     2M          DC.B    07+0+0,$E2,$08
01:00202B22 E2
01:00202B23 08
                            	  5761:          OPC     MOVE,A,32,00,04,0,0   MOVEA
01:00202B24 4D4F5645        	     1M          DC.B    'MOVE','A'+128
01:00202B28 C1
01:00202B29 20              	     2M          DC.B    32+0+0,$00,$04
01:00202B2A 00
01:00202B2B 04
                            	  5762:          OPC     MOVE,M,27,48,80,0,0   MOVEM
01:00202B2C 4D4F5645        	     1M          DC.B    'MOVE','M'+128
01:00202B30 CD
01:00202B31 1B              	     2M          DC.B    27+0+0,$48,$80
01:00202B32 48
01:00202B33 80
                            	  5763:          OPC     MOVE,P,33,01,08,0,0   MOVEP
01:00202B34 4D4F5645        	     1M          DC.B    'MOVE','P'+128
01:00202B38 D0
01:00202B39 21              	     2M          DC.B    33+0+0,$01,$08
01:00202B3A 01
01:00202B3B 08
                            	  5764:          OPC     MOVE,Q,15,70,00,0,0   MOVEQ
01:00202B3C 4D4F5645        	     1M          DC.B    'MOVE','Q'+128
01:00202B40 D1
01:00202B41 0F              	     2M          DC.B    15+0+0,$70,$00
01:00202B42 70
01:00202B43 00
                            	  5765:          OPC     MOV,E,21,00,00,0,0    MOVE
01:00202B44 4D4F56          	     1M          DC.B    'MOV','E'+128
01:00202B47 C5
01:00202B48 15              	     2M          DC.B    21+0+0,$00,$00
01:00202B49 00
01:00202B4A 00
                            	  5766:          OPC     MUL,S,12,C1,C0,0,0    MULS
01:00202B4B 4D554C          	     1M          DC.B    'MUL','S'+128
01:00202B4E D3
01:00202B4F 0C              	     2M          DC.B    12+0+0,$C1,$C0
01:00202B50 C1
01:00202B51 C0
                            	  5767:          OPC     MUL,U,12,C0,C0,0,0    MULU
01:00202B52 4D554C          	     1M          DC.B    'MUL','U'+128
01:00202B55 D5
01:00202B56 0C              	     2M          DC.B    12+0+0,$C0,$C0
01:00202B57 C0
01:00202B58 C0
                            	  5768:          OPC     NBC,D,29,48,0,0,0     NBCD
01:00202B59 4E4243          	     1M          DC.B    'NBC','D'+128
01:00202B5C C4
01:00202B5D 1D              	     2M          DC.B    29+0+0,$48,$0
01:00202B5E 48
01:00202B5F 00
                            	  5769:          OPC     NEG,X,13,40,00,0,0    NEGX
01:00202B60 4E4547          	     1M          DC.B    'NEG','X'+128
01:00202B63 D8
01:00202B64 0D              	     2M          DC.B    13+0+0,$40,$00
01:00202B65 40
01:00202B66 00
                            	  5770:          OPC     NE,G,13,44,00,0,0     NEG
01:00202B67 4E45            	     1M          DC.B    'NE','G'+128
01:00202B69 C7
01:00202B6A 0D              	     2M          DC.B    13+0+0,$44,$00
01:00202B6B 44
01:00202B6C 00
                            	  5771:          OPC     NO,P,22,4E,71,NOC,0   NOP
01:00202B6D 4E4F            	     1M          DC.B    'NO','P'+128
01:00202B6F D0
01:00202B70 96              	     2M          DC.B    22+NOC+0,$4E,$71
01:00202B71 4E
01:00202B72 71
                            	  5772:          OPC     NO,T,13,46,00,0,0     NOT
01:00202B73 4E4F            	     1M          DC.B    'NO','T'+128
01:00202B75 D4
01:00202B76 0D              	     2M          DC.B    13+0+0,$46,$00
01:00202B77 46
01:00202B78 00
                            	  5773:          OPC     OR,I,28,00,00,0,0     ORI
01:00202B79 4F52            	     1M          DC.B    'OR','I'+128
01:00202B7B C9
01:00202B7C 1C              	     2M          DC.B    28+0+0,$00,$00
01:00202B7D 00
01:00202B7E 00
                            	  5774:          OPC     O,R,6,80,00,0,0       OR
01:00202B7F 4F              	     1M          DC.B    'O','R'+128
01:00202B80 D2
01:00202B81 06              	     2M          DC.B    6+0+0,$80,$00
01:00202B82 80
01:00202B83 00
                            	  5775:          OPC     PE,A,36,48,40,0,0     PEA
01:00202B84 5045            	     1M          DC.B    'PE','A'+128
01:00202B86 C1
01:00202B87 24              	     2M          DC.B    36+0+0,$48,$40
01:00202B88 48
01:00202B89 40
                            	  5776:          OPC     RESE,T,22,4E,70,NOC,0 RESET
01:00202B8A 52455345        	     1M          DC.B    'RESE','T'+128
01:00202B8E D4
01:00202B8F 96              	     2M          DC.B    22+NOC+0,$4E,$70
01:00202B90 4E
01:00202B91 70
                            	  5777:          OPC     RO,L,7,E7,18,0,0      ROL
01:00202B92 524F            	     1M          DC.B    'RO','L'+128
01:00202B94 CC
01:00202B95 07              	     2M          DC.B    7+0+0,$E7,$18
01:00202B96 E7
01:00202B97 18
                            	  5778:          OPC     RO,R,07,E6,18,0,0     ROR
01:00202B98 524F            	     1M          DC.B    'RO','R'+128
01:00202B9A D2
01:00202B9B 07              	     2M          DC.B    07+0+0,$E6,$18
01:00202B9C E6
01:00202B9D 18
                            	  5779:          OPC     ROX,L,7,E5,10,0,0     ROXL
01:00202B9E 524F58          	     1M          DC.B    'ROX','L'+128
01:00202BA1 CC
01:00202BA2 07              	     2M          DC.B    7+0+0,$E5,$10
01:00202BA3 E5
01:00202BA4 10
                            	  5780:          OPC     ROX,R,07,E4,10,0,0    ROXR
01:00202BA5 524F58          	     1M          DC.B    'ROX','R'+128
01:00202BA8 D2
01:00202BA9 07              	     2M          DC.B    07+0+0,$E4,$10
01:00202BAA E4
01:00202BAB 10
                            	  5781:          OPC     RT,E,22,4E,73,NOC,0   RTE
01:00202BAC 5254            	     1M          DC.B    'RT','E'+128
01:00202BAE C5
01:00202BAF 96              	     2M          DC.B    22+NOC+0,$4E,$73
01:00202BB0 4E
01:00202BB1 73
                            	  5782:          OPC     RT,R,22,4E,77,NOC,0   RTR
01:00202BB2 5254            	     1M          DC.B    'RT','R'+128
01:00202BB4 D2
01:00202BB5 96              	     2M          DC.B    22+NOC+0,$4E,$77
01:00202BB6 4E
01:00202BB7 77
                            	  5783:          OPC     RT,S,22,4E,75,NOC,0   RTS
01:00202BB8 5254            	     1M          DC.B    'RT','S'+128
01:00202BBA D3
01:00202BBB 96              	     2M          DC.B    22+NOC+0,$4E,$75
01:00202BBC 4E
01:00202BBD 75
                            	  5784:          OPC     SBC,D,0,81,00,0,0     SBCD
01:00202BBE 534243          	     1M          DC.B    'SBC','D'+128
01:00202BC1 C4
01:00202BC2 00              	     2M          DC.B    0+0+0,$81,$00
01:00202BC3 81
01:00202BC4 00
                            	  5785:          OPC     S,F,29,51,C0,0,0      SF
01:00202BC5 53              	     1M          DC.B    'S','F'+128
01:00202BC6 C6
01:00202BC7 1D              	     2M          DC.B    29+0+0,$51,$C0
01:00202BC8 51
01:00202BC9 C0
                            	  5786:          OPC     SH,I,29,52,C0,0,0     SHI
01:00202BCA 5348            	     1M          DC.B    'SH','I'+128
01:00202BCC C9
01:00202BCD 1D              	     2M          DC.B    29+0+0,$52,$C0
01:00202BCE 52
01:00202BCF C0
                            	  5787:          OPC     SL,S,29,53,C0,0,0     SLS
01:00202BD0 534C            	     1M          DC.B    'SL','S'+128
01:00202BD2 D3
01:00202BD3 1D              	     2M          DC.B    29+0+0,$53,$C0
01:00202BD4 53
01:00202BD5 C0
                            	  5788:          OPC     SC,C,29,54,C0,0,0     SCC
01:00202BD6 5343            	     1M          DC.B    'SC','C'+128
01:00202BD8 C3
01:00202BD9 1D              	     2M          DC.B    29+0+0,$54,$C0
01:00202BDA 54
01:00202BDB C0
                            	  5789:          OPC     SC,S,29,55,C0,0,0     SCS
01:00202BDC 5343            	     1M          DC.B    'SC','S'+128
01:00202BDE D3
01:00202BDF 1D              	     2M          DC.B    29+0+0,$55,$C0
01:00202BE0 55
01:00202BE1 C0
                            	  5790:          OPC     SN,E,29,56,C0,0,0     SNE
01:00202BE2 534E            	     1M          DC.B    'SN','E'+128
01:00202BE4 C5
01:00202BE5 1D              	     2M          DC.B    29+0+0,$56,$C0
01:00202BE6 56
01:00202BE7 C0
                            	  5791:          OPC     SE,Q,29,57,C0,0,0     SEQ
01:00202BE8 5345            	     1M          DC.B    'SE','Q'+128
01:00202BEA D1
01:00202BEB 1D              	     2M          DC.B    29+0+0,$57,$C0
01:00202BEC 57
01:00202BED C0
                            	  5792:          OPC     SV,C,29,58,C0,0,0     SVC
01:00202BEE 5356            	     1M          DC.B    'SV','C'+128
01:00202BF0 C3
01:00202BF1 1D              	     2M          DC.B    29+0+0,$58,$C0
01:00202BF2 58
01:00202BF3 C0
                            	  5793:          OPC     SV,S,29,59,C0,0,0     SVS
01:00202BF4 5356            	     1M          DC.B    'SV','S'+128
01:00202BF6 D3
01:00202BF7 1D              	     2M          DC.B    29+0+0,$59,$C0
01:00202BF8 59
01:00202BF9 C0
                            	  5794:          OPC     SP,L,29,5A,C0,0,0     SPL
01:00202BFA 5350            	     1M          DC.B    'SP','L'+128
01:00202BFC CC
01:00202BFD 1D              	     2M          DC.B    29+0+0,$5A,$C0
01:00202BFE 5A
01:00202BFF C0
                            	  5795:          OPC     SM,I,29,5B,C0,0,0     SMI
01:00202C00 534D            	     1M          DC.B    'SM','I'+128
01:00202C02 C9
01:00202C03 1D              	     2M          DC.B    29+0+0,$5B,$C0
01:00202C04 5B
01:00202C05 C0
                            	  5796:          OPC     SG,E,29,5C,C0,0,0     SGE
01:00202C06 5347            	     1M          DC.B    'SG','E'+128
01:00202C08 C5
01:00202C09 1D              	     2M          DC.B    29+0+0,$5C,$C0
01:00202C0A 5C
01:00202C0B C0
                            	  5797:          OPC     SL,T,29,5D,C0,0,0     SLT
01:00202C0C 534C            	     1M          DC.B    'SL','T'+128
01:00202C0E D4
01:00202C0F 1D              	     2M          DC.B    29+0+0,$5D,$C0
01:00202C10 5D
01:00202C11 C0
                            	  5798:          OPC     SG,T,29,5E,C0,0,0     SGT
01:00202C12 5347            	     1M          DC.B    'SG','T'+128
01:00202C14 D4
01:00202C15 1D              	     2M          DC.B    29+0+0,$5E,$C0
01:00202C16 5E
01:00202C17 C0
                            	  5799:          OPC     SL,E,29,5F,C0,0,0     SLE
01:00202C18 534C            	     1M          DC.B    'SL','E'+128
01:00202C1A C5
01:00202C1B 1D              	     2M          DC.B    29+0+0,$5F,$C0
01:00202C1C 5F
01:00202C1D C0
                            	  5800:          OPC     STO,P,23,4E,72,0,0    STOP
01:00202C1E 53544F          	     1M          DC.B    'STO','P'+128
01:00202C21 D0
01:00202C22 17              	     2M          DC.B    23+0+0,$4E,$72
01:00202C23 4E
01:00202C24 72
                            	  5801:          OPC     S,T,29,50,C0,0,0      ST
01:00202C25 53              	     1M          DC.B    'S','T'+128
01:00202C26 D4
01:00202C27 1D              	     2M          DC.B    29+0+0,$50,$C0
01:00202C28 50
01:00202C29 C0
                            	  5802:          OPC     SUB,A,2,90,C0,0,0     SUBA
01:00202C2A 535542          	     1M          DC.B    'SUB','A'+128
01:00202C2D C1
01:00202C2E 02              	     2M          DC.B    2+0+0,$90,$C0
01:00202C2F 90
01:00202C30 C0
                            	  5803:          OPC     SUB,I,3,04,00,0,0     SUBI
01:00202C31 535542          	     1M          DC.B    'SUB','I'+128
01:00202C34 C9
01:00202C35 03              	     2M          DC.B    3+0+0,$04,$00
01:00202C36 04
01:00202C37 00
                            	  5804:          OPC     SUB,Q,4,51,00,0,0     SUBQ
01:00202C38 535542          	     1M          DC.B    'SUB','Q'+128
01:00202C3B D1
01:00202C3C 04              	     2M          DC.B    4+0+0,$51,$00
01:00202C3D 51
01:00202C3E 00
                            	  5805:          OPC     SUB,X,5,91,00,0,0     SUBX
01:00202C3F 535542          	     1M          DC.B    'SUB','X'+128
01:00202C42 D8
01:00202C43 05              	     2M          DC.B    5+0+0,$91,$00
01:00202C44 91
01:00202C45 00
                            	  5806:          OPC     SU,B,1,90,00,0,0      SUB
01:00202C46 5355            	     1M          DC.B    'SU','B'+128
01:00202C48 C2
01:00202C49 01              	     2M          DC.B    1+0+0,$90,$00
01:00202C4A 90
01:00202C4B 00
                            	  5807:          OPC     SWA,P,24,48,40,0,0    SWAP
01:00202C4C 535741          	     1M          DC.B    'SWA','P'+128
01:00202C4F D0
01:00202C50 18              	     2M          DC.B    24+0+0,$48,$40
01:00202C51 48
01:00202C52 40
                            	  5808:          OPC     TA,S,29,4A,C0,0,0     TAS
01:00202C53 5441            	     1M          DC.B    'TA','S'+128
01:00202C55 D3
01:00202C56 1D              	     2M          DC.B    29+0+0,$4A,$C0
01:00202C57 4A
01:00202C58 C0
                            	  5809:          OPC     TRAP,V,22,4E,76,NOC,0 TRAPV
01:00202C59 54524150        	     1M          DC.B    'TRAP','V'+128
01:00202C5D D6
01:00202C5E 96              	     2M          DC.B    22+NOC+0,$4E,$76
01:00202C5F 4E
01:00202C60 76
                            	  5810:          OPC     TRA,P,25,4E,40,0,0    TRAP
01:00202C61 545241          	     1M          DC.B    'TRA','P'+128
01:00202C64 D0
01:00202C65 19              	     2M          DC.B    25+0+0,$4E,$40
01:00202C66 4E
01:00202C67 40
                            	  5811:          OPC     TS,T,13,4A,00,0,0     TST
01:00202C68 5453            	     1M          DC.B    'TS','T'+128
01:00202C6A D4
01:00202C6B 0D              	     2M          DC.B    13+0+0,$4A,$00
01:00202C6C 4A
01:00202C6D 00
                            	  5812:          OPC     UNL,K,26,4E,58,0,0    UNLK
01:00202C6E 554E4C          	     1M          DC.B    'UNL','K'+128
01:00202C71 CB
01:00202C72 1A              	     2M          DC.B    26+0+0,$4E,$58
01:00202C73 4E
01:00202C74 58
                            	  5813: 
01:00202C75 00              	  5814:          DC.B    0              PAD BYTE
                            	  5815: 
                            	  5816: TBLOPCE  DS      0
                            	  5817: 
                            	  5818: * WITHOUT LABEL FIELD
                            	  5819: * 012345678901234567890123456789012345678901234567890
                            	  5820: * AAAAAA DDDDDDDDDDDDDDDDDDDD OPCODE  OPERAND
                            	  5821: *        FDATA                FOC     FOP
                            	  5822: 
                            	  5823: * 012345678901234567890123456789012345678901234567890
                            	  5824: * AAAAAA DDDDDDDDDDDDDDDDDDDD LLLLLLLL OPCODE  OPERAND
                            	  5825: *        FDATA                FOL      FOC     FOP
                            	  5826: 
                            	  5827: * A3 = STORE POINTER
                            	  5828: * A4 = PROGRAM COUNTER
                            	  5829: * A5 = SOURCE PTR BEGINNING
                            	  5830: * A6 = SOURCE PTR END+1
                            	  5831: *
                            	  5832: OUTBSIZE EQU     80        BUFFER SIZE
                            	  5833: FDATA    EQU     10        OFFSET TO DATA
                            	  5834: FOL      EQU     31        OFFSET TO LABEL
                            	  5835: FOC      EQU     31        OFFSET TO OP-CODE (NO LABEL FIELD)
                            	  5836: FOP      EQU     39        OFFSET TO OPERAND (NO LABEL FIELD)
                            	  5837: 
01:00202C76 4E51FFDE        	  5838: CODE68K  LINK    A1,#0-(ESKE-ESKB)
01:00202C7A 2F49001E        	  5839:          MOVE.L  A1,LINK(A7)    SAVE LINKAGE
01:00202C7E 224F            	  5840:          MOVE.L  A7,A1          A1 = BASE REGISTER TO DATA
                            	  5841: 
01:00202C80 1CBC0020        	  5842:          MOVE.B  #BLANK,(A6)    INSURE LAST CHAR IS SPACE
                            	  5843: 
01:00202C84 204B            	  5844:          MOVE.L  A3,A0
01:00202C86 704F            	  5845:          MOVEQ   #OUTBSIZE-1,D0
01:00202C88 10FC0020        	  5846: M300     MOVE.B  #BLANK,(A0)+   SPACE FILL BUFFER
01:00202C8C 51C8FFFA        	  5847:          DBRA    D0,M300
01:00202C90 5588            	  5848:          SUBQ.L  #2,A0
01:00202C92 2348001A        	  5849:          MOVE.L  A0,PTRBUFE(A1) PTR TO END OF BUFFER
                            	  5850: 
01:00202C96 234C000E        	  5851:          MOVE.L  A4,PCOUNTER(A1)  FORMAT PC
01:00202C9A 280C            	  5852:          MOVE.L  A4,D4          D4 = P-COUNTER
01:00202C9C 200C            	  5853:          MOVE.L  A4,D0
                            	  5854: 
01:00202C9E 2F0E            	  5855:          MOVE.L  A6,-(A7)       SAVE A6
01:00202CA0 2C4B            	  5856:          MOVE.L  A3,A6
01:00202CA2 6100F11A        	  5857:          BSR     FRELADDR       FORM RELATIVE ADDRESS
01:00202CA6 2C5F            	  5858:          MOVE.L  (A7)+,A6       RESTORE A6
                            	  5859: 
01:00202CA8 7E01            	  5860:          MOVEQ   #1,D7          POSSIBLE ERROR CODE
01:00202CAA 200C            	  5861:          MOVE.L  A4,D0
01:00202CAC E298            	  5862:          ROR.L   #1,D0
01:00202CAE 6B00013A        	  5863:          BMI     ERDONE         PC ODD ADDRESS
                            	  5864: 
01:00202CB2 7E1F            	  5865:          MOVEQ   #FOL,D7        POSSIBLE ERROR CODE
01:00202CB4 0C1D0020        	  5866:          CMPI.B  #BLANK,(A5)+
01:00202CB8 66000130        	  5867:          BNE     ERDONE         1ST CHAR NOT SPACE
                            	  5868: 
01:00202CBC 137C0002000A    	  5869:          MOVE.B  #2,TNB(A1)     INZ # OF BYTES
01:00202CC2 337C0040000C    	  5870:          MOVE.W  #$40,TLENGTH(A1)  SIZE = .W (DEFAULT)
01:00202CC8 4229000B        	  5871:          CLR.B   TLSPEC(A1)     DEFAULT (SIZE NOT SPECIFIED)
                            	  5872: 
01:00202CCC 204B            	  5873:          MOVE.L  A3,A0          A0 = STORE ADDRESS
01:00202CCE 41E8001F        	  5874:          ADD.L   #FOC,A0
                            	  5875: 
01:00202CD2 61000108        	  5876: M340     BSR     GETCHARF       GET PAST SPACES
01:00202CD6 0C000020        	  5877:          CMPI.B  #BLANK,D0
01:00202CDA 67F6            	  5878:          BEQ     M340
                            	  5879: 
01:00202CDC 538D            	  5880:          SUBQ.L  #1,A5          FORMAT OP-CODE
01:00202CDE 610000FC        	  5881: M350     BSR     GETCHARF
01:00202CE2 10C0            	  5882:          MOVE.B  D0,(A0)+
01:00202CE4 0C00002E        	  5883:          CMPI.B  #'.',D0
01:00202CE8 6628            	  5884:          BNE.S   M352
                            	  5885: 
01:00202CEA 1355000B        	  5886:          MOVE.B  (A5),TLSPEC(A1)  NOT DEFAULT
01:00202CEE 0C150057        	  5887:          CMPI.B  #'W',(A5)
01:00202CF2 671E            	  5888:          BEQ.S   M352
01:00202CF4 0C150053        	  5889:          CMPI.B  #'S',(A5)
01:00202CF8 6718            	  5890:          BEQ.S   M352           .SHORT = .WORD
01:00202CFA 4269000C        	  5891:          CLR.W   TLENGTH(A1)
01:00202CFE 0C150042        	  5892:          CMPI.B  #'B',(A5)
01:00202D02 670E            	  5893:          BEQ.S   M352           SIZE = .W
01:00202D04 337C0080000C    	  5894:          MOVE.W  #$80,TLENGTH(A1)
01:00202D0A 0C15004C        	  5895:          CMPI.B  #'L',(A5)
01:00202D0E 660000D4        	  5896:          BNE     ERF
                            	  5897: 
01:00202D12 0C000020        	  5898: M352     CMPI.B  #BLANK,D0
01:00202D16 66C6            	  5899:          BNE     M350           NOT SPACE CONTINUE
                            	  5900: 
                            	  5901: * SEARCH OP-CODE TABLE
01:00202D18 41FAFC58        	  5902:          LEA     TBLOPC(PC),A0  A0 = PTR TO TABLE OF CODES
01:00202D1C 244B            	  5903: M410     MOVE.L  A3,A2          A3 = START OF STORE BUFFER
01:00202D1E 45EA001F        	  5904:          ADD.L   #FOC,A2        A2 = PTR TO OP-CODE JUST FORMATTED
                            	  5905: 
01:00202D22 1018            	  5906: M415     MOVE.B  (A0)+,D0       XXXXXXDD
01:00202D24 4880            	  5907:          EXT.W   D0             XXXXSSDD  SIGN EXTENDED
01:00202D26 0200007F        	  5908:          ANDI.B  #$7F,D0
01:00202D2A B01A            	  5909:          CMP.B   (A2)+,D0
01:00202D2C 6606            	  5910:          BNE.S   M420           NON-MATCH
01:00202D2E 4A40            	  5911:          TST.W   D0
01:00202D30 6AF0            	  5912:          BPL     M415           SIGN RESET; CONTINUE
01:00202D32 6018            	  5913:          BRA.S   M430           MATCH COMPLETE
                            	  5914: 
01:00202D34 4A40            	  5915: M420     TST.W   D0             SEQUENCE TO NEXT CODE
01:00202D36 6B04            	  5916:          BMI.S   M426
01:00202D38 1018            	  5917: M424     MOVE.B  (A0)+,D0
01:00202D3A 6AFC            	  5918:          BPL     M424           FINISH THIS OP-CODE
01:00202D3C 5688            	  5919: M426     ADDQ.L  #3,A0          ADJUST PTR TO TABLE
01:00202D3E 45FAFF36        	  5920:          LEA     TBLOPCE(PC),A2
01:00202D42 B5C8            	  5921:          CMP.L   A0,A2
01:00202D44 66D6            	  5922:          BNE     M410
                            	  5923: 
01:00202D46 7E1F            	  5924: M428     MOVEQ   #FOC,D7        ERROR CODE
01:00202D48 600000A0        	  5925:          BRA     ERDONE
                            	  5926: 
                            	  5927: * GET GOTO INDEX
                            	  5928: * GET FIRST WORD MASK
01:00202D4C 1012            	  5929: M430     MOVE.B  (A2),D0        MUST TERMINATE OP-CODE
01:00202D4E 0C000020        	  5930:          CMPI.B  #BLANK,D0        WITH SPACE OR PERIOD
01:00202D52 6706            	  5931:          BEQ.S   M432
01:00202D54 0C00002E        	  5932:          CMPI.B  #'.',D0
01:00202D58 66EC            	  5933:          BNE     M428           ERROR
                            	  5934: M432
                            	  5935: 
01:00202D5A 7000            	  5936:          CLR.L   D0
01:00202D5C 1018            	  5937:          MOVE.B  (A0)+,D0       D0 =  KEYS  INDEX
01:00202D5E 1200            	  5938:          MOVE.B  D0,D1          D1 =  KEYS (INDEX)
01:00202D60 0200003F        	  5939:          ANDI.B  #$3F,D0        D0 =        INDEX
01:00202D64 D080            	  5940:          ASL.L   #1,D0          INDEX * TWO
01:00202D66 1418            	  5941:          MOVE.B  (A0)+,D2
01:00202D68 E14A            	  5942:          LSL.W   #8,D2
01:00202D6A 1418            	  5943:          MOVE.B  (A0)+,D2       D2 = FIRST WORD MASK
01:00202D6C 3282            	  5944:          MOVE.W  D2,(A1)        *D2,TDATA(A1)
                            	  5945: 
                            	  5946: * INSURE .S .W MATCH OP-CODE
                            	  5947: 
01:00202D6E 1629000B        	  5948:          MOVE.B  TLSPEC(A1),D3  D3 = .n SPECIFIED
01:00202D72 671A            	  5949:          BEQ.S   M4326          NOT SPECIFIED
01:00202D74 08010006        	  5950:          BTST    #6,D1
01:00202D78 670E            	  5951:          BEQ.S   M4324          .W ALLOWED (.S NOT ALLOWED)
01:00202D7A 0C030057        	  5952:          CMPI.B  #'W',D3
01:00202D7E 67C6            	  5953:          BEQ     M428           .W NOT ALLOWED
01:00202D80 0C030042        	  5954:          CMPI.B  #'B',D3
01:00202D84 67C0            	  5955:          BEQ     M428           .B NOT ALLOWED
01:00202D86 6006            	  5956:          BRA.S   M4326
                            	  5957: 
01:00202D88 0C030053        	  5958: M4324    CMPI.B  #'S',D3
01:00202D8C 67B8            	  5959:          BEQ     M428           .S NOT ALLOWED
                            	  5960: M4326
                            	  5961: 
                            	  5962: * CALCULATE GOTO ADDRESS
                            	  5963: 
01:00202D8E 41FAFB96        	  5964:          LEA     TBLKEYS(PC),A0 A0 = PTR TO KEYS
01:00202D92 30300000        	  5965:          MOVE.W  (A0,D0),D0     D0 = 16 BIT OFFSET
01:00202D96 45FAF884        	  5966:          LEA     XBASE(PC),A2   A2 = BASE ADDRESS
01:00202D9A D5C0            	  5967:          ADD.L   D0,A2          A2 = COMPUTED GO TO  ADDRESS
                            	  5968: 
                            	  5969: * FORMAT OPERAND IF REGUIRED
                            	  5970: 
01:00202D9C 4A01            	  5971:          TST.B   D1             LOOK AT KEY
01:00202D9E 6B20            	  5972:          BMI.S   M440           OPERAND NOT REQUIRED
                            	  5973: 
01:00202DA0 204B            	  5974:          MOVE.L  A3,A0
01:00202DA2 41E80027        	  5975:          ADD.L   #FOP,A0        STORE POINTER
01:00202DA6 23480012        	  5976:          MOVE.L  A0,PTROP(A1)   POINTER TO OPERAND (FORMATED)
01:00202DAA 6130            	  5977: M435     BSR.S   GETCHARF       D0 = CHAR
01:00202DAC 0C000020        	  5978:          CMPI.B  #BLANK,D0
01:00202DB0 67F8            	  5979:          BEQ     M435           SKIP SPACES
                            	  5980: 
01:00202DB2 10C0            	  5981: M437     MOVE.B  D0,(A0)+       MOVE REST OF SOURCE LINE
01:00202DB4 6126            	  5982:          BSR.S   GETCHARF       D0 = CHAR
01:00202DB6 BDCD            	  5983:          CMP.L   A5,A6
01:00202DB8 6AF8            	  5984:          BPL     M437
01:00202DBA 2348001A        	  5985:          MOVE.L  A0,PTRBUFE(A1) POINTER TO END FORMATED SOURCE
01:00202DBE 2C48            	  5986:          MOVE.L  A0,A6          A6 = POINTER TO END OF SOURCE
                            	  5987: M440
                            	  5988: 
01:00202DC0 2A690012        	  5989:          MOVE.L  PTROP(A1),A5   A5 = PTR TO OPERAND
01:00202DC4 49E90002        	  5990:          LEA     TDATA+2(A1),A4 A4 = BASE ADDR FOR DATA STORE
01:00202DC8 7600            	  5991:          CLR.L   D3             D3 = OFFSET FOR DATA STORE
01:00202DCA 4ED2            	  5992:          JMP     (A2)           GOTO ROUTINE
                            	  5993: *                               D2 = MASK
                            	  5994: *                               D4 = P-COUNTER
                            	  5995: 
01:00202DCC 0C1D002C        	  5996: COMMA    CMPI.B  #',',(A5)+
01:00202DD0 6614            	  5997:          BNE.S   ER             NOT COMMA
01:00202DD2 4E75            	  5998:          RTS
                            	  5999: 
01:00202DD4 BDCD            	  6000: GETCHAR  CMP.L   A5,A6
01:00202DD6 6B0E            	  6001:          BMI.S   ER
01:00202DD8 101D            	  6002:          MOVE.B  (A5)+,D0
01:00202DDA 4E75            	  6003:          RTS
                            	  6004: 
01:00202DDC BDCD            	  6005: GETCHARF CMP.L   A5,A6
01:00202DDE 6B04            	  6006:          BMI.S   ERF
01:00202DE0 101D            	  6007:          MOVE.B  (A5)+,D0
01:00202DE2 4E75            	  6008:          RTS
                            	  6009: 
01:00202DE4 2A48            	  6010: ERF      MOVE.L  A0,A5
                            	  6011: 
01:00202DE6 2E0D            	  6012: ER       MOVE.L  A5,D7          D7 = ERROR FLAG
01:00202DE8 9E8B            	  6013:          SUB.L   A3,D7          ..& POSITION OF ERROR
01:00202DEA 7C00            	  6014: ERDONE   CLR.L   D6             D6 = (ZERO) BYTE COUNT
01:00202DEC 6022            	  6015:          BRA.S   CMMD35
                            	  6016: 
01:00202DEE 0C150020        	  6017: CMMD2    CMPI.B  #BLANK,(A5)
01:00202DF2 66F2            	  6018:          BNE     ER             OPERAND DID NOT END WITH SPACE
                            	  6019: 
                            	  6020: MCMMD2   DS      0              NO OPERAND SEQUENCE
01:00202DF4 3282            	  6021:          MOVE.W  D2,(A1)        *D2,TDATA(A1)
                            	  6022: 
01:00202DF6 1629000A        	  6023:          MOVE.B  TNB(A1),D3     FORMAT DATA
01:00202DFA 2C03            	  6024:          MOVE.L  D3,D6          D7 = NUMBER OF BYTES
01:00202DFC 45D1            	  6025:          LEA     (A1),A2        A2 = PTR TO HEX DATA  *TDATA(A1),A2
01:00202DFE 2C4B            	  6026:          MOVE.L  A3,A6          D3 = NUMBER OF BYTES
01:00202E00 4DEE000A        	  6027:          ADD.L   #FDATA,A6      A6 = STORE PTR
01:00202E04 101A            	  6028: FPR315   MOVE.B  (A2)+,D0
01:00202E06 6100EF9A        	  6029:          BSR     PNT2HX
01:00202E0A 5383            	  6030:          SUBQ.L  #1,D3
01:00202E0C 66F6            	  6031:          BNE     FPR315         MORE BYTES
                            	  6032: 
01:00202E0E 7E00            	  6033:          CLR.L   D7             RESET ERROR FLAG
                            	  6034: 
01:00202E10 4CD10007        	  6035: CMMD35   MOVEM.L (A1),D0-D2       D0-D2 = DATA   *TDATA(A1),D0-D2
                            	  6036: 
01:00202E14 2C69001A        	  6037:          MOVE.L  PTRBUFE(A1),A6   A6 = POINTER TO END OF BUFFER
                            	  6038: 
01:00202E18 2869000E        	  6039:          MOVE.L  PCOUNTER(A1),A4  A4 = ORGINAL PC
                            	  6040: 
01:00202E1C 2269001E        	  6041:          MOVE.L  LINK(A1),A1
01:00202E20 4E59            	  6042:          UNLK    A1
01:00202E22 4E75            	  6043:          RTS                    RETURN TO REQUESTOR
                            	  6044: *                               A3 = POINTER TO START OF BUFFER
                            	  6045: *                               D6 = NUMBER OF BYTES ASSEMBLED
                            	  6046: *                               D7 = ERROR FLAG (POSITION)
                            	  6047: 
                            	  6048: 
                            	  6049: *  SIZE = BYTE
                            	  6050: *    DY,DX
                            	  6051: *    -(AY),-(AX)
                            	  6052: *    ....RX@.SS...RY@
                            	  6053: MABCD    DS      0              (INDEX 0) ABCD SBCD
01:00202E24 4A29000B        	  6054:          TST.B   TLSPEC(A1)
01:00202E28 6706            	  6055:          BEQ.S   MABCD9         DEFAULT SIZE = BYTE
01:00202E2A 4A69000C        	  6056:          CMPI.W  #$00,TLENGTH(A1)
01:00202E2E 66B6            	  6057:          BNE     ER             NOT .B
                            	  6058: MABCD9
                            	  6059: 
01:00202E30 3E3C0011        	  6060:          MOVE.W  #$11,D7
01:00202E34 6100F854        	  6061:          BSR     EA
                            	  6062: 
01:00202E38 6192            	  6063:          BSR     COMMA
                            	  6064: 
01:00202E3A 2006            	  6065:          MOVE.L  D6,D0
01:00202E3C 02400007        	  6066:          ANDI.W  #7,D0
01:00202E40 8440            	  6067:          OR.W    D0,D2
                            	  6068: 
01:00202E42 08060005        	  6069:          BTST    #5,D6
01:00202E46 6716            	  6070:          BEQ.S   MABCD55        D@,D@ MODE
                            	  6071: 
01:00202E48 00420008        	  6072:          ORI.W   #$0008,D2      -(A@),-(A@) MODE
                            	  6073: 
01:00202E4C 3E3C0010        	  6074:          MOVE.W  #$10,D7
01:00202E50 6100F838        	  6075:          BSR     EA
                            	  6076: 
01:00202E54 02460007        	  6077:          ANDI.W  #7,D6
01:00202E58 EE5E            	  6078:          ROR.W   #7,D6
01:00202E5A 8446            	  6079:          OR.W    D6,D2
01:00202E5C 6090            	  6080:          BRA     CMMD2
                            	  6081: 
01:00202E5E 6100F7C2        	  6082: MABCD55  BSR     GETREGD        D@,D@
01:00202E62 EE58            	  6083:          ROR.W   #7,D0
01:00202E64 8440            	  6084:          OR.W    D0,D2
01:00202E66 6086            	  6085: CMMD2S10 BRA     CMMD2
                            	  6086: 
                            	  6087: 
                            	  6088: MCMP     DS      0              (INDEX 34)
01:00202E68 6100F81C        	  6089:          BSR     EAALL
01:00202E6C 2806            	  6090:          MOVE.L  D6,D4          D4 = SOURCE MODE
                            	  6091: 
01:00202E6E 6166            	  6092:          BSR.S   COMMAS20
                            	  6093: 
01:00202E70 0C150041        	  6094:          CMPI.B  #'A',(A5)
01:00202E74 67000116        	  6095:          BEQ     MADDA21        DESTINATION = A@
                            	  6096: 
01:00202E78 0C04003C        	  6097:          CMPI.B  #$3C,D4
01:00202E7C 6748            	  6098:          BEQ.S   MCMP56         SOURCE  ....I  #<DATA>,...
                            	  6099: 
01:00202E7E 6100F79C        	  6100:          BSR     FSIZE
                            	  6101: 
01:00202E82 3E3C0009        	  6102:          MOVE.W  #$009,D7
01:00202E86 6100F802        	  6103:          BSR     EA             D@ + (A@)+
01:00202E8A 2006            	  6104:          MOVE.L  D6,D0          MMMRRR
01:00202E8C 02400038        	  6105:          ANDI.W  #$38,D0        MMM...
                            	  6106: 
01:00202E90 672C            	  6107:          BEQ.S   MCMP39         DESTINATION  D@
                            	  6108: 
01:00202E92 0C000018        	  6109:          CMPI.B  #$18,D0
01:00202E96 6600FF4E        	  6110:          BNE     ER
                            	  6111: 
01:00202E9A 0246000F        	  6112:          ANDI.W  #$F,D6         (AY)+,(AX)+
01:00202E9E EE5E            	  6113:          ROR.W   #7,D6
01:00202EA0 8446            	  6114:          OR.W    D6,D2          ....AX@.........
01:00202EA2 00420100        	  6115:          ORI.W   #$0100,D2      ...1AX@.........
                            	  6116: 
01:00202EA6 2004            	  6117:          MOVE.L  D4,D0
01:00202EA8 02400038        	  6118:          ANDI.W  #$38,D0
01:00202EAC 0C400018        	  6119:          CMPI.W  #$18,D0
01:00202EB0 6600FF34        	  6120:          BNE     ER             NOT (A@)+
01:00202EB4 0244000F        	  6121:          ANDI.W  #$F,D4         ............1AY@
01:00202EB8 8444            	  6122:          OR.W    D4,D2
01:00202EBA 6000FF32        	  6123:          BRA     CMMD2
                            	  6124: 
                            	  6125: *  <EA>,D@
01:00202EBE EE5E            	  6126: MCMP39   ROR.W   #7,D6
01:00202EC0 8446            	  6127:          OR.W    D6,D2
                            	  6128: 
01:00202EC2 8444            	  6129:          OR.W    D4,D2
01:00202EC4 600E            	  6130:          BRA.S   CMMD2S11
                            	  6131: 
01:00202EC6 343C0C00        	  6132: MCMP56   MOVE.W  #$0C00,D2      #<DATA>,<EA>      MASK = CMPI
                            	  6133: 
01:00202ECA 6100F750        	  6134:          BSR     FSIZE
                            	  6135: 
01:00202ECE 6100F792        	  6136:          BSR     EADA
01:00202ED2 8446            	  6137:          OR.W    D6,D2
01:00202ED4 6090            	  6138: CMMD2S11 BRA     CMMD2S10
                            	  6139: 
01:00202ED6 6000FEF4        	  6140: COMMAS20 BRA     COMMA
                            	  6141: 
                            	  6142: MADD     DS      0              (INDEX 1)
01:00202EDA 6100F7AA        	  6143:          BSR     EAALL
01:00202EDE 2806            	  6144:          MOVE.L  D6,D4          D4 = SOURCE MODE
                            	  6145: 
01:00202EE0 61F4            	  6146:          BSR     COMMAS20
                            	  6147: 
01:00202EE2 0C150041        	  6148:          CMPI.B  #'A',(A5)
01:00202EE6 670000A4        	  6149:          BEQ     MADDA21        DESTINATION = A@
                            	  6150: 
01:00202EEA 0C04003C        	  6151:          CMPI.B  #$3C,D4
01:00202EEE 6728            	  6152:          BEQ.S   MADD56         SOURCE  ....I  #<DATA>,...
                            	  6153: 
01:00202EF0 6100F72A        	  6154:          BSR     FSIZE
                            	  6155: 
01:00202EF4 3E3C01FF        	  6156:          MOVE.W  #$1FF,D7
01:00202EF8 6100F790        	  6157:          BSR     EA             ALTERABLE + D@
01:00202EFC 2006            	  6158:          MOVE.L  D6,D0          MMMRRR
01:00202EFE 02400038        	  6159:          ANDI.W  #$38,D0        MMM...
01:00202F02 6608            	  6160:          BNE.S   MADD46         DESTINATION NOT  D@
                            	  6161: 
                            	  6162: *  <EA>,D@
01:00202F04 EE5E            	  6163:          ROR.W   #7,D6
01:00202F06 8446            	  6164:          OR.W    D6,D2
                            	  6165: 
01:00202F08 8444            	  6166:          OR.W    D4,D2
01:00202F0A 60C8            	  6167:          BRA     CMMD2S11
                            	  6168: 
                            	  6169: MADD46   DS      0              D@,<EA>
01:00202F0C 00420100        	  6170:          ORI.W   #$100,D2
                            	  6171: 
01:00202F10 EE5C            	  6172:          ROR.W   #7,D4
01:00202F12 8444            	  6173:          OR.W    D4,D2          <EA> AS DESTINATION
                            	  6174: 
01:00202F14 8446            	  6175:          OR.W    D6,D2          D@  AS SOURCE
01:00202F16 60BC            	  6176:          BRA     CMMD2S11
                            	  6177: 
01:00202F18 2002            	  6178: MADD56   MOVE.L  D2,D0          #<DATA>,<EA>
01:00202F1A 343C0600        	  6179:          MOVE.W  #$0600,D2      MASK = ADDI
                            	  6180: 
01:00202F1E 0C40D000        	  6181:          CMPI.W  #$D000,D0
01:00202F22 6704            	  6182:          BEQ.S   MADD58
01:00202F24 343C0400        	  6183:          MOVE.W  #$400,D2       MASK = SUBI
                            	  6184: MADD58
                            	  6185: 
01:00202F28 6100F6F2        	  6186:          BSR     FSIZE
                            	  6187: 
01:00202F2C 6100F734        	  6188:          BSR     EADA           DATA ALTERABLE ONLY
01:00202F30 8446            	  6189:          OR.W    D6,D2
01:00202F32 60A0            	  6190:          BRA     CMMD2S11
                            	  6191: 
01:00202F34 2A690012        	  6192: MADDI    MOVE.L  PTROP(A1),A5   (INDEX 3) CMPI
01:00202F38 6100F6E2        	  6193:          BSR     FSIZE
                            	  6194: 
01:00202F3C 6100F736        	  6195:          BSR     EAZ
                            	  6196: 
01:00202F40 6194            	  6197:          BSR     COMMAS20
                            	  6198: 
01:00202F42 6100F71E        	  6199:          BSR     EADA           DATA ALTERABLE ONLY
01:00202F46 8446            	  6200:          OR.W    D6,D2
01:00202F48 608A            	  6201:          BRA     CMMD2S11
                            	  6202: 
                            	  6203: *  SIZE =  BYTE, WORD, LONG
                            	  6204: *  #<DATA>,SR
                            	  6205: *  #<DATA>,<EA>    DATA ALTERABLE ONLY
                            	  6206: MANDI    DS      0              (INDEX 28) ANDI EORI ORI
01:00202F4A 6100F6D0        	  6207:          BSR     FSIZE
                            	  6208: 
01:00202F4E 6100F724        	  6209:          BSR     EAZ
                            	  6210: 
01:00202F52 6182            	  6211:          BSR     COMMAS20
                            	  6212: 
01:00202F54 0C150053        	  6213:          CMPI.B  #'S',(A5)
01:00202F58 670A            	  6214:          BEQ.S   MANDI23
                            	  6215: 
01:00202F5A 6100F706        	  6216:          BSR     EADA
01:00202F5E 8446            	  6217:          OR.W    D6,D2
01:00202F60 6000FF72        	  6218:          BRA     CMMD2S11
                            	  6219: 
01:00202F64 0C2D00520001    	  6220: MANDI23  CMPI.B  #'R',1(A5)     #<DATA>,SR
01:00202F6A 6600FE7A        	  6221:          BNE     ER
01:00202F6E 0C690080000C    	  6222:          CMPI.W  #$0080,TLENGTH(A1)
01:00202F74 6700FE70        	  6223:          BEQ     ER             .L NOT ALLOWED WITH SR
01:00202F78 0042003C        	  6224:          ORI.W   #$003C,D2
01:00202F7C 548D            	  6225:          ADDQ.L  #2,A5          POINTER TO END OF OPERAND
01:00202F7E 6000FE6E        	  6226:          BRA     CMMD2
                            	  6227: 
                            	  6228: MADDA    DS      0              (INDEX 2)
01:00202F82 6100F702        	  6229:          BSR     EAALL
01:00202F86 8446            	  6230:          OR.W    D6,D2
                            	  6231: 
01:00202F88 6100FE42        	  6232:          BSR     COMMA
                            	  6233: 
01:00202F8C 8446            	  6234: MADDA21  OR.W    D6,D2
01:00202F8E 3029000C        	  6235:          MOVE.W  TLENGTH(A1),D0
01:00202F92 6700FE52        	  6236:          BEQ     ER             .BYTE NOT ALLOWED
01:00202F96 E348            	  6237:          LSL.W   #1,D0          .W = 011......
01:00202F98 004000C0        	  6238:          ORI.W   #$00C0,D0      .L = 111......
01:00202F9C 8440            	  6239:          OR.W    D0,D2
                            	  6240: 
01:00202F9E 6100F69C        	  6241:          BSR     GETREGA
01:00202FA2 EE58            	  6242:          ROR.W   #7,D0
01:00202FA4 8440            	  6243:          OR.W    D0,D2
01:00202FA6 6000FE46        	  6244:          BRA     CMMD2
                            	  6245: 
                            	  6246: MADDQ    DS      0              (INDEX 4)
01:00202FAA 6100F670        	  6247:          BSR     FSIZE
                            	  6248: 
01:00202FAE 61000680        	  6249:          BSR     GETIMM
                            	  6250: 
01:00202FB2 4A80            	  6251:          TST.L   D0
01:00202FB4 6700FE30        	  6252:          BEQ     ER             DATA = ZERO
01:00202FB8 0C000009        	  6253:          CMPI.B  #9,D0
01:00202FBC 6A00FE28        	  6254:          BPL     ER             VALUE TOO BIG
01:00202FC0 02400007        	  6255:          ANDI.W  #$7,D0         MAKE 8 = 0
01:00202FC4 EE58            	  6256:          ROR.W   #7,D0          SHIFT DATA TO BITS 9-11
01:00202FC6 8440            	  6257:          OR.W    D0,D2
                            	  6258: 
01:00202FC8 6100FE02        	  6259:          BSR     COMMA
                            	  6260: 
01:00202FCC 6100F6B2        	  6261:          BSR     EAA            ALTERABLE ADDRESSING
                            	  6262: 
01:00202FD0 8446            	  6263:          OR.W    D6,D2
01:00202FD2 2002            	  6264:          MOVE.L  D2,D0
01:00202FD4 024000C0        	  6265:          ANDI.W  #$C0,D0
01:00202FD8 660E            	  6266:          BNE.S   MADDQ25
                            	  6267: 
                            	  6268: * BYTE SIZE; ADDRESS REGISTER DIRECT NOT ALLOWED
01:00202FDA 2002            	  6269:          MOVE.L  D2,D0
01:00202FDC 02400038        	  6270:          ANDI.W  #$38,D0
01:00202FE0 0C000008        	  6271:          CMPI.B  #$08,D0
01:00202FE4 6700FE00        	  6272:          BEQ     ER
01:00202FE8 6000FE04        	  6273: MADDQ25  BRA     CMMD2
                            	  6274: 
                            	  6275: * SIZE = BYTE, WORD, LONG
                            	  6276: *    DY,DX
                            	  6277: *    -(AY),-(AX)
                            	  6278: *    ....RX@.SS...RY@
                            	  6279: MADDX    DS      0              (INDEX 5)
01:00202FEC 6100F62E        	  6280:          BSR     FSIZE
                            	  6281: 
01:00202FF0 3E3C0011        	  6282:          MOVE.W  #$11,D7
01:00202FF4 6100F694        	  6283:          BSR     EA
                            	  6284: 
01:00202FF8 6100FDD2        	  6285:          BSR     COMMA
                            	  6286: 
01:00202FFC 2006            	  6287:          MOVE.L  D6,D0
01:00202FFE 02400007        	  6288:          ANDI.W  #7,D0
01:00203002 8440            	  6289:          OR.W    D0,D2
                            	  6290: 
01:00203004 08060005        	  6291:          BTST    #5,D6
01:00203008 6718            	  6292:          BEQ.S   MADDX5         D@,D@ MODE
                            	  6293: 
01:0020300A 00420008        	  6294:          ORI.W   #$0008,D2      -(A@),-(A@) MODE
                            	  6295: 
01:0020300E 3E3C0010        	  6296:          MOVE.W  #$10,D7
01:00203012 6100F676        	  6297:          BSR     EA
                            	  6298: 
01:00203016 02460007        	  6299:          ANDI.W  #7,D6
01:0020301A EE5E            	  6300:          ROR.W   #7,D6
01:0020301C 8446            	  6301:          OR.W    D6,D2
01:0020301E 6000FDCE        	  6302:          BRA     CMMD2
                            	  6303: 
01:00203022 6100F5FE        	  6304: MADDX5   BSR     GETREGD        D@,D@
01:00203026 EE58            	  6305:          ROR.W   #7,D0
01:00203028 8440            	  6306:          OR.W    D0,D2
01:0020302A 6000FDC2        	  6307:          BRA     CMMD2
                            	  6308: 
                            	  6309: *  SIZE = BYTE, WORD, LONG
                            	  6310: *         <EA>,D@
                            	  6311: *         D@,<EA>
01:0020302E 6100F5EC        	  6312: MAND     BSR     FSIZE          (INDEX 6)
                            	  6313: 
01:00203032 0C150023        	  6314:          CMPI.B  #'#',(A5)
01:00203036 6740            	  6315:          BEQ.S   MAND90
                            	  6316: 
01:00203038 61000082        	  6317:          BSR     A5TODEST       MOVE A5 TO DESTINATION
                            	  6318: 
01:0020303C 1015            	  6319:          MOVE.B  (A5),D0        D0 = 1ST CHAR OF DESTINATION
01:0020303E 2A690012        	  6320:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
01:00203042 0C000044        	  6321:          CMPI.B  #'D',D0
01:00203046 671A            	  6322:          BEQ.S   MAND77
                            	  6323: 
01:00203048 00420100        	  6324:          ORI.W   #$0100,D2       D@,<EA>
                            	  6325: 
01:0020304C 6100F5D4        	  6326:          BSR     GETREGD
01:00203050 EE58            	  6327:          ROR.W   #7,D0
01:00203052 8440            	  6328:          OR.W    D0,D2
                            	  6329: 
01:00203054 6100FD76        	  6330:          BSR     COMMA
                            	  6331: 
01:00203058 6100F614        	  6332:          BSR     EAM            ALTERABLE MEMORY
01:0020305C 8446            	  6333:          OR.W    D6,D2
01:0020305E 6000FD8E        	  6334:          BRA     CMMD2
                            	  6335: 
01:00203062 6100F616        	  6336: MAND77   BSR     EADADDR        <EA>,D@
01:00203066 8446            	  6337:          OR.W    D6,D2
                            	  6338: 
01:00203068 6100FD62        	  6339:          BSR     COMMA
                            	  6340: 
01:0020306C 6100F5B4        	  6341:          BSR     GETREGD
01:00203070 EE58            	  6342:          ROR.W   #7,D0
01:00203072 8440            	  6343:          OR.W    D0,D2
01:00203074 6000FD78        	  6344:          BRA     CMMD2
                            	  6345: 
01:00203078 0242F000        	  6346: MAND90   ANDI.W  #$F000,D2
01:0020307C 0C42C000        	  6347:          CMPI.W  #$C000,D2
01:00203080 6708            	  6348:          BEQ.S   MAND97          AND
01:00203082 343C0000        	  6349:          MOVE.W  #$0000,D2      CHANGE TO "ORI"
01:00203086 6000FEC2        	  6350: MAND91   BRA     MANDI
01:0020308A 343C0200        	  6351: MAND97   MOVE.W  #$0200,D2      CHANGE TO "ADDI"
01:0020308E 60F6            	  6352:          BRA     MAND91
                            	  6353: 
01:00203090 6100F58A        	  6354: MEOR     BSR     FSIZE          (INDEX 35)
                            	  6355: 
01:00203094 0C150023        	  6356:          CMPI.B  #'#',(A5)
01:00203098 6716            	  6357:          BEQ.S   MEOR90
                            	  6358: 
01:0020309A 6100F586        	  6359:          BSR     GETREGD
01:0020309E EE58            	  6360:          ROR.W   #7,D0
01:002030A0 8440            	  6361:          OR.W    D0,D2
                            	  6362: 
01:002030A2 6100FD28        	  6363:          BSR     COMMA
                            	  6364: 
01:002030A6 6100F5BA        	  6365:          BSR     EADA           DATA ALTERABLE ADDRESSING
01:002030AA 8446            	  6366:          OR.W    D6,D2
01:002030AC 6000FD40        	  6367:          BRA     CMMD2
                            	  6368: 
01:002030B0 2A690012        	  6369: MEOR90   MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
01:002030B4 343C0A00        	  6370:          MOVE.W  #$0A00,D2      CHANGE TO "EORI"
01:002030B8 6000FE90        	  6371:          BRA     MANDI
                            	  6372: 
01:002030BC 7200            	  6373: A5TODEST CLR.L   D1             MOVE A5 TO DESTINATION
01:002030BE 6100FD14        	  6374: A5300    BSR     GETCHAR
01:002030C2 0C000028        	  6375:          CMPI.B  #'(',D0
01:002030C6 6602            	  6376:          BNE.S   A5305
01:002030C8 2200            	  6377:          MOVE.L  D0,D1
01:002030CA 0C000029        	  6378: A5305    CMPI.B  #')',D0
01:002030CE 67EC            	  6379:          BEQ     A5TODEST
01:002030D0 0C00002C        	  6380:          CMPI.B  #',',D0
01:002030D4 66E8            	  6381:          BNE     A5300
01:002030D6 4A41            	  6382:          TST     D1
01:002030D8 66E4            	  6383:          BNE     A5300
01:002030DA 4E75            	  6384:          RTS
                            	  6385: 
                            	  6386: MASL     DS      0              (INDEX 7)
                            	  6387: 
                            	  6388: *         ASL     LSL     ROL     ROXL
                            	  6389: *  MASKS  E000    E008    E018    E010
                            	  6390: *         E0C0    E2C0    E6C0    E4C0   SHIFT MEMORY
                            	  6391: 
01:002030DC 6100F53E        	  6392:          BSR     FSIZE
                            	  6393: 
01:002030E0 101D            	  6394:          MOVE.B  (A5)+,D0
01:002030E2 0C000023        	  6395:          CMPI.B  #'#',D0
01:002030E6 6628            	  6396:          BNE.S   MSL200
                            	  6397: 
                            	  6398: *  #<COUNT>,D@
01:002030E8 6100F4C8        	  6399:          BSR     EV
01:002030EC 0C8000000008    	  6400:          CMPI.L  #8,D0
01:002030F2 6E00FCF2        	  6401:          BGT     ER             GREATER THAN 8
                            	  6402: 
01:002030F6 02000007        	  6403:          ANDI.B  #$7,D0         MAKE 8 INTO 0
01:002030FA EE58            	  6404: MSL150   ROR.W   #7,D0
01:002030FC 0242F1FF        	  6405:          ANDI.W  #$F1FF,D2
01:00203100 8440            	  6406:          OR.W    D0,D2          COUNT/REG
                            	  6407: 
01:00203102 6100FCC8        	  6408:          BSR     COMMA
                            	  6409: 
01:00203106 6100F51A        	  6410:          BSR     GETREGD
01:0020310A 8440            	  6411:          OR.W    D0,D2
01:0020310C 6000FCE0        	  6412:          BRA     CMMD2
                            	  6413: 
                            	  6414: MSL200   DS      0              D@,D@
01:00203110 0C000044        	  6415:          CMPI.B  #'D',D0
01:00203114 660C            	  6416:          BNE.S   MSL300
                            	  6417: 
                            	  6418: *        D@,D@
01:00203116 00420020        	  6419:          ORI.W   #$20,D2
01:0020311A 538D            	  6420:          SUBQ.L  #1,A5
01:0020311C 6100F504        	  6421:          BSR     GETREGD
01:00203120 60D8            	  6422:          BRA     MSL150
                            	  6423: 
                            	  6424: MSL300   DS      0              <EA>      SHIFT MEMORY
01:00203122 538D            	  6425:          SUBQ.L  #1,A5
01:00203124 004200C0        	  6426:          ORI.W   #$00C0,D2      SIZE = MEMORY
                            	  6427: 
01:00203128 0242FFC0        	  6428:          ANDI.W  #$FFC0,D2      REMOVE "SHIFT MEMORY" BITS
                            	  6429: 
01:0020312C 0C690040000C    	  6430:          CMPI.W  #$0040,TLENGTH(A1)
01:00203132 6658            	  6431:          BNE.S   ER2            NOT .WORD
                            	  6432: 
01:00203134 6100F538        	  6433:          BSR     EAM
01:00203138 8446            	  6434:          OR.W    D6,D2
01:0020313A 6000FCB2        	  6435:          BRA     CMMD2
                            	  6436: 
01:0020313E 61000332        	  6437: MSCC     BSR     SIZEBYTE       (INDEX 29) NBCD SCC TAS
                            	  6438: 
01:00203142 6100F51E        	  6439:          BSR     EADA           DATA ALTERABLE ONLY
01:00203146 8446            	  6440:          OR.W    D6,D2
01:00203148 6000FCA4        	  6441:          BRA     CMMD2
                            	  6442: 
                            	  6443: MBCHG    DS      0              (9)
01:0020314C 0C150023        	  6444:          CMPI.B  #'#',(A5)
01:00203150 6648            	  6445:          BNE.S   MB200
                            	  6446: 
01:00203152 343C0840        	  6447:          MOVE.W  #$0840,D2      NEW OP-CODE MASK
                            	  6448: 
01:00203156 528D            	  6449: MB100    ADDQ.L  #1,A5
01:00203158 6100F458        	  6450:          BSR     EV             EVALUATE EXPRESSION
01:0020315C 0C8000000021    	  6451:          CMPI.L  #33,D0
01:00203162 6E28            	  6452:          BGT.S   ER2            (MODULO 32)
01:00203164 33400002        	  6453:          MOVE.W  D0,TDATA+2(A1)
01:00203168 5483            	  6454:          ADDQ.L  #2,D3          STORE POINTER
                            	  6455: 
01:0020316A 5429000A        	  6456:          ADDQ.B  #2,TNB(A1)
                            	  6457: 
01:0020316E 6100FC5C        	  6458: MB105    BSR     COMMA
                            	  6459: 
01:00203172 6100F4EE        	  6460:          BSR     EADA           DESTINATION
01:00203176 8446            	  6461:          OR.W    D6,D2
                            	  6462: 
01:00203178 4A29000B        	  6463:          TST.B   TLSPEC(A1)     ..
01:0020317C 6718            	  6464:          BEQ.S   MB185          DEFAULT
                            	  6465: 
01:0020317E 02460038        	  6466:          ANDI.W  #$0038,D6
01:00203182 660C            	  6467:          BNE.S   MB145          DESTINATION <EA> WAS NOT D@
                            	  6468: 
01:00203184 0C690080000C    	  6469:          CMPI.W  #$80,TLENGTH(A1)  DESTINATION <EA> WAS D@
01:0020318A 670A            	  6470:          BEQ.S   MB185          LENGTH IS .L
01:0020318C 6000FC58        	  6471: ER2      BRA     ER
                            	  6472: 
01:00203190 4A69000C        	  6473: MB145    TST.W   TLENGTH(A1)
01:00203194 66F6            	  6474:          BNE     ER2            NOT BYTE LENGTH
                            	  6475: 
01:00203196 6000FC56        	  6476: MB185    BRA     CMMD2
                            	  6477: 
01:0020319A 6100F486        	  6478: MB200    BSR     GETREGD        DYNAMIC
01:0020319E EE58            	  6479:          ROR.W   #7,D0
01:002031A0 8440            	  6480:          OR.W    D0,D2
                            	  6481: 
01:002031A2 60CA            	  6482:          BRA     MB105
                            	  6483: 
01:002031A4 0C150023        	  6484: MBSET    CMPI.B  #'#',(A5)      (INDEX 11) BCLR BSET
01:002031A8 66F0            	  6485:          BNE     MB200
                            	  6486: 
01:002031AA 343C08C0        	  6487:          MOVE.W  #$08C0,D2
01:002031AE 60A6            	  6488:          BRA     MB100
                            	  6489: 
01:002031B0 0C150023        	  6490: MBCLR    CMPI.B  #'#',(A5)      (INDEX 30)
01:002031B4 66E4            	  6491:          BNE     MB200
                            	  6492: 
01:002031B6 343C0880        	  6493:          MOVE.W  #$0880,D2
01:002031BA 609A            	  6494:          BRA     MB100
                            	  6495: 
01:002031BC 0C150023        	  6496: MBTST    CMPI.B  #'#',(A5)      (INDEX 31)
01:002031C0 66D8            	  6497:          BNE     MB200
                            	  6498: 
01:002031C2 343C0800        	  6499:          MOVE.W  #$0800,D2
01:002031C6 608E            	  6500:          BRA     MB100
                            	  6501: 
                            	  6502: MDBCC    DS      0              (INDEX 8)
01:002031C8 6100F458        	  6503:          BSR     GETREGD
01:002031CC 8440            	  6504:          OR.W    D0,D2
                            	  6505: 
01:002031CE 6100FBFC        	  6506:          BSR     COMMA
01:002031D2 613C            	  6507:          BSR.S   EVSR
01:002031D4 601A            	  6508:          BRA.S   MBRA23
                            	  6509: 
                            	  6510: *  SIZE   .S  =  .W   (DEFAULT)
                            	  6511: *         .L  =  .L
                            	  6512: MBRA     DS      0              (INDEX 10)
01:002031D6 6138            	  6513:          BSR.S   EVSR
                            	  6514: 
01:002031D8 0C690080000C    	  6515:          CMPI.W  #$0080,TLENGTH(A1)
01:002031DE 6710            	  6516:          BEQ.S   MBRA23         FORCED LONG
                            	  6517: 
01:002031E0 6100F72E        	  6518:          BSR     EA8BITS        -128 TO +127
01:002031E4 660A            	  6519:          BNE.S   MBRA23         NOT 8 BIT VALUE
                            	  6520: 
01:002031E6 8405            	  6521:          OR.B    D5,D2
01:002031E8 6000FC04        	  6522:          BRA     CMMD2          .SHORT
                            	  6523: 
01:002031EC 6000FBF8        	  6524: EVER     BRA     ER             ERROR HANDLER
                            	  6525: 
01:002031F0 4A29000B        	  6526: MBRA23   TST.B   TLSPEC(A1)
01:002031F4 6708            	  6527:          BEQ.S   MBRA27
01:002031F6 0C690040000C    	  6528:          CMPI.W  #$0040,TLENGTH(A1)
01:002031FC 67EE            	  6529:          BEQ     EVER           .S SPECIFIED
                            	  6530: MBRA27
                            	  6531: 
01:002031FE 2A04            	  6532:          MOVE.L  D4,D5          RESTORE D5
01:00203200 6100F6FA        	  6533:          BSR     EA16BITS       -32K TO +32K
01:00203204 33450002        	  6534:          MOVE.W  D5,TDATA+2(A1)
01:00203208 5429000A        	  6535:          ADDQ.B  #2,TNB(A1)
01:0020320C 6000FBE0        	  6536:          BRA     CMMD2
                            	  6537: 
01:00203210 6100F3A0        	  6538: EVSR     BSR     EV
01:00203214 0C150020        	  6539:          CMPI.B  #BLANK,(A5)
01:00203218 66D2            	  6540:          BNE     EVER           DID NOT TERMINATE WITH SPACE
                            	  6541: 
01:0020321A 2A00            	  6542:          MOVE.L  D0,D5
01:0020321C E280            	  6543:          ASR.L   #1,D0
01:0020321E 65CC            	  6544:          BCS     EVER           ODD VALUE
01:00203220 2829000E        	  6545:          MOVE.L  PCOUNTER(A1),D4
01:00203224 5484            	  6546:          ADDQ.L  #2,D4          D4 = PC + 2
01:00203226 9A84            	  6547:          SUB.L   D4,D5
01:00203228 67C2            	  6548:          BEQ     EVER           ZERO; SPECIAL CASE ERROR
01:0020322A 2805            	  6549:          MOVE.L  D5,D4
01:0020322C 4E75            	  6550:          RTS
                            	  6551: 
                            	  6552: MCHK     DS      0              (INDEX 12) CHK DIV MUL
01:0020322E 61000236        	  6553:          BSR     SIZEWORD
                            	  6554: 
01:00203232 6100F446        	  6555:          BSR     EADADDR        DATA ADDRESSING ONLY
01:00203236 8446            	  6556:          OR.W    D6,D2
                            	  6557: 
01:00203238 6100FB92        	  6558:          BSR     COMMA
                            	  6559: 
01:0020323C 6100F3E4        	  6560:          BSR     GETREGD
01:00203240 EE58            	  6561:          ROR.W   #7,D0
01:00203242 8440            	  6562:          OR.W    D0,D2
                            	  6563: 
01:00203244 6000FBA8        	  6564:          BRA     CMMD2
                            	  6565: 
                            	  6566: MCLR     DS      0              (INDEX 13)
01:00203248 6100F3D2        	  6567:          BSR     FSIZE
                            	  6568: 
01:0020324C 6100F414        	  6569:          BSR     EADA           DATA ALTERABLE ONLY
01:00203250 8446            	  6570:          OR.W    D6,D2
01:00203252 6000FB9A        	  6571:          BRA     CMMD2
                            	  6572: 
                            	  6573: * SIZE = BYTE, WORD, LONG
                            	  6574: MCMPM    DS      0              (INDEX 14)
01:00203256 6100F3C4        	  6575:          BSR     FSIZE
                            	  6576: 
01:0020325A 3E3C0008        	  6577:          MOVE.W  #$0008,D7
01:0020325E 6100F42A        	  6578:          BSR     EA             -(A@)   ONLY
01:00203262 02460007        	  6579:          ANDI.W  #7,D6
01:00203266 8446            	  6580:          OR.W    D6,D2
                            	  6581: 
01:00203268 6100FB62        	  6582:          BSR     COMMA
                            	  6583: 
01:0020326C 3E3C0008        	  6584:          MOVE.W  #$0008,D7
01:00203270 6100F418        	  6585:          BSR     EA
01:00203274 02460007        	  6586:          ANDI.W  #7,D6
01:00203278 EE5E            	  6587:          ROR.W   #7,D6
01:0020327A 8446            	  6588:          OR.W    D6,D2
01:0020327C 6000FB70        	  6589:          BRA     CMMD2
                            	  6590: 
                            	  6591: MEXG     DS      0              (INDEX 16)
01:00203280 610001D4        	  6592:          BSR     SIZELONG
                            	  6593: 
01:00203284 6100F3C4        	  6594:          BSR     GETREGAD
01:00203288 2800            	  6595:          MOVE.L  D0,D4          D4 = REG NUMBER
01:0020328A 2A01            	  6596:          MOVE.L  D1,D5          D5 = REG TYPE
                            	  6597: 
01:0020328C 6100FB3E        	  6598:          BSR     COMMA          TEST FOR COMMA
                            	  6599: 
01:00203290 6100F3B8        	  6600:          BSR     GETREGAD
                            	  6601: 
01:00203294 BA81            	  6602:          CMP.L   D1,D5
01:00203296 6714            	  6603:          BEQ.S   MEXG35         BOTH REGS THE SAME
                            	  6604: 
                            	  6605: *  DX,AY  OR  AY,DX
01:00203298 00420088        	  6606:          ORI.W   #$88,D2        MODE
01:0020329C 4A01            	  6607:          TST.B   D1
01:0020329E 6602            	  6608:          BNE.S   MEXG25
                            	  6609: 
01:002032A0 C144            	  6610:          EXG     D0,D4          SWAP SOURCE & DESTINATION
                            	  6611: 
01:002032A2 8440            	  6612: MEXG25   OR.W    D0,D2          .......MMMMMYYY
01:002032A4 EE5C            	  6613:          ROR.W   #7,D4
01:002032A6 8444            	  6614:          OR.W    D4,D2          ....XXXMMMMMYYY
01:002032A8 6000FB44        	  6615:          BRA     CMMD2
                            	  6616: 
01:002032AC 00420040        	  6617: MEXG35   ORI.W   #$0040,D2      OP-MODE
01:002032B0 4A01            	  6618:          TST.B   D1
01:002032B2 67EE            	  6619:          BEQ     MEXG25         DX,DY
                            	  6620: 
01:002032B4 00420048        	  6621:          ORI.W   #$0048,D2      AX,AY
01:002032B8 60E8            	  6622:          BRA     MEXG25
                            	  6623: 
                            	  6624: 
                            	  6625: MEXT     DS      0              (INDEX 17)
01:002032BA 4A69000C        	  6626:          TST.W   TLENGTH(A1)
01:002032BE 6700FB26        	  6627:          BEQ     ER             BYTE SIZE NOT ALLOWED
                            	  6628: 
01:002032C2 6100F358        	  6629:          BSR     FSIZE          .W = ........10......
01:002032C6 06420040        	  6630:          ADDI.W  #$0040,D2      .L = ........11......
                            	  6631: 
01:002032CA 6100F356        	  6632:          BSR     GETREGD
01:002032CE 8440            	  6633:          OR.W    D0,D2
01:002032D0 6000FB1C        	  6634:          BRA     CMMD2
                            	  6635: 
                            	  6636: MMOVEM   DS      0              (INDEX 27)
01:002032D4 3029000C        	  6637:          MOVE.W  TLENGTH(A1),D0 SIZE BITS  76 TO 6
01:002032D8 6700FB0C        	  6638:          BEQ     ER             BYTE       00  ERROR
01:002032DC E248            	  6639:          LSR.W   #1,D0          WORD       01    0
01:002032DE 02400040        	  6640:          ANDI.W  #$0040,D0      LONG       10    1
01:002032E2 8440            	  6641:          OR.W    D0,D2
                            	  6642: 
01:002032E4 5429000A        	  6643:          ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
01:002032E8 5483            	  6644:          ADDQ.L  #2,D3          FORCE STORE PTR PAST MASK
                            	  6645: 
01:002032EA 0C150041        	  6646:          CMPI.B  #'A',(A5)
01:002032EE 671E            	  6647:          BEQ.S   MMM44
01:002032F0 0C150044        	  6648:          CMPI.B  #'D',(A5)
01:002032F4 6718            	  6649:          BEQ.S   MMM44
                            	  6650: 
                            	  6651: *    <EA>,<REGISTER LIST>       MEMORY TO REGISTER
01:002032F6 00420400        	  6652:          ORI.W   #$0400,D2      DIRECTION BIT
                            	  6653: 
01:002032FA 3E3C07EC        	  6654:          MOVE.W  #$7EC,D7       MODES ALLOWED
01:002032FE 6100F38A        	  6655:          BSR     EA
01:00203302 8446            	  6656:          OR.W    D6,D2
                            	  6657: 
01:00203304 6100FAC6        	  6658:          BSR     COMMA
                            	  6659: 
01:00203308 612A            	  6660:          BSR.S   MMM48
01:0020330A 6000FAE2        	  6661:          BRA     CMMD2
                            	  6662: 
                            	  6663: 
                            	  6664: *   <REGISTER LIST>,<EA>        REGISTER TO MEMORY
                            	  6665: MMM44    DS      0
                            	  6666: 
                            	  6667: * EVALUATE DESTINATION FIRST
01:0020330E 6100FAC4        	  6668: MMM46    BSR     GETCHAR
01:00203312 0C00002C        	  6669:          CMPI.B  #',',D0        FIND COMMA
01:00203316 66F6            	  6670:          BNE     MMM46
                            	  6671: 
01:00203318 3E3C01F4        	  6672:          MOVE.W  #$1F4,D7       MODES ALLOWED
01:0020331C 6100F36C        	  6673:          BSR     EA
01:00203320 8446            	  6674:          OR.W    D6,D2
01:00203322 234D0016        	  6675:          MOVE.L  A5,PENDOP(A1)  END OF OPERAND
01:00203326 2A690012        	  6676:          MOVE.L  PTROP(A1),A5
01:0020332A 6108            	  6677:          BSR.S   MMM48          EVALUATE REGISTERS
01:0020332C 2A690016        	  6678:          MOVE.L  PENDOP(A1),A5  POINTER TO END OF OPERAND
01:00203330 6000FABC        	  6679:          BRA     CMMD2
                            	  6680: 
                            	  6681: *        D6 = CORRESPONDENCE MASK
                            	  6682: *        D4 = CONTROL  $FF '-BLANK/'
01:00203334 7C00            	  6683: MMM48    CLR.L   D6             MASK
01:00203336 78FF            	  6684:          MOVEQ   #-1,D4         CONTROL = $FF
                            	  6685: 
01:00203338 6100FA9A        	  6686: RL111    BSR     GETCHAR
01:0020333C 0C00002C        	  6687:          CMPI.B  #',',D0
01:00203340 6706            	  6688:          BEQ.S   RL114          DONE; FOUND COMMA
01:00203342 0C000020        	  6689:          CMPI.B  #BLANK,D0
01:00203346 6602            	  6690:          BNE.S   RL115          NOT SPACE
01:00203348 4E75            	  6691: RL114    RTS     DONE
                            	  6692: 
01:0020334A 0C00002F        	  6693: RL115    CMPI.B  #'/',D0
01:0020334E 6614            	  6694:          BNE.S   RL444
                            	  6695: 
01:00203350 4A04            	  6696:          TST.B   D4             CONTROL
01:00203352 6B00FA92        	  6697:          BMI     ER
01:00203356 2800            	  6698:          MOVE.L  D0,D4          CONTROL = '/'
01:00203358 6100F2F0        	  6699: RL333    BSR     GETREGAD
01:0020335C 8200            	  6700:          OR.B    D0,D1          D1 = BIT POSITION
01:0020335E 1A01            	  6701:          MOVE.B  D1,D5          D5 = LAST REGISTER ENTERED
01:00203360 6146            	  6702:          BSR.S   SETBIT
01:00203362 60D4            	  6703:          BRA     RL111
                            	  6704: 
01:00203364 0C00002D        	  6705: RL444    CMPI.B  #'-',D0
01:00203368 6630            	  6706:          BNE.S   RL666
                            	  6707: 
01:0020336A 0C04002F        	  6708:          CMPI.B  #'/',D4        CONTROL
01:0020336E 6600FA76        	  6709:          BNE     ER
01:00203372 2800            	  6710:          MOVE.L  D0,D4          CONTROL = '-'
01:00203374 6100F2D4        	  6711:          BSR     GETREGAD
01:00203378 8200            	  6712:          OR.B    D0,D1
01:0020337A 2E01            	  6713:          MOVE.L  D1,D7          D7 = NOW REGISTER
01:0020337C 1005            	  6714:          MOVE.B  D5,D0          D5 = LAST REG
01:0020337E B300            	  6715:          EOR.B   D1,D0
01:00203380 02000038        	  6716:          ANDI.B  #$38,D0
01:00203384 6600FA60        	  6717:          BNE     ER             NOT MATCED SET
01:00203388 BA01            	  6718:          CMP.B   D1,D5
01:0020338A 6A00FA5A        	  6719:          BPL     ER
                            	  6720: 
01:0020338E 5285            	  6721: RL555    ADDQ.L  #1,D5
01:00203390 2205            	  6722:          MOVE.L  D5,D1
01:00203392 6114            	  6723:          BSR.S   SETBIT
01:00203394 BA07            	  6724:          CMP.B   D7,D5
01:00203396 6BF6            	  6725:          BMI     RL555
01:00203398 609E            	  6726:          BRA     RL111
                            	  6727: 
01:0020339A 4A04            	  6728: RL666    TST.B   D4
01:0020339C 6A00FA48        	  6729:          BPL     ER
01:002033A0 183C002F        	  6730:          MOVE.B  #'/',D4        CONTROL = '/'
01:002033A4 538D            	  6731:          SUBQ.L  #1,A5
01:002033A6 60B0            	  6732:          BRA     RL333
                            	  6733: 
01:002033A8 41FA001A        	  6734: SETBIT   LEA     MTBL(PC),A0    SET BIT IN CORRESPONDENCE MASK
01:002033AC 2002            	  6735:          MOVE.L  D2,D0
01:002033AE 02400038        	  6736:          ANDI.W  #$38,D0
01:002033B2 0C400020        	  6737:          CMPI.W  #$20,D0
01:002033B6 6604            	  6738:          BNE.S   RL30           NOT PREDECREMENT
01:002033B8 12301000        	  6739:          MOVE.B  (A0,D1),D1     D1 = BIT  (FOR SURE)
01:002033BC 03C6            	  6740: RL30     BSET    D1,D6
                            	  6741: 
01:002033BE 33460002        	  6742:          MOVE.W  D6,TDATA+2(A1) SAVE CORRESPONDENCE MASK
01:002033C2 4E75            	  6743:          RTS
                            	  6744: 
01:002033C4 0F              	  6745: MTBL     DC.B    15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
01:002033C5 0E
01:002033C6 0D
01:002033C7 0C
01:002033C8 0B
01:002033C9 0A
01:002033CA 09
01:002033CB 08
01:002033CC 07
01:002033CD 06
01:002033CE 05
01:002033CF 04
01:002033D0 03
01:002033D1 02
01:002033D2 01
01:002033D3 00
                            	  6746: 
                            	  6747: 
                            	  6748: 
                            	  6749: 
                            	  6750: *   D@,<DATA>(A@)
                            	  6751: *   <DATA>(A@),D@
                            	  6752: *         (A@),D@            FORCED TO 0(A@),D0
                            	  6753: *         D@,(A@)            FORCED TO D0,0(A@)
                            	  6754: *
                            	  6755: *  SIZE = WORD, LONG
                            	  6756: MMOVEP   DS      0              (INDEX 33)
01:002033D4 3029000C        	  6757:          MOVE.W  TLENGTH(A1),D0
01:002033D8 6700FA0C        	  6758:          BEQ     ER             .BYTE NOT ALLOWED
01:002033DC E248            	  6759:          LSR.W   #1,D0
01:002033DE 02400040        	  6760:          ANDI.W  #$0040,D0
01:002033E2 8440            	  6761:          OR.W    D0,D2          SIZE
                            	  6762: 
01:002033E4 3E3C0025        	  6763:          MOVE.W  #$25,D7
01:002033E8 6100F2A0        	  6764:          BSR     EA             D6 = MODE
                            	  6765: 
01:002033EC 6100F9DE        	  6766:          BSR     COMMA
                            	  6767: 
01:002033F0 2006            	  6768:          MOVE.L  D6,D0
01:002033F2 02400038        	  6769:          ANDI.W  #$38,D0
01:002033F6 4A00            	  6770:          CMPI.B  #$0,D0
01:002033F8 670A            	  6771:          BEQ.S   MMP344         D@,<DATA>(A@)
                            	  6772: 
                            	  6773: *    <DATA>(A@),D@
01:002033FA 6100F226        	  6774:          BSR     GETREGD
01:002033FE EE58            	  6775:          ROR.W   #7,D0
01:00203400 8440            	  6776:          OR.W    D0,D2          D@
01:00203402 6010            	  6777:          BRA.S   MMP348
                            	  6778: 
01:00203404 00420080        	  6779: MMP344   ORI.W   #$0080,D2      REGISTER TO MEMORY
                            	  6780: 
01:00203408 EE5E            	  6781:          ROR.W   #7,D6
01:0020340A 8446            	  6782:          OR.W    D6,D2          D@
                            	  6783: 
01:0020340C 3E3C0024        	  6784:          MOVE.W  #$24,D7
01:00203410 6100F278        	  6785:          BSR     EA
01:00203414 2006            	  6786: MMP348   MOVE.L  D6,D0
01:00203416 02460007        	  6787:          ANDI.W  #7,D6
01:0020341A 8446            	  6788:          OR.W    D6,D2          A@
                            	  6789: 
01:0020341C 02400038        	  6790:          ANDI.W  #$38,D0
01:00203420 0C000010        	  6791:          CMPI.B  #$10,D0
01:00203424 660A            	  6792:          BNE.S   MMP368         <DATA>(A@)
                            	  6793: 
01:00203426 42690002        	  6794:          CLR.W   TDATA+2(A1)    <DATA> FORCED TO ZERO;  "(A@)"
01:0020342A 5429000A        	  6795:          ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
01:0020342E 5483            	  6796:          ADDQ.L  #2,D3          STORE POINTER
01:00203430 6000F9BC        	  6797: MMP368   BRA     CMMD2
                            	  6798: 
                            	  6799: MMOVEQ   DS      0              (INDEX 34)
01:00203434 610001FA        	  6800:          BSR     GETIMM
01:00203438 2A00            	  6801:          MOVE.L  D0,D5
                            	  6802: 
01:0020343A 6100F4D4        	  6803:          BSR     EA8BITS        -128 TO +127
01:0020343E 6600F9A6        	  6804:          BNE     ER
01:00203442 8405            	  6805:          OR.B    D5,D2          D5 = VALUE
                            	  6806: 
01:00203444 6100F986        	  6807:          BSR     COMMA
                            	  6808: 
01:00203448 6100F1D8        	  6809:          BSR     GETREGD        D@
01:0020344C EE58            	  6810:          ROR.W   #7,D0
                            	  6811: 
01:0020344E 8440            	  6812: MMQ20    OR.W    D0,D2
01:00203450 6104            	  6813:          BSR.S   SIZELONG
01:00203452 6000F99A        	  6814:          BRA     CMMD2
                            	  6815: 
01:00203456 4A29000B        	  6816: SIZELONG TST.B   TLSPEC(A1)     MUST BE .LONG
01:0020345A 6708            	  6817:          BEQ.S   SI201          DEFAULT SIZE OK
01:0020345C 0C690080000C    	  6818:          CMPI.W  #$0080,TLENGTH(A1)
01:00203462 660A            	  6819:          BNE.S   ER10           NOT .LONG
01:00203464 4E75            	  6820: SI201    RTS
                            	  6821: 
01:00203466 0C690040000C    	  6822: SIZEWORD CMPI.W  #$0040,TLENGTH(A1)  MUST BE .WORD
01:0020346C 67F6            	  6823:          BEQ     SI201          [RTS]
01:0020346E 6000F976        	  6824: ER10     BRA     ER
                            	  6825: 
01:00203472 4A29000B        	  6826: SIZEBYTE TST.B   TLSPEC(A1)
01:00203476 6706            	  6827:          BEQ.S   SI222          DEFAULT SIZE OK
01:00203478 4A69000C        	  6828:          TST.W   TLENGTH(A1)
01:0020347C 66F0            	  6829:          BNE     ER10
01:0020347E 4E75            	  6830: SI222    RTS
                            	  6831: 
                            	  6832: MMOVE    DS      0              (INDEX 21)
01:00203480 0C150053        	  6833:          CMPI.B  #'S',(A5)
01:00203484 661C            	  6834:          BNE.S   MMM40
01:00203486 343C40C0        	  6835:          MOVE.W  #$40C0,D2      SR,<EA>
01:0020348A 528D            	  6836:          ADDQ.L  #1,A5
01:0020348C 0C1D0052        	  6837:          CMPI.B  #'R',(A5)+
01:00203490 66DC            	  6838:          BNE     ER10
                            	  6839: 
01:00203492 6100F938        	  6840:          BSR     COMMA
                            	  6841: 
01:00203496 6100F1CA        	  6842:          BSR     EADA           DATA ALTERABLE ONLY (DESTINATION)
                            	  6843: 
01:0020349A 8446            	  6844: MM315    OR.W    D6,D2
01:0020349C 61C8            	  6845:          BSR     SIZEWORD
01:0020349E 6000F94E        	  6846:          BRA     CMMD2
                            	  6847: 
01:002034A2 0C150055        	  6848: MMM40    CMPI.B  #'U',(A5)
01:002034A6 661C            	  6849:          BNE.S   MMM50
01:002034A8 528D            	  6850:          ADDQ.L  #1,A5
01:002034AA 0C1D0053        	  6851:          CMPI.B  #'S',(A5)+
01:002034AE 66BE            	  6852:          BNE     ER10
01:002034B0 0C1D0050        	  6853:          CMPI.B  #'P',(A5)+
01:002034B4 66B8            	  6854:          BNE     ER10
                            	  6855: 
01:002034B6 6100F914        	  6856:          BSR     COMMA
                            	  6857: 
01:002034BA 343C4E68        	  6858:          MOVE.W  #$4E68,D2      USP,A@
01:002034BE 6100F17C        	  6859:          BSR     GETREGA
01:002034C2 608A            	  6860:          BRA     MMQ20
                            	  6861: 
                            	  6862: * GET EXCEPTIONS FROM DESTINATION
                            	  6863: MMM50    DS      0
                            	  6864: 
01:002034C4 6100FBF6        	  6865:          BSR     A5TODEST       MOVE A5 TO DESTINATION
                            	  6866: 
01:002034C8 101D            	  6867:          MOVE.B  (A5)+,D0
01:002034CA 0C000043        	  6868:          CMPI.B  #'C',D0
01:002034CE 6622            	  6869:          BNE.S   MMM60
01:002034D0 0C1D0043        	  6870:          CMPI.B  #'C',(A5)+
01:002034D4 6698            	  6871:          BNE     ER10
01:002034D6 0C1D0052        	  6872:          CMPI.B  #'R',(A5)+
01:002034DA 6692            	  6873:          BNE     ER10
01:002034DC 343C44C0        	  6874:          MOVE.W  #$44C0,D2      <EA>,CCR
                            	  6875: 
01:002034E0 234D0016        	  6876: MM508    MOVE.L  A5,PENDOP(A1)  SAVE POINTER
01:002034E4 2A690012        	  6877:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
                            	  6878: 
01:002034E8 6100F190        	  6879:          BSR     EADADDR        DATA ADDRESSING ONLY (SOURCE)
01:002034EC 2A690016        	  6880:          MOVE.L  PENDOP(A1),A5
01:002034F0 60A8            	  6881:          BRA     MM315
                            	  6882: 
01:002034F2 0C000053        	  6883: MMM60    CMPI.B  #'S',D0
01:002034F6 660E            	  6884:          BNE.S   MM70
01:002034F8 343C46C0        	  6885:          MOVE.W  #$46C0,D2      <EA>,SR
01:002034FC 0C1D0052        	  6886:          CMPI.B  #'R',(A5)+
01:00203500 6600F8E4        	  6887:          BNE     ER
01:00203504 60DA            	  6888:          BRA     MM508
                            	  6889: 
01:00203506 0C000055        	  6890: MM70     CMPI.B  #'U',D0
01:0020350A 6628            	  6891:          BNE.S   MM80
01:0020350C 343C4E60        	  6892:          MOVE.W  #$4E60,D2      A@,USP
01:00203510 0C1D0053        	  6893:          CMPI.B  #'S',(A5)+
01:00203514 6600F8D0        	  6894:          BNE     ER
01:00203518 0C1D0050        	  6895:          CMPI.B  #'P',(A5)+
01:0020351C 6600F8C8        	  6896:          BNE     ER
                            	  6897: 
01:00203520 234D0016        	  6898:          MOVE.L  A5,PENDOP(A1)
01:00203524 2A690012        	  6899:          MOVE.L  PTROP(A1),A5
01:00203528 6100F112        	  6900:          BSR     GETREGA
01:0020352C 2A690016        	  6901:          MOVE.L  PENDOP(A1),A5  RESTORE A5
01:00203530 6000FF1C        	  6902:          BRA     MMQ20
                            	  6903: 
01:00203534 2A690012        	  6904: MM80     MOVE.L  PTROP(A1),A5   A5 = POINTER TO SOURCE FIELD
01:00203538 6100F0E2        	  6905:          BSR     FSIZE          GET SIZE (BITS  7 - 6)
01:0020353C ED4A            	  6906:          LSL.W   #6,D2          ADJUST TO(BITS 13-12)
01:0020353E 0802000D        	  6907:          BTST    #13,D2
01:00203542 6608            	  6908:          BNE.S   MM804          .L 10 TO 10
01:00203544 06421000        	  6909:          ADDI.W  #$1000,D2      .W 01 TO 11
01:00203548 00421000        	  6910:          ORI.W   #$1000,D2      .B 00 TO 01
01:0020354C 6100F138        	  6911: MM804    BSR     EAALL          SOURCE; ALL MODES ALLOWED
01:00203550 8446            	  6912:          OR.W    D6,D2
                            	  6913: 
                            	  6914: * IF BYTE SIZE; "ADDRESS REGISTER DIRECT" NOT ALLOWED
                            	  6915: 
01:00203552 2002            	  6916:          MOVE.L  D2,D0
01:00203554 02403000        	  6917:          ANDI.W  #$3000,D0
01:00203558 0C401000        	  6918:          CMPI.W  #$1000,D0
01:0020355C 660C            	  6919:          BNE.S   MM806          NOT .B SIZE
01:0020355E 02060038        	  6920:          ANDI.B  #$38,D6
01:00203562 0C060008        	  6921:          CMPI.B  #$08,D6
01:00203566 6700F87E        	  6922:          BEQ     ER
                            	  6923: MM806    DS      0
                            	  6924: 
01:0020356A 6100F860        	  6925:          BSR     COMMA
                            	  6926: 
01:0020356E 3E3C01FF        	  6927:          MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
01:00203572 6100F116        	  6928:          BSR     EA
                            	  6929: 
01:00203576 2006            	  6930:          MOVE.L  D6,D0          DESTINATION
01:00203578 02400038        	  6931:          ANDI.W  #$0038,D0
01:0020357C 0C400008        	  6932:          CMPI.W  #$0008,D0
01:00203580 6712            	  6933:          BEQ.S   MMOVEA1        A@ MAKE MOVEA
                            	  6934: 
                            	  6935: * POSITION REGISTER AND MODE OF DESTINATION
                            	  6936: 
01:00203582 E69E            	  6937: MM825    ROR.L   #3,D6          RRR............. .............MMM
01:00203584 E65E            	  6938:          ROR.W   #3,D6                           MMM.............
01:00203586 4846            	  6939:          SWAP    D6             MMM............. RRR.............
01:00203588 E75E            	  6940:          ROL.W   #3,D6                           .............RRR
01:0020358A E39E            	  6941:          ROL.L   #1,D6          MM.............. ............RRRM
01:0020358C E19E            	  6942:          ROL.L   #8,D6          ................ ....RRRMMM......
01:0020358E 8446            	  6943:          OR.W    D6,D2
01:00203590 6000F85C        	  6944:          BRA     CMMD2
                            	  6945: 
01:00203594 7600            	  6946: MMOVEA1  CLR.L   D3
01:00203596 137C0002000A    	  6947:          MOVE.B  #2,TNB(A1)
                            	  6948: 
                            	  6949: MMOVEA   DS      0              (INDEX 32)
01:0020359C 2A690012        	  6950:          MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
                            	  6951: 
01:002035A0 3429000C        	  6952:          MOVE.W  TLENGTH(A1),D2 D0 = SIZE
01:002035A4 6700F840        	  6953:          BEQ     ER             .BYTE NOT ALLOWED
                            	  6954: 
01:002035A8 ED4A            	  6955:          LSL.W   #6,D2          .SIZE
01:002035AA 0802000C        	  6956:          BTST    #12,D2
01:002035AE 6704            	  6957:          BEQ.S   MMA225         .L = ..10
01:002035B0 00423000        	  6958:          ORI.W   #$3000,D2      .W = ..11
                            	  6959: MMA225
                            	  6960: 
01:002035B4 6100F0D0        	  6961:          BSR     EAALL          ALL MODES ALLOWED
01:002035B8 8446            	  6962:          OR.W    D6,D2
                            	  6963: 
01:002035BA 6100F810        	  6964:          BSR     COMMA
                            	  6965: 
01:002035BE 3E3C0002        	  6966:          MOVE.W  #$0002,D7      A@ ONLY
01:002035C2 6100F0C6        	  6967:          BSR     EA
01:002035C6 60BA            	  6968:          BRA     MM825
                            	  6969: 
                            	  6970: 
                            	  6971: MJMP     DS      0              (INDEX 18)
01:002035C8 4A29000B        	  6972:          TST.B   TLSPEC(A1)
01:002035CC 671C            	  6973:          BEQ.S   MJMP32         DEFAULT (ALLOW EITHER .S OR .L)
01:002035CE 3029000C        	  6974:          MOVE.W  TLENGTH(A1),D0
01:002035D2 6700F812        	  6975:          BEQ     ER             .B NOT ALLOWED
01:002035D6 3E3C06E4        	  6976:          MOVE.W  #$6E4,D7       D7 = MODES ALLOWED
01:002035DA 0C400040        	  6977:          CMPI.W  #$40,D0
01:002035DE 6704            	  6978:          BEQ.S   MJMP22         .S SPECIFIED (.W ACCEPTED)
01:002035E0 3E3C8764        	  6979:          MOVE.W  #$8764,D7      MODE FOR .L
01:002035E4 6100F0A4        	  6980: MJMP22   BSR     EA
01:002035E8 6004            	  6981:          BRA.S   MJMP42
                            	  6982: 
01:002035EA 6100F07C        	  6983: MJMP32   BSR     EAC            CONTROL ADDRESSING ONLY
01:002035EE 8446            	  6984: MJMP42   OR.W    D6,D2
01:002035F0 6000F7FC        	  6985:          BRA     CMMD2
                            	  6986: 
                            	  6987: * SIZE = LONG
                            	  6988: MLEA     DS      0              (INDEX 19)
01:002035F4 6100FE60        	  6989:          BSR     SIZELONG
                            	  6990: 
01:002035F8 6100F06E        	  6991:          BSR     EAC            CONTROL ADDRESSING ONLY
01:002035FC 8446            	  6992:          OR.W    D6,D2
                            	  6993: 
01:002035FE 6100F7CC        	  6994:          BSR     COMMA
                            	  6995: 
01:00203602 6100F038        	  6996:          BSR     GETREGA
01:00203606 EE58            	  6997:          ROR.W   #7,D0
01:00203608 8440            	  6998:          OR.W    D0,D2
01:0020360A 6000F7E2        	  6999:          BRA     CMMD2
                            	  7000: 
                            	  7001: 
                            	  7002: * SIZE = LONG
                            	  7003: MPEA     DS      0              (INDEX 36)
01:0020360E 6100FE46        	  7004:          BSR     SIZELONG
                            	  7005: 
01:00203612 6100F054        	  7006:          BSR     EAC            CONTROL ADDRESSING ONLY
01:00203616 8446            	  7007:          OR.W    D6,D2
01:00203618 6000F7D4        	  7008:          BRA     CMMD2
                            	  7009: 
                            	  7010: MSWAP    DS      0              (INDEX 24)
                            	  7011: * SIZE WORD
01:0020361C 0C690040000C    	  7012:          CMPI.W  #$0040,TLENGTH(A1)
01:00203622 6600F7C2        	  7013:          BNE     ER             NOT .W
                            	  7014: 
01:00203626 6100EFFA        	  7015:          BSR     GETREGD        D@ ONLY
01:0020362A 8440            	  7016:          OR.W    D0,D2
01:0020362C 6000F7C0        	  7017:          BRA     CMMD2
                            	  7018: 
01:00203630 0C1D0023        	  7019: GETIMM   CMPI.B  #'#',(A5)+
01:00203634 6600F7B0        	  7020:          BNE     ER
                            	  7021: 
01:00203638 6100EF78        	  7022:          BSR     EV             EVALUATE EXPRESSION
01:0020363C 4E75            	  7023:          RTS                    D0 = VALUE
                            	  7024: 
01:0020363E 6100EFFC        	  7025: MLINK    BSR     GETREGA        (INDEX 20)
01:00203642 8440            	  7026:          OR.W    D0,D2
                            	  7027: 
01:00203644 6100F786        	  7028:          BSR     COMMA
                            	  7029: 
01:00203648 61E6            	  7030:          BSR     GETIMM
01:0020364A 2A00            	  7031:          MOVE.L  D0,D5
01:0020364C 6100F2AE        	  7032:          BSR     EA16BITS       -32K TO +32K
01:00203650 33400002        	  7033:          MOVE.W  D0,TDATA+2(A1)
                            	  7034: 
01:00203654 5429000A        	  7035:          ADDQ.B  #2,TNB(A1)
01:00203658 6000F794        	  7036:          BRA     CMMD2
                            	  7037: 
                            	  7038: MSTOP    DS      0              (INDEX 23)
                            	  7039: * UNSIZED
01:0020365C 61D2            	  7040:          BSR     GETIMM
01:0020365E 0C8000010000    	  7041:          CMPI.L  #$00010000,D0
01:00203664 6400F780        	  7042:          BCC     ER
01:00203668 33400002        	  7043:          MOVE.W  D0,TDATA+2(A1)
01:0020366C 5429000A        	  7044:          ADDQ.B  #2,TNB(A1)
01:00203670 6000F77C        	  7045:          BRA     CMMD2
                            	  7046: 
                            	  7047: MTRAP    DS      0              (INDEX 25)
01:00203674 61BA            	  7048:          BSR     GETIMM
01:00203676 0C8000000010    	  7049:          CMPI.L  #16,D0
01:0020367C 6400F768        	  7050:          BCC     ER
01:00203680 8440            	  7051:          OR.W    D0,D2
01:00203682 6000F76A        	  7052:          BRA     CMMD2
                            	  7053: 
                            	  7054: MUNLK    DS      0              (INDEX 26)
                            	  7055: * UNSIZED
01:00203686 6100EFB4        	  7056:          BSR     GETREGA
01:0020368A 8440            	  7057:          OR.W    D0,D2
01:0020368C 6000F760        	  7058:          BRA     CMMD2
                            	  7059: 
                            	  7060: MDC      DS      0              (INDEX 37) .W ONLY ALLOWED
01:00203690 6100EF20        	  7061:          BSR     EV
01:00203694 2A00            	  7062:          MOVE.L  D0,D5
01:00203696 6100F25A        	  7063:          BSR     EA16BIT        ONLY .W ALLOWED     -32K TO +64K
01:0020369A 3405            	  7064:          MOVE.W  D5,D2
01:0020369C 6000F750        	  7065:          BRA     CMMD2
                            	  7066: 
                            	  7067: 
                            	  7068: 
                            	  7069: 
                            	  7070: *-------------------------------------------------------------------------
                            	  7071: * File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
                            	  7072: 
                            	  7073: *        CALLING SEQUENCE:
                            	  7074: *   D0,D1,D2 = CODE TO BE DISASSEMBLED
                            	  7075: *   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
                            	  7076: *   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
                            	  7077: *        JSR       DCODE68K
                            	  7078: 
                            	  7079: *        RETURN:
                            	  7080: *   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
                            	  7081: *   A5 = POINTER TO LINE AS DISASSEMBLED
                            	  7082: *   A6 = POINTER TO END OF LINE
                            	  7083: *
                            	  7084: * 01234567890123456789012345678901234567890123456789
                            	  7085: * AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
                            	  7086: 
                            	  7087: *FDATA   EQU     10             DATA FIELD
                            	  7088: *FOC     EQU     31             OP-CODE FIELD
                            	  7089: *FOP     EQU     39             OPERAND FIELD
                            	  7090: 
                            	  7091: * CAUSES ORGIN MODULO 4
                            	  7092: LONG     MACRO
                            	  7093:          DS      0
                            	  7094:          DS.B    (*-X)&2
                            	  7095:          ENDM
                            	  7096: 
                            	  7097: 
                            	  7098: X        DS      0              BASE ADDRESS THIS MODULE
                            	  7099:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7100: 
                            	  7101: *  MOVEM REGISTERS TO EA
                            	  7102: *
                            	  7103: *        01001D001S......
                            	  7104: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7105: *        .........0......       WORD
                            	  7106: *        .........1......       LONG
                            	  7107: *        .....0..........       REGISTER TO MEMORY
                            	  7108: *        .....1..........       MEMORY TO REGISTER
                            	  7109: *
                            	  7110: 
                            	  7111: IMOVEMFR DS      0
01:002036A0 6100071E        	  7112:          BSR     MOVEMS         SIZE
                            	  7113: 
01:002036A4 7C38            	  7114:          MOVEQ   #$0038,D6
01:002036A6 CC54            	  7115:          AND.W   (A4),D6
01:002036A8 0C460020        	  7116:          CMPI.W  #$0020,D6
01:002036AC 6706            	  7117:          BEQ.S   IM7788         PREDECREMENT MODE
                            	  7118: 
01:002036AE 7C01            	  7119:          MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
01:002036B0 7200            	  7120:          MOVEQ   #0,D1          D1 = BIT POSITION
01:002036B2 6004            	  7121:          BRA.S   IM7799
                            	  7122: 
01:002036B4 7CFF            	  7123: IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
01:002036B6 720F            	  7124:          MOVEQ   #15,D1         D1 = BIT POSITION
01:002036B8 6100071A        	  7125: IM7799   BSR     MOVEMR         BUILD MASK WORD
                            	  7126: 
01:002036BC 1CFC002C        	  7127:          MOVE.B  #',',(A6)+     STORE COMMA
                            	  7128: 
01:002036C0 5483            	  7129:          ADDQ.L  #2,D3
01:002036C2 3814            	  7130:          MOVE.W  (A4),D4
01:002036C4 3E3C01F4        	  7131:          MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
01:002036C8 61000534        	  7132:          BSR     EEA
01:002036CC 601C            	  7133:          BRA.S   CS16           COMMON
                            	  7134: 
                            	  7135:          LONG
                            	     1M          DS      0
01:002036CE 00              	     2M          DS.B    (*-X)&2
01:002036CF *
                            	  7136: * MOVEM  EA  TO REGISTERS
                            	  7137: *
01:002036D0 610006EE        	  7138: IMOVEMTR BSR     MOVEMS         SIZE
01:002036D4 5483            	  7139:          ADDQ.L  #2,D3
01:002036D6 3E3C07EC        	  7140:          MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
01:002036DA 61000522        	  7141:          BSR     EEA
                            	  7142: 
01:002036DE 1CFC002C        	  7143:          MOVE.B  #',',(A6)+     STORE COMMA
                            	  7144: 
01:002036E2 7C01            	  7145:          MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
01:002036E4 7200            	  7146:          MOVEQ   #0,D1          D1 = BIT POSITION
01:002036E6 610006EC        	  7147:          BSR     MOVEMR
                            	  7148: 
01:002036EA 606C            	  7149: CS16     BRA.S   CS15           COMMON
                            	  7150: 
                            	  7151: 
                            	  7152:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7153: ISTOP    DS      0
01:002036EC 302C0002        	  7154:          MOVE.W  2(A4),D0
01:002036F0 1CFC0023        	  7155:          MOVE.B  #'#',(A6)+     IMMEDIATE
01:002036F4 1CFC0024        	  7156:          MOVE.B  #'$',(A6)+     HEX
01:002036F8 6100E6A0        	  7157:          BSR     PNT4HX         VALUE
01:002036FC 600007EA        	  7158:          BRA     COMMON4
                            	  7159: 
                            	  7160:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7161: IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
01:00203700 61000472        	  7162:          BSR     FORMSIZE
01:00203704 5483            	  7163:          ADDQ.L  #2,D3          SIZE = 4
01:00203706 1CFC0023        	  7164:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7165: 
01:0020370A 7000            	  7166:          CLR.L   D0
01:0020370C 302C0002        	  7167:          MOVE.W  2(A4),D0       D0 = EXTENSION WORD
01:00203710 3214            	  7168:          MOVE.W  (A4),D1
01:00203712 EC49            	  7169:          LSR.W   #6,D1
01:00203714 02410003        	  7170:          ANDI.W  #3,D1
01:00203718 6746            	  7171:          BEQ.S   IMMED65        .BYTE
                            	  7172: 
01:0020371A 0C010001        	  7173:          CMPI.B  #1,D1
01:0020371E 6750            	  7174:          BEQ.S   IMMED75        .WORD
                            	  7175: 
01:00203720 5483            	  7176:          ADDQ.L  #2,D3          .LONG    SIZE = 6
01:00203722 202C0002        	  7177:          MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
                            	  7178: 
01:00203726 6100DC24        	  7179: IMMED45  BSR     HEX2DEC        DECIMAL
                            	  7180: 
01:0020372A 1CC5            	  7181:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7182: 
01:0020372C 3014            	  7183:          MOVE    (A4),D0
01:0020372E 0240003F        	  7184:          ANDI.W  #$003F,D0
01:00203732 0C40003C        	  7185:          CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
01:00203736 6622            	  7186:          BNE.S   IMMED55        NOT FOUND
                            	  7187: 
01:00203738 3014            	  7188:          MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
01:0020373A 02404000        	  7189:          ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
01:0020373E 660007D2        	  7190:          BNE     FERROR         0600   0400  0C00
                            	  7191: 
01:00203742 3214            	  7192:          MOVE.W  (A4),D1
01:00203744 024100C0        	  7193:          ANDI.W  #$00C0,D1
01:00203748 0C410080        	  7194:          CMPI.W  #$0080,D1
01:0020374C 670007C4        	  7195:          BEQ     FERROR         .LONG NOT ALLOWED
                            	  7196: 
01:00203750 1CFC0053        	  7197:          MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
01:00203754 1CFC0052        	  7198:          MOVE.B  #'R',(A6)+
01:00203758 603E            	  7199: CS15     BRA.S   CS14           COMMON
                            	  7200: 
01:0020375A 610004A2        	  7201: IMMED55  BSR     EEA
01:0020375E 6038            	  7202:          BRA.S   CS14           COMMON
                            	  7203: 
01:00203760 2200            	  7204: IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
01:00203762 E049            	  7205:          LSR.W   #8,D1          D1 = 00000000XXXXXXXX
01:00203764 670A            	  7206:          BEQ.S   IMMED75
01:00203766 2200            	  7207:          MOVE.L  D0,D1
01:00203768 EE41            	  7208:          ASR.W   #7,D1
01:0020376A 5241            	  7209:          ADDQ.W  #1,D1          CHECK FOR NEGATIVE
01:0020376C 660007A4        	  7210:          BNE     FERROR
                            	  7211: 
01:00203770 48C0            	  7212: IMMED75  EXT.L   D0
01:00203772 60B2            	  7213:          BRA     IMMED45
                            	  7214: 
                            	  7215: *  BIT   5432109876543210
                            	  7216: *        ....RRRMMM......       DESTINATION REGISTER MODE
                            	  7217: *        ..........MMMRRR       SOURCE MODE REGISTER
                            	  7218: *        0001............       .BYTE
                            	  7219: *        0011............       .WORD
                            	  7220: *        0010............       .LONG
                            	  7221: *
                            	  7222: * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
                            	  7223:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7224: IMOVE    DS      0
01:00203774 600003A2        	  7225:          BRA     IMOVEA1
                            	  7226: 
                            	  7227:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7228: ILINK    DS      0
01:00203778 615E            	  7229:          BSR.S   FORMREGA
                            	  7230: 
01:0020377A 1CC5            	  7231:          MOVE.B  D5,(A6)+       COMMA SERARATOR
                            	  7232: 
01:0020377C 1CFC0023        	  7233:          MOVE.B  #'#',(A6)+
01:00203780 302C0002        	  7234:          MOVE.W  2(A4),D0
01:00203784 48C0            	  7235:          EXT.L   D0
01:00203786 6100DBC4        	  7236:          BSR     HEX2DEC        DECIMAL DISPLACEMENT
01:0020378A 6000075C        	  7237:          BRA     COMMON4
                            	  7238: 
                            	  7239:          LONG
                            	     1M          DS      0
01:0020378E 00              	     2M          DS.B    (*-X)&2
01:0020378F *
                            	  7240: FORM1    DS      0              CLR  NEG  NEGX  NOT TST
01:00203790 610003E2        	  7241:          BSR     FORMSIZE
                            	  7242: 
                            	  7243: 
                            	  7244: *                               NBCD TAS
01:00203794 61000468        	  7245: FORM1A   BSR     EEA            DATA ALTERABLE ONLY
01:00203798 606E            	  7246: CS14     BRA.S   CS13           COMMON
                            	  7247: 
                            	  7248:          LONG
                            	     1M          DS      0
01:0020379A 00              	     2M          DS.B    (*-X)&2
01:0020379B *
                            	  7249: FORM3    DS      0              EXT  SWAP
01:0020379C 614A            	  7250:          BSR.S   FORMREGD
01:0020379E 6068            	  7251:          BRA.S   CS13           COMMON
                            	  7252: 
                            	  7253:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7254: FORM4    DS      0              TRAP
01:002037A0 1CFC0023        	  7255:          MOVE.B  #'#',(A6)+
01:002037A4 3014            	  7256:          MOVE.W  (A4),D0
01:002037A6 02800000000F    	  7257:          ANDI.L  #$0F,D0
01:002037AC 6100DB9E        	  7258:          BSR     HEX2DEC        DECIMAL
01:002037B0 6056            	  7259:          BRA.S   CS13           COMMON
                            	  7260: 
                            	  7261:          LONG
                            	     1M          DS      0
01:002037B2 00              	     2M          DS.B    (*-X)&2
01:002037B3 *
                            	  7262: FORM5    DS      0              UNLNK
01:002037B4 6122            	  7263:          BSR.S   FORMREGA
01:002037B6 6050            	  7264:          BRA.S   CS13           COMMON
                            	  7265: 
                            	  7266: *  BIT   5432109876543210
                            	  7267: *        ....RRR.........       ADDRESS REGISTER
                            	  7268: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7269: *
                            	  7270:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7271: FORM6A   DS      0              LEA
01:002037B8 3E3C07E4        	  7272:          MOVE.W  #$7E4,D7       CONTROL ADDRESSING
01:002037BC 6154            	  7273:          BSR.S   EEA10
                            	  7274: 
01:002037BE 1CC5            	  7275:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7276: 
01:002037C0 3814            	  7277:          MOVE.W  (A4),D4
01:002037C2 EF5C            	  7278:          ROL.W   #7,D4
01:002037C4 6112            	  7279:          BSR.S   FORMREGA
01:002037C6 6040            	  7280:          BRA.S   CS13           COMMON
                            	  7281: 
                            	  7282: *  BIT   5432109876543210
                            	  7283: *        ....DDD.........       DATA REGISTER
                            	  7284: *        ..........XXXXXX       EFFECTIVE ADDRESS
                            	  7285: *
                            	  7286:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7287: FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
01:002037C8 3E3C0FFD        	  7288:          MOVE.W  #$FFD,D7       DATA ADDRESSING
01:002037CC 6144            	  7289:          BSR.S   EEA10
                            	  7290: 
01:002037CE 1CC5            	  7291:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7292: 
01:002037D0 3814            	  7293:          MOVE.W  (A4),D4
01:002037D2 EF5C            	  7294:          ROL.W   #7,D4
01:002037D4 6112            	  7295:          BSR.S   FORMREGD
01:002037D6 6030            	  7296:          BRA.S   CS13           COMMON
                            	  7297: 
01:002037D8 1CFC0041        	  7298: FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
01:002037DC 02040007        	  7299: FORMREG5 ANDI.B  #$07,D4
01:002037E0 00040030        	  7300:          ORI.B   #'0',D4
01:002037E4 1CC4            	  7301:          MOVE.B  D4,(A6)+
01:002037E6 4E75            	  7302:          RTS
                            	  7303: 
01:002037E8 1CFC0044        	  7304: FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
01:002037EC 60EE            	  7305:          BRA     FORMREG5
                            	  7306: 
                            	  7307: *  BIT   5432109876543210
                            	  7308: *        ....DDD......DDD       DATA REGISTERS
                            	  7309: *
                            	  7310:          LONG
                            	     1M          DS      0
01:002037EE 00              	     2M          DS.B    (*-X)&2
01:002037EF *
                            	  7311: FORM7    DS      0              EXG
01:002037F0 EF5C            	  7312:          ROL.W   #7,D4
01:002037F2 61F4            	  7313:          BSR     FORMREGD
                            	  7314: 
01:002037F4 1CC5            	  7315:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7316: 
01:002037F6 3814            	  7317:          MOVE.W  (A4),D4
01:002037F8 61EE            	  7318:          BSR     FORMREGD
01:002037FA 600C            	  7319:          BRA.S   CS13           COMMON
                            	  7320: 
                            	  7321: *  BIT   5432109876543210
                            	  7322: *        ....AAA......AAA       ADDRESS REGISTERS
                            	  7323: *
                            	  7324:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7325: FORM8    DS      0              EXG
01:002037FC EF5C            	  7326:          ROL.W   #7,D4
01:002037FE 61D8            	  7327:          BSR     FORMREGA
                            	  7328: 
01:00203800 1CFC002C        	  7329: FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
                            	  7330: 
01:00203804 3814            	  7331:          MOVE.W  (A4),D4
01:00203806 61D0            	  7332:          BSR     FORMREGA
01:00203808 60000080        	  7333: CS13     BRA     CS12           COMMON
                            	  7334: 
                            	  7335: *  BIT   5432109876543210
                            	  7336: *        ....DDD.........       DATA REGISTER
                            	  7337: *        .............AAA       ADDRESS REGISTER
                            	  7338: *
                            	  7339:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7340: FORM9    DS      0              EXG
01:0020380C EF5C            	  7341:          ROL.W   #7,D4
01:0020380E 61D8            	  7342:          BSR     FORMREGD       DATA REGISTER
01:00203810 60EE            	  7343:          BRA     FORM815
                            	  7344: 
01:00203812 600003EA        	  7345: EEA10    BRA     EEA
                            	  7346: 
                            	  7347: *  BIT   5432109876543210
                            	  7348: *        ..........AAAAAA         EFFECTIVE ADDRESS
                            	  7349: *        .......MMM......         OP-MODE
                            	  7350: *        ....RRR.........         D-REGISTER
                            	  7351: *        .......011......         WORD  EA,A@
                            	  7352: *        .......111......         LONG  EA,A@
                            	  7353: *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
                            	  7354: *        .......0........         EA,D@
                            	  7355: *        .......1........         D@,EA
                            	  7356: *        ........00......         BYTE
                            	  7357: *        ........01......         WORD
                            	  7358: *        ........10......         LONG
                            	  7359: *
                            	  7360:          LONG
                            	     1M          DS      0
01:00203816 00              	     2M          DS.B    (*-X)&2
01:00203817 *
                            	  7361: *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
                            	  7362: FORM10EX DS      0              ADD  CMP  SUB
01:00203818 3E3C0FFF        	  7363:          MOVE.W  #$FFF,D7       ALL MODES ALLOWED
01:0020381C 2004            	  7364:          MOVE.L  D4,D0
01:0020381E 024001C0        	  7365:          ANDI.W  #$01C0,D0
01:00203822 673A            	  7366:          BEQ.S   FORM103        .......000......
01:00203824 0C4001C0        	  7367:          CMPI.W  #$01C0,D0
01:00203828 6710            	  7368:          BEQ.S   FORM10E3       .......111......
01:0020382A 0C4000C0        	  7369:          CMPI.W  #$00C0,D0
01:0020382E 661E            	  7370:          BNE.S   FORM10E6
                            	  7371: 
01:00203830 1AFC002E        	  7372:          MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
01:00203834 1AFC0057        	  7373:          MOVE.B  #'W',(A5)+
01:00203838 6008            	  7374:          BRA.S   FORM10E4
                            	  7375: 
01:0020383A 1AFC002E        	  7376: FORM10E3 MOVE.B  #'.',(A5)+
01:0020383E 1AFC004C        	  7377:          MOVE.B  #'L',(A5)+
                            	  7378: 
01:00203842 61CE            	  7379: FORM10E4 BSR     EEA10
                            	  7380: 
01:00203844 1CC5            	  7381:          MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
                            	  7382: 
01:00203846 3814            	  7383:          MOVE.W  (A4),D4
01:00203848 EF5C            	  7384:          ROL.W   #7,D4
01:0020384A 618C            	  7385:          BSR     FORMREGA       <EA>,A@
01:0020384C 603C            	  7386:          BRA.S   CS12           COMMON
                            	  7387: 
01:0020384E 08140000        	  7388: FORM10E6 BTST.B  #0,(A4)
01:00203852 6620            	  7389:          BNE.S   FORM105        .......1........    D@,<EA>
01:00203854 600C            	  7390:          BRA.S   FORM104        .......0........    <EA>,D@
                            	  7391: 
                            	  7392: *  BIT   5432109876543210
                            	  7393: *        ..........AAAAAA       EFFECTIVE ADDRESS
                            	  7394: *        .......MMM......       OP-MODE
                            	  7395: *        ....RRR.........       D-REGISTER
                            	  7396: *        .......0........       EA,D@
                            	  7397: *        .......1........       D@,EA
                            	  7398: *        ........00......       BYTE
                            	  7399: *        ........01......       WORD
                            	  7400: *        ........10......       LONG
                            	  7401:          LONG
                            	     1M          DS      0
01:00203856 00              	     2M          DS.B    (*-X)&2
01:00203857 *
                            	  7402: FORM10   DS      0              AND  EOR  OR
01:00203858 08140000        	  7403:          BTST.B  #0,(A4)
01:0020385C 6616            	  7404:          BNE.S   FORM105
                            	  7405: 
01:0020385E 3E3C0FFD        	  7406: FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:00203862 61000310        	  7407: FORM104  BSR     FORMSIZE
01:00203866 61AA            	  7408:          BSR     EEA10          <EA>,D@
                            	  7409: 
01:00203868 1CC5            	  7410:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7411: 
01:0020386A 1814            	  7412:          MOVE.B  (A4),D4
01:0020386C E20C            	  7413:          LSR.B   #1,D4
01:0020386E 6100FF78        	  7414:          BSR     FORMREGD
01:00203872 6016            	  7415:          BRA.S   CS12           COMMON
                            	  7416: 
01:00203874 610002FE        	  7417: FORM105  BSR     FORMSIZE       D@,<EA>
01:00203878 1814            	  7418:          MOVE.B  (A4),D4
01:0020387A E20C            	  7419:          LSR.B   #1,D4
01:0020387C 6100FF6A        	  7420:          BSR     FORMREGD
                            	  7421: 
01:00203880 1CC5            	  7422:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7423: 
01:00203882 3814            	  7424:          MOVE.W  (A4),D4
01:00203884 3E3C01FD        	  7425:          MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
01:00203888 6188            	  7426:          BSR     EEA10
01:0020388A 6000065E        	  7427: CS12     BRA     COMMON
                            	  7428: 
                            	  7429:          LONG
                            	     1M          DS      0
01:0020388E 00              	     2M          DS.B    (*-X)&2
01:0020388F *
                            	  7430: *                               PEA     (JMP  JSR)
01:00203890 3E3C07E4        	  7431: FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
01:00203894 6100FF7C        	  7432:          BSR     EEA10
01:00203898 60F0            	  7433:          BRA     CS12           COMMON
                            	  7434: 
                            	  7435:          LONG
                            	     1M          DS      0
01:0020389A 00              	     2M          DS.B    (*-X)&2
01:0020389B *
                            	  7436: *                               JMP  JSR
01:0020389C 2004            	  7437: FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
01:0020389E 0240003F        	  7438:          ANDI.W  #$3F,D0
01:002038A2 0C400038        	  7439:          CMPI.W  #$38,D0
01:002038A6 6608            	  7440:          BNE.S   FORM112        NOT .S
01:002038A8 1AFC002E        	  7441:          MOVE.B  #'.',(A5)+     PERIOD
01:002038AC 1AFC0053        	  7442:          MOVE.B  #'S',(A5)+     S
01:002038B0 0C400039        	  7443: FORM112  CMPI.W  #$39,D0
01:002038B4 6608            	  7444:          BNE.S   FORM114
01:002038B6 1AFC002E        	  7445:          MOVE.B  #'.',(A5)+     PERIOD
01:002038BA 1AFC004C        	  7446:          MOVE.B  #'L',(A5)+     L
01:002038BE 60D0            	  7447: FORM114  BRA     FORM11
                            	  7448: 
                            	  7449: *  BIT   5432109876543210
                            	  7450: *        ....XXX.....0...       DATA DESTINATION REGISTER
                            	  7451: *        ....XXX.....1...       ADDRESS REGISTER
                            	  7452: *        ....XXX.00......       BYTE
                            	  7453: *        ........01......       WORD
                            	  7454: *        ........10......       LONG
                            	  7455: *        ............0...       DATA REGISTER TO DATA REGISTER
                            	  7456: *        ............1...       MEMORY TO MEMORY
                            	  7457: *        ............0XXX       DATA SOURCE REGISTER
                            	  7458: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	  7459: *
                            	  7460:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7461: FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
01:002038C0 610002B2        	  7462:          BSR     FORMSIZE
                            	  7463: 
01:002038C4 08040003        	  7464:          BTST    #3,D4
01:002038C8 6610            	  7465:          BNE.S   FORM125
                            	  7466: 
01:002038CA 6100FF1C        	  7467:          BSR     FORMREGD       D@,D@;   FORMAT SOURCE
                            	  7468: 
01:002038CE 1CC5            	  7469:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7470: 
01:002038D0 1814            	  7471:          MOVE.B  (A4),D4
01:002038D2 E20C            	  7472:          LSR.B   #1,D4
01:002038D4 6100FF12        	  7473:          BSR     FORMREGD       FORMAT DESTINATION
01:002038D8 6046            	  7474:          BRA.S   CS11           COMMON
                            	  7475: 
01:002038DA 1CFC002D        	  7476: FORM125  MOVE.B  #'-',(A6)+     -
01:002038DE 1CFC0028        	  7477:          MOVE.B  #'(',(A6)+     (
01:002038E2 6100FEF4        	  7478:          BSR     FORMREGA       A@    SOURCE
                            	  7479: 
01:002038E6 203C282D2C29    	  7480:          MOVE.L  #'(-,)',D0     ),-(
01:002038EC 6152            	  7481:          BSR.S   SCHR           STORE CHARS
                            	  7482: 
01:002038EE 1814            	  7483:          MOVE.B  (A4),D4
01:002038F0 E20C            	  7484:          LSR.B   #1,D4
01:002038F2 6100FEE4        	  7485:          BSR     FORMREGA       A@   DESTINATION
01:002038F6 1CFC0029        	  7486:          MOVE.B  #')',(A6)+
01:002038FA 6024            	  7487:          BRA.S   CS11           COMMON
                            	  7488: 
                            	  7489: *  BIT   5432109876543210
                            	  7490: *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
                            	  7491: *        ....XXX.00......       BYTE
                            	  7492: *        ........01......       WORD
                            	  7493: *        ........10......       LONG
                            	  7494: *        ............1...       MEMORY TO MEMORY
                            	  7495: *        ............1XXX       ADDRESS SOURCE REGISTER
                            	  7496: *
                            	  7497:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7498: FORM12A  DS      0              CMPM
01:002038FC 61000276        	  7499:          BSR     FORMSIZE
                            	  7500: 
01:00203900 1CFC0028        	  7501:          MOVE.B  #'(',(A6)+     (
01:00203904 6100FED2        	  7502:          BSR     FORMREGA       A@
                            	  7503: 
01:00203908 203C282C2B29    	  7504:          MOVE.L  #'(,+)',D0     )+,(
01:0020390E 6130            	  7505:          BSR.S   SCHR           STORE CHARS
                            	  7506: 
01:00203910 1814            	  7507:          MOVE.B  (A4),D4
01:00203912 E20C            	  7508:          LSR.B   #1,D4
01:00203914 6100FEC2        	  7509:          BSR     FORMREGA       A@
01:00203918 1CFC0029        	  7510:          MOVE.B  #')',(A6)+
01:0020391C 1CFC002B        	  7511:          MOVE.B  #'+',(A6)+
01:00203920 600005C8        	  7512: CS11     BRA     COMMON
                            	  7513: 
                            	  7514:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:00203924 6000021E        	  7515: IQUICK   BRA     IQUICKA        ADDQ  SUBQ
                            	  7516: 
                            	  7517: *  BIT   5432109876543210
                            	  7518: *        0111...0........       FIXED
                            	  7519: *        ....RRR.........       DATA REGISTER
                            	  7520: *        ........DDDDDDDD       SIGN EXTENDED DATA
                            	  7521: *
                            	  7522:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7523: IMOVEQ   DS      0
01:00203928 1CFC0023        	  7524:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7525: 
01:0020392C 3014            	  7526:          MOVE.W  (A4),D0
01:0020392E 4880            	  7527:          EXT.W   D0
01:00203930 48C0            	  7528:          EXT.L   D0
01:00203932 6100DA18        	  7529:          BSR     HEX2DEC        DECIMAL
                            	  7530: 
01:00203936 1CC5            	  7531:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7532: 
01:00203938 EF5C            	  7533:          ROL.W   #7,D4
01:0020393A 6100FEAC        	  7534:          BSR     FORMREGD
01:0020393E 60E0            	  7535:          BRA     CS11           COMMON
                            	  7536: 
01:00203940 1CC0            	  7537: SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
01:00203942 E088            	  7538:          LSR.L   #8,D0
01:00203944 66FA            	  7539:          BNE     SCHR           MORE TO OUTPUT
01:00203946 4E75            	  7540:          RTS
                            	  7541: 
                            	  7542: * MOVE FROM SR  (STATUS REGISTER)
                            	  7543: *
                            	  7544:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:00203948 203C002C5253    	  7545: IMVFSR   MOVE.L  #',RS'+0,D0   SR,
                            	  7546: 
01:0020394E 61F0            	  7547:          BSR     SCHR
01:00203950 610002AC        	  7548:          BSR     EEA            DATA ALTERABLE
01:00203954 60CA            	  7549:          BRA     CS11           COMMON
                            	  7550: 
                            	  7551: * MOVE FROM USP (USER STACK POINTER)
                            	  7552: *
                            	  7553:          LONG
                            	     1M          DS      0
01:00203956 00              	     2M          DS.B    (*-X)&2
01:00203957 *
01:00203958 203C2C505355    	  7554: IMVFUSP  MOVE.L  #',PSU',D0     USP,
01:0020395E 61E0            	  7555:          BSR     SCHR
01:00203960 6100FE76        	  7556:          BSR     FORMREGA
01:00203964 60BA            	  7557:          BRA     CS11           COMMON
                            	  7558: 
                            	  7559: * MOVE TO SR (STATUS REGISTER)
                            	  7560: *
                            	  7561:          LONG
                            	     1M          DS      0
01:00203966 00              	     2M          DS.B    (*-X)&2
01:00203967 *
01:00203968 3E3C0FFD        	  7562: IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
01:0020396C 61000290        	  7563:          BSR     EEA
01:00203970 203C0052532C    	  7564:          MOVE.L  #'RS,'+0,D0   ,SR
01:00203976 61C8            	  7565: IMVT44   BSR     SCHR
01:00203978 60A6            	  7566:          BRA     CS11           COMMON
                            	  7567: 
                            	  7568: * MOVE TO USP (USER STACK POINTER)
                            	  7569: *
                            	  7570:          LONG
                            	     1M          DS      0
01:0020397A 00              	     2M          DS.B    (*-X)&2
01:0020397B *
01:0020397C 6100FE5A        	  7571: IMVTUSP  BSR     FORMREGA
01:00203980 203C5053552C    	  7572:          MOVE.L  #'PSU,',D0     ,USP
01:00203986 60EE            	  7573:          BRA     IMVT44
                            	  7574: 
                            	  7575: *  MOVE TO CCR (CONDITION CODE REGISTER)
                            	  7576: *
                            	  7577:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:00203988 3E3C0FFD        	  7578: IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
01:0020398C 61000270        	  7579:          BSR     EEA
01:00203990 203C5243432C    	  7580:          MOVE.L  #'RCC,',D0     ,CCR
01:00203996 60DE            	  7581:          BRA     IMVT44
                            	  7582: 
                            	  7583: *  BIT   5432109876543210
                            	  7584: *        0000...1..001...       FIXED
                            	  7585: *        ....XXX.........       DATA REGISTER
                            	  7586: *        ........0.......       MEMORY TO REGISTER
                            	  7587: *        ........1.......       REGISTER TO MEMORY
                            	  7588: *        .........0......       WORD
                            	  7589: *        .........1......       LONG
                            	  7590: *        .............XXX       ADDRESS REGISTER
                            	  7591: *
                            	  7592:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7593: IMOVEP   DS      0
01:00203998 1AFC002E        	  7594:          MOVE.B  #'.',(A5)+     D@,#(A@)
01:0020399C 303C4C57        	  7595:          MOVE.W  #'LW',D0
01:002039A0 08040006        	  7596:          BTST    #6,D4
01:002039A4 6702            	  7597:          BEQ.S   IMOVEP11       USE "W"
01:002039A6 E048            	  7598:          LSR.W   #8,D0          USE "L"
01:002039A8 1AC0            	  7599: IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
                            	  7600: 
01:002039AA 1814            	  7601:          MOVE.B  (A4),D4
01:002039AC E20C            	  7602:          LSR.B   #1,D4
                            	  7603: 
01:002039AE 082C00070001    	  7604:          BTST.B  #7,1(A4)
01:002039B4 670E            	  7605:          BEQ.S   IMOVEP35
                            	  7606: 
01:002039B6 6100FE30        	  7607:          BSR     FORMREGD       D@,$HHHH(A@)
                            	  7608: 
01:002039BA 1CC5            	  7609:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7610: 
01:002039BC 3814            	  7611:          MOVE.W  (A4),D4
01:002039BE 6112            	  7612:          BSR.S   IMOVEP66
01:002039C0 60000526        	  7613: CS20     BRA     COMMON4
                            	  7614: 
01:002039C4 610C            	  7615: IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
                            	  7616: 
01:002039C6 1CC5            	  7617:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7618: 
01:002039C8 1814            	  7619:          MOVE.B  (A4),D4
01:002039CA E20C            	  7620:          LSR.B   #1,D4
01:002039CC 6100FE1A        	  7621:          BSR     FORMREGD
01:002039D0 60EE            	  7622:          BRA     CS20           COMMON4
                            	  7623: 
01:002039D2 1CFC0024        	  7624: IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
01:002039D6 302C0002        	  7625:          MOVE.W  2(A4),D0
01:002039DA 6100E3BE        	  7626:          BSR     PNT4HX
                            	  7627: 
01:002039DE 1CFC0028        	  7628:          MOVE.B  #'(',(A6)+
                            	  7629: 
01:002039E2 3814            	  7630:          MOVE.W  (A4),D4
01:002039E4 6100FDF2        	  7631:          BSR     FORMREGA
01:002039E8 1CFC0029        	  7632:          MOVE.B  #')',(A6)+
01:002039EC 4E75            	  7633:          RTS
                            	  7634: 
                            	  7635:          LONG
                            	     1M          DS      0
01:002039EE 00              	     2M          DS.B    (*-X)&2
01:002039EF *
01:002039F0 600004F8        	  7636: SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
                            	  7637: 
                            	  7638:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
01:002039F4 610000EA        	  7639: ISCC     BSR     ICCCC          GET REST OF OP-CODE
01:002039F8 61000204        	  7640:          BSR     EEA            DATA ALTERABLE
01:002039FC 60F2            	  7641:          BRA     SCOMMON
                            	  7642: 
                            	  7643: 
                            	  7644:          LONG
                            	     1M          DS      0
01:002039FE 00              	     2M          DS.B    (*-X)&2
01:002039FF *
                            	  7645: IDBCC    DS      0              DB--
01:00203A00 3814            	  7646:          MOVE.W  (A4),D4
01:00203A02 6100FDE4        	  7647:          BSR     FORMREGD
                            	  7648: 
01:00203A06 1CC5            	  7649:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
01:00203A08 1CFC0024        	  7650:          MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
                            	  7651: 
01:00203A0C 610000D2        	  7652:          BSR     ICCCC
01:00203A10 602E            	  7653:          BRA.S   ICC55
                            	  7654: 
                            	  7655: *  BIT   5432109876543210
                            	  7656: *        0110............       FIXED
                            	  7657: *        ....CCCC........       CONDITION
                            	  7658: *        ........DDDDDDD0       DISPLACEMENT
                            	  7659: *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
                            	  7660: *
                            	  7661:          LONG
                            	     1M          DS      0
01:00203A12 00              	     2M          DS.B    (*-X)&2
01:00203A13 *
                            	  7662: ICC      DS      0              B--
01:00203A14 610000CA        	  7663:          BSR     ICCCC
                            	  7664: 
01:00203A18 1CFC0024        	  7665: IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
                            	  7666: 
01:00203A1C 4A04            	  7667:          TST.B   D4
01:00203A1E 6720            	  7668:          BEQ.S   ICC55          16 BIT DISPLACEMENT
                            	  7669: 
01:00203A20 1AFC002E        	  7670:          MOVE.B  #'.',(A5)+
01:00203A24 1AFC0053        	  7671:          MOVE.B  #'S',(A5)+
01:00203A28 4884            	  7672:          EXT.W   D4             8 BIT DISPLACEMENT
                            	  7673: 
01:00203A2A 48C4            	  7674: ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
01:00203A2C D8A9FFFC        	  7675:          ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
01:00203A30 5484            	  7676:          ADDQ.L  #2,D4          + TWO
01:00203A32 2004            	  7677:          MOVE.L  D4,D0
                            	  7678: 
01:00203A34 E284            	  7679:          ASR.L   #1,D4
01:00203A36 650004DA        	  7680:          BCS     FERROR         ODD BOUNDRY DISPLACEMENT
                            	  7681: 
01:00203A3A 6100E358        	  7682:          BSR     PNT6HX
01:00203A3E 60B0            	  7683:          BRA     SCOMMON
                            	  7684: 
01:00203A40 5483            	  7685: ICC55    ADDQ.L  #2,D3          SIZE
01:00203A42 382C0002        	  7686:          MOVE.W  2(A4),D4
01:00203A46 1AFC002E        	  7687:          MOVE.B  #'.',(A5)+
01:00203A4A 1AFC004C        	  7688:          MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
01:00203A4E 60DA            	  7689:          BRA     ICC35
                            	  7690: 
                            	  7691:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7692: *                               BCHG  BCLR  BSET  BTST
                            	  7693: ISETD    DS      0              DYNAMIC BIT
01:00203A50 EF5C            	  7694:          ROL.W   #7,D4
01:00203A52 6100FD94        	  7695:          BSR     FORMREGD       DATA REGISTER
                            	  7696: 
01:00203A56 1CC5            	  7697: ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7698: 
01:00203A58 3814            	  7699:          MOVE.W  (A4),D4
01:00203A5A 610001A2        	  7700:          BSR     EEA            DATA ALTERABLE
01:00203A5E 6090            	  7701: CS18     BRA     SCOMMON
                            	  7702: 
                            	  7703:          LONG
                            	     1M          DS      0
                            	     2M          DS.B    (*-X)&2
                            	  7704: *                            BCHG  BCLR  BSET  BTST
                            	  7705: *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
                            	  7706: *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
                            	  7707: *
                            	  7708: ISETS    DS      0              STATIC BIT
01:00203A60 5483            	  7709:          ADDQ.L  #2,D3     SIZE
01:00203A62 1CFC0023        	  7710:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  7711: 
01:00203A66 7000            	  7712:          CLR.L   D0
01:00203A68 302C0002        	  7713:          MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
01:00203A6C 2200            	  7714:          MOVE.L  D0,D1
01:00203A6E EA89            	  7715:          LSR.L   #5,D1
01:00203A70 660004A0        	  7716:          BNE     FERROR
01:00203A74 6100D8D6        	  7717:          BSR     HEX2DEC        DECIMAL
                            	  7718: 
01:00203A78 60DC            	  7719:          BRA     ISETD12
                            	  7720: 
                            	  7721: *   BIT  5432109876543210
                            	  7722: *        ....XXX.........       IMMEDIATE COUNT/REGISTER
                            	  7723: *        .......0........       RIGHT SHIFT
                            	  7724: *        .......1........       LEFT SHIFT
                            	  7725: *        ........00......       BYTE
                            	  7726: *        ........01......       WORD
                            	  7727: *        ........10......       LONG
                            	  7728: *        ....0...11......       WORD (MEMORY)
                            	  7729: *        ....0...11AAAAAA       EFFECTIVE ADDRESS
                            	  7730: *        ..........0.....       SHIFT IMMEDIATE COUNT
                            	  7731: *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
                            	  7732: *
                            	  7733:          LONG
                            	     1M          DS      0
01:00203A7A 00              	     2M          DS.B    (*-X)&2
01:00203A7B *
                            	  7734: ISHIFT   DS      0              AS-  LS-  RO-  ROX-
01:00203A7C 303C4C52        	  7735:          MOVE.W  #'LR',D0
01:00203A80 08040008        	  7736:          BTST    #8,D4          DIRECTION BIT
01:00203A84 6702            	  7737:          BEQ.S   ISHIFT13       RIGHT
01:00203A86 E048            	  7738:          LSR.W   #8,D0          LEFT
01:00203A88 1AC0            	  7739: ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
                            	  7740: 
01:00203A8A 3014            	  7741:          MOVE.W  (A4),D0
01:00203A8C 024000C0        	  7742:          ANDI.W  #$00C0,D0
01:00203A90 0C4000C0        	  7743:          CMPI.W  #$00C0,D0
01:00203A94 6730            	  7744:          BEQ.S   ISHIFTM1       MEMORY SHIFT
                            	  7745: 
01:00203A96 610000DC        	  7746:          BSR     FORMSIZE
                            	  7747: 
01:00203A9A EF5C            	  7748:          ROL.W   #7,D4
01:00203A9C 0804000C        	  7749:          BTST    #12,D4         I/R BIT
01:00203AA0 6616            	  7750:          BNE.S   ISHIFT33       COUNT IN REGISTER
                            	  7751: 
01:00203AA2 02040007        	  7752:          ANDI.B  #$07,D4        IMMEDIATE COUNT
01:00203AA6 6604            	  7753:          BNE.S   ISHIFT23
01:00203AA8 00040008        	  7754:          ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
01:00203AAC 00040030        	  7755: ISHIFT23 ORI.B   #'0',D4
01:00203AB0 1CFC0023        	  7756:          MOVE.B  #'#',(A6)+
01:00203AB4 1CC4            	  7757:          MOVE.B  D4,(A6)+
01:00203AB6 6004            	  7758:          BRA.S   ISHIFT44
                            	  7759: 
01:00203AB8 6100FD2E        	  7760: ISHIFT33 BSR     FORMREGD
                            	  7761: 
01:00203ABC 1CC5            	  7762: ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7763: 
01:00203ABE 3814            	  7764:          MOVE.W  (A4),D4
01:00203AC0 6100FD26        	  7765:          BSR     FORMREGD
01:00203AC4 6098            	  7766: CS17     BRA     CS18           COMMON
                            	  7767: 
01:00203AC6 1AFC002E        	  7768: ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
01:00203ACA 1AFC0057        	  7769:          MOVE.B  #'W',(A5)+     .WORD
                            	  7770: 
01:00203ACE 0804000B        	  7771:          BTST    #11,D4
01:00203AD2 6600043E        	  7772:          BNE     FERROR         BIT 11 MUST BE ZERO
                            	  7773: 
01:00203AD6 3E3C01FC        	  7774:          MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
01:00203ADA 61000122        	  7775:          BSR     EEA
01:00203ADE 60E4            	  7776:          BRA     CS17           COMMON
                            	  7777: 
01:00203AE0 700F            	  7778: ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
01:00203AE2 C014            	  7779:          AND.B   (A4),D0        D0 = CCC
01:00203AE4 E388            	  7780:          LSL.L   #1,D0          D0 = CCC*2
                            	  7781: 
01:00203AE6 323B0010        	  7782:          MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
01:00203AEA 1AC1            	  7783:          MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
01:00203AEC E049            	  7784:          LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
01:00203AEE 0C010020        	  7785:          CMPI.B  #BLANK,D1          TO THE BUFFER.
01:00203AF2 6702            	  7786:          BEQ.S   ICCCC9
01:00203AF4 1AC1            	  7787:          MOVE.B  D1,(A5)+
01:00203AF6 4E75            	  7788: ICCCC9   RTS
                            	  7789: 
01:00203AF8 2054            	  7790: BRTBL    DC.B    ' T'      ; 'T '  BRA ACCEPTED
01:00203AFA 2046            	  7791:          DC.B    ' F'      ; 'F '
01:00203AFC 4948            	  7792:          DC.B    'IH'      ; 'HI'
01:00203AFE 534C            	  7793:          DC.B    'SL'      ; 'LS'
01:00203B00 4343            	  7794:          DC.B    'CC'      ; 'CC'
01:00203B02 5343            	  7795:          DC.B    'SC'      ; 'CS'
01:00203B04 454E            	  7796:          DC.B    'EN'      ; 'NE'
01:00203B06 5145            	  7797:          DC.B    'QE'      ; 'EQ'
01:00203B08 4356            	  7798:          DC.B    'CV'      ; 'VC'
01:00203B0A 5356            	  7799:          DC.B    'SV'      ; 'VS'
01:00203B0C 4C50            	  7800:          DC.B    'LP'      ; 'PL'
01:00203B0E 494D            	  7801:          DC.B    'IM'      ; 'MI'
01:00203B10 4547            	  7802:          DC.B    'EG'      ; 'GE'
01:00203B12 544C            	  7803:          DC.B    'TL'      ; 'LT'
01:00203B14 5447            	  7804:          DC.B    'TG'      ; 'GT'
01:00203B16 454C            	  7805:          DC.B    'EL'      ; 'LE'
                            	  7806: 
                            	  7807: *   BIT  5432109876543210
                            	  7808: *        ....RRRMMM......    DESTINATION REGISTER MODE
                            	  7809: *        ..........MMMRRR    SOURCE MODE REGISTER
                            	  7810: *
                            	  7811: * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
                            	  7812: *
                            	  7813: IMOVEA1  DS      0
01:00203B18 3E3C0FFF        	  7814:          MOVE.W  #$FFF,D7       ALL MODES
01:00203B1C 610000E0        	  7815:          BSR     EEA
                            	  7816: 
01:00203B20 1CC5            	  7817:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7818: 
01:00203B22 3814            	  7819:          MOVE.W  (A4),D4        ....RRRMMM......
01:00203B24 E24C            	  7820:          LSR.W   #1,D4          .....RRRMMM.....
01:00203B26 EA0C            	  7821:          LSR.B   #5,D4          .....RRR.....MMM
01:00203B28 E05C            	  7822:          ROR.W   #8,D4          .....MMM.....RRR
01:00203B2A EB0C            	  7823:          LSL.B   #5,D4          .....MMMRRR.....
01:00203B2C EA4C            	  7824:          LSR.W   #5,D4          ..........MMMRRR
                            	  7825: 
                            	  7826: * IF .BYTE DESTINATION A@ NOT ALLOWED
01:00203B2E 3E3C01FF        	  7827:          MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
01:00203B32 1014            	  7828:          MOVE.B  (A4),D0
01:00203B34 0C000001        	  7829:          CMPI.B  #$01,D0
01:00203B38 6604            	  7830:          BNE.S   IMOVE19        NOT BYTE SIZE
                            	  7831: 
01:00203B3A 3E3C01FD        	  7832:          MOVE.W  #$1FD,D7       DATA ALTERABLE
                            	  7833: IMOVE19
                            	  7834: 
01:00203B3E 610000BE        	  7835:          BSR     EEA
01:00203B42 602C            	  7836:          BRA.S   CS19           COMMON
                            	  7837: 
                            	  7838: *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
                            	  7839: IQUICKA  DS      0              ADDQ  SUBQ
01:00203B44 612E            	  7840:          BSR.S   FORMSIZE
                            	  7841: 
01:00203B46 1CFC0023        	  7842:          MOVE.B  #'#',(A6)+
01:00203B4A EF5C            	  7843:          ROL.W   #7,D4
01:00203B4C 02040007        	  7844:          ANDI.B  #7,D4
01:00203B50 6604            	  7845:          BNE.S   IQUICK21
01:00203B52 00040008        	  7846:          ORI.B   #8,D4          MAKE ZERO INTO EIGHT
01:00203B56 00040030        	  7847: IQUICK21 ORI.B   #'0',D4        MAKE ASCII
01:00203B5A 1CC4            	  7848:          MOVE.B  D4,(A6)+
                            	  7849: 
01:00203B5C 1CC5            	  7850:          MOVE.B  D5,(A6)+       COMMA SEPARATOR
                            	  7851: 
01:00203B5E 3814            	  7852:          MOVE.W  (A4),D4
                            	  7853: 
01:00203B60 3014            	  7854:          MOVE.W  (A4),D0
01:00203B62 024000C0        	  7855:          ANDI.W  #$00C0,D0
01:00203B66 6704            	  7856:          BEQ.S   IQUICK31       DATA ALTERABLE
01:00203B68 3E3C01FF        	  7857:          MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
01:00203B6C 61000090        	  7858: IQUICK31 BSR     EEA
01:00203B70 60000378        	  7859: CS19     BRA     COMMON
                            	  7860: 
                            	  7861: *  BIT   5432109876543210
                            	  7862: *        ........00......       BYTE
                            	  7863: *        ........01......       WORD
                            	  7864: *        ........10......       LONG
                            	  7865: *        ........11......       ERROR
                            	  7866: *
                            	  7867: FORMSIZE DS      0
01:00203B74 3414            	  7868:          MOVE.W  (A4),D2
01:00203B76 1AFC002E        	  7869:          MOVE.B  #'.',(A5)+     STORE PERIOD
01:00203B7A EC4A            	  7870:          LSR.W   #6,D2
01:00203B7C 02420003        	  7871:          ANDI.W  #$03,D2
01:00203B80 6606            	  7872:          BNE.S   FORM91
01:00203B82 1AFC0042        	  7873:          MOVE.B  #'B',(A5)+     STORE "B"
01:00203B86 6016            	  7874:          BRA.S   FORM95
                            	  7875: 
01:00203B88 103C0057        	  7876: FORM91   MOVE.B  #'W',D0
01:00203B8C 0C020001        	  7877:          CMPI.B  #1,D2
01:00203B90 670A            	  7878:          BEQ.S   FORM93
01:00203B92 103C004C        	  7879:          MOVE.B  #'L',D0
01:00203B96 0C020002        	  7880:          CMPI.B  #2,D2
01:00203B9A 665E            	  7881:          BNE.S   FE10           FERROR
01:00203B9C 1AC0            	  7882: FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
01:00203B9E 4E75            	  7883: FORM95   RTS
                            	  7884: 
01:00203BA0 6100FC46        	  7885: EA000    BSR     FORMREGD
01:00203BA4 08070000        	  7886:          BTST    #0,D7
01:00203BA8 6750            	  7887:          BEQ.S   FE10           FERROR
01:00203BAA 4E75            	  7888:          RTS
                            	  7889: 
01:00203BAC 6100FC2A        	  7890: EA001    BSR     FORMREGA
01:00203BB0 08070001        	  7891:          BTST    #1,D7
01:00203BB4 6744            	  7892:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BB6 4E75            	  7893:          RTS
                            	  7894: 
01:00203BB8 1CFC0028        	  7895: EA010    MOVE.B  #'(',(A6)+
01:00203BBC 6100FC1A        	  7896:          BSR     FORMREGA
01:00203BC0 1CFC0029        	  7897:          MOVE.B  #')',(A6)+
01:00203BC4 08070002        	  7898:          BTST    #2,D7
01:00203BC8 6730            	  7899:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BCA 4E75            	  7900:          RTS
                            	  7901: 
01:00203BCC 1CFC0028        	  7902: EA011    MOVE.B  #'(',(A6)+
01:00203BD0 6100FC06        	  7903:          BSR     FORMREGA
01:00203BD4 1CFC0029        	  7904:          MOVE.B  #')',(A6)+
01:00203BD8 1CFC002B        	  7905:          MOVE.B  #'+',(A6)+
01:00203BDC 08070003        	  7906:          BTST    #3,D7
01:00203BE0 6718            	  7907:          BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
01:00203BE2 4E75            	  7908: EA011RTS RTS
                            	  7909: 
01:00203BE4 1CFC002D        	  7910: EA100    MOVE.B  #'-',(A6)+
01:00203BE8 1CFC0028        	  7911:          MOVE.B  #'(',(A6)+
01:00203BEC 6100FBEA        	  7912:          BSR     FORMREGA
01:00203BF0 1CFC0029        	  7913:          MOVE.B  #')',(A6)+
01:00203BF4 08070004        	  7914:          BTST    #4,D7
01:00203BF8 66E8            	  7915:          BNE     EA011RTS
01:00203BFA 60000316        	  7916: FE10     BRA     FERROR         THIS MODE NOT ALLOWED
                            	  7917: 
                            	  7918: *  ENTER       A4 = POINTER TO FIRST WORD
                            	  7919: *              D3 = OFFSET TO EXTENSION
                            	  7920: *              D4 = VALUE TO PROCESS
                            	  7921: *              D7 = MODES ALLOWED MASK
                            	  7922: *
                            	  7923: EEA      DS      0
01:00203BFE 2004            	  7924:          MOVE.L  D4,D0
01:00203C00 E648            	  7925:          LSR.W   #3,D0
01:00203C02 02400007        	  7926:          ANDI.W  #$7,D0
01:00203C06 6798            	  7927:          BEQ     EA000
                            	  7928: 
01:00203C08 0C000001        	  7929:          CMPI.B  #1,D0
01:00203C0C 679E            	  7930:          BEQ     EA001
                            	  7931: 
01:00203C0E 0C000002        	  7932:          CMPI.B  #2,D0
01:00203C12 67A4            	  7933:          BEQ     EA010
                            	  7934: 
01:00203C14 0C000003        	  7935:          CMPI.B  #3,D0
01:00203C18 67B2            	  7936:          BEQ     EA011
                            	  7937: 
01:00203C1A 0C000004        	  7938:          CMPI.B  #4,D0
01:00203C1E 67C4            	  7939:          BEQ     EA100
                            	  7940: 
01:00203C20 0C000005        	  7941:          CMPI.B  #5,D0
01:00203C24 6760            	  7942:          BEQ.S   EA101
                            	  7943: 
01:00203C26 0C000007        	  7944:          CMPI.B  #7,D0
01:00203C2A 6770            	  7945:          BEQ.S   EA111
                            	  7946: 
                            	  7947: *    EXTENSION WORD
                            	  7948: *   BIT  5432109876543210
                            	  7949: *        0...............    DATA REGISTER
                            	  7950: *        1...............    ADDRESS REGISTER
                            	  7951: *        .RRR............    REGISTER
                            	  7952: *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
                            	  7953: *        ....1...........    LONG VALUE IN INDEX REGISTER
                            	  7954: *        .....000........
                            	  7955: *        ........DDDDDDDD    DISPLACEMENT INTEGER
                            	  7956: *
                            	  7957: * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
                            	  7958: 
01:00203C2C 08070006        	  7959:          BTST    #6,D7
01:00203C30 67C8            	  7960:          BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
                            	  7961: 
01:00203C32 32343000        	  7962:          MOVE.W  (A4,D3),D1
01:00203C36 02410700        	  7963:          ANDI.W  #$0700,D1
01:00203C3A 66BE            	  7964:          BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
                            	  7965: 
01:00203C3C 30343000        	  7966:          MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
01:00203C40 4880            	  7967:          EXT.W   D0
01:00203C42 48C0            	  7968:          EXT.L   D0
01:00203C44 6100D706        	  7969:          BSR     HEX2DEC        DECIMAL
01:00203C48 1CFC0028        	  7970:          MOVE.B  #'(',(A6)+     (
                            	  7971: 
01:00203C4C 6100FB8A        	  7972:          BSR     FORMREGA       XX(A@
                            	  7973: 
01:00203C50 1CFC002C        	  7974:          MOVE.B  #',',(A6)+     XX(A@,
                            	  7975: 
01:00203C54 18343000        	  7976:          MOVE.B  (A4,D3),D4
01:00203C58 E804            	  7977:          ASR.B   #4,D4
01:00203C5A 6A06            	  7978:          BPL.S   EA1105
01:00203C5C 6100FB7A        	  7979:          BSR     FORMREGA
01:00203C60 6004            	  7980:          BRA.S   EA1107
                            	  7981: 
01:00203C62 6100FB84        	  7982: EA1105   BSR     FORMREGD
01:00203C66 1CFC002E        	  7983: EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
                            	  7984: 
01:00203C6A 38343000        	  7985:          MOVE.W  (A4,D3),D4     D4 = R@
01:00203C6E 103C0057        	  7986:          MOVE.B  #'W',D0        ..........W
01:00203C72 0804000B        	  7987:          BTST    #11,D4
01:00203C76 6704            	  7988:          BEQ.S   EA1109
01:00203C78 103C004C        	  7989:          MOVE.B  #'L',D0        ..........L
01:00203C7C 1CC0            	  7990: EA1109   MOVE.B  D0,(A6)+
01:00203C7E 1CFC0029        	  7991:          MOVE.B  #')',(A6)+     ...........)
01:00203C82 5483            	  7992:          ADDQ.L  #2,D3
01:00203C84 4E75            	  7993:          RTS
                            	  7994: 
                            	  7995: * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
                            	  7996: *
01:00203C86 08070005        	  7997: EA101    BTST    #5,D7          101000;   DIS(A@)
01:00203C8A 6756            	  7998:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  7999: 
01:00203C8C 30343000        	  8000:          MOVE.W  (A4,D3),D0
01:00203C90 48C0            	  8001:          EXT.L   D0
01:00203C92 6100D6B8        	  8002:          BSR     HEX2DEC        DECIMAL
01:00203C96 5483            	  8003:          ADDQ.L  #2,D3          SIZE
01:00203C98 6000FF1E        	  8004:          BRA     EA010
                            	  8005: 
                            	  8006: *  111000        ABSOLUTE SHORT
                            	  8007: *  111001        ABSOLUTE LONG
                            	  8008: *  111010        PROGRAM COUNTER WITH DISPLACEMENT
                            	  8009: *  111011        PROGRAM COUNTER WITH INDEX
                            	  8010: *  111100        IMMEDIATE OR STATUS REG
                            	  8011: *
                            	  8012: EA111
01:00203C9C 02440007        	  8013:          ANDI.W  #7,D4
01:00203CA0 6618            	  8014:          BNE.S   EA1112
                            	  8015: 
01:00203CA2 08070007        	  8016:          BTST    #7,D7
01:00203CA6 673A            	  8017:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8018: 
01:00203CA8 30343000        	  8019:          MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
01:00203CAC 48C0            	  8020:          EXT.L   D0
01:00203CAE 1CFC0024        	  8021:          MOVE.B  #'$',(A6)+
01:00203CB2 6100E0D8        	  8022:          BSR     PNT8HX         SIGN EXTENDED VALUE
01:00203CB6 5483            	  8023:          ADDQ.L  #2,D3          SIZE + 2
01:00203CB8 4E75            	  8024:          RTS
                            	  8025: 
01:00203CBA 0C040001        	  8026: EA1112   CMPI.B  #1,D4
01:00203CBE 6616            	  8027:          BNE.S   EA1113
                            	  8028: 
01:00203CC0 08070008        	  8029:          BTST    #8,D7
01:00203CC4 671C            	  8030:          BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8031: 
01:00203CC6 1CFC0024        	  8032:          MOVE.B  #'$',(A6)+     HEX
01:00203CCA 20343000        	  8033:          MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
01:00203CCE 6100E0BC        	  8034:          BSR     PNT8HX
                            	  8035: *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
                            	  8036: *-       MOVE.B  #'L',(A6)+     IE   .L
01:00203CD2 5883            	  8037:          ADDQ.L  #4,D3
01:00203CD4 4E75            	  8038:          RTS
                            	  8039: 
01:00203CD6 0C040002        	  8040: EA1113   CMPI.B  #2,D4
01:00203CDA 662C            	  8041:          BNE.S   EA1114
                            	  8042: 
01:00203CDC 08070009        	  8043:          BTST    #9,D7
01:00203CE0 6604            	  8044:          BNE.S   EA1113A
01:00203CE2 6000022E        	  8045: FE11     BRA     FERROR         THIS MODE NOT ALLOWED
                            	  8046: EA1113A
                            	  8047: 
01:00203CE6 30343000        	  8048:          MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
01:00203CEA 48C0            	  8049:          EXT.L   D0
01:00203CEC D0A9FFFC        	  8050:          ADD.L   HISPC(A1),D0
01:00203CF0 5480            	  8051:          ADDQ.L  #2,D0
01:00203CF2 1CFC0024        	  8052:          MOVE.B  #'$',(A6)+     HEX "$"
01:00203CF6 6100E094        	  8053:          BSR     PNT8HX         DESTINATION
01:00203CFA 203C29435028    	  8054:          MOVE.L  #')CP(',D0     (PC)
01:00203D00 6100FC3E        	  8055:          BSR     SCHR           STORE WORD
01:00203D04 5483            	  8056:          ADDQ.L  #2,D3          SIZE
01:00203D06 4E75            	  8057:          RTS
                            	  8058: 
01:00203D08 0C040003        	  8059: EA1114   CMPI.B  #3,D4
01:00203D0C 6664            	  8060:          BNE.S   EA1115
                            	  8061: 
                            	  8062: * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
                            	  8063: *
                            	  8064: *        5432109876543210       SECOND WORD
                            	  8065: *        0...............       DATA REGISTER
                            	  8066: *        1...............       ADDRESS REGISTER
                            	  8067: *        .XXX............       REGISTER
                            	  8068: *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
                            	  8069: *                               ..IN INDEX REGISTER
                            	  8070: *        ....1...........       LONG VALUE IN INDEX REGISTER
                            	  8071: *        .....000........
                            	  8072: *        ........XXXXXXXX       DISPLACEMENT INTEGER
                            	  8073: *
01:00203D0E 0807000A        	  8074:          BTST    #10,D7
01:00203D12 67CE            	  8075:          BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
                            	  8076: 
01:00203D14 32343000        	  8077:          MOVE.W  (A4,D3),D1
01:00203D18 02410700        	  8078:          ANDI.W  #$0700,D1
01:00203D1C 66C4            	  8079:          BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
                            	  8080: 
01:00203D1E 10343001        	  8081:          MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
01:00203D22 4880            	  8082:          EXT.W   D0
01:00203D24 48C0            	  8083:          EXT.L   D0
01:00203D26 D0A9FFFC        	  8084:          ADD.L   HISPC(A1),D0
01:00203D2A 5480            	  8085:          ADDQ.L  #2,D0
01:00203D2C 1CFC0024        	  8086:          MOVE.B  #'$',(A6)+     HEX "$"
01:00203D30 6100E05A        	  8087:          BSR     PNT8HX         DESTINATION
                            	  8088: 
01:00203D34 203C2C435028    	  8089:          MOVE.L  #',CP(',D0
01:00203D3A 6100FC04        	  8090:          BSR     SCHR           DES(PC,
                            	  8091: 
01:00203D3E 38343000        	  8092:          MOVE.W  (A4,D3),D4
01:00203D42 E95C            	  8093:          ROL.W   #4,D4
01:00203D44 08040003        	  8094:          BTST    #3,D4
01:00203D48 6706            	  8095:          BEQ.S   EAF25
01:00203D4A 6100FA8C        	  8096:          BSR     FORMREGA
01:00203D4E 6004            	  8097:          BRA.S   EAF27
01:00203D50 6100FA96        	  8098: EAF25    BSR     FORMREGD       DES(PC,R@
                            	  8099: EAF27
                            	  8100: 
01:00203D54 1CFC002E        	  8101:          MOVE.B  #'.',(A6)+     DES(PC,R@.
                            	  8102: 
01:00203D58 38343000        	  8103:          MOVE.W  (A4,D3),D4
01:00203D5C 303C4C57        	  8104:          MOVE.W  #'LW',D0
01:00203D60 0804000B        	  8105:          BTST    #11,D4
01:00203D64 6702            	  8106:          BEQ.S   EAF35
01:00203D66 E048            	  8107:          LSR.W   #8,D0
01:00203D68 1CC0            	  8108: EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
                            	  8109: 
01:00203D6A 1CFC0029        	  8110:          MOVE.B  #')',(A6)+     DES(PC,R@.X)
01:00203D6E 5483            	  8111:          ADDQ.L  #2,D3
01:00203D70 4E75            	  8112:          RTS
                            	  8113: 
                            	  8114: *   BIT  5432109876543210
                            	  8115: *        ..........111100       FIRST WORD;  #<IMMEDIATE>
                            	  8116: *
01:00203D72 0C040004        	  8117: EA1115   CMPI.B  #4,D4
01:00203D76 6600FF6A        	  8118:          BNE     FE11           FERROR
                            	  8119: 
01:00203D7A 0807000B        	  8120:          BTST    #11,D7
01:00203D7E 6700FF62        	  8121:          BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
                            	  8122: 
01:00203D82 1CFC0023        	  8123:          MOVE.B  #'#',(A6)+     IMMEDIATE
                            	  8124: 
01:00203D86 122DFFFF        	  8125:          MOVE.B  -1(A5),D1
01:00203D8A 0C01004C        	  8126:          CMPI.B  #'L',D1
01:00203D8E 6724            	  8127:          BEQ.S   EA11155        LONG
                            	  8128: 
01:00203D90 30343000        	  8129:          MOVE.W  (A4,D3),D0
                            	  8130: 
01:00203D94 0C010042        	  8131:          CMPI.B  #'B',D1
01:00203D98 6610            	  8132:          BNE.S   EA11153        .WORD
                            	  8133: 
                            	  8134: * BYTE SIZE; DATA ALLOWED
                            	  8135: *  0000 0000 XXXX XXXX
                            	  8136: *  1111 1111 1XXX XXXX
01:00203D9A 2200            	  8137:          MOVE.L  D0,D1
01:00203D9C E049            	  8138:          LSR.W   #8,D1
01:00203D9E 670A            	  8139:          BEQ.S   EA11153
01:00203DA0 2200            	  8140:          MOVE.L  D0,D1
01:00203DA2 EE41            	  8141:          ASR.W   #7,D1
01:00203DA4 5241            	  8142:          ADDQ.W  #1,D1
01:00203DA6 6600FF3A        	  8143:          BNE     FE11           FERROR
                            	  8144: 
01:00203DAA 48C0            	  8145: EA11153  EXT.L   D0
01:00203DAC 6100D59E        	  8146:          BSR     HEX2DEC
01:00203DB0 5483            	  8147:          ADDQ.L  #2,D3
01:00203DB2 4E75            	  8148:          RTS
                            	  8149: 
01:00203DB4 20343000        	  8150: EA11155  MOVE.L  (A4,D3),D0
01:00203DB8 6100D592        	  8151:          BSR     HEX2DEC
01:00203DBC 5883            	  8152:          ADDQ.L  #4,D3          SIZE
01:00203DBE 4E75            	  8153:          RTS
                            	  8154: 
01:00203DC0 1AFC002E        	  8155: MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
01:00203DC4 303C4C57        	  8156:          MOVE.W  #'LW',D0
01:00203DC8 08040006        	  8157:          BTST    #6,D4
01:00203DCC 6702            	  8158:          BEQ.S   MOVEMS2
01:00203DCE E048            	  8159:          LSR.W   #8,D0
01:00203DD0 1AC0            	  8160: MOVEMS2  MOVE.B  D0,(A5)+       SIZE
01:00203DD2 4E75            	  8161:          RTS
                            	  8162: 
                            	  8163: * MOVEM - REGISTER EXPANSION
                            	  8164: *
                            	  8165: MOVEMR   DS      0
01:00203DD4 342C0002        	  8166:          MOVE.W  2(A4),D2       D2 = SECOND WORD
01:00203DD8 7020            	  8167:          MOVEQ   #$20,D0        D0 = SPACE
01:00203DDA 7E2F            	  8168:          MOVEQ   #$2F,D7        D7 = /
01:00203DDC 538E            	  8169:          SUBQ.L  #1,A6          ADJUST STORE POINTER
01:00203DDE 7A30            	  8170:          MOVEQ   #$30,D5        D5 = REGISTER #
01:00203DE0 383C4144        	  8171:          MOVE.W  #'AD',D4       D4 = REG CLASS
                            	  8172: 
01:00203DE4 0302            	  8173: MOVEMR11 BTST    D1,D2
01:00203DE6 6730            	  8174:          BEQ.S   MOVEMR77       BIT RESET
                            	  8175: 
01:00203DE8 B016            	  8176:          CMP.B   (A6),D0        BIT SET
01:00203DEA 6612            	  8177:          BNE.S   MOVEMR44       NOT SPACE
                            	  8178: 
01:00203DEC 1D440001        	  8179: MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
01:00203DF0 1D450002        	  8180:          MOVE.B  D5,2(A6)       REG #
01:00203DF4 1D7C002D0003    	  8181:          MOVE.B  #'-',3(A6)     -
01:00203DFA 568E            	  8182:          ADDQ.L  #3,A6
01:00203DFC 602E            	  8183:          BRA.S   MOVEMR88
                            	  8184: 
01:00203DFE 0C16002C        	  8185: MOVEMR44 CMPI.B  #',',(A6)
01:00203E02 67E8            	  8186:          BEQ     MOVEMR33       COMMA SEPARATOR
                            	  8187: 
01:00203E04 BE16            	  8188:          CMP.B   (A6),D7        / SEPARATOR
01:00203E06 67E4            	  8189:          BEQ     MOVEMR33
                            	  8190: 
01:00203E08 1D440001        	  8191:          MOVE.B  D4,1(A6)       REG TYPE
01:00203E0C 1D450002        	  8192:          MOVE.B  D5,2(A6)       REG #
01:00203E10 1D7C002D0003    	  8193:          MOVE.B  #'-',3(A6)     - SEPARATOR
01:00203E16 6014            	  8194:          BRA.S   MOVEMR88
                            	  8195: 
01:00203E18 0C16002C        	  8196: MOVEMR77 CMPI.B  #',',(A6)
01:00203E1C 670E            	  8197:          BEQ.S   MOVEMR88       COMMA
                            	  8198: 
01:00203E1E B016            	  8199:          CMP.B   (A6),D0
01:00203E20 670A            	  8200:          BEQ.S   MOVEMR88       SPACE
01:00203E22 B02E0001        	  8201:          CMP.B   1(A6),D0
01:00203E26 6702            	  8202:          BEQ.S   MOVEMR79       SPACE
01:00203E28 568E            	  8203:          ADDQ.L  #3,A6
01:00203E2A 1C87            	  8204: MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
                            	  8205: 
01:00203E2C 5285            	  8206: MOVEMR88 ADDQ.L  #1,D5
01:00203E2E D286            	  8207:          ADD.L   D6,D1          D1 = BIT POSITION
01:00203E30 0C050038        	  8208:          CMPI.B  #'8',D5
01:00203E34 66AE            	  8209:          BNE     MOVEMR11
                            	  8210: 
01:00203E36 B016            	  8211:          CMP.B   (A6),D0        SPACE
01:00203E38 670A            	  8212:          BEQ.S   MOVEMR94
                            	  8213: 
01:00203E3A B02E0001        	  8214:          CMP.B   1(A6),D0       SPACE
01:00203E3E 6704            	  8215:          BEQ.S   MOVEMR94
01:00203E40 568E            	  8216:          ADDQ.L  #3,A6
01:00203E42 1C87            	  8217:          MOVE.B  D7,(A6)        /   SEPARATOR
                            	  8218: 
01:00203E44 1A3C0030        	  8219: MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
01:00203E48 E04C            	  8220:          LSR.W   #8,D4          CHANGE REG TYPE
01:00203E4A 6698            	  8221:          BNE     MOVEMR11       MORE
                            	  8222: 
01:00203E4C 1C80            	  8223:          MOVE.B  D0,(A6)        SPACE
01:00203E4E 4E75            	  8224:          RTS
                            	  8225: 
                            	  8226: DCODE68K DS      0
01:00203E50 4E51FFF0        	  8227:          LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
01:00203E54 48E91007FFF0    	  8228:          MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
01:00203E5A 49E9FFF0        	  8229:          LEA     DDATA(A1),A4        POINTS TO THE CODE.
                            	  8230: 
01:00203E5E 264D            	  8231:          MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
01:00203E60 7050            	  8232:          MOVEQ   #BUFSIZE,D0
01:00203E62 2C4B            	  8233:          MOVE.L  A3,A6
01:00203E64 1CFC0020        	  8234: DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
01:00203E68 5380            	  8235:          SUBQ.L  #1,D0
01:00203E6A 66F8            	  8236:          BNE     DEC311
                            	  8237: 
01:00203E6C 2C4B            	  8238:          MOVE.L  A3,A6          FORMAT ADDRESS
01:00203E6E 2029FFFC        	  8239:          MOVE.L  HISPC(A1),D0
01:00203E72 6100DF4A        	  8240:          BSR     FRELADDR
                            	  8241: 
                            	  8242: * CHECK FOR KNOWN ILLEGAL CODES
01:00203E76 3014            	  8243:          MOVE.W  (A4),D0
                            	  8244: 
01:00203E78 4BFA00C2        	  8245:          LEA     KI(PC),A5
01:00203E7C 2C4D            	  8246:          MOVE.L  A5,A6
01:00203E7E 548E            	  8247:          ADD.L   #KIEND-KI,A6
01:00203E80 B05D            	  8248: DEC404   CMP.W   (A5)+,D0
01:00203E82 671A            	  8249:          BEQ.S   FE12           FERROR;  ILLEGAL CODE
01:00203E84 BBCE            	  8250:          CMP.L   A6,A5
01:00203E86 66F8            	  8251:          BNE     DEC404
                            	  8252: 
                            	  8253: * LOOK FOR MATCH OF OP-CODE
                            	  8254: *
01:00203E88 4BFA00B4        	  8255:          LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
01:00203E8C 4DFA02BA        	  8256:          LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
01:00203E90 3014            	  8257: DEC411   MOVE.W  (A4),D0        FIRST WORD
01:00203E92 C05D            	  8258:          AND.W   (A5)+,D0       MASK
01:00203E94 B05D            	  8259:          CMP.W   (A5)+,D0
01:00203E96 6708            	  8260:          BEQ.S   DEC425         FOUND MATCH
01:00203E98 548D            	  8261:          ADDQ.L  #2,A5          UPDATE POINTER
01:00203E9A BBCE            	  8262:          CMP.L   A6,A5
01:00203E9C 66F2            	  8263:          BNE     DEC411         MORE TABLE
01:00203E9E 6072            	  8264: FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
                            	  8265: 
01:00203EA0 7C00            	  8266: DEC425   CLR.L   D6
01:00203EA2 1C1D            	  8267:          MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
01:00203EA4 E58E            	  8268:          LSL.L   #2,D6
                            	  8269: 
01:00203EA6 7E00            	  8270:          CLR.L   D7
01:00203EA8 1E1D            	  8271:          MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
                            	  8272: 
                            	  8273: * MOVE OP-CODE TO BUFFER
                            	  8274: *
01:00203EAA 41FA029C        	  8275:          LEA     OPCTBL(PC),A0
01:00203EAE 4A47            	  8276: DEC510   TST     D7
01:00203EB0 6708            	  8277:          BEQ.S   DEC530         AT INDEX
01:00203EB2 4A18            	  8278: DEC515   TST.B   (A0)+
01:00203EB4 6AFC            	  8279:          BPL     DEC515         MOVE THROUGH FIELD
01:00203EB6 5387            	  8280:          SUBQ.L  #1,D7
01:00203EB8 60F4            	  8281:          BRA     DEC510
                            	  8282: 
01:00203EBA 701F            	  8283: DEC530   MOVEQ   #FOC,D0
01:00203EBC 4BF30000        	  8284:          LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
01:00203EC0 1018            	  8285: DEC535   MOVE.B  (A0)+,D0
01:00203EC2 08800007        	  8286:          BCLR    #7,D0
01:00203EC6 6604            	  8287:          BNE.S   DEC537         END OF MOVE
01:00203EC8 1AC0            	  8288:          MOVE.B  D0,(A5)+
01:00203ECA 60F4            	  8289:          BRA     DEC535
01:00203ECC 1AC0            	  8290: DEC537   MOVE.B  D0,(A5)+
                            	  8291: 
                            	  8292: * CALCULATE GOTO AND GO
                            	  8293: *
01:00203ECE 7602            	  8294:          MOVEQ   #2,D3          D3= SIZE
01:00203ED0 41FAF7CE        	  8295:          LEA     X(PC),A0
01:00203ED4 D1C6            	  8296:          ADD.L   D6,A0
                            	  8297: 
01:00203ED6 7027            	  8298:          MOVEQ   #FOP,D0
01:00203ED8 4DF30000        	  8299:          LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
                            	  8300: 
01:00203EDC 3814            	  8301:          MOVE.W  (A4),D4        D4 = FIRST WORD
                            	  8302: 
01:00203EDE 1A3C002C        	  8303:          MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
                            	  8304: 
01:00203EE2 3E3C01FD        	  8305:          MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
                            	  8306: 
01:00203EE6 4ED0            	  8307:          JMP     (A0)
                            	  8308: *
                            	  8309: *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
                            	  8310: *  A5 = POINTER STORE OP-CODE
                            	  8311: *  A6 = POINTER STORE OPERAND
                            	  8312: *  D3 = SIZE = 2 BYTES
                            	  8313: *  D4 = FIRST WORD
                            	  8314: *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
                            	  8315: 
01:00203EE8 5483            	  8316: COMMON4  ADDQ.L  #2,D3          SIZE = 4
                            	  8317: 
01:00203EEA 2C03            	  8318: COMMON   MOVE.L  D3,D6          D6 = SIZE
01:00203EEC 1CFC0020        	  8319:          MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
                            	  8320: 
01:00203EF0 2A4E            	  8321:          MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
01:00203EF2 700A            	  8322:          MOVEQ   #FDATA,D0
01:00203EF4 4DF30000        	  8323:          LEA.L   (A3,D0),A6
                            	  8324: 
01:00203EF8 301C            	  8325: COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
01:00203EFA 54A9FFFC        	  8326:          ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
01:00203EFE 6100DE9A        	  8327:          BSR     PNT4HX         FORMAT DATA. (A6)+
01:00203F02 5503            	  8328:          SUBQ.B  #2,D3
01:00203F04 66F2            	  8329:          BNE     COMMON35
                            	  8330: 
01:00203F06 2C4D            	  8331:          MOVE.L  A5,A6          A6 = RESTORE END POINTER
                            	  8332: 
01:00203F08 2A4B            	  8333:          MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
                            	  8334: 
01:00203F0A 2869FFFC        	  8335:          MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
01:00203F0E 4E59            	  8336:          UNLK    A1               TO A4 AND UNDO FRAME.
                            	  8337: 
01:00203F10 4E75            	  8338:          RTS
                            	  8339: 
                            	  8340: 
                            	  8341: FERROR   DS      0
                            	  8342: * ILLEGAL INSTRUCTION
                            	  8343: *
01:00203F12 701F            	  8344:          MOVEQ   #FOC,D0
01:00203F14 4DF30000        	  8345:          LEA.L   (A3,D0),A6
01:00203F18 4BFA0018        	  8346:          LEA     MSG111(PC),A5
01:00203F1C 101D            	  8347: FERROR35 MOVE.B  (A5)+,D0
01:00203F1E 0C000004        	  8348:          CMPI.B  #EOT,D0
01:00203F22 6704            	  8349:          BEQ.S   FERROR39
01:00203F24 1CC0            	  8350:          MOVE.B  D0,(A6)+
01:00203F26 60F4            	  8351:          BRA     FERROR35
                            	  8352: FERROR39 DS      0
                            	  8353: 
01:00203F28 3014            	  8354:          MOVE.W  (A4),D0
01:00203F2A 6100DE6E        	  8355:          BSR     PNT4HX
                            	  8356: 
01:00203F2E 7602            	  8357:          MOVEQ   #2,D3          SIZE
                            	  8358: 
01:00203F30 60B8            	  8359:          BRA     COMMON
                            	  8360: 
01:00203F32 44432E5720202020	  8361: MSG111   DC.B    'DC.W    $',EOT
01:00203F3A 24
01:00203F3B 04
                            	  8362: 
                            	  8363: 
                            	  8364: 
01:00203F3C 4AFB            	  8365: KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
                            	  8366: KIEND    DS      0
                            	  8367: 
                            	  8368: 
                            	  8369: *  \1   MASK
                            	  8370: *  \2   OP-CODE PATTERN
                            	  8371: *  \3   GOTO OFFSET
                            	  8372: *  \4   INDEX TO OP-CODE
                            	  8373: C68      MACRO
                            	  8374:          DC.W    $\1
                            	  8375:          DC.W    $\2
                            	  8376:          DC.B    (\3-X)>>2
                            	  8377:          DC.B    \4
                            	  8378:          ENDM
                            	  8379: 
                            	  8380: TBL      DS      0
                            	  8381:          C68     FEC0,E6C0,ISHIFT,56           RO
01:00203F3E FEC0            	     1M          DC.W    $FEC0
01:00203F40 E6C0            	     2M          DC.W    $E6C0
01:00203F42 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F43 38              	     4M          DC.B    56
                            	  8382:          C68     FEC0,E4C0,ISHIFT,57           ROX
01:00203F44 FEC0            	     1M          DC.W    $FEC0
01:00203F46 E4C0            	     2M          DC.W    $E4C0
01:00203F48 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F49 39              	     4M          DC.B    57
                            	  8383:          C68     FEC0,E2C0,ISHIFT,55           LS
01:00203F4A FEC0            	     1M          DC.W    $FEC0
01:00203F4C E2C0            	     2M          DC.W    $E2C0
01:00203F4E F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F4F 37              	     4M          DC.B    55
                            	  8384:          C68     FEC0,E0C0,ISHIFT,54           AS
01:00203F50 FEC0            	     1M          DC.W    $FEC0
01:00203F52 E0C0            	     2M          DC.W    $E0C0
01:00203F54 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F55 36              	     4M          DC.B    54
                            	  8385:          C68     F018,E018,ISHIFT,56           RO
01:00203F56 F018            	     1M          DC.W    $F018
01:00203F58 E018            	     2M          DC.W    $E018
01:00203F5A F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F5B 38              	     4M          DC.B    56
                            	  8386:          C68     F018,E010,ISHIFT,57           ROX
01:00203F5C F018            	     1M          DC.W    $F018
01:00203F5E E010            	     2M          DC.W    $E010
01:00203F60 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F61 39              	     4M          DC.B    57
                            	  8387:          C68     F018,E008,ISHIFT,55           LS
01:00203F62 F018            	     1M          DC.W    $F018
01:00203F64 E008            	     2M          DC.W    $E008
01:00203F66 F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F67 37              	     4M          DC.B    55
                            	  8388:          C68     F018,E000,ISHIFT,54           AS
01:00203F68 F018            	     1M          DC.W    $F018
01:00203F6A E000            	     2M          DC.W    $E000
01:00203F6C F7              	     3M          DC.B    (ISHIFT-X)>>2
01:00203F6D 36              	     4M          DC.B    54
                            	  8389:          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
01:00203F6E F0C0            	     1M          DC.W    $F0C0
01:00203F70 D0C0            	     2M          DC.W    $D0C0
01:00203F72 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203F73 04              	     4M          DC.B    4
                            	  8390:          C68     F130,D100,FORM12,53           ADDX
01:00203F74 F130            	     1M          DC.W    $F130
01:00203F76 D100            	     2M          DC.W    $D100
01:00203F78 88              	     3M          DC.B    (FORM12-X)>>2
01:00203F79 35              	     4M          DC.B    53
                            	  8391:          C68     F000,D000,FORM10EX,4            ADD
01:00203F7A F000            	     1M          DC.W    $F000
01:00203F7C D000            	     2M          DC.W    $D000
01:00203F7E 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203F7F 04              	     4M          DC.B    4
                            	  8392:          C68     F1F8,C188,FORM9,50            EXG
01:00203F80 F1F8            	     1M          DC.W    $F1F8
01:00203F82 C188            	     2M          DC.W    $C188
01:00203F84 5B              	     3M          DC.B    (FORM9-X)>>2
01:00203F85 32              	     4M          DC.B    50
                            	  8393:          C68     F1F8,C148,FORM8,50            EXG
01:00203F86 F1F8            	     1M          DC.W    $F1F8
01:00203F88 C148            	     2M          DC.W    $C148
01:00203F8A 57              	     3M          DC.B    (FORM8-X)>>2
01:00203F8B 32              	     4M          DC.B    50
                            	  8394:          C68     F1F8,C140,FORM7,50            EXG
01:00203F8C F1F8            	     1M          DC.W    $F1F8
01:00203F8E C140            	     2M          DC.W    $C140
01:00203F90 54              	     3M          DC.B    (FORM7-X)>>2
01:00203F91 32              	     4M          DC.B    50
                            	  8395:          C68     F1F0,C100,FORM12,49           ABCD
01:00203F92 F1F0            	     1M          DC.W    $F1F0
01:00203F94 C100            	     2M          DC.W    $C100
01:00203F96 88              	     3M          DC.B    (FORM12-X)>>2
01:00203F97 31              	     4M          DC.B    49
                            	  8396:          C68     F1C0,C1C0,FORM6D,48           MULS
01:00203F98 F1C0            	     1M          DC.W    $F1C0
01:00203F9A C1C0            	     2M          DC.W    $C1C0
01:00203F9C 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203F9D 30              	     4M          DC.B    48
                            	  8397:          C68     F1C0,C0C0,FORM6D,47           MULU
01:00203F9E F1C0            	     1M          DC.W    $F1C0
01:00203FA0 C0C0            	     2M          DC.W    $C0C0
01:00203FA2 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FA3 2F              	     4M          DC.B    47
                            	  8398:          C68     F000,C000,FORM10,2            AND
01:00203FA4 F000            	     1M          DC.W    $F000
01:00203FA6 C000            	     2M          DC.W    $C000
01:00203FA8 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FA9 02              	     4M          DC.B    2
                            	  8399:          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
01:00203FAA F0C0            	     1M          DC.W    $F0C0
01:00203FAC B0C0            	     2M          DC.W    $B0C0
01:00203FAE 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FAF 06              	     4M          DC.B    6
                            	  8400:          C68     F138,B108,FORM12A,46           CMPM
01:00203FB0 F138            	     1M          DC.W    $F138
01:00203FB2 B108            	     2M          DC.W    $B108
01:00203FB4 97              	     3M          DC.B    (FORM12A-X)>>2
01:00203FB5 2E              	     4M          DC.B    46
                            	  8401:          C68     F100,B100,FORM10,5            EOR
01:00203FB6 F100            	     1M          DC.W    $F100
01:00203FB8 B100            	     2M          DC.W    $B100
01:00203FBA 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FBB 05              	     4M          DC.B    5
                            	  8402:          C68     F000,B000,FORM10EX,6            CMP
01:00203FBC F000            	     1M          DC.W    $F000
01:00203FBE B000            	     2M          DC.W    $B000
01:00203FC0 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FC1 06              	     4M          DC.B    6
                            	  8403:          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
01:00203FC2 F0C0            	     1M          DC.W    $F0C0
01:00203FC4 90C0            	     2M          DC.W    $90C0
01:00203FC6 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FC7 2C              	     4M          DC.B    44
                            	  8404:          C68     F130,9100,FORM12,45           SUBX
01:00203FC8 F130            	     1M          DC.W    $F130
01:00203FCA 9100            	     2M          DC.W    $9100
01:00203FCC 88              	     3M          DC.B    (FORM12-X)>>2
01:00203FCD 2D              	     4M          DC.B    45
                            	  8405:          C68     F000,9000,FORM10EX,44           SUB
01:00203FCE F000            	     1M          DC.W    $F000
01:00203FD0 9000            	     2M          DC.W    $9000
01:00203FD2 5E              	     3M          DC.B    (FORM10EX-X)>>2
01:00203FD3 2C              	     4M          DC.B    44
                            	  8406:          C68     F1F0,8100,FORM12,43           SBCD
01:00203FD4 F1F0            	     1M          DC.W    $F1F0
01:00203FD6 8100            	     2M          DC.W    $8100
01:00203FD8 88              	     3M          DC.B    (FORM12-X)>>2
01:00203FD9 2B              	     4M          DC.B    43
                            	  8407:          C68     F1C0,81C0,FORM6D,42           DIVS
01:00203FDA F1C0            	     1M          DC.W    $F1C0
01:00203FDC 81C0            	     2M          DC.W    $81C0
01:00203FDE 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FDF 2A              	     4M          DC.B    42
                            	  8408:          C68     F1C0,80C0,FORM6D,41           DIVU
01:00203FE0 F1C0            	     1M          DC.W    $F1C0
01:00203FE2 80C0            	     2M          DC.W    $80C0
01:00203FE4 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00203FE5 29              	     4M          DC.B    41
                            	  8409:          C68     F000,8000,FORM10,40           OR
01:00203FE6 F000            	     1M          DC.W    $F000
01:00203FE8 8000            	     2M          DC.W    $8000
01:00203FEA 6E              	     3M          DC.B    (FORM10-X)>>2
01:00203FEB 28              	     4M          DC.B    40
                            	  8410:          C68     F100,7000,IMOVEQ,39           MOVEQ
01:00203FEC F100            	     1M          DC.W    $F100
01:00203FEE 7000            	     2M          DC.W    $7000
01:00203FF0 A2              	     3M          DC.B    (IMOVEQ-X)>>2
01:00203FF1 27              	     4M          DC.B    39
                            	  8411:          C68     FF00,6100,IBSR,51             BSR
01:00203FF2 FF00            	     1M          DC.W    $FF00
01:00203FF4 6100            	     2M          DC.W    $6100
01:00203FF6 DE              	     3M          DC.B    (IBSR-X)>>2
01:00203FF7 33              	     4M          DC.B    51
                            	  8412:          C68     FF00,6000,IBSR,65             BRA
01:00203FF8 FF00            	     1M          DC.W    $FF00
01:00203FFA 6000            	     2M          DC.W    $6000
01:00203FFC DE              	     3M          DC.B    (IBSR-X)>>2
01:00203FFD 41              	     4M          DC.B    65
                            	  8413:          C68     F000,6000,ICC,38              B
01:00203FFE F000            	     1M          DC.W    $F000
01:00204000 6000            	     2M          DC.W    $6000
01:00204002 DD              	     3M          DC.B    (ICC-X)>>2
01:00204003 26              	     4M          DC.B    38
                            	  8414:          C68     F0F8,50C8,IDBCC,37              DB
01:00204004 F0F8            	     1M          DC.W    $F0F8
01:00204006 50C8            	     2M          DC.W    $50C8
01:00204008 D8              	     3M          DC.B    (IDBCC-X)>>2
01:00204009 25              	     4M          DC.B    37
                            	  8415:          C68     F0C0,50C0,ISCC,36             S
01:0020400A F0C0            	     1M          DC.W    $F0C0
01:0020400C 50C0            	     2M          DC.W    $50C0
01:0020400E D5              	     3M          DC.B    (ISCC-X)>>2
01:0020400F 24              	     4M          DC.B    36
                            	  8416:          C68     F100,5100,IQUICK,35           SUBQ
01:00204010 F100            	     1M          DC.W    $F100
01:00204012 5100            	     2M          DC.W    $5100
01:00204014 A1              	     3M          DC.B    (IQUICK-X)>>2
01:00204015 23              	     4M          DC.B    35
                            	  8417:          C68     F100,5000,IQUICK,34           ADDQ
01:00204016 F100            	     1M          DC.W    $F100
01:00204018 5000            	     2M          DC.W    $5000
01:0020401A A1              	     3M          DC.B    (IQUICK-X)>>2
01:0020401B 22              	     4M          DC.B    34
                            	  8418:          C68     F1C0,41C0,FORM6A,33           LEA
01:0020401C F1C0            	     1M          DC.W    $F1C0
01:0020401E 41C0            	     2M          DC.W    $41C0
01:00204020 46              	     3M          DC.B    (FORM6A-X)>>2
01:00204021 21              	     4M          DC.B    33
                            	  8419:          C68     F1C0,4180,FORM6D,32           CHK
01:00204022 F1C0            	     1M          DC.W    $F1C0
01:00204024 4180            	     2M          DC.W    $4180
01:00204026 4A              	     3M          DC.B    (FORM6D-X)>>2
01:00204027 20              	     4M          DC.B    32
                            	  8420:          C68     FFC0,4EC0,FORM11SL,31         JMP
01:00204028 FFC0            	     1M          DC.W    $FFC0
01:0020402A 4EC0            	     2M          DC.W    $4EC0
01:0020402C 7F              	     3M          DC.B    (FORM11SL-X)>>2
01:0020402D 1F              	     4M          DC.B    31
                            	  8421:          C68     FFC0,4E80,FORM11SL,30         JSR
01:0020402E FFC0            	     1M          DC.W    $FFC0
01:00204030 4E80            	     2M          DC.W    $4E80
01:00204032 7F              	     3M          DC.B    (FORM11SL-X)>>2
01:00204033 1E              	     4M          DC.B    30
                            	  8422:          C68     FFFF,4E77,SCOMMON,29           RTR
01:00204034 FFFF            	     1M          DC.W    $FFFF
01:00204036 4E77            	     2M          DC.W    $4E77
01:00204038 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204039 1D              	     4M          DC.B    29
                            	  8423:          C68     FFFF,4E76,SCOMMON,28           TRAPV
01:0020403A FFFF            	     1M          DC.W    $FFFF
01:0020403C 4E76            	     2M          DC.W    $4E76
01:0020403E D4              	     3M          DC.B    (SCOMMON-X)>>2
01:0020403F 1C              	     4M          DC.B    28
                            	  8424:          C68     FFFF,4E75,SCOMMON,27           RTS
01:00204040 FFFF            	     1M          DC.W    $FFFF
01:00204042 4E75            	     2M          DC.W    $4E75
01:00204044 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204045 1B              	     4M          DC.B    27
                            	  8425:          C68     FFFF,4E73,SCOMMON,26           RTE
01:00204046 FFFF            	     1M          DC.W    $FFFF
01:00204048 4E73            	     2M          DC.W    $4E73
01:0020404A D4              	     3M          DC.B    (SCOMMON-X)>>2
01:0020404B 1A              	     4M          DC.B    26
                            	  8426:          C68     FFFF,4E72,ISTOP,25             STOP
01:0020404C FFFF            	     1M          DC.W    $FFFF
01:0020404E 4E72            	     2M          DC.W    $4E72
01:00204050 13              	     3M          DC.B    (ISTOP-X)>>2
01:00204051 19              	     4M          DC.B    25
                            	  8427:          C68     FFFF,4E71,SCOMMON,24           NOP
01:00204052 FFFF            	     1M          DC.W    $FFFF
01:00204054 4E71            	     2M          DC.W    $4E71
01:00204056 D4              	     3M          DC.B    (SCOMMON-X)>>2
01:00204057 18              	     4M          DC.B    24
                            	  8428:          C68     FFFF,4E70,SCOMMON,23           RESET
01:00204058 FFFF            	     1M          DC.W    $FFFF
01:0020405A 4E70            	     2M          DC.W    $4E70
01:0020405C D4              	     3M          DC.B    (SCOMMON-X)>>2
01:0020405D 17              	     4M          DC.B    23
                            	  8429:          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
01:0020405E FFF8            	     1M          DC.W    $FFF8
01:00204060 4E68            	     2M          DC.W    $4E68
01:00204062 AE              	     3M          DC.B    (IMVFUSP-X)>>2
01:00204063 3C              	     4M          DC.B    60
                            	  8430:          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
01:00204064 FFF8            	     1M          DC.W    $FFF8
01:00204066 4E60            	     2M          DC.W    $4E60
01:00204068 B7              	     3M          DC.B    (IMVTUSP-X)>>2
01:00204069 3C              	     4M          DC.B    60
                            	  8431:          C68     FFF8,4E58,FORM5,22            UNLINK
01:0020406A FFF8            	     1M          DC.W    $FFF8
01:0020406C 4E58            	     2M          DC.W    $4E58
01:0020406E 45              	     3M          DC.B    (FORM5-X)>>2
01:0020406F 16              	     4M          DC.B    22
                            	  8432:          C68     FFF8,4E50,ILINK,21            LINK
01:00204070 FFF8            	     1M          DC.W    $FFF8
01:00204072 4E50            	     2M          DC.W    $4E50
01:00204074 36              	     3M          DC.B    (ILINK-X)>>2
01:00204075 15              	     4M          DC.B    21
                            	  8433:          C68     FFF0,4E40,FORM4,20            TRAP
01:00204076 FFF0            	     1M          DC.W    $FFF0
01:00204078 4E40            	     2M          DC.W    $4E40
01:0020407A 40              	     3M          DC.B    (FORM4-X)>>2
01:0020407B 14              	     4M          DC.B    20
                            	  8434:          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
01:0020407C FF80            	     1M          DC.W    $FF80
01:0020407E 4C80            	     2M          DC.W    $4C80
01:00204080 0C              	     3M          DC.B    (IMOVEMTR-X)>>2
01:00204081 0F              	     4M          DC.B    15
                            	  8435:          C68     FFC0,4AC0,FORM1A,19           TAS
01:00204082 FFC0            	     1M          DC.W    $FFC0
01:00204084 4AC0            	     2M          DC.W    $4AC0
01:00204086 3D              	     3M          DC.B    (FORM1A-X)>>2
01:00204087 13              	     4M          DC.B    19
                            	  8436:          C68     FF00,4A00,FORM1,18            TST
01:00204088 FF00            	     1M          DC.W    $FF00
01:0020408A 4A00            	     2M          DC.W    $4A00
01:0020408C 3C              	     3M          DC.B    (FORM1-X)>>2
01:0020408D 12              	     4M          DC.B    18
                            	  8437:          C68     FFF8,48C0,FORM3,17            EXT.L
01:0020408E FFF8            	     1M          DC.W    $FFF8
01:00204090 48C0            	     2M          DC.W    $48C0
01:00204092 3F              	     3M          DC.B    (FORM3-X)>>2
01:00204093 11              	     4M          DC.B    17
                            	  8438:          C68     FFF8,4880,FORM3,16            EXT.W
01:00204094 FFF8            	     1M          DC.W    $FFF8
01:00204096 4880            	     2M          DC.W    $4880
01:00204098 3F              	     3M          DC.B    (FORM3-X)>>2
01:00204099 10              	     4M          DC.B    16
                            	  8439:          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
01:0020409A FF80            	     1M          DC.W    $FF80
01:0020409C 4880            	     2M          DC.W    $4880
01:0020409E 00              	     3M          DC.B    (IMOVEMFR-X)>>2
01:0020409F 0F              	     4M          DC.B    15
                            	  8440:          C68     FFF8,4840,FORM3,14            SWAP
01:002040A0 FFF8            	     1M          DC.W    $FFF8
01:002040A2 4840            	     2M          DC.W    $4840
01:002040A4 3F              	     3M          DC.B    (FORM3-X)>>2
01:002040A5 0E              	     4M          DC.B    14
                            	  8441:          C68     FFC0,4840,FORM11,13           PEA
01:002040A6 FFC0            	     1M          DC.W    $FFC0
01:002040A8 4840            	     2M          DC.W    $4840
01:002040AA 7C              	     3M          DC.B    (FORM11-X)>>2
01:002040AB 0D              	     4M          DC.B    13
                            	  8442:          C68     FFC0,4800,FORM1A,12           NBCD
01:002040AC FFC0            	     1M          DC.W    $FFC0
01:002040AE 4800            	     2M          DC.W    $4800
01:002040B0 3D              	     3M          DC.B    (FORM1A-X)>>2
01:002040B1 0C              	     4M          DC.B    12
                            	  8443:          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
01:002040B2 FFC0            	     1M          DC.W    $FFC0
01:002040B4 46C0            	     2M          DC.W    $46C0
01:002040B6 B2              	     3M          DC.B    (IMVTSR-X)>>2
01:002040B7 3B              	     4M          DC.B    59
                            	  8444:          C68     FF00,4600,FORM1,11            NOT
01:002040B8 FF00            	     1M          DC.W    $FF00
01:002040BA 4600            	     2M          DC.W    $4600
01:002040BC 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040BD 0B              	     4M          DC.B    11
                            	  8445:          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
01:002040BE FFC0            	     1M          DC.W    $FFC0
01:002040C0 44C0            	     2M          DC.W    $44C0
01:002040C2 BA              	     3M          DC.B    (IMVTCCR-X)>>2
01:002040C3 3B              	     4M          DC.B    59
                            	  8446:          C68     FF00,4400,FORM1,10            NEG
01:002040C4 FF00            	     1M          DC.W    $FF00
01:002040C6 4400            	     2M          DC.W    $4400
01:002040C8 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040C9 0A              	     4M          DC.B    10
                            	  8447:          C68     FF00,4200,FORM1,9             CLR
01:002040CA FF00            	     1M          DC.W    $FF00
01:002040CC 4200            	     2M          DC.W    $4200
01:002040CE 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040CF 09              	     4M          DC.B    9
                            	  8448:          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
01:002040D0 FFC0            	     1M          DC.W    $FFC0
01:002040D2 40C0            	     2M          DC.W    $40C0
01:002040D4 AA              	     3M          DC.B    (IMVFSR-X)>>2
01:002040D5 3B              	     4M          DC.B    59
                            	  8449:          C68     FF00,4000,FORM1,8             NEGX
01:002040D6 FF00            	     1M          DC.W    $FF00
01:002040D8 4000            	     2M          DC.W    $4000
01:002040DA 3C              	     3M          DC.B    (FORM1-X)>>2
01:002040DB 08              	     4M          DC.B    8
                            	  8450:          C68     F000,3000,IMOVE,59            MOVE.W
01:002040DC F000            	     1M          DC.W    $F000
01:002040DE 3000            	     2M          DC.W    $3000
01:002040E0 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040E1 3B              	     4M          DC.B    59
                            	  8451:          C68     F000,2000,IMOVE,60            MOVE.L
01:002040E2 F000            	     1M          DC.W    $F000
01:002040E4 2000            	     2M          DC.W    $2000
01:002040E6 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040E7 3C              	     4M          DC.B    60
                            	  8452:          C68     F000,1000,IMOVE,58            MOVE.B
01:002040E8 F000            	     1M          DC.W    $F000
01:002040EA 1000            	     2M          DC.W    $1000
01:002040EC 35              	     3M          DC.B    (IMOVE-X)>>2
01:002040ED 3A              	     4M          DC.B    58
                            	  8453:          C68     FF00,0C00,IMMED,6             CMP       #
01:002040EE FF00            	     1M          DC.W    $FF00
01:002040F0 0C00            	     2M          DC.W    $0C00
01:002040F2 18              	     3M          DC.B    (IMMED-X)>>2
01:002040F3 06              	     4M          DC.B    6
                            	  8454:          C68     FF00,0A00,IMMED,5             EOR       #
01:002040F4 FF00            	     1M          DC.W    $FF00
01:002040F6 0A00            	     2M          DC.W    $0A00
01:002040F8 18              	     3M          DC.B    (IMMED-X)>>2
01:002040F9 05              	     4M          DC.B    5
                            	  8455:          C68     FF00,0600,IMMED,4             ADD       #
01:002040FA FF00            	     1M          DC.W    $FF00
01:002040FC 0600            	     2M          DC.W    $0600
01:002040FE 18              	     3M          DC.B    (IMMED-X)>>2
01:002040FF 04              	     4M          DC.B    4
                            	  8456:          C68     FF00,0400,IMMED,3             SUB       #
01:00204100 FF00            	     1M          DC.W    $FF00
01:00204102 0400            	     2M          DC.W    $0400
01:00204104 18              	     3M          DC.B    (IMMED-X)>>2
01:00204105 03              	     4M          DC.B    3
                            	  8457:          C68     FF00,0200,IMMED,2             AND       #
01:00204106 FF00            	     1M          DC.W    $FF00
01:00204108 0200            	     2M          DC.W    $0200
01:0020410A 18              	     3M          DC.B    (IMMED-X)>>2
01:0020410B 02              	     4M          DC.B    2
                            	  8458:          C68     FF00,0000,IMMED,1             OR        #
01:0020410C FF00            	     1M          DC.W    $FF00
01:0020410E 0000            	     2M          DC.W    $0000
01:00204110 18              	     3M          DC.B    (IMMED-X)>>2
01:00204111 01              	     4M          DC.B    1
                            	  8459:          C68     F138,0108,IMOVEP,0            MOVEP
01:00204112 F138            	     1M          DC.W    $F138
01:00204114 0108            	     2M          DC.W    $0108
01:00204116 BE              	     3M          DC.B    (IMOVEP-X)>>2
01:00204117 00              	     4M          DC.B    0
                            	  8460:          C68     FFC0,08C0,ISETS,64            BSET
01:00204118 FFC0            	     1M          DC.W    $FFC0
01:0020411A 08C0            	     2M          DC.W    $08C0
01:0020411C F0              	     3M          DC.B    (ISETS-X)>>2
01:0020411D 40              	     4M          DC.B    64
                            	  8461:          C68     FFC0,0880,ISETS,63            BCLR
01:0020411E FFC0            	     1M          DC.W    $FFC0
01:00204120 0880            	     2M          DC.W    $0880
01:00204122 F0              	     3M          DC.B    (ISETS-X)>>2
01:00204123 3F              	     4M          DC.B    63
                            	  8462:          C68     FFC0,0840,ISETS,62            BCHG
01:00204124 FFC0            	     1M          DC.W    $FFC0
01:00204126 0840            	     2M          DC.W    $0840
01:00204128 F0              	     3M          DC.B    (ISETS-X)>>2
01:00204129 3E              	     4M          DC.B    62
                            	  8463:          C68     FFC0,0800,ISETS,61            BTST
01:0020412A FFC0            	     1M          DC.W    $FFC0
01:0020412C 0800            	     2M          DC.W    $0800
01:0020412E F0              	     3M          DC.B    (ISETS-X)>>2
01:0020412F 3D              	     4M          DC.B    61
                            	  8464:          C68     F1C0,01C0,ISETD,64            BSET
01:00204130 F1C0            	     1M          DC.W    $F1C0
01:00204132 01C0            	     2M          DC.W    $01C0
01:00204134 EC              	     3M          DC.B    (ISETD-X)>>2
01:00204135 40              	     4M          DC.B    64
                            	  8465:          C68     F1C0,0180,ISETD,63            BCLR
01:00204136 F1C0            	     1M          DC.W    $F1C0
01:00204138 0180            	     2M          DC.W    $0180
01:0020413A EC              	     3M          DC.B    (ISETD-X)>>2
01:0020413B 3F              	     4M          DC.B    63
                            	  8466:          C68     F1C0,0140,ISETD,62            BCHG
01:0020413C F1C0            	     1M          DC.W    $F1C0
01:0020413E 0140            	     2M          DC.W    $0140
01:00204140 EC              	     3M          DC.B    (ISETD-X)>>2
01:00204141 3E              	     4M          DC.B    62
                            	  8467:          C68     F1C0,0100,ISETD,61            BTST
01:00204142 F1C0            	     1M          DC.W    $F1C0
01:00204144 0100            	     2M          DC.W    $0100
01:00204146 EC              	     3M          DC.B    (ISETD-X)>>2
01:00204147 3D              	     4M          DC.B    61
                            	  8468: TBLE     DS      0
                            	  8469: 
                            	  8470: N68      MACRO
                            	  8471:          DC.B    '\1',128+'\2'        \1\2
                            	  8472:          ENDM
                            	  8473: 
                            	  8474: OPCTBL   DS      0
                            	  8475:          N68     MOVE,P    0
01:00204148 4D4F5645        	     1M          DC.B    'MOVE',128+'P'        MOVEP
01:0020414C D0
                            	  8476:          N68     O,R       1
01:0020414D 4F              	     1M          DC.B    'O',128+'R'        OR
01:0020414E D2
                            	  8477:          N68     AN,D      2
01:0020414F 414E            	     1M          DC.B    'AN',128+'D'        AND
01:00204151 C4
                            	  8478:          N68     SU,B      3
01:00204152 5355            	     1M          DC.B    'SU',128+'B'        SUB
01:00204154 C2
                            	  8479:          N68     AD,D      4
01:00204155 4144            	     1M          DC.B    'AD',128+'D'        ADD
01:00204157 C4
                            	  8480:          N68     EO,R      5
01:00204158 454F            	     1M          DC.B    'EO',128+'R'        EOR
01:0020415A D2
                            	  8481:          N68     CM,P      6
01:0020415B 434D            	     1M          DC.B    'CM',128+'P'        CMP
01:0020415D D0
                            	  8482:          N68     MOV,E     7
01:0020415E 4D4F56          	     1M          DC.B    'MOV',128+'E'        MOVE
01:00204161 C5
                            	  8483:          N68     NEG,X     8
01:00204162 4E4547          	     1M          DC.B    'NEG',128+'X'        NEGX
01:00204165 D8
                            	  8484:          N68     CL,R      9
01:00204166 434C            	     1M          DC.B    'CL',128+'R'        CLR
01:00204168 D2
                            	  8485:          N68     NE,G      10
01:00204169 4E45            	     1M          DC.B    'NE',128+'G'        NEG
01:0020416B C7
                            	  8486:          N68     NO,T      11
01:0020416C 4E4F            	     1M          DC.B    'NO',128+'T'        NOT
01:0020416E D4
                            	  8487:          N68     NBC,D     12
01:0020416F 4E4243          	     1M          DC.B    'NBC',128+'D'        NBCD
01:00204172 C4
                            	  8488:          N68     PEA.,L    13
01:00204173 5045412E        	     1M          DC.B    'PEA.',128+'L'        PEA.L
01:00204177 CC
                            	  8489:          N68     SWAP.,W   14
01:00204178 535741502E      	     1M          DC.B    'SWAP.',128+'W'        SWAP.W
01:0020417D D7
                            	  8490:          N68     MOVE,M    15
01:0020417E 4D4F5645        	     1M          DC.B    'MOVE',128+'M'        MOVEM
01:00204182 CD
                            	  8491:          N68     EXT.,W    16
01:00204183 4558542E        	     1M          DC.B    'EXT.',128+'W'        EXT.W
01:00204187 D7
                            	  8492:          N68     EXT.,L    17
01:00204188 4558542E        	     1M          DC.B    'EXT.',128+'L'        EXT.L
01:0020418C CC
                            	  8493:          N68     TS,T      18
01:0020418D 5453            	     1M          DC.B    'TS',128+'T'        TST
01:0020418F D4
                            	  8494:          N68     TAS.,B    19
01:00204190 5441532E        	     1M          DC.B    'TAS.',128+'B'        TAS.B
01:00204194 C2
                            	  8495:          N68     TRA,P     20
01:00204195 545241          	     1M          DC.B    'TRA',128+'P'        TRAP
01:00204198 D0
                            	  8496:          N68     LIN,K     21
01:00204199 4C494E          	     1M          DC.B    'LIN',128+'K'        LINK
01:0020419C CB
                            	  8497:          N68     UNL,K     22
01:0020419D 554E4C          	     1M          DC.B    'UNL',128+'K'        UNLK
01:002041A0 CB
                            	  8498:          N68     RESE,T    23
01:002041A1 52455345        	     1M          DC.B    'RESE',128+'T'        RESET
01:002041A5 D4
                            	  8499:          N68     NO,P      24
01:002041A6 4E4F            	     1M          DC.B    'NO',128+'P'        NOP
01:002041A8 D0
                            	  8500:          N68     STO,P     25
01:002041A9 53544F          	     1M          DC.B    'STO',128+'P'        STOP
01:002041AC D0
                            	  8501:          N68     RT,E      26
01:002041AD 5254            	     1M          DC.B    'RT',128+'E'        RTE
01:002041AF C5
                            	  8502:          N68     RT,S      27
01:002041B0 5254            	     1M          DC.B    'RT',128+'S'        RTS
01:002041B2 D3
                            	  8503:          N68     TRAP,V    28
01:002041B3 54524150        	     1M          DC.B    'TRAP',128+'V'        TRAPV
01:002041B7 D6
                            	  8504:          N68     RT,R      29
01:002041B8 5254            	     1M          DC.B    'RT',128+'R'        RTR
01:002041BA D2
                            	  8505:          N68     JS,R      30
01:002041BB 4A53            	     1M          DC.B    'JS',128+'R'        JSR
01:002041BD D2
                            	  8506:          N68     JM,P      31
01:002041BE 4A4D            	     1M          DC.B    'JM',128+'P'        JMP
01:002041C0 D0
                            	  8507:          N68     CHK.,W    32
01:002041C1 43484B2E        	     1M          DC.B    'CHK.',128+'W'        CHK.W
01:002041C5 D7
                            	  8508:          N68     LEA.,L    33
01:002041C6 4C45412E        	     1M          DC.B    'LEA.',128+'L'        LEA.L
01:002041CA CC
                            	  8509:          N68     ADD,Q     34
01:002041CB 414444          	     1M          DC.B    'ADD',128+'Q'        ADDQ
01:002041CE D1
                            	  8510:          N68     SUB,Q     35
01:002041CF 535542          	     1M          DC.B    'SUB',128+'Q'        SUBQ
01:002041D2 D1
01:002041D3 D3              	  8511:          DC.B    128+'S'   36
                            	  8512:          N68     D,B       37
01:002041D4 44              	     1M          DC.B    'D',128+'B'        DB
01:002041D5 C2
01:002041D6 C2              	  8513:          DC.B    128+'B'   38
                            	  8514:          N68     MOVEQ.,L  .....39
01:002041D7 4D4F5645512E    	     1M          DC.B    'MOVEQ.',128+'L'        MOVEQ.L
01:002041DD CC
                            	  8515:          N68     O,R       40
01:002041DE 4F              	     1M          DC.B    'O',128+'R'        OR
01:002041DF D2
                            	  8516:          N68     DIVU.,W   41
01:002041E0 444956552E      	     1M          DC.B    'DIVU.',128+'W'        DIVU.W
01:002041E5 D7
                            	  8517:          N68     DIVS.,W   42
01:002041E6 444956532E      	     1M          DC.B    'DIVS.',128+'W'        DIVS.W
01:002041EB D7
                            	  8518:          N68     SBC,D     43
01:002041EC 534243          	     1M          DC.B    'SBC',128+'D'        SBCD
01:002041EF C4
                            	  8519:          N68     SU,B      44
01:002041F0 5355            	     1M          DC.B    'SU',128+'B'        SUB
01:002041F2 C2
                            	  8520:          N68     SUB,X     45
01:002041F3 535542          	     1M          DC.B    'SUB',128+'X'        SUBX
01:002041F6 D8
                            	  8521:          N68     CMP,M     46
01:002041F7 434D50          	     1M          DC.B    'CMP',128+'M'        CMPM
01:002041FA CD
                            	  8522:          N68     MULU.,W   47
01:002041FB 4D554C552E      	     1M          DC.B    'MULU.',128+'W'        MULU.W
01:00204200 D7
                            	  8523:          N68     MULS.,W   48
01:00204201 4D554C532E      	     1M          DC.B    'MULS.',128+'W'        MULS.W
01:00204206 D7
                            	  8524:          N68     ABC,D    49
01:00204207 414243          	     1M          DC.B    'ABC',128+'D'        ABCD
01:0020420A C4
                            	  8525:          N68     EX,G      50
01:0020420B 4558            	     1M          DC.B    'EX',128+'G'        EXG
01:0020420D C7
                            	  8526:          N68     BS,R      .....51
01:0020420E 4253            	     1M          DC.B    'BS',128+'R'        BSR
01:00204210 D2
                            	  8527:          N68     NUL,L     .....52
01:00204211 4E554C          	     1M          DC.B    'NUL',128+'L'        NULL
01:00204214 CC
                            	  8528:          N68     ADD,X     53
01:00204215 414444          	     1M          DC.B    'ADD',128+'X'        ADDX
01:00204218 D8
                            	  8529:          N68     A,S       54
01:00204219 41              	     1M          DC.B    'A',128+'S'        AS
01:0020421A D3
                            	  8530:          N68     L,S       55
01:0020421B 4C              	     1M          DC.B    'L',128+'S'        LS
01:0020421C D3
                            	  8531:          N68     R,O       56
01:0020421D 52              	     1M          DC.B    'R',128+'O'        RO
01:0020421E CF
                            	  8532:          N68     RO,X      57
01:0020421F 524F            	     1M          DC.B    'RO',128+'X'        ROX
01:00204221 D8
                            	  8533:          N68     MOVE.,B   58
01:00204222 4D4F56452E      	     1M          DC.B    'MOVE.',128+'B'        MOVE.B
01:00204227 C2
                            	  8534:          N68     MOVE.,W   59
01:00204228 4D4F56452E      	     1M          DC.B    'MOVE.',128+'W'        MOVE.W
01:0020422D D7
                            	  8535:          N68     MOVE.,L   60
01:0020422E 4D4F56452E      	     1M          DC.B    'MOVE.',128+'L'        MOVE.L
01:00204233 CC
                            	  8536:          N68     BTS,T     61
01:00204234 425453          	     1M          DC.B    'BTS',128+'T'        BTST
01:00204237 D4
                            	  8537:          N68     BCH,G     62
01:00204238 424348          	     1M          DC.B    'BCH',128+'G'        BCHG
01:0020423B C7
                            	  8538:          N68     BCL,R     63
01:0020423C 42434C          	     1M          DC.B    'BCL',128+'R'        BCLR
01:0020423F D2
                            	  8539:          N68     BSE,T     64
01:00204240 425345          	     1M          DC.B    'BSE',128+'T'        BSET
01:00204243 D4
                            	  8540:          N68     BR,A      65
01:00204244 4252            	     1M          DC.B    'BR',128+'A'        BRA
01:00204246 C1
                            	  8541: 
01:00204247 00              	  8542:          DC.B    0              PAD BYTE
                            	  8543: 
                            	  8544: 
                            	  8545: 
                            	  8546: *-------------------------------------------------------------------------
                            	  8547: * File TRAP14    Trap 14 handler of "TUTOR"                       06/25/82
                            	  8548: 
                            	  8549: *        CALLING SEQUENCE
                            	  8550: *                  D7 = XXXXXXFF   WHERE "FF" IF FUNCTION NUMBER
                            	  8551: *                  TRAP      #14
                            	  8552: 
                            	  8553: TRAP14
01:00204248 48E74160        	  8554:          MOVEM.L D1/D7/A1-A2,-(A7)
                            	  8555: 
01:0020424C 22780656        	  8556:          MOVE.L  CTLINK,A1
01:00204250 1211            	  8557: T100     MOVE.B  (A1),D1        D1 = FUNCTION FROM TABLE
01:00204252 0C0100FF        	  8558:          CMPI.B  #$FF,D1
01:00204256 6740            	  8559:          BEQ.S   T500           END OF TABLE
                            	  8560: 
01:00204258 0C0100FE        	  8561:          CMPI.B  #$FE,D1
01:0020425C 6774            	  8562:          BEQ.S   T600           LINK IN LIST
                            	  8563: 
01:0020425E B207            	  8564:          CMP.B   D7,D1
01:00204260 6704            	  8565:          BEQ.S   T400           FOUND MATCH
                            	  8566: 
01:00204262 5889            	  8567:          ADDQ.L  #4,A1
01:00204264 60EA            	  8568:          BRA     T100
                            	  8569: 
01:00204266 2211            	  8570: T400     MOVE.L  (A1),D1        FFAAAAAA
01:00204268 E181            	  8571:          ASL.L   #8,D1          AAAAAA..
01:0020426A E089            	  8572:          LSR.L   #8,D1          00AAAAAA  GO TO ADDRESS
                            	  8573: 
01:0020426C 082F00050010    	  8574:          BTST.B  #5,16(A7)
01:00204272 6710            	  8575:          BEQ.S   T450           CALL FROM USER MODE
                            	  8576: 
                            	  8577: *  CALL FROM SUPERVISOR MODE
                            	  8578: * STACK (WORDS)
                            	  8579: *   +0   D1 HIGH
                            	  8580: *   +2   D1 LOW
                            	  8581: *   +4   D7 HIGH
                            	  8582: *   +6   D7 LOW
                            	  8583: *   +8   A1 HIGH
                            	  8584: *   +10  A1 LOW
                            	  8585: *   +12  A2 HIGH              STATUS REG
                            	  8586: *   +14  A2 LOW               GOTO HIGH
                            	  8587: *   +16  STATUS REG           GOTO LOW
                            	  8588: *   +18  RETURN HIGH        RETURN HIGH
                            	  8589: *   +20  RETURN LOW         RETURN LOW
                            	  8590: *
01:00204274 2F6F0010000C    	  8591:          MOVE.L  16(A7),12(A7)  SR
01:0020427A 2F41000E        	  8592:          MOVE.L  D1,14(A7)      GOTO ADDRESS
01:0020427E 4CDF0282        	  8593:          MOVEM.L (A7)+,D1/D7/A1 RESTORE REGISTERS
01:00204282 4E73            	  8594:          RTE                    GOTO (AND TRIM STACK)
                            	  8595: 
                            	  8596: * STACK (WORDS)
                            	  8597: *   +0   D1 HIGH
                            	  8598: *   +2   D1 LOW
                            	  8599: *   +4   D7 HIGH
                            	  8600: *   +6   D7 LOW
                            	  8601: *   +8   A1 HIGH
                            	  8602: *   +10  A1 LOW
                            	  8603: *   +12  A2 HIGH                                 (USER STACK)
                            	  8604: *   +14  A2 LOW
                            	  8605: *   +16  STATUS REG         STATUS REG
                            	  8606: *   +18  RETURN HIGH        GOTO HIGH            RETURN HIGH
                            	  8607: *   +20  RETURN LOW         GOTO LOW             RETURN LOW
                            	  8608: *
                            	  8609: * CALL FROM USER MODE
01:00204284 2E2F0012        	  8610: T450     MOVE.L  18(A7),D7      RETURN PC
01:00204288 2F410012        	  8611:          MOVE.L  D1,18(A7)      GOTO ADDRESS
01:0020428C 4E69            	  8612:          MOVE.L  USP,A1         POINTER TO USER STACK
01:0020428E 2307            	  8613:          MOVE.L  D7,-(A1)       RETURN PC TO USER STACK
01:00204290 4E61            	  8614:          MOVE.L  A1,USP         UPDATED USER STACK POINTER
01:00204292 4CDF0682        	  8615:          MOVEM.L (A7)+,D1/D7/A1/A2
01:00204296 4E73            	  8616:          RTE
                            	  8617: 
01:00204298 4CDF0682        	  8618: T500     MOVEM.L (A7)+,D1/D7/A1/A2
                            	  8619:          SAVEREGS
01:0020429C 21CF0444        	     1M          MOVE.L  A7,REGA7       SAVE STACK POINTER
01:002042A0 4FFA000A        	     2M          LEA     SV_000392(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
01:002042A4 21CF04D6        	     3M          MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
01:002042A8 6000CDD2        	     4M          BRA     SAVE           BSR WITHOUT USING STACK
                            	     5M SV_000392     DS      0
01:002042AC 4BFA0012        	  8620:          LEA     MSGT14(PC),A5
01:002042B0 6100C238        	  8621:          BSR     FIXDATA
01:002042B4 6100DD24        	  8622:          BSR     OUT1CR
01:002042B8 6100CA3A        	  8623:          BSR     TDISPLY
01:002042BC 6000C368        	  8624:          BRA     MACSBUG
                            	  8625: 
01:002042C0 554E444546494E45	  8626: MSGT14   DC.B    'UNDEFINED TRAP 14',EOT
01:002042C8 4420545241502031
01:002042D0 34
01:002042D1 04
                            	  8627: 
                            	  8628: 
                            	  8629: 
                            	  8630: 
                            	  8631: 
01:002042D2 2251            	  8632: T600     MOVE.L  (A1),A1
01:002042D4 6000FF7A        	  8633:          BRA     T100
                            	  8634: 
                            	  8635: T700     DS      0              253 APPEND NEW TABLE
01:002042D8 2208            	  8636:          MOVE.L  A0,D1          ..AAAAAA
01:002042DA 20780656        	  8637:          MOVE.L  CTLINK,A0      A0 = LINK TO BE RETURNED
01:002042DE E199            	  8638:          ROL.L   #8,D1          AAAAAA..
01:002042E0 123C00FE        	  8639:          MOVE.B  #$FE,D1        AAAAAAFE
01:002042E4 E099            	  8640:          ROR.L   #8,D1          FEAAAAAA
01:002042E6 21C10656        	  8641:          MOVE.L  D1,CTLINK
01:002042EA 4E75            	  8642:          RTS
                            	  8643: 
                            	  8644: 
                            	  8645: *  CREATE ENTRY TO FUNCTION/ADDRESS TABLE
                            	  8646: *    FFAAAAAA
                            	  8647: *    FF......      FUNCTION NUMBER
                            	  8648: *    ..AAAAAA      ADDRESS OF FUNCTION
                            	  8649: 
                            	  8650: FADDR    MACRO   \1,\2
                            	  8651:          DC.L    (\1<<24)+\2
                            	  8652:          ENDM
                            	  8653: 
                            	  8654: 
                            	  8655: CT       FADDR   253,T700       APPEND NEW TABLE
01:002042EC FD2042D8        	     1M          DC.L    (253<<24)+T700
                            	  8656:          FADDR   252,FIXDADD    APPEND DATA (A5) TO BUFFER (A6)+
01:002042F0 FC2004EE        	     1M          DC.L    (252<<24)+FIXDADD
                            	  8657:          FADDR   251,FIXBUF     SET A5 & A6 AS POINTERS TO BUFFER
01:002042F4 FB202080        	     1M          DC.L    (251<<24)+FIXBUF
                            	  8658:          FADDR   250,FIXDATA    MOVE DATA (A5) TO BUFFER; A5=BUFFER A6
01:002042F8 FA2004EA        	     1M          DC.L    (250<<24)+FIXDATA
                            	  8659:          FADDR   249,FIXDCRLF
01:002042FC F92004FE        	     1M          DC.L    (249<<24)+FIXDCRLF
                            	  8660:          FADDR   248,F100       OUTPUT CHAR PORT1  D0=CHAR
01:00204300 F8204360        	     1M          DC.L    (248<<24)+F100
                            	  8661:          FADDR   247,F110       INPUT CHAR PORT1  D0=CHAR
01:00204304 F7204368        	     1M          DC.L    (247<<24)+F110
                            	  8662:          FADDR   244,CHRPRINT   OUTPUT CHAR PORT3 D0=CHAR
01:00204308 F4202164        	     1M          DC.L    (244<<24)+CHRPRINT
                            	  8663:          FADDR   243,OUTPUT     OUTPUT STRING PORT1 (A5) (A6)
01:0020430C F3201FF4        	     1M          DC.L    (243<<24)+OUTPUT
                            	  8664:          FADDR   242,OUTPUT21   OUTPUT STRING PORT2 (A5) (A6)
01:00204310 F2202014        	     1M          DC.L    (242<<24)+OUTPUT21
                            	  8665:          FADDR   241,PORTIN1    INPUT STRING PORT1  (A5) (A6)
01:00204314 F1202088        	     1M          DC.L    (241<<24)+PORTIN1
                            	  8666:          FADDR   240,PORTIN20   INPUT STRING PORT2  (A5) (A6)
01:00204318 F02023BE        	     1M          DC.L    (240<<24)+PORTIN20
                            	  8667:          FADDR   239,TAPEOUT    OUTPUT STRING TO PORT4 (A5) (A6)
01:0020431C EF202286        	     1M          DC.L    (239<<24)+TAPEOUT
                            	  8668:          FADDR   238,TAPEIN     INPUT STRING FROM PORT4 (A5) (A6)
01:00204320 EE202486        	     1M          DC.L    (238<<24)+TAPEIN
                            	  8669:          FADDR   237,PRCRLF     OUTPUT STRING TO PORT3 (A5) (A6)
01:00204324 ED202150        	     1M          DC.L    (237<<24)+PRCRLF
                            	  8670:          FADDR   236,HEX2DEC    CONVERT HEX D0 TO DECIMAL (A6)+
01:00204328 EC20134C        	     1M          DC.L    (236<<24)+HEX2DEC
                            	  8671:          FADDR   235,GETHEX     GET HEX CHAR INTO D0 FROM (A5)+
01:0020432C EB201F90        	     1M          DC.L    (235<<24)+GETHEX
                            	  8672:          FADDR   234,PUTHEX     FORMAT HEX CHAR FROM D0 TO (A6)+
01:00204330 EA201DAA        	     1M          DC.L    (234<<24)+PUTHEX
                            	  8673:          FADDR   233,PNT2HX     FORMAT 2 HEX CHAR FROM D0 TO (A6)+
01:00204334 E9201DA2        	     1M          DC.L    (233<<24)+PNT2HX
                            	  8674:          FADDR   232,PNT4HX     FORMAT 4 HEX CHAR FROM D0 TO (A6)+
01:00204338 E8201D9A        	     1M          DC.L    (232<<24)+PNT4HX
                            	  8675:          FADDR   231,PNT6HX     FORMAT 6 HEX CHAR FROM D0 TO (A6)+
01:0020433C E7201D94        	     1M          DC.L    (231<<24)+PNT6HX
                            	  8676:          FADDR   230,PNT8HX     FORMAT 8 HEX CHAR FROM D0 TO (A6)+
01:00204340 E6201D8C        	     1M          DC.L    (230<<24)+PNT8HX
                            	  8677:          FADDR   229,START      RESTART TUTOR INITIALIZE EVERYTHING
01:00204344 E520053A        	     1M          DC.L    (229<<24)+START
                            	  8678:          FADDR   228,MACSBUG    GOTO TUTOR;   PRINT PROMPT
01:00204348 E4200626        	     1M          DC.L    (228<<24)+MACSBUG
                            	  8679:          FADDR   227,F120       OUTPUT STRING,CR,LF PORT1 (A5) (A6)
01:0020434C E3204370        	     1M          DC.L    (227<<24)+F120
                            	  8680:          FADDR   226,GETNUMA    GET HEX NUMBER (A5)+ INTO D0
01:00204350 E2201EE0        	     1M          DC.L    (226<<24)+GETNUMA
                            	  8681:          FADDR   225,GETNUMD    GET DECIMAL NUMBER (A5)+ INTO D0
01:00204354 E1201ED8        	     1M          DC.L    (225<<24)+GETNUMD
                            	  8682:          FADDR   224,PORTIN1N   INPUT STRING PORT1 (NO AUTO LF)
01:00204358 E020209A        	     1M          DC.L    (224<<24)+PORTIN1N
                            	  8683: 
                            	  8684:          FADDR   255,$FFFFFF    END KEY
01:0020435C FFFFFFFF        	     1M          DC.L    (255<<24)+$FFFFFF
                            	  8685: 
01:00204360 6100DCFA        	  8686: F100     BSR     GETSER1        A0 = PORT1 ADDRESS
01:00204364 6000DE9E        	  8687:          BRA     OUTCH
                            	  8688: 
01:00204368 6100DCF2        	  8689: F110     BSR     GETSER1        A0 = PORT1 ADDRESS
01:0020436C 6000E022        	  8690:          BRA     INCHNE
                            	  8691: 
01:00204370 6100DC82        	  8692: F120     BSR     OUTPUT         OUTPUT STRING,CR,LF PORT1 (A5) (A6)
01:00204374 700D            	  8693:          MOVEQ   #CR,D0
01:00204376 61E8            	  8694:          BSR     F100           OUTPUT CHAR
01:00204378 700A            	  8695:          MOVEQ   #LF,D0
01:0020437A 61E4            	  8696:          BSR     F100           OUTPUT CHAR
01:0020437C 4E75            	  8697:          RTS
                            	  8698: 
                            	  8699: 
01:0020437E 00              	  8700:          DCB.B   $54,0          PAD BYTES
01:0020437F *
                            	  8701: 
                            	  8702: 
                            	  8703: *-------------------------------------------------------------------------
                            	  8704: * File YROM      Version/checksum/identification                  07/29/82
                            	  8705: 
                            	  8706: VERSION  EQU     4         BINARY FOR VERSION 1.3
                            	  8707: *                3         .                  1.2; CKSUM= $44,$DB
                            	  8708: *                2         .                  1.1; CKSUM= $66,$C1
                            	  8709: *                1         .                  1.0
                            	  8710: 
01:002043D2 04              	  8711:          DC.B    VERSION,VERSION
01:002043D3 04
01:002043D4 2E              	  8712:          DC.B    $2E,$BA        CHECKSUM
01:002043D5 BA
01:002043D6 11              	  8713:          DC.B    $11,$10        SOCKET I. D.
01:002043D7 10
                            	  8714: LAST     DS.W    0              LAST ADDRESS+1
                            	  8715: 
                            	  8716:          END     START
                            	  8717: 


Symbols by name:
A3OUT                            A:00200EEE
A5300                            A:002030BE
A5305                            A:002030CA
A5TODEST                         A:002030BC
ABORT335                         A:00201D30
ABORTB                           A:00201D08
ABORTE                           A:00201D4C
ADDRESS                          E:FFFFFFC0
ADDRMSG                          A:00200432
ALTSER1                          A:00000624
ALTSER2                          A:00000628
AV11                             A:0000002C
AV12                             A:00000030
AV2                              A:00000008
AV24                             A:00000060
AV3                              A:0000000C
AV31                             A:0000007C
AV4                              A:00000010
AV46                             A:000000B8
AV47                             A:000000BC
AV48                             A:000000C0
AV8                              A:00000020
AV9                              A:00000024
BCMD0                            A:00200A46
BCMD00                           A:00200A54
BCMD01                           A:00200A2A
BCMD3                            A:00200A62
BCMD33                           A:00200A68
BCMD5                            A:00200A80
BCMD55                           A:00200A88
BCMD6                            A:00200A7A
BCMD7                            A:00200A92
BCMD77                           A:00200A9A
BCMD8                            A:00200AA0
BCMD81                           A:00200AC0
BCMD9                            A:00200AC4
BEGHRAM                          A:0000044C
BELL                             E:00000007
BERRD                            A:000004CA
BERRMSG                          A:00200428
BFCMD                            A:002008D4
BFCMD11                          A:00200914
BKPOINT                          E:00004AFB
BKSPACE                          A:002020EA
BLANK                            E:00000020
BLANKIT                          A:002020FC
BM112                            A:00200962
BM122                            A:0020096A
BM132                            A:0020096E
BM142                            A:00200974
BMCMD                            A:00200926
BPADD                            A:00000470
BPCNT                            A:00000494
BPDATA                           A:000004B8
BPSTATUS                         A:000004E0
BPTILL                           A:00000490
BRCMD                            A:00200A42
BREAK                            A:00202268
BREAK1                           A:00202252
BREAK2                           A:0020224E
BREAK79                          A:0020226E
BRTBL                            A:00203AF8
BS101                            A:00200B72
BS200                            A:00200B7E
BS213                            A:00200BB0
BS215                            A:00200BB4
BS219                            A:00200BB8
BS225                            A:00200BCA
BS311                            A:00200BDC
BS313                            A:00200BE0
BS323                            A:00200C00
BS325                            A:00200C06
BS355                            A:00200C2E
BS365                            A:00200C38
BS4CTLH                          A:002020F8
BS91                             A:00200B38
BS97                             A:00200B62
BSCMD                            A:00200B08
BTCMD                            A:00200C42
BUFFER                           A:00000540
BUFFSIZE                         E:00000080
BUFSIZE                          E:00000050
CC                               E:FFFFFFBC
CHARSAVE                         A:0020212A
CHKBP                            A:002011D4
CHKBP1                           A:00201202
CHKBP11                          A:0020120E
CHKBP2                           A:00201218
CHKBP3                           A:00201224
CHKBP4                           A:00201228
CHKBRK                           A:0020223C
CHKCHKS                          A:002013B8
CHKCR                            A:0020213A
CHKCTLD                          A:0020210E
CHKCTLH                          A:002020DE
CHRPRINT                         A:00202164
CKADDR                           A:00201E82
CKADR39                          A:00201E8A
CKADR99                          A:00201E9E
CKWADR                           A:00201E7C
CMMD2                            A:00202DEE
CMMD2S10                         A:00202E66
CMMD2S11                         A:00202ED4
CMMD35                           A:00202E10
CODE68K                          A:00202C76
COMMA                            A:00202DCC
COMMAS20                         A:00202ED6
COMMON                           A:00203EEA
COMMON35                         A:00203EF8
COMMON4                          A:00203EE8
CR                               E:0000000D
CRPADS                           A:0000061A
CRTPNT                           A:00000652
CS11                             A:00203920
CS12                             A:0020388A
CS13                             A:00203808
CS14                             A:00203798
CS15                             A:00203758
CS16                             A:002036EA
CS17                             A:00203AC4
CS18                             A:00203A5E
CS19                             A:00203B70
CS20                             A:002039C0
CT                               A:002042EC
CTLD                             E:00000004
CTLH                             E:00000008
CTLINK                           A:00000656
CTLW                             E:00000017
CTLW9                            A:0020223A
CTLWH                            A:00202230
CTLX                             E:00000018
DCCMD                            A:00200C94
DCODE68K                         A:00203E50
DDATA                            E:FFFFFFF0
DEC311                           A:00203E64
DEC404                           A:00203E80
DEC411                           A:00203E90
DEC425                           A:00203EA0
DEC510                           A:00203EAE
DEC515                           A:00203EB2
DEC530                           A:00203EBA
DEC535                           A:00203EC0
DEC537                           A:00203ECC
DECODE1                          A:00200678
DECODE10                         A:0020068E
DECODE2                          A:00200698
DECODE21                         A:002006A2
DECODE3                          A:002006C8
DECODE4                          A:002006A6
DECODE41                         A:002006B4
DECODE6                          A:00200668
DEL                              E:0000007F
DELAYC1                          E:00001000
DFCMD                            A:00200CF2
DUCMD                            A:00200E10
DUMPTEMP                         A:000005C0
EA                               A:0020268A
EA000                            A:00203BA0
EA001                            A:00203BAC
EA010                            A:00203BB8
EA011                            A:00203BCC
EA011RTS                         A:00203BE2
EA0633                           A:002026B8
EA0634                           A:002026BC
EA0635                           A:002026C8
EA0637                           A:002026D0
EA10                             A:002026DC
EA100                            A:00203BE4
EA101                            A:00203C86
EA11                             A:00202708
EA1105                           A:00203C62
EA1107                           A:00203C66
EA1109                           A:00203C7C
EA111                            A:00203C9C
EA1112                           A:00203CBA
EA1113                           A:00203CD6
EA1113A                          A:00203CE6
EA1114                           A:00203D08
EA1115                           A:00203D72
EA11153                          A:00203DAA
EA11155                          A:00203DB4
EA16BIT                          A:002028F2
EA16BITC                         A:00202900
EA16BITS                         A:002028FC
EA21                             A:00202720
EA31                             A:00202734
EA34                             A:0020276A
EA35                             A:0020276C
EA41                             A:0020277A
EA4102                           A:0020278E
EA4105                           A:00202794
EA4120                           A:002027D0
EA4127                           A:002027AA
EA4135                           A:002027BA
EA5115                           A:00202816
EA5116                           A:0020281A
EA5118                           A:0020285A
EA5119                           A:00202860
EA5119E                          A:0020286A
EA61                             A:0020286C
EA71                             A:0020289E
EA7113                           A:002028E0
EA7115                           A:002028E6
EA8BIT                           A:00202908
EA8BITC                          A:00202914
EA8BITS                          A:00202910
EAA                              A:00202680
EAALL                            A:00202686
EAC                              A:00202668
EADA                             A:00202662
EADADDR                          A:0020267A
EAF25                            A:00203D50
EAF27                            A:00203D54
EAF35                            A:00203D68
EAM                              A:0020266E
EAS                              A:00202916
EASEX                            A:00202924
EAZ                              A:00202674
ECHOPT1                          A:000004E2
EEA                              A:00203BFE
EEA10                            A:00203812
ENDHRAM                          A:0000065A
ENDS0                            A:00200E82
EOHLOOP                          A:002012BE
EOT                              E:00000004
ER                               A:00202DE6
ER1                              A:0020265E
ER10                             A:0020346E
ER2                              A:0020318C
ER3                              A:00202776
ER4                              A:0020289A
ERDONE                           A:00202DEA
ERF                              A:00202DE4
ERROR                            A:002004A8
ESKB                             E:00000000
ESKE                             E:00000022
EV                               A:002025B2
EV15                             A:002025BA
EV21                             A:002025B6
EV39                             A:002025D0
EVECT                            A:002008D0
EVECT2                           A:00201D68
EVECT4                           A:00201D2C
EVECT5                           A:002007EA
EVECT6                           A:00200830
EVECT7                           A:00200880
EVECTL                           A:00201D54
EVER                             A:002031EC
EVSR                             A:00203210
F100                             A:00204360
F110                             A:00204368
F120                             A:00204370
FAULTAC2                         A:0020234A
FAULTAC3                         A:0020235E
FAULTAC4                         A:00202332
FAULTSER                         A:00202328
FDATA                            E:0000000A
FE10                             A:00203BFA
FE11                             A:00203CE2
FE12                             A:00203E9E
FERROR                           A:00203F12
FERROR35                         A:00203F1C
FERROR39                         A:00203F28
FIRST                            A:00200000
FIXBP                            A:00200A32
FIXBUF                           A:00202080
FIXD2                            A:002004F8
FIXDADD                          A:002004EE
FIXDATA                          A:002004EA
FIXDCRLF                         A:002004FE
FLAG                             S:00000000
FNEXTF                           A:00201E5E
FNEXTF1                          A:00201E5C
FNEXTF7                          A:00201E78
FOC                              E:0000001F
FOL                              E:0000001F
FOP                              E:00000027
FORM1                            A:00203790
FORM10                           A:00203858
FORM103                          A:0020385E
FORM104                          A:00203862
FORM105                          A:00203874
FORM10E3                         A:0020383A
FORM10E4                         A:00203842
FORM10E6                         A:0020384E
FORM10EX                         A:00203818
FORM11                           A:00203890
FORM112                          A:002038B0
FORM114                          A:002038BE
FORM11SL                         A:0020389C
FORM12                           A:002038C0
FORM125                          A:002038DA
FORM12A                          A:002038FC
FORM1A                           A:00203794
FORM3                            A:0020379C
FORM4                            A:002037A0
FORM5                            A:002037B4
FORM6A                           A:002037B8
FORM6D                           A:002037C8
FORM7                            A:002037F0
FORM8                            A:002037FC
FORM815                          A:00203800
FORM9                            A:0020380C
FORM91                           A:00203B88
FORM93                           A:00203B9C
FORM95                           A:00203B9E
FORMREG5                         A:002037DC
FORMREGA                         A:002037D8
FORMREGD                         A:002037E8
FORMSIZE                         A:00203B74
FPR315                           A:00202E04
FREL10                           A:00201DCA
FREL15                           A:00201DDC
FREL20                           A:00201DF4
FREL25                           A:00201E06
FREL30                           A:00201E10
FRELADDR                         A:00201DBE
FSIZE                            A:0020261C
GAE                              A:00200FFA
GAP111                           A:00200F46
GAP111S                          A:00200FB0
GAP113                           A:00200F4E
GAP118                           A:00200FA8
GAP119                           A:00200FAA
GAP121                           A:00200FB2
GAP131                           A:00200FBE
GAP135                           A:00200FCA
GAP141                           A:00200FD2
GAP161                           A:00200FFE
GAP163                           A:00201014
GAP165                           A:0020101E
GAP171                           A:00201024
GAP181                           A:00201040
GAP191                           A:00201046
GAP197                           A:00201058
GAP199                           A:0020105A
GASRGN                           A:00201060
GCMD                             A:00200A14
GDCMD                            A:00200A22
GET41                            A:0020262A
GETA                             A:00200F2A
GETCHAR                          A:00202DD4
GETCHARF                         A:00202DDC
GETCHR                           A:002014EE
GETDECNU                         A:00201EE4
GETEXP                           A:00201EB2
GETEXP15                         A:00201EBA
GETEXP21                         A:00201EB6
GETEXP39                         A:00201ED0
GETF305                          A:002025E4
GETF308                          A:002025F8
GETF311                          A:002025F8
GETF312                          A:00202608
GETF313                          A:0020260C
GETF314                          A:0020260E
GETF325                          A:00202614
GETF333                          A:0020261A
GETFIELD                         A:002025D8
GETHEX                           A:00201F90
GETHEXC                          A:002014F6
GETHEXNU                         A:00201EEC
GETIMM                           A:00203630
GETN20                           A:00201EF2
GETN30                           A:00201EFC
GETN40                           A:00201F08
GETN50                           A:00201F12
GETN55                           A:00201F1A
GETN57                           A:00201F1E
GETN60                           A:00201F22
GETN65                           A:00201F2C
GETN70                           A:00201F36
GETN75                           A:00201F40
GETN77                           A:00201F5A
GETN80                           A:00201F74
GETN85                           A:00201F78
GETN90                           A:00201F7A
GETN95                           A:00201F7E
GETNDATA                         A:00201F84
GETNUMA                          A:00201EE0
GETNUMD                          A:00201ED8
GETNUMD9                         A:00201EDA
GETREGA                          A:0020263C
GETREGAD                         A:0020264A
GETREGD                          A:00202622
GETSER1                          A:0020205C
GETSER2                          A:0020206E
GOCMD                            A:00200A14
GOCMD1                           A:00200A16
GOCMD1A                          A:00200A0A
GOSET1                           A:002009F6
GT21                             A:002009E4
GTCMD                            A:002009C8
GTHX2                            A:00201FAA
HECMD                            A:00201272
HELP4                            A:0020128A
HELP6                            A:002012D2
HELP81                           A:002012C0
HELP85                           A:002012D0
HEX2DEC                          A:0020134C
HISPC                            E:FFFFFFFC
HX2DC                            A:0020135C
HX2DC0                           A:00201360
HX2DC1                           A:00201368
HX2DC2                           A:00201382
HX2DC22                          A:00201384
HX2DC3                           A:0020138E
HX2DC4                           A:00201396
HX2DC5                           A:0020139E
HX2DC57                          A:002013A6
HX2DC6                           A:002013AA
IBSR                             A:00203A18
ICC                              A:00203A14
ICC35                            A:00203A2A
ICC55                            A:00203A40
ICCCC                            A:00203AE0
ICCCC9                           A:00203AF6
IDBCC                            A:00203A00
ILINK                            A:00203778
IM7788                           A:002036B4
IM7799                           A:002036B8
IMMED                            A:00203700
IMMED45                          A:00203726
IMMED55                          A:0020375A
IMMED65                          A:00203760
IMMED75                          A:00203770
IMOVE                            A:00203774
IMOVE19                          A:00203B3E
IMOVEA1                          A:00203B18
IMOVEMFR                         A:002036A0
IMOVEMTR                         A:002036D0
IMOVEP                           A:00203998
IMOVEP11                         A:002039A8
IMOVEP35                         A:002039C4
IMOVEP66                         A:002039D2
IMOVEQ                           A:00203928
IMVFSR                           A:00203948
IMVFUSP                          A:00203958
IMVT44                           A:00203976
IMVTCCR                          A:00203988
IMVTSR                           A:00203968
IMVTUSP                          A:0020397C
INCHNE                           A:00202390
INFROM                           A:00000620
INIT                             A:00200410
INIT0                            A:00200510
INITAC3                          A:0020236E
INITHRAM                         A:00200404
INITSER                          A:00202364
INITVECT                         A:00200508
INITVMSG                         A:0020076E
INPORT1                          A:0000062C
INPORT2                          A:00000634
INPORT3                          A:0000063C
INPORT4                          A:00000644
IQUICK                           A:00203924
IQUICK21                         A:00203B56
IQUICK31                         A:00203B6C
IQUICKA                          A:00203B44
ISCC                             A:002039F4
ISETD                            A:00203A50
ISETD12                          A:00203A56
ISETS                            A:00203A60
ISHIFT                           A:00203A7C
ISHIFT13                         A:00203A88
ISHIFT23                         A:00203AAC
ISHIFT33                         A:00203AB8
ISHIFT44                         A:00203ABC
ISHIFTM1                         A:00203AC6
ISTOP                            A:002036EC
KI                               A:00203F3C
KIEND                            A:00203F3E
LAST                             A:002043D8
LDATA                            E:FFFFFFC4
LERR1                            A:002021CC
LF                               E:0000000A
LINK                             E:0000001E
LIST                             A:00202154
LIST1                            A:0020215E
LIST2                            A:00202168
LIST24                           A:00202190
LIST25                           A:00202194
LIST3                            A:002021A8
LIST5                            A:002021E0
LOCMD                            A:002013B6
LOCVARSZ                         E:00000010
LTIME                            S:000320C8
M300                             A:00202C88
M340                             A:00202CD2
M350                             A:00202CDE
M352                             A:00202D12
M410                             A:00202D1C
M415                             A:00202D22
M420                             A:00202D34
M424                             A:00202D38
M426                             A:00202D3C
M428                             A:00202D46
M430                             A:00202D4C
M432                             A:00202D5A
M4324                            A:00202D88
M4326                            A:00202D8E
M435                             A:00202DAA
M437                             A:00202DB2
M440                             A:00202DC0
MABCD                            A:00202E24
MABCD55                          A:00202E5E
MABCD9                           A:00202E30
MACSBUG                          A:00200626
MACSBUG1                         A:00200654
MADD                             A:00202EDA
MADD46                           A:00202F0C
MADD56                           A:00202F18
MADD58                           A:00202F28
MADDA                            A:00202F82
MADDA21                          A:00202F8C
MADDI                            A:00202F34
MADDQ                            A:00202FAA
MADDQ25                          A:00202FE8
MADDX                            A:00202FEC
MADDX5                           A:00203022
MAND                             A:0020302E
MAND77                           A:00203062
MAND90                           A:00203078
MAND91                           A:00203086
MAND97                           A:0020308A
MANDI                            A:00202F4A
MANDI23                          A:00202F64
MASL                             A:002030DC
MB100                            A:00203156
MB105                            A:0020316E
MB145                            A:00203190
MB185                            A:00203196
MB200                            A:0020319A
MBCHG                            A:0020314C
MBCLR                            A:002031B0
MBRA                             A:002031D6
MBRA23                           A:002031F0
MBRA27                           A:002031FE
MBSET                            A:002031A4
MBTST                            A:002031BC
MCHK                             A:0020322E
MCLR                             A:00203248
MCMD                             A:00201702
MCMMD2                           A:00202DF4
MCMP                             A:00202E68
MCMP39                           A:00202EBE
MCMP56                           A:00202EC6
MCMPM                            A:00203256
MD1CON                           A:0000064C
MDBCC                            A:002031C8
MDC                              A:00203690
MDCMD                            A:00201554
MEMSIZE                          A:0000046C
MEOR                             A:00203090
MEOR90                           A:002030B0
MEXG                             A:00203280
MEXG25                           A:002032A2
MEXG35                           A:002032AC
MEXT                             A:002032BA
MJMP                             A:002035C8
MJMP22                           A:002035E4
MJMP32                           A:002035EA
MJMP42                           A:002035EE
MLEA                             A:002035F4
MLINK                            A:0020363E
MM045                            A:00201732
MM05                             A:00201714
MM054                            A:00201746
MM056                            A:00201752
MM058                            A:00201760
MM060                            A:0020176E
MM064                            A:00201774
MM065                            A:0020177A
MM10                             A:0020177E
MM11                             A:0020178E
MM12                             A:002017B2
MM14                             A:002017BC
MM16                             A:002017C6
MM18                             A:002017CE
MM22                             A:0020181C
MM24                             A:0020182A
MM26                             A:00201838
MM315                            A:0020349A
MM40                             A:00201844
MM50                             A:00201868
MM508                            A:002034E0
MM60                             A:0020186E
MM70                             A:00203506
MM80                             A:00203534
MM804                            A:0020354C
MM806                            A:0020356A
MM825                            A:00203582
MM90                             A:00201874
MM905                            A:00201880
MM95                             A:00201878
MMA225                           A:002035B4
MMCMD                            A:00201702
MMDI                             A:0020166A
MMDI22                           A:00201674
MMDI23                           A:00201676
MMDI26                           A:002016B4
MMDI27                           A:002016BE
MMDI29                           A:002016D4
MMDI30                           A:002016E6
MMDI31                           A:0020168A
MMDI34                           A:0020169C
MMDI44                           A:002016EA
MMM40                            A:002034A2
MMM44                            A:0020330E
MMM46                            A:0020330E
MMM48                            A:00203334
MMM50                            A:002034C4
MMM60                            A:002034F2
MMOVE                            A:00203480
MMOVEA                           A:0020359C
MMOVEA1                          A:00203594
MMOVEM                           A:002032D4
MMOVEP                           A:002033D4
MMOVEQ                           A:00203434
MMP344                           A:00203404
MMP348                           A:00203414
MMP368                           A:00203430
MMQ20                            A:0020344E
MORES0                           A:00200E72
MORESP                           A:00200E88
MOVEMR                           A:00203DD4
MOVEMR11                         A:00203DE4
MOVEMR33                         A:00203DEC
MOVEMR44                         A:00203DFE
MOVEMR77                         A:00203E18
MOVEMR79                         A:00203E2A
MOVEMR88                         A:00203E2C
MOVEMR94                         A:00203E44
MOVEMS                           A:00203DC0
MOVEMS2                          A:00203DD0
MPEA                             A:0020360E
MSCC                             A:0020313E
MSCMD                            A:00201886
MSG                              A:002004A0
MSG001                           A:002006EE
MSG002                           A:002012DA
MSG003                           A:00201BDA
MSG004                           A:00201BE5
MSG005                           A:00201BF0
MSG006                           A:00201CF2
MSG007                           A:002021EE
MSG008                           A:00200482
MSG008E                          A:00200489
MSG009                           A:00201238
MSG010                           A:00201D7E
MSG011                           A:00201FC4
MSG012                           A:00201D38
MSG013                           A:0020227A
MSG014                           A:0020124C
MSG017                           A:0020192C
MSG018                           A:00201EA0
MSG019                           A:002004D8
MSG020                           A:0020125A
MSG021                           A:00200490
MSG030                           A:00202416
MSG031                           A:00201BFB
MSG111                           A:00203F32
MSGBR                            A:00200ACE
MSGEOT                           A:0020048F
MSGLOAD1                         A:0020151A
MSGLOAD2                         A:00201523
MSGT14                           A:002042C0
MSL150                           A:002030FA
MSL200                           A:00203110
MSL300                           A:00203122
MSTOP                            A:0020365C
MSWAP                            A:0020361C
MTBL                             A:002033C4
MTCLR                            A:00201C32
MTRAP                            A:00203674
MTSETUP                          A:00201942
MTSTOR0                          A:00201C4A
MTSTOR1                          A:00201C3A
MUNLK                            A:00203686
NOAUTOLF                         A:0020214A
NOBR0                            A:00200ADA
NOBR1                            A:00200ADE
NOBR3                            A:00200AF4
NOBR4                            A:00200B00
NOBRCMD                          A:00200A28
NOC                              E:00000080
NOCMD                            A:002006E2
NOPACMD                          A:002025A8
NOTCHR                           A:00201626
NULLPADS                         A:00000618
NUMCON0                          A:00200C94
NUMCON1                          A:00200CB8
NUMCON2                          A:00200CC4
NUMCON3                          A:00200CDC
NW                               E:00000040
NXTBP                            A:002015F4
NXTBP3                           A:00201608
NXTCHR                           A:00201614
OFCMD                            A:00201AA8
OFFSET                           A:0000044C
OPCTBL                           A:00204148
OPTIONS                          A:000004E6
OUT1CR                           A:00201FDA
OUT1CR0                          A:00201FF4
OUT1CRX                          A:00201FEE
OUTBSIZE                         E:00000050
OUTCH                            A:00202204
OUTCH1                           A:0020202C
OUTCH2                           A:0020204C
OUTCH21                          A:0020221E
OUTCH3                           A:00202052
OUTCHRTS                         A:0020205A
OUTP2                            A:0020201C
OUTP3                            A:00202026
OUTPORT1                         A:00000630
OUTPORT2                         A:00000638
OUTPORT3                         A:00000640
OUTPORT4                         A:00000648
OUTPUT                           A:00201FF4
OUTPUT2                          A:00201FFE
OUTPUT20                         A:00202014
OUTPUT21                         A:00202014
OUTPUT2X                         A:0020200E
OUTTO                            A:0000061C
P2CMD0                           A:00201C6E
P2CMD01                          A:00201C9A
P2CMD2                           A:00201CB8
P2CMD4                           A:00201CE2
P2CMD6                           A:00201CEE
P2PHY                            A:002004BC
P2PHY2                           A:002004CE
P2READY                          A:0020241E
PACMD                            A:002025A4
PBDATA                           S:00000003
PCOUNTER                         E:0000000E
PDATA                            S:00000001
PDI1                             S:000F0000
PDIPORT                          A:0000064E
PENDOP                           E:00000016
PER3                             A:002019A6
PER4                             A:00201984
PERCMD                           A:0020197A
PFCH                             A:00201BB0
PFCH2                            A:00201BBC
PFCH4                            A:00201BD8
PFCMD                            A:00201B24
PFCMD1                           A:00201B86
PFPT                             A:00201B6E
PITCDDR                          S:000F0009
PITPCDR                          S:000F0019
PITTCR                           S:000F0021
PNCA3                            A:00200ECE
PNMSG011                         A:00201FB2
PNT2HX                           A:00201DA2
PNT4HX                           A:00201D9A
PNT6HX                           A:00201D94
PNT8HX                           A:00201D8C
PNTCLS                           A:00201ACA
PNTCLS1                          A:00201AD0
PNTCLS2                          A:00201AE2
PNTCLSA                          A:00201ABC
PNTCLSB                          A:00201AC4
PNTCLSD                          A:00201AB2
PNTREG                           A:00201AEE
PNTREG1                          A:00201B16
PNTSREC                          A:00200F08
PNTSRECX                         A:00200F02
PNTSRTS                          A:00200F28
PNTZ0                            A:00201E28
PNTZ1                            A:00201E2A
PNTZ2                            A:00201E32
PNTZ3                            A:00201E48
PNTZ4                            A:00201E3E
PNTZ8                            A:00201E4E
PNTZ81                           A:00201E56
PNTZ9                            A:00201E5A
PNTZHX                           A:00201E18
PORT2100                         A:002023D2
PORT2120                         A:002023DA
PORT2130                         A:002023DC
PORT2140                         A:002023E8
PORT2150                         A:002023FA
PORT2250                         A:00202402
PORT2260                         A:00202408
PORT2300                         A:0020240E
PORTIN1                          A:00202088
PORTIN10                         A:002020A8
PORTIN1N                         A:0020209A
PORTIN1V                         A:002020AC
PORTIN1W                         A:002020AE
PORTIN1X                         A:00202094
PORTIN2                          A:002023AC
PORTIN20                         A:002023BE
PORTIN2X                         A:002023B8
PPHY                             A:002004B4
PRCRLF                           A:00202150
PRINT3                           A:002015DA
PRINT5                           A:00201598
PRINT7                           A:002015B4
PRINT8                           A:0020156A
PRINT9                           A:00201640
PRINTDI                          A:00201588
PRINTDI5                         A:002015B8
PRINTMB                          A:0020157C
PRINTR                           A:00201A8A
PRINTR2                          A:00201AA2
PSTATUS                          S:0000000B
PTRBUFE                          E:0000001A
PTROP                            E:00000012
PUM11                            A:00200E42
PUM13                            A:00200E4A
PUNCH5                           A:00200E3C
PUTADR                           A:002015E2
PUTCHR                           A:0020162A
PUTHEX                           A:00201DAA
RAMERR                           A:00201C56
RAMTEST                          A:00201C06
RAM_START                        E:00000000
READ0                            A:00201408
READ00                           A:0020141C
READ005                          A:00201422
READ01                           A:002013BE
READ021                          A:002013D6
READ03                           A:002013C4
READ08                           A:002013FA
READ09                           A:002013FE
READ100                          A:0020146C
READ120                          A:00201482
READ130                          A:00201492
READ135                          A:0020149E
READ400                          A:002014A2
READ410                          A:002014AA
READ420                          A:002014B6
READ430                          A:002014C0
READ440                          A:002014C6
READBUF                          A:002020B2
READCKSM                         A:002014CE
READHEX                          A:002014E0
READHEX4                         A:00201532
READHEX6                         A:0020152C
READS1                           A:002013EE
READS2                           A:00201458
READS202                         A:00201460
READS8                           A:0020153E
READS800                         A:00201540
READS9                           A:0020154E
REGA7                            A:00000444
REGNAMES                         A:00200CE8
REGPC                            A:00000400
REGS                             A:00000408
REGSR                            A:00000404
REGTBL                           E:002019B2
REGUS                            A:00000448
RES                              A:00202434
RES140                           A:00202446
RES150                           A:00202466
RES190                           A:00202468
RES194                           A:00202474
RES195                           A:00202480
RESET                            E:00000003
RETURN                           A:0020206C
RETURN5                          A:00201A88
RHEX2                            A:0020150C
RHEX3                            A:0020150E
RL111                            A:00203338
RL114                            A:00203348
RL115                            A:0020334A
RL30                             A:002033BC
RL333                            A:00203358
RL444                            A:00203364
RL555                            A:0020338E
RL666                            A:0020339A
S2REC                            A:00200EB6
SAVE                             A:0020107C
SAVEAV4                          A:000004D2
SAVHEX                           A:00201DBA
SCAN                             A:00201A7A
SCAN2                            A:00201A7C
SCANP4                           A:00202564
SCANP5                           A:00202578
SCANP6                           A:002025A0
SCANP7                           A:0020259E
SCANP8                           A:0020258C
SCANPORT                         A:00202540
SCHR                             A:00203940
SCOMMON                          A:002039F0
SCREEN1                          A:00000610
SCREEN2                          A:00000614
SEMACS                           A:00201A3C
SER1                             S:003C0008
SER2                             S:003C0008
SETA                             A:002019E2
SETA7                            A:002019F4
SETBIT                           A:002033A8
SETCRTPR                         A:002025AA
SETD                             A:002019DC
SETM1                            A:00201898
SETM3                            A:002018C0
SETM5                            A:002018DA
SETM6                            A:002018DC
SETM7                            A:002018FE
SETME                            A:002018F2
SETO                             A:00201AA8
SETPC                            A:002019E8
SETR                             A:00201A16
SETR0                            A:00201A1E
SETR4                            A:00201A40
SETR5                            A:00201A46
SETRN                            A:00201A0A
SETSR                            A:002019EE
SETSR1                           A:00201A4A
SETSR15                          A:00201A78
SETSS                            A:002019FE
SETUS                            A:00201A04
SI201                            A:00203464
SI222                            A:0020347E
SIZEBYTE                         A:00203472
SIZELONG                         A:00203456
SIZEWORD                         A:00203466
SOLIST                           A:002006FC
SSA7                             A:0000053C
START                            A:0020053A
START11                          A:00200558
START1S                          A:0020051A
STARTIMR                         A:002024FC
STIME                            S:0000A028
SV_000003                        A:00200452
SV_000043                        A:002010BC
SV_000045                        A:002011E8
SV_000046                        A:00201D1C
SV_000047                        A:00201D64
SV_000392                        A:002042AC
SWAP                             A:0020119C
SWAP1                            A:002011AA
SWAP99                           A:002011CA
SWAPEND                          A:002011D2
SWAPIN                           A:00201176
SWAPIN1                          A:002011B2
SWAPOUT                          A:0020118C
SWAPOUT1                         A:002011C2
SYNTAX                           A:002004AE
SYSTACK                          A:00000786
T100                             A:00204250
T400                             A:00204266
T44                              A:00200D90
T448                             A:00200D9C
T449                             A:00200DA4
T450                             A:00204284
T500                             A:00204298
T600                             A:002042D2
T700                             A:002042D8
TAPEIN                           A:00202486
TAPEIN10                         A:0020249E
TAPEIN11                         A:002024A2
TAPEIN12                         A:002024A8
TAPEIN20                         A:002024B4
TAPEIN21                         A:002024B6
TAPEIN30                         A:002024BC
TAPEIN31                         A:002024C0
TAPEIN32                         A:002024DA
TAPEIN40                         A:002024DC
TAPEIN41                         A:002024F2
TAPEIN50                         A:00202524
TAPEIN51                         A:00202526
TAPEIN52                         A:00202534
TAPEIN53                         A:00202510
TAPENULS                         A:00000654
TAPEO                            A:002022CA
TAPEO1                           A:002022D0
TAPEO2                           A:002022E8
TAPEOUT                          A:00202286
TAPEOUT1                         A:002022A6
TAPEOUT2                         A:002022AE
TAPEOUT4                         A:002022C4
TAPEOUT5                         A:002022B6
TBL                              A:00203F3E
TBLE                             A:00204148
TBLKEYS                          A:00202926
TBLOPC                           A:00202972
TBLOPCE                          A:00202C76
TCMD                             A:00200978
TCMD15                           A:0020098E
TCMDHOT                          A:0020098C
TD07                             A:00200CFE
TD09                             A:00200D10
TD1                              A:00200D1C
TD25                             A:00200D50
TD27                             A:00200D48
TD39                             A:00200D74
TD4                              A:00200D76
TD9                              A:00200DA8
TDATA                            E:00000000
TDCC                             A:00200DB0
TDCC9                            A:00200E00
TDCC91                           A:00200E0C
TDISPLY                          A:00200CF4
TEMP                             A:000004D6
TIMERTS1                         A:00202326
TIMERTST                         A:00202312
TISOK                            A:00201102
TLENGTH                          E:0000000C
TLSPEC                           E:0000000B
TMCHARS                          E:000004EA
TMCMD                            A:00201C5A
TNB                              E:0000000A
TRACE                            A:002010AA
TRACE01                          A:0020110C
TRACE03                          A:00201128
TRACE08                          A:00201120
TRACE16                          A:002010D6
TRACE2                           A:002009B6
TRACE39                          A:00201136
TRACECNT                         A:000004DA
TRACEON                          A:000004DE
TRAP14                           A:00204248
TRCMD                            A:00200978
TTCMD                            A:00200994
UNSTACK                          A:0020114C
UNTRACE                          A:0020113E
V2                               A:00200400
VECMD                            A:002013B0
VECT                             A:00200792
VECT10                           A:002007CE
VECT11                           A:002007D8
VECT24                           A:002007E2
VECT25                           A:002007EC
VECT26                           A:002007F6
VECT27                           A:00200800
VECT28                           A:0020080A
VECT29                           A:00200814
VECT30                           A:0020081E
VECT31                           A:00200828
VECT32                           A:00200832
VECT33                           A:0020083C
VECT34                           A:00200846
VECT35                           A:00200850
VECT36                           A:0020085A
VECT37                           A:00200864
VECT38                           A:0020086E
VECT39                           A:00200878
VECT40                           A:00200882
VECT41                           A:0020088C
VECT42                           A:00200896
VECT43                           A:002008A0
VECT44                           A:002008AA
VECT45                           A:002008B4
VECT46                           A:002008BE
VECT47                           A:002008C8
VECT5                            A:0020079C
VECT6                            A:002007A6
VECT7                            A:002007B0
VECT8                            A:002007BA
VECT9                            A:002007C4
VECTBE                           A:0020043A
VECTI                            A:00200778
VECTI2                           A:00200786
VERSION                          E:00000004
WALK0                            A:00201C0C
WALK1                            A:00201C1A
WALK3                            A:00201C0A
WHAT                             A:00200496
WHAT93                           A:0020049A
X                                A:002036A0
XBASE                            A:0020261C
XONOFF                           E:000004E6

Symbols by value:
FFFFFFBC CC
FFFFFFC0 ADDRESS
FFFFFFC4 LDATA
FFFFFFF0 DDATA
FFFFFFFC HISPC
00000000 ESKB
00000000 FLAG
00000000 RAM_START
00000000 TDATA
00000001 PDATA
00000003 RESET
00000003 PBDATA
00000004 EOT
00000004 CTLD
00000004 VERSION
00000007 BELL
00000008 AV2
00000008 CTLH
0000000A TNB
0000000A LF
0000000A FDATA
0000000B PSTATUS
0000000B TLSPEC
0000000C AV3
0000000C TLENGTH
0000000D CR
0000000E PCOUNTER
00000010 AV4
00000010 LOCVARSZ
00000012 PTROP
00000016 PENDOP
00000017 CTLW
00000018 CTLX
0000001A PTRBUFE
0000001E LINK
0000001F FOL
0000001F FOC
00000020 BLANK
00000020 AV8
00000022 ESKE
00000024 AV9
00000027 FOP
0000002C AV11
00000030 AV12
00000040 NW
00000050 BUFSIZE
00000050 OUTBSIZE
00000060 AV24
0000007C AV31
0000007F DEL
00000080 NOC
00000080 BUFFSIZE
000000B8 AV46
000000BC AV47
000000C0 AV48
00000400 REGPC
00000404 REGSR
00000408 REGS
00000444 REGA7
00000448 REGUS
0000044C BEGHRAM
0000044C OFFSET
0000046C MEMSIZE
00000470 BPADD
00000490 BPTILL
00000494 BPCNT
000004B8 BPDATA
000004CA BERRD
000004D2 SAVEAV4
000004D6 TEMP
000004DA TRACECNT
000004DE TRACEON
000004E0 BPSTATUS
000004E2 ECHOPT1
000004E6 XONOFF
000004E6 OPTIONS
000004EA TMCHARS
0000053C SSA7
00000540 BUFFER
000005C0 DUMPTEMP
00000610 SCREEN1
00000614 SCREEN2
00000618 NULLPADS
0000061A CRPADS
0000061C OUTTO
00000620 INFROM
00000624 ALTSER1
00000628 ALTSER2
0000062C INPORT1
00000630 OUTPORT1
00000634 INPORT2
00000638 OUTPORT2
0000063C INPORT3
00000640 OUTPORT3
00000644 INPORT4
00000648 OUTPORT4
0000064C MD1CON
0000064E PDIPORT
00000652 CRTPNT
00000654 TAPENULS
00000656 CTLINK
0000065A ENDHRAM
00000786 SYSTACK
00001000 DELAYC1
00004AFB BKPOINT
0000A028 STIME
000320C8 LTIME
000F0000 PDI1
000F0009 PITCDDR
000F0019 PITPCDR
000F0021 PITTCR
00200000 FIRST
00200400 V2
00200404 INITHRAM
00200410 INIT
00200428 BERRMSG
00200432 ADDRMSG
0020043A VECTBE
00200452 SV_000003
00200482 MSG008
00200489 MSG008E
0020048F MSGEOT
00200490 MSG021
00200496 WHAT
0020049A WHAT93
002004A0 MSG
002004A8 ERROR
002004AE SYNTAX
002004B4 PPHY
002004BC P2PHY
002004CE P2PHY2
002004D8 MSG019
002004EA FIXDATA
002004EE FIXDADD
002004F8 FIXD2
002004FE FIXDCRLF
00200508 INITVECT
00200510 INIT0
0020051A START1S
0020053A START
00200558 START11
00200626 MACSBUG
00200654 MACSBUG1
00200668 DECODE6
00200678 DECODE1
0020068E DECODE10
00200698 DECODE2
002006A2 DECODE21
002006A6 DECODE4
002006B4 DECODE41
002006C8 DECODE3
002006E2 NOCMD
002006EE MSG001
002006FC SOLIST
0020076E INITVMSG
00200778 VECTI
00200786 VECTI2
00200792 VECT
0020079C VECT5
002007A6 VECT6
002007B0 VECT7
002007BA VECT8
002007C4 VECT9
002007CE VECT10
002007D8 VECT11
002007E2 VECT24
002007EA EVECT5
002007EC VECT25
002007F6 VECT26
00200800 VECT27
0020080A VECT28
00200814 VECT29
0020081E VECT30
00200828 VECT31
00200830 EVECT6
00200832 VECT32
0020083C VECT33
00200846 VECT34
00200850 VECT35
0020085A VECT36
00200864 VECT37
0020086E VECT38
00200878 VECT39
00200880 EVECT7
00200882 VECT40
0020088C VECT41
00200896 VECT42
002008A0 VECT43
002008AA VECT44
002008B4 VECT45
002008BE VECT46
002008C8 VECT47
002008D0 EVECT
002008D4 BFCMD
00200914 BFCMD11
00200926 BMCMD
00200962 BM112
0020096A BM122
0020096E BM132
00200974 BM142
00200978 TCMD
00200978 TRCMD
0020098C TCMDHOT
0020098E TCMD15
00200994 TTCMD
002009B6 TRACE2
002009C8 GTCMD
002009E4 GT21
002009F6 GOSET1
00200A0A GOCMD1A
00200A14 GOCMD
00200A14 GCMD
00200A16 GOCMD1
00200A22 GDCMD
00200A28 NOBRCMD
00200A2A BCMD01
00200A32 FIXBP
00200A42 BRCMD
00200A46 BCMD0
00200A54 BCMD00
00200A62 BCMD3
00200A68 BCMD33
00200A7A BCMD6
00200A80 BCMD5
00200A88 BCMD55
00200A92 BCMD7
00200A9A BCMD77
00200AA0 BCMD8
00200AC0 BCMD81
00200AC4 BCMD9
00200ACE MSGBR
00200ADA NOBR0
00200ADE NOBR1
00200AF4 NOBR3
00200B00 NOBR4
00200B08 BSCMD
00200B38 BS91
00200B62 BS97
00200B72 BS101
00200B7E BS200
00200BB0 BS213
00200BB4 BS215
00200BB8 BS219
00200BCA BS225
00200BDC BS311
00200BE0 BS313
00200C00 BS323
00200C06 BS325
00200C2E BS355
00200C38 BS365
00200C42 BTCMD
00200C94 DCCMD
00200C94 NUMCON0
00200CB8 NUMCON1
00200CC4 NUMCON2
00200CDC NUMCON3
00200CE8 REGNAMES
00200CF2 DFCMD
00200CF4 TDISPLY
00200CFE TD07
00200D10 TD09
00200D1C TD1
00200D48 TD27
00200D50 TD25
00200D74 TD39
00200D76 TD4
00200D90 T44
00200D9C T448
00200DA4 T449
00200DA8 TD9
00200DB0 TDCC
00200E00 TDCC9
00200E0C TDCC91
00200E10 DUCMD
00200E3C PUNCH5
00200E42 PUM11
00200E4A PUM13
00200E72 MORES0
00200E82 ENDS0
00200E88 MORESP
00200EB6 S2REC
00200ECE PNCA3
00200EEE A3OUT
00200F02 PNTSRECX
00200F08 PNTSREC
00200F28 PNTSRTS
00200F2A GETA
00200F46 GAP111
00200F4E GAP113
00200FA8 GAP118
00200FAA GAP119
00200FB0 GAP111S
00200FB2 GAP121
00200FBE GAP131
00200FCA GAP135
00200FD2 GAP141
00200FFA GAE
00200FFE GAP161
00201014 GAP163
0020101E GAP165
00201024 GAP171
00201040 GAP181
00201046 GAP191
00201058 GAP197
0020105A GAP199
00201060 GASRGN
0020107C SAVE
002010AA TRACE
002010BC SV_000043
002010D6 TRACE16
00201102 TISOK
0020110C TRACE01
00201120 TRACE08
00201128 TRACE03
00201136 TRACE39
0020113E UNTRACE
0020114C UNSTACK
00201176 SWAPIN
0020118C SWAPOUT
0020119C SWAP
002011AA SWAP1
002011B2 SWAPIN1
002011C2 SWAPOUT1
002011CA SWAP99
002011D2 SWAPEND
002011D4 CHKBP
002011E8 SV_000045
00201202 CHKBP1
0020120E CHKBP11
00201218 CHKBP2
00201224 CHKBP3
00201228 CHKBP4
00201238 MSG009
0020124C MSG014
0020125A MSG020
00201272 HECMD
0020128A HELP4
002012BE EOHLOOP
002012C0 HELP81
002012D0 HELP85
002012D2 HELP6
002012DA MSG002
0020134C HEX2DEC
0020135C HX2DC
00201360 HX2DC0
00201368 HX2DC1
00201382 HX2DC2
00201384 HX2DC22
0020138E HX2DC3
00201396 HX2DC4
0020139E HX2DC5
002013A6 HX2DC57
002013AA HX2DC6
002013B0 VECMD
002013B6 LOCMD
002013B8 CHKCHKS
002013BE READ01
002013C4 READ03
002013D6 READ021
002013EE READS1
002013FA READ08
002013FE READ09
00201408 READ0
0020141C READ00
00201422 READ005
00201458 READS2
00201460 READS202
0020146C READ100
00201482 READ120
00201492 READ130
0020149E READ135
002014A2 READ400
002014AA READ410
002014B6 READ420
002014C0 READ430
002014C6 READ440
002014CE READCKSM
002014E0 READHEX
002014EE GETCHR
002014F6 GETHEXC
0020150C RHEX2
0020150E RHEX3
0020151A MSGLOAD1
00201523 MSGLOAD2
0020152C READHEX6
00201532 READHEX4
0020153E READS8
00201540 READS800
0020154E READS9
00201554 MDCMD
0020156A PRINT8
0020157C PRINTMB
00201588 PRINTDI
00201598 PRINT5
002015B4 PRINT7
002015B8 PRINTDI5
002015DA PRINT3
002015E2 PUTADR
002015F4 NXTBP
00201608 NXTBP3
00201614 NXTCHR
00201626 NOTCHR
0020162A PUTCHR
00201640 PRINT9
0020166A MMDI
00201674 MMDI22
00201676 MMDI23
0020168A MMDI31
0020169C MMDI34
002016B4 MMDI26
002016BE MMDI27
002016D4 MMDI29
002016E6 MMDI30
002016EA MMDI44
00201702 MMCMD
00201702 MCMD
00201714 MM05
00201732 MM045
00201746 MM054
00201752 MM056
00201760 MM058
0020176E MM060
00201774 MM064
0020177A MM065
0020177E MM10
0020178E MM11
002017B2 MM12
002017BC MM14
002017C6 MM16
002017CE MM18
0020181C MM22
0020182A MM24
00201838 MM26
00201844 MM40
00201868 MM50
0020186E MM60
00201874 MM90
00201878 MM95
00201880 MM905
00201886 MSCMD
00201898 SETM1
002018C0 SETM3
002018DA SETM5
002018DC SETM6
002018F2 SETME
002018FE SETM7
0020192C MSG017
00201942 MTSETUP
0020197A PERCMD
00201984 PER4
002019A6 PER3
002019B2 REGTBL
002019DC SETD
002019E2 SETA
002019E8 SETPC
002019EE SETSR
002019F4 SETA7
002019FE SETSS
00201A04 SETUS
00201A0A SETRN
00201A16 SETR
00201A1E SETR0
00201A3C SEMACS
00201A40 SETR4
00201A46 SETR5
00201A4A SETSR1
00201A78 SETSR15
00201A7A SCAN
00201A7C SCAN2
00201A88 RETURN5
00201A8A PRINTR
00201AA2 PRINTR2
00201AA8 SETO
00201AA8 OFCMD
00201AB2 PNTCLSD
00201ABC PNTCLSA
00201AC4 PNTCLSB
00201ACA PNTCLS
00201AD0 PNTCLS1
00201AE2 PNTCLS2
00201AEE PNTREG
00201B16 PNTREG1
00201B24 PFCMD
00201B6E PFPT
00201B86 PFCMD1
00201BB0 PFCH
00201BBC PFCH2
00201BD8 PFCH4
00201BDA MSG003
00201BE5 MSG004
00201BF0 MSG005
00201BFB MSG031
00201C06 RAMTEST
00201C0A WALK3
00201C0C WALK0
00201C1A WALK1
00201C32 MTCLR
00201C3A MTSTOR1
00201C4A MTSTOR0
00201C56 RAMERR
00201C5A TMCMD
00201C6E P2CMD0
00201C9A P2CMD01
00201CB8 P2CMD2
00201CE2 P2CMD4
00201CEE P2CMD6
00201CF2 MSG006
00201D08 ABORTB
00201D1C SV_000046
00201D2C EVECT4
00201D30 ABORT335
00201D38 MSG012
00201D4C ABORTE
00201D54 EVECTL
00201D64 SV_000047
00201D68 EVECT2
00201D7E MSG010
00201D8C PNT8HX
00201D94 PNT6HX
00201D9A PNT4HX
00201DA2 PNT2HX
00201DAA PUTHEX
00201DBA SAVHEX
00201DBE FRELADDR
00201DCA FREL10
00201DDC FREL15
00201DF4 FREL20
00201E06 FREL25
00201E10 FREL30
00201E18 PNTZHX
00201E28 PNTZ0
00201E2A PNTZ1
00201E32 PNTZ2
00201E3E PNTZ4
00201E48 PNTZ3
00201E4E PNTZ8
00201E56 PNTZ81
00201E5A PNTZ9
00201E5C FNEXTF1
00201E5E FNEXTF
00201E78 FNEXTF7
00201E7C CKWADR
00201E82 CKADDR
00201E8A CKADR39
00201E9E CKADR99
00201EA0 MSG018
00201EB2 GETEXP
00201EB6 GETEXP21
00201EBA GETEXP15
00201ED0 GETEXP39
00201ED8 GETNUMD
00201EDA GETNUMD9
00201EE0 GETNUMA
00201EE4 GETDECNU
00201EEC GETHEXNU
00201EF2 GETN20
00201EFC GETN30
00201F08 GETN40
00201F12 GETN50
00201F1A GETN55
00201F1E GETN57
00201F22 GETN60
00201F2C GETN65
00201F36 GETN70
00201F40 GETN75
00201F5A GETN77
00201F74 GETN80
00201F78 GETN85
00201F7A GETN90
00201F7E GETN95
00201F84 GETNDATA
00201F90 GETHEX
00201FAA GTHX2
00201FB2 PNMSG011
00201FC4 MSG011
00201FDA OUT1CR
00201FEE OUT1CRX
00201FF4 OUTPUT
00201FF4 OUT1CR0
00201FFE OUTPUT2
0020200E OUTPUT2X
00202014 OUTPUT21
00202014 OUTPUT20
0020201C OUTP2
00202026 OUTP3
0020202C OUTCH1
0020204C OUTCH2
00202052 OUTCH3
0020205A OUTCHRTS
0020205C GETSER1
0020206C RETURN
0020206E GETSER2
00202080 FIXBUF
00202088 PORTIN1
00202094 PORTIN1X
0020209A PORTIN1N
002020A8 PORTIN10
002020AC PORTIN1V
002020AE PORTIN1W
002020B2 READBUF
002020DE CHKCTLH
002020EA BKSPACE
002020F8 BS4CTLH
002020FC BLANKIT
0020210E CHKCTLD
0020212A CHARSAVE
0020213A CHKCR
0020214A NOAUTOLF
00202150 PRCRLF
00202154 LIST
0020215E LIST1
00202164 CHRPRINT
00202168 LIST2
00202190 LIST24
00202194 LIST25
002021A8 LIST3
002021CC LERR1
002021E0 LIST5
002021EE MSG007
00202204 OUTCH
0020221E OUTCH21
00202230 CTLWH
0020223A CTLW9
0020223C CHKBRK
0020224E BREAK2
00202252 BREAK1
00202268 BREAK
0020226E BREAK79
0020227A MSG013
00202286 TAPEOUT
002022A6 TAPEOUT1
002022AE TAPEOUT2
002022B6 TAPEOUT5
002022C4 TAPEOUT4
002022CA TAPEO
002022D0 TAPEO1
002022E8 TAPEO2
00202312 TIMERTST
00202326 TIMERTS1
00202328 FAULTSER
00202332 FAULTAC4
0020234A FAULTAC2
0020235E FAULTAC3
00202364 INITSER
0020236E INITAC3
00202390 INCHNE
002023AC PORTIN2
002023B8 PORTIN2X
002023BE PORTIN20
002023D2 PORT2100
002023DA PORT2120
002023DC PORT2130
002023E8 PORT2140
002023FA PORT2150
00202402 PORT2250
00202408 PORT2260
0020240E PORT2300
00202416 MSG030
0020241E P2READY
00202434 RES
00202446 RES140
00202466 RES150
00202468 RES190
00202474 RES194
00202480 RES195
00202486 TAPEIN
0020249E TAPEIN10
002024A2 TAPEIN11
002024A8 TAPEIN12
002024B4 TAPEIN20
002024B6 TAPEIN21
002024BC TAPEIN30
002024C0 TAPEIN31
002024DA TAPEIN32
002024DC TAPEIN40
002024F2 TAPEIN41
002024FC STARTIMR
00202510 TAPEIN53
00202524 TAPEIN50
00202526 TAPEIN51
00202534 TAPEIN52
00202540 SCANPORT
00202564 SCANP4
00202578 SCANP5
0020258C SCANP8
0020259E SCANP7
002025A0 SCANP6
002025A4 PACMD
002025A8 NOPACMD
002025AA SETCRTPR
002025B2 EV
002025B6 EV21
002025BA EV15
002025D0 EV39
002025D8 GETFIELD
002025E4 GETF305
002025F8 GETF311
002025F8 GETF308
00202608 GETF312
0020260C GETF313
0020260E GETF314
00202614 GETF325
0020261A GETF333
0020261C FSIZE
0020261C XBASE
00202622 GETREGD
0020262A GET41
0020263C GETREGA
0020264A GETREGAD
0020265E ER1
00202662 EADA
00202668 EAC
0020266E EAM
00202674 EAZ
0020267A EADADDR
00202680 EAA
00202686 EAALL
0020268A EA
002026B8 EA0633
002026BC EA0634
002026C8 EA0635
002026D0 EA0637
002026DC EA10
00202708 EA11
00202720 EA21
00202734 EA31
0020276A EA34
0020276C EA35
00202776 ER3
0020277A EA41
0020278E EA4102
00202794 EA4105
002027AA EA4127
002027BA EA4135
002027D0 EA4120
00202816 EA5115
0020281A EA5116
0020285A EA5118
00202860 EA5119
0020286A EA5119E
0020286C EA61
0020289A ER4
0020289E EA71
002028E0 EA7113
002028E6 EA7115
002028F2 EA16BIT
002028FC EA16BITS
00202900 EA16BITC
00202908 EA8BIT
00202910 EA8BITS
00202914 EA8BITC
00202916 EAS
00202924 EASEX
00202926 TBLKEYS
00202972 TBLOPC
00202C76 TBLOPCE
00202C76 CODE68K
00202C88 M300
00202CD2 M340
00202CDE M350
00202D12 M352
00202D1C M410
00202D22 M415
00202D34 M420
00202D38 M424
00202D3C M426
00202D46 M428
00202D4C M430
00202D5A M432
00202D88 M4324
00202D8E M4326
00202DAA M435
00202DB2 M437
00202DC0 M440
00202DCC COMMA
00202DD4 GETCHAR
00202DDC GETCHARF
00202DE4 ERF
00202DE6 ER
00202DEA ERDONE
00202DEE CMMD2
00202DF4 MCMMD2
00202E04 FPR315
00202E10 CMMD35
00202E24 MABCD
00202E30 MABCD9
00202E5E MABCD55
00202E66 CMMD2S10
00202E68 MCMP
00202EBE MCMP39
00202EC6 MCMP56
00202ED4 CMMD2S11
00202ED6 COMMAS20
00202EDA MADD
00202F0C MADD46
00202F18 MADD56
00202F28 MADD58
00202F34 MADDI
00202F4A MANDI
00202F64 MANDI23
00202F82 MADDA
00202F8C MADDA21
00202FAA MADDQ
00202FE8 MADDQ25
00202FEC MADDX
00203022 MADDX5
0020302E MAND
00203062 MAND77
00203078 MAND90
00203086 MAND91
0020308A MAND97
00203090 MEOR
002030B0 MEOR90
002030BC A5TODEST
002030BE A5300
002030CA A5305
002030DC MASL
002030FA MSL150
00203110 MSL200
00203122 MSL300
0020313E MSCC
0020314C MBCHG
00203156 MB100
0020316E MB105
0020318C ER2
00203190 MB145
00203196 MB185
0020319A MB200
002031A4 MBSET
002031B0 MBCLR
002031BC MBTST
002031C8 MDBCC
002031D6 MBRA
002031EC EVER
002031F0 MBRA23
002031FE MBRA27
00203210 EVSR
0020322E MCHK
00203248 MCLR
00203256 MCMPM
00203280 MEXG
002032A2 MEXG25
002032AC MEXG35
002032BA MEXT
002032D4 MMOVEM
0020330E MMM46
0020330E MMM44
00203334 MMM48
00203338 RL111
00203348 RL114
0020334A RL115
00203358 RL333
00203364 RL444
0020338E RL555
0020339A RL666
002033A8 SETBIT
002033BC RL30
002033C4 MTBL
002033D4 MMOVEP
00203404 MMP344
00203414 MMP348
00203430 MMP368
00203434 MMOVEQ
0020344E MMQ20
00203456 SIZELONG
00203464 SI201
00203466 SIZEWORD
0020346E ER10
00203472 SIZEBYTE
0020347E SI222
00203480 MMOVE
0020349A MM315
002034A2 MMM40
002034C4 MMM50
002034E0 MM508
002034F2 MMM60
00203506 MM70
00203534 MM80
0020354C MM804
0020356A MM806
00203582 MM825
00203594 MMOVEA1
0020359C MMOVEA
002035B4 MMA225
002035C8 MJMP
002035E4 MJMP22
002035EA MJMP32
002035EE MJMP42
002035F4 MLEA
0020360E MPEA
0020361C MSWAP
00203630 GETIMM
0020363E MLINK
0020365C MSTOP
00203674 MTRAP
00203686 MUNLK
00203690 MDC
002036A0 X
002036A0 IMOVEMFR
002036B4 IM7788
002036B8 IM7799
002036D0 IMOVEMTR
002036EA CS16
002036EC ISTOP
00203700 IMMED
00203726 IMMED45
00203758 CS15
0020375A IMMED55
00203760 IMMED65
00203770 IMMED75
00203774 IMOVE
00203778 ILINK
00203790 FORM1
00203794 FORM1A
00203798 CS14
0020379C FORM3
002037A0 FORM4
002037B4 FORM5
002037B8 FORM6A
002037C8 FORM6D
002037D8 FORMREGA
002037DC FORMREG5
002037E8 FORMREGD
002037F0 FORM7
002037FC FORM8
00203800 FORM815
00203808 CS13
0020380C FORM9
00203812 EEA10
00203818 FORM10EX
0020383A FORM10E3
00203842 FORM10E4
0020384E FORM10E6
00203858 FORM10
0020385E FORM103
00203862 FORM104
00203874 FORM105
0020388A CS12
00203890 FORM11
0020389C FORM11SL
002038B0 FORM112
002038BE FORM114
002038C0 FORM12
002038DA FORM125
002038FC FORM12A
00203920 CS11
00203924 IQUICK
00203928 IMOVEQ
00203940 SCHR
00203948 IMVFSR
00203958 IMVFUSP
00203968 IMVTSR
00203976 IMVT44
0020397C IMVTUSP
00203988 IMVTCCR
00203998 IMOVEP
002039A8 IMOVEP11
002039C0 CS20
002039C4 IMOVEP35
002039D2 IMOVEP66
002039F0 SCOMMON
002039F4 ISCC
00203A00 IDBCC
00203A14 ICC
00203A18 IBSR
00203A2A ICC35
00203A40 ICC55
00203A50 ISETD
00203A56 ISETD12
00203A5E CS18
00203A60 ISETS
00203A7C ISHIFT
00203A88 ISHIFT13
00203AAC ISHIFT23
00203AB8 ISHIFT33
00203ABC ISHIFT44
00203AC4 CS17
00203AC6 ISHIFTM1
00203AE0 ICCCC
00203AF6 ICCCC9
00203AF8 BRTBL
00203B18 IMOVEA1
00203B3E IMOVE19
00203B44 IQUICKA
00203B56 IQUICK21
00203B6C IQUICK31
00203B70 CS19
00203B74 FORMSIZE
00203B88 FORM91
00203B9C FORM93
00203B9E FORM95
00203BA0 EA000
00203BAC EA001
00203BB8 EA010
00203BCC EA011
00203BE2 EA011RTS
00203BE4 EA100
00203BFA FE10
00203BFE EEA
00203C62 EA1105
00203C66 EA1107
00203C7C EA1109
00203C86 EA101
00203C9C EA111
00203CBA EA1112
00203CD6 EA1113
00203CE2 FE11
00203CE6 EA1113A
00203D08 EA1114
00203D50 EAF25
00203D54 EAF27
00203D68 EAF35
00203D72 EA1115
00203DAA EA11153
00203DB4 EA11155
00203DC0 MOVEMS
00203DD0 MOVEMS2
00203DD4 MOVEMR
00203DE4 MOVEMR11
00203DEC MOVEMR33
00203DFE MOVEMR44
00203E18 MOVEMR77
00203E2A MOVEMR79
00203E2C MOVEMR88
00203E44 MOVEMR94
00203E50 DCODE68K
00203E64 DEC311
00203E80 DEC404
00203E90 DEC411
00203E9E FE12
00203EA0 DEC425
00203EAE DEC510
00203EB2 DEC515
00203EBA DEC530
00203EC0 DEC535
00203ECC DEC537
00203EE8 COMMON4
00203EEA COMMON
00203EF8 COMMON35
00203F12 FERROR
00203F1C FERROR35
00203F28 FERROR39
00203F32 MSG111
00203F3C KI
00203F3E TBL
00203F3E KIEND
00204148 OPCTBL
00204148 TBLE
00204248 TRAP14
00204250 T100
00204266 T400
00204284 T450
00204298 T500
002042AC SV_000392
002042C0 MSGT14
002042D2 T600
002042D8 T700
002042EC CT
00204360 F100
00204368 F110
00204370 F120
002043D8 LAST
003C0008 SER2
003C0008 SER1
